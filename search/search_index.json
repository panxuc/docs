{"config":{"lang":["ja"],"separator":"[\\s\\-\uff0c\u3002]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u4e3b\u9875","text":""},{"location":"#xucs-docs","title":"Xuc's Docs","text":""},{"location":"#\u7b80\u4ecb","title":"\u7b80\u4ecb","text":"<p>Xuc's Docs \u662f\u4e00\u4e2a\u57fa\u4e8e Material for MkDocs \u7684\u6587\u6863\u7ad9\u70b9\uff0c\u7528\u4e8e\u8bb0\u5f55\u4e00\u4e9b\u5b66\u4e60\u7b14\u8bb0\u3002</p> <p>\u5982\u679c\u60a8\u7ee7\u7eed\u6d4f\u89c8\u672c\u7f51\u7ad9\uff0c\u5219\u8868\u793a\u60a8\u5df2\u7ecf\u540c\u610f\u672c\u7f51\u7ad9\u7684\u9690\u79c1\u653f\u7b56\u4e0e\u6761\u6b3e\u3002</p>"},{"location":"about/","title":"\u5173\u4e8e Xuc Pan","text":""},{"location":"about/#\u5173\u4e8e-xuc-pan","title":"\u5173\u4e8e Xuc Pan","text":""},{"location":"about/license/","title":"\u8bb8\u53ef\u534f\u8bae","text":""},{"location":"about/license/#\u8bb8\u53ef\u534f\u8bae","title":"\u8bb8\u53ef\u534f\u8bae","text":""},{"location":"about/license/#\u77e5\u8bc6\u5171\u4eab-creative-commons-\u7f72\u540d\u76f8\u540c\u65b9\u5f0f\u5171\u4eab-40\u516c\u5171\u8bb8\u53ef\u534f\u8bae\u56fd\u9645\u7248","title":"\u77e5\u8bc6\u5171\u4eab (Creative Commons) \u7f72\u540d\u2014\u76f8\u540c\u65b9\u5f0f\u5171\u4eab 4.0\u516c\u5171\u8bb8\u53ef\u534f\u8bae\u56fd\u9645\u7248","text":"<p>\u901a\u8fc7\u884c\u4f7f\u672c\u534f\u8bae\u6240\u6388\u4e88\u7684\u6743\u5229\uff08\u5b9a\u4e49\u5982\u4e0b\uff09\uff0c\u60a8\u63a5\u53d7\u5e76\u540c\u610f\u53d7\u5230\u77e5\u8bc6\u5171\u4eab(Creative Commons)\u7f72\u540d\u2014\u76f8\u540c\u65b9\u5f0f\u5171\u4eab4.0\u56fd\u9645\u516c\u5171\u8bb8\u53ef\u534f\u8bae\uff08\u4ee5\u4e0b\u7b80\u79f0\u201c\u672c\u516c\u5171\u8bb8\u53ef\u534f\u8bae\u201d\uff09\u7684\u7ea6\u675f\u3002\u4ece\u5408\u540c\u89e3\u91ca\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u60a8\u83b7\u5f97\u6388\u6743\u7684\u5bf9\u4ef7\u662f\u63a5\u53d7\u672c\u534f\u8bae\u7684\u6761\u6b3e\uff0c\u8bb8\u53ef\u4eba\u6388\u4e88\u60a8\u8fd9\u4e9b\u6743\u5229\u7684\u5bf9\u4ef7\u662f\u53ef\u4ee5\u901a\u8fc7\u91c7\u7528\u672c\u534f\u8bae\u6761\u6b3e\u53d1\u5e03\u6388\u6743\u4f5c\u54c1(material)\u800c\u83b7\u5f97\u5229\u76ca\u3002</p>"},{"location":"about/license/#\u7b2c\u4e00\u6761-\u5b9a\u4e49","title":"\u7b2c\u4e00\u6761 \u5b9a\u4e49","text":"<ol> <li>\u6f14\u7ece\u4f5c\u54c1(Adapted Material)\uff1a \u6307\u53d7\u5230\u8457\u4f5c\u6743\u4e0e\u7c7b\u4f3c\u6743\u5229\u4fdd\u62a4\u7684\uff0c\u57fa\u4e8e\u6388\u6743\u4f5c\u54c1(Licensed Material)\u800c\u521b\u4f5c\u7684\u4f5c\u54c1(material)\uff0c\u4f8b\u5982\u5bf9\u6388\u6743\u4f5c\u54c1(Licensed Material)\u7684\u7ffb\u8bd1\u3001\u6539\u7f16\u3001\u7f16\u6392\u3001\u6539\u5199\u6216\u5176\u4ed6\u4f9d\u636e\u8457\u4f5c\u6743\u4e0e\u7c7b\u4f3c\u6743\u5229\u9700\u8981\u83b7\u5f97\u6240\u6709\u4eba\u8bb8\u53ef\u7684\u4fee\u6539\u3002\u4e3a\u672c\u516c\u5171\u8bb8\u53ef\u534f\u8bae\u4e4b\u76ee\u7684\uff0c\u5f53\u6388\u6743\u4f5c\u54c1(Licensed Material)\u4e3a\u97f3\u4e50\u4f5c\u54c1\u3001\u8868\u6f14\u6216\u5f55\u97f3\u65f6\uff0c\u5c06\u5176\u4f9d\u65f6\u95f4\u5e8f\u5217\u5173\u7cfb\u4e0e\u52a8\u6001\u5f71\u50cf\u914d\u5408\u4e00\u81f4\u800c\u5f62\u6210\u7684\u4f5c\u54c1\uff0c\u89c6\u4e3a\u6f14\u7ece\u4f5c\u54c1(Adapted Material)\u3002</li> <li>\u6f14\u7ece\u4f5c\u8005\u7684\u8bb8\u53ef\uff1a \u6307\u60a8\u4f9d\u636e\u672c\u516c\u5171\u8bb8\u53ef\u534f\u8bae\u5bf9\u5728\u6f14\u7ece\u4f5c\u54c1(Adapted Material)\u4e2d\u81ea\u5df1\u6240\u8d21\u732e\u7684\u90e8\u5206\u6240\u4eab\u6709\u7684\u8457\u4f5c\u6743\u4e0e\u7c7b\u4f3c\u6743\u5229\u8fdb\u884c\u6388\u6743\u7684\u534f\u8bae\u3002</li> <li>\u7f72\u540d\u2014\u76f8\u540c\u65b9\u5f0f\u5171\u4eab\u517c\u5bb9\u534f\u8bae\uff1a \u6307\u5728  creativecommons.org/compatiblelicenses \u4e0a\u5217\u51fa\u4e14\u7ecf\u77e5\u8bc6\u5171\u4eab\u7ec4\u7ec7(Creative Commons)\u8ba4\u53ef\u3001\u5b9e\u8d28\u4e0a\u4e0e\u672c\u516c\u5171\u8bb8\u53ef\u534f\u8bae\u76f8\u5f53\u7684\u534f\u8bae\u3002</li> <li>\u8457\u4f5c\u6743\u4e0e\u7c7b\u4f3c\u6743\u5229\uff1a \u6307\u8457\u4f5c\u6743\u548c/\u6216\u4e0e\u8457\u4f5c\u6743\u7d27\u5bc6\u8054\u7cfb\u7684\u7c7b\u4f3c\u6743\u5229\u3002\u7c7b\u4f3c\u6743\u5229\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e\uff1a\u8868\u6f14\u8005\u6743\u3001\u5e7f\u64ad\u7ec4\u7ec7\u6743\u3001\u5f55\u97f3\u5f55\u50cf\u5236\u4f5c\u8005\u6743\u3001\u4ee5\u53ca\u6570\u636e\u5e93\u7279\u522b\u6743\u5229\uff0c\u800c\u4e0d\u8bba\u4e0a\u8ff0\u6743\u5229\u7684\u5b9a\u4e49\u548c\u5f52\u7c7b\u5982\u4f55\u3002\u4e3a\u672c\u516c\u5171\u8bb8\u53ef\u534f\u8bae\u4e4b\u76ee\u7684\uff0c \u7b2c\u4e8c\u6761b\u6b3e\u7b2c(1)\u9879\u4e0e\u7b2c(2)\u9879 \u6240\u5217\u6743\u5229\u4e0d\u5c5e\u4e8e\u8457\u4f5c\u6743\u4e0e\u7c7b\u4f3c\u6743\u5229\u3002</li> <li>\u6709\u6548\u7684\u6280\u672f\u63aa\u65bd\uff1a \u6307\u6839\u636e\u5404\u53f8\u6cd5\u7ba1\u8f96\u533a\u9075\u5faa\u300a\u4e16\u754c\u77e5\u8bc6\u4ea7\u6743\u7ec4\u7ec7\u7248\u6743\u6761\u7ea6\u300b\uff081996\u5e7412\u670820\u65e5\u901a\u8fc7\uff09\u7b2c\u5341\u4e00\u6761\u6216\u7c7b\u4f3c\u56fd\u9645\u534f\u5b9a\u9879\u4e0b\u7684\u4e49\u52a1\u6240\u5236\u5b9a\u7684\u6cd5\u5f8b\uff0c\u5728\u6ca1\u6709\u9002\u5f53\u7684\u6388\u6743\u7684\u60c5\u51b5\u4e0b\uff0c\u7981\u6b62\u4f7f\u7528\u8005\u89c4\u907f\u7684\u6280\u672f\u63aa\u65bd\u3002</li> <li>\u4f8b\u5916\u4e0e\u9650\u5236\uff1a \u6307\u5408\u7406\u4f7f\u7528(Fair Dealing and Fair Use)\u548c/\u6216\u5176\u4ed6\u9002\u7528\u4e8e\u60a8\u5bf9\u6388\u6743\u4f5c\u54c1(Licensed Material)\u7684\u4f7f\u7528\u7684\u8457\u4f5c\u6743\u4e0e\u7c7b\u4f3c\u6743\u5229\u7684\u4f8b\u5916\u6216\u9650\u5236\u3002</li> <li>\u6388\u6743\u8981\u7d20\uff1a \u6307\u77e5\u8bc6\u5171\u4eab\u516c\u5171\u8bb8\u53ef\u534f\u8bae(CCPL)\u540d\u79f0\u4e2d\u6240\u5305\u542b\u7684\u534f\u8bae\u7279\u5f81\u3002\u672c\u516c\u5171\u8bb8\u53ef\u534f\u8bae\u7684\u6388\u6743\u8981\u7d20\u5305\u62ec\uff1a\u7f72\u540d\u548c\u76f8\u540c\u65b9\u5f0f\u5171\u4eab\u3002</li> <li>\u6388\u6743\u4f5c\u54c1(Licensed Material)\uff1a \u6307\u8bb8\u53ef\u4eba\u901a\u8fc7\u672c\u516c\u5171\u8bb8\u53ef\u534f\u8bae\u6388\u6743\u7684\u6587\u5b66\u3001\u827a\u672f\u4f5c\u54c1(artistic or literary work)\uff0c\u6570\u636e\u5e93\u6216\u5176\u4ed6\u4f5c\u54c1(material)\u3002</li> <li>\u534f\u8bae\u6240\u6388\u4e88\u7684\u6743\u5229\uff1a \u6307\u4f9d\u636e\u672c\u516c\u5171\u8bb8\u53ef\u534f\u8bae\u7684\u6761\u6b3e\u548c\u6761\u4ef6\u6240\u6388\u4e88\u60a8\u7684\u5404\u9879\u6743\u5229\uff0c\u9650\u4e8e\u9002\u7528\u4e8e\u60a8\u5bf9\u6388\u6743\u4f5c\u54c1(Licensed Material)\u7684\u4f7f\u7528\u4e14\u8bb8\u53ef\u4eba\u6709\u6743\u8bb8\u53ef\u7684\u8457\u4f5c\u6743\u4e0e\u7c7b\u4f3c\u6743\u5229\u3002</li> <li>\u8bb8\u53ef\u4eba\uff1a \u6307\u901a\u8fc7\u672c\u516c\u5171\u8bb8\u53ef\u534f\u8bae\u8fdb\u884c\u6388\u6743\u7684\u4e2a\u4eba\u6216\u7ec4\u7ec7\u3002</li> <li>\u5206\u4eab\uff1a \u6307\u4ee5\u9700\u8981\u201c\u534f\u8bae\u6240\u6388\u4e88\u7684\u6743\u5229\u201d\u8bb8\u53ef\u7684\u4efb\u4f55\u65b9\u6cd5\u6216\u7a0b\u5e8f\u5411\u516c\u4f17\u63d0\u4f9b\u4f5c\u54c1(material)\uff0c\u5305\u62ec\u590d\u5236\u3001\u516c\u5171\u5c55\u793a\u3001\u516c\u5f00\u8868\u6f14\u3001\u53d1\u884c\u3001\u6563\u5e03\u3001\u4f20\u64ad\u3001\u8fdb\u53e3\u6216\u63d0\u4f9b\u4f5c\u54c1(material)\u7ed9\u516c\u4f17\u4ee5\u4fbf\u5176\u80fd\u5728\u5176\u9009\u5b9a\u7684\u65f6\u95f4\u548c\u5730\u70b9\u63a5\u6536\u4f5c\u54c1(material)\u3002</li> <li>\u6570\u636e\u5e93\u7279\u522b\u6743\u5229\uff1a \u6307\u9664\u4e86\u8457\u4f5c\u6743\u4e4b\u5916\uff0c\u884d\u751f\u4e8e1996\u5e743\u670811\u65e5\u901a\u8fc7\u7684\u300a\u6b27\u6d32\u8bae\u4f1a\u4e0e\u6b27\u76df\u7406\u4e8b\u4f1a\u5173\u4e8e\u6570\u636e\u5e93\u6cd5\u5f8b\u4fdd\u62a4\u7684\u6307\u4ee4\u300b(Directive 96/9/EC)\u53ca\u5176\u4fee\u6539\u6216\u540e\u7eed\u7248\u672c\u7684\u6743\u5229\uff0c\u6216\u5176\u4ed6\u56fd\u5bb6\u6216\u5730\u533a\u672c\u8d28\u4e0a\u4e0e\u4e4b\u7b49\u540c\u7684\u6743\u5229\u3002</li> <li>\u60a8\uff1a \u6307\u4f9d\u636e\u672c\u516c\u5171\u8bb8\u53ef\u534f\u8bae\u884c\u4f7f\u5176\u6240\u83b7\u5f97\u6388\u4e88\u4e4b\u6743\u5229\u7684\u4e2a\u4eba\u6216\u673a\u6784\u3002 \u201c\u60a8\u7684\u201d \u6709\u76f8\u5e94\u7684\u542b\u4e49\u3002</li> </ol>"},{"location":"about/license/#\u7b2c\u4e8c\u6761-\u6388\u6743\u8303\u56f4","title":"\u7b2c\u4e8c\u6761 \u6388\u6743\u8303\u56f4","text":"<ol> <li> <p>\u6388\u6743</p> <ol> <li>\u6839\u636e\u672c\u516c\u5171\u8bb8\u53ef\u534f\u8bae\u7684\u6761\u6b3e\uff0c\u8bb8\u53ef\u4eba\u6388\u4e88\u60a8\u5728\u5168\u7403\u8303\u56f4\u5185\uff0c\u514d\u8d39\u7684\u3001\u4e0d\u53ef\u518d\u8bb8\u53ef\u3001\u975e\u72ec\u5360\u3001\u4e0d\u53ef\u64a4\u9500\u7684\u8bb8\u53ef\uff0c\u4ee5\u5bf9\u6388\u6743\u4f5c\u54c1(Licensed Material)\u884c\u4f7f\u4ee5\u4e0b\u201c\u534f\u8bae\u6240\u6388\u4e88\u7684\u6743\u5229\u201d\uff1a<ol> <li>\u590d\u5236\u548c\u5206\u4eab\u6388\u6743\u4f5c\u54c1(Licensed Material)\u7684\u5168\u90e8\u6216\u90e8\u5206\uff1b\u4ee5\u53ca</li> <li>\u521b\u4f5c\u3001\u590d\u5236\u548c\u5206\u4eab\u6f14\u7ece\u4f5c\u54c1(Adapted Material)\u3002</li> </ol> </li> <li>\u4f8b\u5916\u548c\u9650\u5236 \u4e3a\u907f\u514d\u7591\u4e49\uff0c\u82e5\u8457\u4f5c\u6743\u7684\u4f8b\u5916\u548c\u9650\u5236\u9002\u7528\u4e8e\u60a8\u5bf9\u6388\u6743\u4f5c\u54c1(Licensed Material)\u7684\u4f7f\u7528\uff0c\u672c\u516c\u5171\u8bb8\u53ef\u534f\u8bae\u5c06\u4e0d\u9002\u7528\uff0c\u60a8\u4e5f\u65e0\u987b\u9075\u5b88\u672c\u516c\u5171\u8bb8\u53ef\u534f\u8bae\u4e4b\u6761\u6b3e\u3002</li> <li>\u671f\u9650 \u672c\u516c\u5171\u8bb8\u53ef\u534f\u8bae\u7684\u671f\u9650\u89c4\u5b9a\u4e8e\u7b2c\u516d\u6761a \u6b3e\u3002</li> <li>\u5a92\u4ecb\u548c\u5f62\u5f0f\uff1b\u5141\u8bb8\u7684\u6280\u672f\u4fee\u6539 \u8bb8\u53ef\u4eba\u6388\u6743\u60a8\u5728\u4efb\u4f55\u5a92\u4ecb\u4ee5\u4efb\u4f55\u5f62\u5f0f\uff08\u4e0d\u8bba\u76ee\u524d\u5df2\u77e5\u7684\u6216\u672a\u6765\u51fa\u73b0\u7684\uff09\u884c\u4f7f\u672c\u534f\u8bae\u6388\u4e88\u7684\u6743\u5229\uff0c\u5e76\u4e3a\u4e4b\u8fdb\u884c\u5fc5\u8981\u7684\u6280\u672f\u4fee\u6539\u3002\u8bb8\u53ef\u4eba\u653e\u5f03\u548c/\u6216\u540c\u610f\u4e0d\u4e3b\u5f20\u4efb\u4f55\u6743\u5229\u4ee5\u963b\u6b62\u60a8\u4e3a\u4e86\u884c\u4f7f\u534f\u8bae\u9879\u4e0b\u6743\u5229\u8fdb\u884c\u5fc5\u8981\u7684\u6280\u672f\u4fee\u6539\uff0c\u5305\u62ec\u4e3a\u89c4\u907f\u6709\u6548\u6280\u672f\u63aa\u65bd\u6240\u5fc5\u987b\u7684\u6280\u672f\u4fee\u6539\u3002\u4e3a\u4e86\u672c\u516c\u5171\u8bb8\u53ef\u534f\u8bae\u4e4b\u76ee\u7684\uff0c \u57fa\u4e8e\u7b2c\u4e8c\u6761a\u6b3e\u7b2c(4)\u9879 \u8fdb\u884c\u7684\u6280\u672f\u4fee\u6539\u4e0d\u6784\u6210\u6f14\u7ece\u4f5c\u54c1(Adapted Material)\u3002</li> <li>\u540e\u7eed\u63a5\u53d7\u8005<ol> <li>\u6765\u81ea\u8bb8\u53ef\u4eba\u7684\u8981\u7ea6\u2014\u2014\u6388\u6743\u4f5c\u54c1(Licensed Material) \u672c\u6388\u6743\u4f5c\u54c1(Licensed Material)\u7684\u6bcf\u4e00\u4e2a\u540e\u7eed\u63a5\u53d7\u8005\u90fd\u81ea\u52a8\u53d6\u5f97\u8bb8\u53ef\u4eba\u7684\u8981\u7ea6\uff0c\u4ee5\u6309\u7167\u672c\u516c\u5171\u8bb8\u53ef\u534f\u8bae\u7684\u6761\u6b3e\u884c\u4f7f\u534f\u8bae\u6388\u4e88\u7684\u6743\u5229\u3002</li> <li>\u6765\u81ea\u8bb8\u53ef\u4eba\u7684\u989d\u5916\u8981\u7ea6\u2014\u2014\u6f14\u7ece\u4f5c\u54c1(Adapted Material) \u60a8\u57fa\u4e8e\u6388\u6743\u4f5c\u54c1(Licensed Material)\u521b\u4f5c\u7684\u6f14\u7ece\u4f5c\u54c1(Adapted Material)\u7684\u6bcf\u4e00\u4e2a\u540e\u7eed\u63a5\u53d7\u8005\u90fd\u81ea\u52a8\u53d6\u5f97\u8bb8\u53ef\u4eba\u7684\u8981\u7ea6\uff0c\u4ee5\u6309\u7167\u60a8\u6240\u9002\u7528\u7684\u201c\u6f14\u7ece\u4f5c\u8005\u7684\u8bb8\u53ef\u201d\u534f\u8bae\u7684\u6761\u6b3e\u884c\u4f7f\u534f\u8bae\u6240\u6388\u4e88\u7684\u6743\u5229\u3002</li> <li>\u7981\u6b62\u4e0b\u6e38\u9650\u5236 \u82e5\u4f1a\u9650\u5236\u6388\u6743\u4f5c\u54c1(Licensed Material)\u540e\u7eed\u63a5\u53d7\u8005\u884c\u4f7f\u672c\u534f\u8bae\u6240\u6388\u4e88\u7684\u6743\u5229\uff0c\u5219\u60a8\u4e0d\u5f97\u5bf9\u6388\u6743\u4f5c\u54c1(Licensed Material)\u63d0\u51fa\u6216\u589e\u52a0\u4efb\u4f55\u989d\u5916\u7684\u6216\u4e0d\u540c\u7684\u6761\u6b3e\uff0c\u6216\u4f7f\u7528\u4efb\u4f55\u6709\u6548\u6280\u672f\u63aa\u65bd\u3002</li> </ol> </li> <li>\u5e76\u975e\u80cc\u4e66 \u672c\u516c\u5171\u8bb8\u53ef\u534f\u8bae\u4e0d\u6784\u6210\u3001\u6216\u4e0d\u5f97\u88ab\u89e3\u91ca\u4e3a\u5141\u8bb8\u60a8\u58f0\u660e\u6216\u4e3b\u5f20\uff1a\u60a8\u6216\u60a8\u5bf9\u6388\u6743\u4f5c\u54c1(Licensed Material)\u7684\u4f7f\u7528\u4e0e\u8bb8\u53ef\u4eba\u6216 \u7b2c\u4e09\u6761a\u6b3e\u7b2c(1)\u9879(A)\u76ee(i)\u6240\u89c4\u5b9a\u8981\u6c42\u63d0\u4f9b\u7f72\u540d\u7684\u6743\u5229\u4eba\u76f8\u5173\u8054\uff0c\u6216\u5f97\u5230\u5176\u8d5e\u52a9\u3001\u540c\u610f\u6216\u88ab\u6388\u4e88\u6b63\u5f0f\u5730\u4f4d\u3002</li> </ol> </li> <li> <p>\u5176\u4ed6\u6743\u5229</p> <ol> <li>\u4f9d\u636e\u672c\u516c\u5171\u8bb8\u53ef\u534f\u8bae\uff0c\u8457\u4f5c\u4eba\u8eab\u6743\uff0c\u4f8b\u5982\u4fdd\u62a4\u4f5c\u54c1\u5b8c\u6574\u6743\u3001\u5f62\u8c61\u6743\u3001\u9690\u79c1\u6743\u6216\u5176\u4ed6\u7c7b\u4f3c\u7684\u4eba\u683c\u6743\u5229\uff0c\u4e0d\u5728\u8bb8\u53ef\u8303\u56f4\u5185\u3002\u4f46\u662f\uff0c\u5728\u6761\u4ef6\u5141\u8bb8\u7684\u60c5\u51b5\u4e0b\uff0c\u8bb8\u53ef\u4eba\u53ef\u4ee5\u5728\u5fc5\u8981\u8303\u56f4\u5185\u653e\u5f03\u548c/\u6216\u540c\u610f\u4e0d\u4e3b\u5f20\u5176\u6743\u5229\uff0c\u4ee5\u4fbf\u60a8\u884c\u4f7f\u672c\u534f\u8bae\u6240\u6388\u4e88\u7684\u6743\u5229\u3002</li> <li>\u672c\u516c\u5171\u8bb8\u53ef\u534f\u8bae\u4e0d\u9002\u7528\u4e8e\u4efb\u4f55\u4e13\u5229\u6743\u6216\u5546\u6807\u6743\u8bb8\u53ef\u3002</li> <li>\u5728\u81ea\u613f\u7684\u6216\u53ef\u653e\u5f03\u7684\u6cd5\u5b9a\u6216\u5f3a\u5236\u8bb8\u53ef\u673a\u5236\u4e0b\uff0c\u8bb8\u53ef\u4eba\u5728\u6700\u5927\u53ef\u80fd\u8303\u56f4\u5185\u653e\u5f03\u5bf9\u60a8\u56e0\u884c\u4f7f\u672c\u534f\u8bae\u6240\u6388\u4e88\u7684\u6743\u5229\u800c\u4ea7\u751f\u7684\u4f7f\u7528\u8d39\u7684\u6743\u5229\uff0c\u4e0d\u8bba\u662f\u76f4\u63a5\u6536\u53d6\u6216\u901a\u8fc7\u96c6\u4f53\u7ba1\u7406\u7ec4\u7ec7\u6536\u53d6\u3002\u5728\u5176\u4ed6\u4efb\u4f55\u60c5\u51b5\u4e0b\uff0c\u8bb8\u53ef\u4eba\u660e\u786e\u4fdd\u7559\u6536\u53d6\u4f7f\u7528\u8d39\u7684\u4efb\u4f55\u6743\u5229\u3002</li> </ol> </li> </ol>"},{"location":"about/license/#\u7b2c\u4e09\u6761-\u6388\u6743\u6761\u4ef6","title":"\u7b2c\u4e09\u6761 \u6388\u6743\u6761\u4ef6","text":"<p>\u60a8\u884c\u4f7f\u88ab\u8bb8\u53ef\u7684\u6743\u5229\u660e\u786e\u53d7\u4ee5\u4e0b\u6761\u4ef6\u9650\u5236\uff1a</p> <ol> <li> <p>\u7f72\u540d</p> <ol> <li>\u82e5\u60a8\u5206\u4eab\u672c\u6388\u6743\u4f5c\u54c1(Licensed Material)\uff08\u5305\u542b\u4fee\u6539\u683c\u5f0f\uff09\uff0c\u60a8\u5fc5\u987b\uff1a<ol> <li>\u4fdd\u7559\u5982\u4e0b\u6807\u8bc6\uff08\u5982\u679c\u8bb8\u53ef\u4eba\u63d0\u4f9b\u6388\u6743\u4f5c\u54c1(Licensed Material)\u7684\u540c\u65f6\u63d0\u4f9b\u5982\u4e0b\u6807\u8bc6\uff09\uff1a<ol> <li>\u4ee5\u8bb8\u53ef\u4eba\u8981\u6c42\u7684\u4efb\u4f55\u5408\u7406\u65b9\u5f0f\uff0c\u6807\u8bc6\u672c\u6388\u6743\u4f5c\u54c1(Licensed Material)\u521b\u4f5c\u8005\u548c\u5176\u4ed6\u88ab\u6307\u5b9a\u7f72\u540d\u7684\u4eba\u7684\u8eab\u4efd\uff08\u5305\u62ec\u6307\u5b9a\u7684\u7b14\u540d\uff09\uff1b</li> <li>\u8457\u4f5c\u6743\u58f0\u660e\uff1b</li> <li>\u6709\u5173\u672c\u516c\u5171\u8bb8\u53ef\u534f\u8bae\u7684\u58f0\u660e\uff1b</li> <li>\u6709\u5173\u514d\u8d23\u7684\u58f0\u660e\uff1b</li> <li>\u5728\u5408\u7406\u53ef\u884c\u60c5\u51b5\u4e0b\uff0c\u672c\u6388\u6743\u4f5c\u54c1(Licensed Material)\u7684\u7f51\u5740(URI)\u6216\u8d85\u94fe\u63a5\uff1b</li> </ol> </li> <li>\u8868\u660e\u60a8\u662f\u5426\u4fee\u6539\u672c\u6388\u6743\u4f5c\u54c1(Licensed Material)\u53ca\u4fdd\u7559\u4efb\u4f55\u5148\u524d\u4fee\u6539\u7684\u6807\u8bb0\uff1b\u53ca</li> <li>\u8868\u660e\u6388\u6743\u4f5c\u54c1(Licensed Material)\u4f9d\u636e\u672c\u516c\u5171\u8bb8\u53ef\u534f\u8bae\u6388\u6743\uff0c\u5e76\u63d0\u4f9b\u672c\u516c\u5171\u8bb8\u53ef\u534f\u8bae\u5168\u6587\uff0c\u6216\u8005\u672c\u516c\u5171\u8bb8\u53ef\u534f\u8bae\u7684\u7f51\u5740(URI)\u6216\u8d85\u94fe\u63a5\u3002</li> </ol> </li> <li>\u4f9d\u636e\u60a8\u5206\u4eab\u672c\u6388\u6743\u4f5c\u54c1(Licensed Material)\u7684\u5a92\u4ecb\u3001\u65b9\u6cd5\u53ca\u60c5\u6cc1\uff0c\u60a8\u53ef\u4ee5\u91c7\u7528\u4efb\u4f55\u5408\u7406\u65b9\u5f0f\u6ee1\u8db3\u7b2c\u4e09\u6761a\u6b3e\u7b2c(1)\u9879\u7684\u6761\u4ef6 \u3002 \u4f8b\u5982\uff0c\u63d0\u4f9b\u5305\u542b\u6240\u8981\u6c42\u4fe1\u606f\u6765\u6e90\u7684\u7f51\u5740(URI)\u6216\u8d85\u94fe\u63a5\u53ef\u7b97\u662f\u5408\u7406\u5730\u6ee1\u8db3\u6b64\u5904\u7684\u6761\u4ef6\u3002</li> <li>\u5982\u679c\u8bb8\u53ef\u4eba\u8981\u6c42\uff0c\u60a8\u5fc5\u987b\u5728\u5408\u7406\u53ef\u884c\u7684\u8303\u56f4\u5185\u79fb\u9664\u7b2c\u4e09\u6761a\u6b3e\u7b2c(1)\u9879(A)\u76ee \u6240\u8981\u6c42\u7684\u4efb\u4f55\u4fe1\u606f\u3002</li> </ol> </li> <li> <p>\u76f8\u540c\u65b9\u5f0f\u5171\u4eab</p> <p>\u9664\u7b2c\u4e09\u6761a\u6b3e\u7684\u6761\u4ef6\u5916\uff0c\u5982\u679c\u60a8\u5206\u4eab\u60a8\u521b\u4f5c\u7684\u6f14\u7ece\u4f5c\u54c1(Adapted Material)\uff0c\u5219\u4e0b\u5217\u6761\u4ef6\u4e5f\u9002\u7528\uff1a</p> <ol> <li>\u60a8\u9002\u7528\u7684\u201c\u6f14\u7ece\u4f5c\u8005\u7684\u8bb8\u53ef\u201d\u534f\u8bae\u5fc5\u987b\u662f\u4e0e\u672c\u8bb8\u53ef\u534f\u8bae\u5177\u6709\u76f8\u540c\u6388\u6743\u8981\u7d20\u7684\u77e5\u8bc6\u5171\u4eab(Creative Commons)\u8bb8\u53ef\u534f\u8bae\uff08\u53ef\u4ee5\u662f\u672c\u7248\u672c\u6216\u540e\u7eed\u7248\u672c\uff09\uff0c\u6216\u8005\u5176\u4ed6\u4e0e\u201c\u7f72\u540d\uff0d\u76f8\u540c\u65b9\u5f0f\u5171\u4eab\u201d\u534f\u8bae\u517c\u5bb9\u7684\u8bb8\u53ef\u534f\u8bae\u3002</li> <li>\u60a8\u5fc5\u987b\u63d0\u4f9b\u60a8\u9002\u7528\u7684\u201c\u6f14\u7ece\u4f5c\u8005\u7684\u8bb8\u53ef\u201d\u534f\u8bae\u5168\u6587\u6216\u8005\u8be5\u8bb8\u53ef\u534f\u8bae\u7684\u7f51\u5740(URI)\u6216\u8d85\u94fe\u63a5\u3002\u4f9d\u636e\u60a8\u5206\u4eab\u60a8\u7684\u6f14\u7ece\u4f5c\u54c1(Adapted Material)\u6240\u4f7f\u7528\u7684\u5a92\u4ecb\u3001\u65b9\u6cd5\u53ca\u60c5\u6cc1\uff0c\u60a8\u53ef\u4ee5\u91c7\u7528\u4efb\u4f55\u5408\u7406\u65b9\u5f0f\u6ee1\u8db3\u6b64\u6761\u4ef6\u3002</li> <li>\u60a8\u4e0d\u5f97\u63d0\u51fa\u6216\u65bd\u52a0\u4efb\u4f55\u9644\u52a0\u6216\u4e0d\u540c\u7684\u6761\u6b3e\u6216\u6761\u4ef6\u3001\u6216\u5728\u6f14\u7ece\u4f5c\u54c1(Adapted Material)\u4e0a\u5e94\u7528\u4efb\u4f55\u6709\u6548\u7684\u6280\u672f\u63aa\u65bd\uff0c\u4ee5\u9650\u5236\u4f7f\u7528\u8005\u884c\u4f7f\u4f9d\u60a8\u6240\u9002\u7528\u7684\u201c\u6f14\u7ece\u4f5c\u8005\u7684\u8bb8\u53ef\u201d\u534f\u8bae\u6240\u6388\u4e88\u7684\u6743\u5229\u3002</li> </ol> </li> </ol>"},{"location":"about/license/#\u7b2c\u56db\u6761-\u6570\u636e\u5e93\u7279\u522b\u6743\u5229","title":"\u7b2c\u56db\u6761 \u6570\u636e\u5e93\u7279\u522b\u6743\u5229","text":"<p>\u5f53\u534f\u8bae\u6240\u6388\u4e88\u7684\u6743\u5229\u5305\u542b\u6570\u636e\u5e93\u7279\u522b\u6743\u5229\uff0c\u800c\u8be5\u6570\u636e\u5e93\u7279\u522b\u6743\u5229\u9002\u7528\u4e8e\u60a8\u5bf9\u6388\u6743\u4f5c\u54c1(Licensed Material)\u7684\u4f7f\u7528\u65f6\uff1a</p> <ol> <li>\u4e3a\u907f\u514d\u7591\u4e49\uff0c\u7b2c\u4e8c\u6761a\u6b3e\u7b2c(1)\u9879\u6388\u6743\u60a8\uff0c\u6458\u5f55\u3001\u518d\u5229\u7528\u3001\u590d\u5236\u548c\u5206\u4eab\u5168\u90e8\u6216\u7edd\u5927\u90e8\u5206\u6570\u636e\u5e93\u8d44\u6599\uff1b</li> <li>\u5982\u679c\u60a8\u5c06\u6570\u636e\u5e93\u8d44\u6599\u7684\u5168\u90e8\u6216\u7edd\u5927\u90e8\u5206\u7eb3\u5165\u60a8\u4eab\u6709\u6570\u636e\u5e93\u7279\u522b\u6743\u5229\u7684\u53e6\u4e00\u6570\u636e\u5e93\uff0c\u5219\u60a8\u4eab\u6709\u6570\u636e\u5e93\u7279\u522b\u6743\u5229\u7684\u8be5\u6570\u636e\u5e93\uff08\u800c\u975e\u5176\u4e2d\u7684\u5355\u4e2a\u5185\u5bb9\uff09\u89c6\u4e3a\u6f14\u7ece\u4f5c\u54c1(Adapted Material)\uff0c\u9002\u7528\u7b2c\u4e09\u6761b\u6b3e\u7684\u8981\u6c42\uff1b</li> <li>\u5982\u679c\u60a8\u5206\u4eab\u5168\u90e8\u6216\u5927\u90e8\u5206\u8be5\u6570\u636e\u5e93\u7684\u8d44\u6599\uff0c\u60a8\u5fc5\u987b\u9075\u5b88 \u7b2c\u4e09\u6761a\u6b3e \u89c4\u5b9a\u7684\u6761\u4ef6\u3002</li> </ol> <p>\u4e3a\u907f\u514d\u7591\u4e49\uff0c\u5f53\u534f\u8bae\u6240\u6388\u4e88\u7684\u6743\u5229\u5305\u542b\u5176\u4ed6\u8457\u4f5c\u6743\u4e0e\u7c7b\u4f3c\u6743\u5229\u65f6\uff0c\u7b2c\u56db\u6761\u8865\u5145\u4e14\u4e0d\u53d6\u4ee3\u672c\u516c\u5171\u8bb8\u53ef\u534f\u8bae\u6240\u89c4\u5b9a\u7684\u60a8\u7684\u4e49\u52a1\u3002</p>"},{"location":"about/license/#\u7b2c\u4e94\u6761-\u514d\u8d23\u58f0\u660e\u53ca\u8d23\u4efb\u9650\u5236\u6761\u6b3e","title":"\u7b2c\u4e94\u6761 \u514d\u8d23\u58f0\u660e\u53ca\u8d23\u4efb\u9650\u5236\u6761\u6b3e","text":"<ol> <li>\u9664\u975e\u8bb8\u53ef\u4eba\u53e6\u6709\u4fdd\u8bc1\uff0c\u5426\u5219\u5728\u6700\u5927\u53ef\u80fd\u8303\u56f4\u5185\uff0c\u8bb8\u53ef\u4eba\u6309\u5176\u73b0\u72b6\u548c\u73b0\u6709\u4e4b\u57fa\u7840\u63d0\u4f9b\u6388\u6743\u4f5c\u54c1(Licensed Material)\uff0c\u4e14\u6ca1\u6709\u5c31\u6388\u6743\u4f5c\u54c1(Licensed Material)\u505a\u51fa\u4efb\u4f55\u5f62\u5f0f\u7684\u9648\u8ff0\u6216\u4fdd\u8bc1\uff1a\u65e0\u8bba\u660e\u793a\u3001\u9ed8\u793a\u3001\u6cd5\u5b9a\u6216\u5176\u4ed6\u5f62\u5f0f\uff0c\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e\u4efb\u4f55\u6709\u5173\u672c\u6388\u6743\u4f5c\u54c1(Licensed Material)\u7684\u6743\u5c5e\u4fdd\u8bc1\u3001\u53ef\u4ea4\u6613\u6027\u3001\u9002\u4e8e\u7279\u5b9a\u76ee\u7684\u3001\u672a\u4fb5\u5bb3\u4ed6\u4eba\u6743\u5229\u3001\u6ca1\u6709\u6f5c\u5728\u6216\u5176\u4ed6\u7455\u75b5\u3001\u7cbe\u786e\u6027\u6216\u662f\u5426\u6709\u9519\u8bef\uff0c\u4e0d\u7ba1\u662f\u5426\u5df2\u77e5\u6216\u53ef\u53d1\u73b0\u3002\u5f53\u514d\u8d23\u58f0\u660e\u5168\u90e8\u6216\u90e8\u5206\u4e0d\u88ab\u5141\u8bb8\u65f6\uff0c\u6b64\u514d\u8d23\u58f0\u660e\u53ef\u80fd\u4e0d\u9002\u7528\u4e8e\u60a8\u3002</li> <li>\u5728\u6700\u5927\u53ef\u80fd\u8303\u56f4\u5185\uff0c \u5bf9\u4e8e\u4efb\u4f55\u56e0\u672c\u516c\u5171\u8bb8\u53ef\u534f\u8bae\u6216\u4f7f\u7528\u6388\u6743\u4f5c\u54c1(Licensed Material)\u5f15\u8d77\u7684\u76f4\u63a5\u7684\u3001\u7279\u6b8a\u7684\u3001\u95f4\u63a5\u7684\u3001\u9644\u968f\u7684\u3001\u8fde\u5e26\u7684\u3001\u60e9\u7f5a\u6027\u7684\u3001\u8b66\u544a\u6027\u7684\uff0c\u6216\u5176\u4ed6\u7684\u635f\u5931\u3001\u6210\u672c\u3001\u8d39\u7528\u6216\u635f\u5bb3\uff0c\u8bb8\u53ef\u4eba\u4e0d\u5bf9\u60a8\u8d1f\u4efb\u4f55\u6cd5\u5f8b\u4e0a\u6216\u5176\u4ed6\u7684\u8d23\u4efb\uff08\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e\u8fc7\u5931\u8d23\u4efb\uff09\u3002\u5f53\u8d23\u4efb\u9650\u5236\u90e8\u5206\u6216\u5168\u90e8\u4e0d\u88ab\u5141\u8bb8\u65f6\uff0c\u8be5\u9650\u5236\u4e0d\u9002\u7528\u4e8e\u60a8\u3002</li> <li>\u524d\u8ff0\u514d\u8d23\u53ca\u8d23\u4efb\u9650\u5236\u58f0\u660e\uff0c\u5e94\u5c3d\u53ef\u80fd\u4ee5\u6700\u63a5\u8fd1\u4e8e\u5b8c\u5168\u6392\u9664\u5168\u90e8\u8d23\u4efb\u7684\u65b9\u5f0f\u89e3\u91ca\u3002</li> </ol>"},{"location":"about/license/#\u7b2c\u516d\u6761-\u671f\u9650\u4e0e\u7ec8\u6b62","title":"\u7b2c\u516d\u6761 \u671f\u9650\u4e0e\u7ec8\u6b62","text":"<ol> <li>\u672c\u516c\u5171\u8bb8\u53ef\u534f\u8bae\u5728\u8457\u4f5c\u6743\u4e0e\u7c7b\u4f3c\u6743\u5229\u5b58\u7eed\u671f\u95f4\u5185\u6709\u6548\u3002\u7136\u800c\uff0c\u5982\u679c\u60a8\u6ca1\u6709\u9075\u5b88\u6b64\u516c\u5171\u8bb8\u53ef\u534f\u8bae\uff0c\u5219\u60a8\u4f9d\u636e\u6b64\u516c\u5171\u8bb8\u53ef\u534f\u8bae\u4eab\u6709\u7684\u6743\u5229\u81ea\u52a8\u7ec8\u6b62\u3002</li> <li> <p>\u5f53\u60a8\u4f7f\u7528\u672c\u6388\u6743\u4f5c\u54c1(Licensed Material)\u7684\u6743\u5229\u6839\u636e\u7b2c\u516d\u6761a\u6b3e\u7ec8\u6b62\u65f6\uff0c\u60a8\u7684\u6743\u5229\u5728\u4e0b\u8ff0\u60c5\u51b5\u4e0b\u6062\u590d\uff1a</p> <ol> <li>\u81ea\u8fdd\u53cd\u534f\u8bae\u7684\u884c\u4e3a\u7ea0\u6b63\u4e4b\u65e5\u8d77\u81ea\u52a8\u6062\u590d\uff0c\u4f46\u987b\u5728\u60a8\u53d1\u73b0\u8fdd\u53cd\u60c5\u5f62\u540e30\u65e5\u5185\u7ea0\u6b63\uff1b\u6216</li> <li>\u6839\u636e\u8bb8\u53ef\u4eba\u660e\u793a\u6062\u590d\u6743\u5229\u7684\u610f\u601d\u8868\u8fbe\u3002</li> </ol> <p>\u4e3a\u907f\u514d\u7591\u4e49\uff0c\u672c\u516c\u5171\u8bb8\u53ef\u534f\u8bae\u7b2c\u516d\u6761b\u6b3e\u4e0d\u5f71\u54cd\u8bb8\u53ef\u4eba\u5c31\u60a8\u8fdd\u53cd\u672c\u516c\u5171\u8bb8\u53ef\u534f\u8bae\u7684\u884c\u4e3a\u5bfb\u6c42\u6cd5\u5f8b\u6551\u6d4e\u3002</p> </li> <li> <p>\u4e3a\u907f\u514d\u7591\u4e49\uff0c\u8bb8\u53ef\u4eba\u4e5f\u53ef\u5728\u4efb\u4f55\u65f6\u95f4\uff0c\u4ee5\u53e6\u5916\u7684\u6761\u6b3e\u6216\u6761\u4ef6\u63d0\u4f9b\u672c\u6388\u6743\u4f5c\u54c1(Licensed Material)\uff0c\u6216\u8005\u505c\u6b62\u4f20\u64ad\u672c\u6388\u6743\u4f5c\u54c1(Licensed Material)\uff1b\u7136\u800c\uff0c\u8bb8\u53ef\u4eba\u6b64\u79cd\u884c\u4e3a\u4e0d\u4f1a\u7ec8\u6b62\u672c\u516c\u5171\u8bb8\u53ef\u534f\u8bae\u3002</p> </li> <li>\u672c\u534f\u8bae\u7b2c\u4e00\u3001\u4e94\u3001\u516d\u3001\u4e03\u53ca\u7b2c\u516b\u6761\uff0c\u4e0d\u56e0\u672c\u516c\u5171\u8bb8\u53ef\u534f\u8bae\u7ec8\u6b62\u800c\u5931\u6548\u3002</li> </ol>"},{"location":"about/license/#\u7b2c\u4e03\u6761-\u5176\u4ed6\u6761\u6b3e\u548c\u6761\u4ef6","title":"\u7b2c\u4e03\u6761 \u5176\u4ed6\u6761\u6b3e\u548c\u6761\u4ef6","text":"<ol> <li>\u9664\u975e\u660e\u793a\u540c\u610f\uff0c\u5426\u5219\u8bb8\u53ef\u4eba\u4e0d\u53d7\u60a8\u8868\u8fbe\u7684\u4efb\u4f55\u9644\u52a0\u6216\u4e0d\u540c\u6761\u6b3e\u6216\u6761\u4ef6\u7ea6\u675f\u3002</li> <li>\u672c\u516c\u5171\u8bb8\u53ef\u534f\u8bae\u672a\u63d0\u53ca\u7684\u5173\u4e8e\u6388\u6743\u4f5c\u54c1(Licensed Material)\u4e4b\u4efb\u4f55\u5b89\u6392\u3001\u5171\u8bc6\u6216\u534f\u8bae\uff0c\u4e0d\u5c5e\u4e8e\u4e14\u72ec\u7acb\u4e8e\u672c\u516c\u5171\u8bb8\u53ef\u534f\u8bae\u7684\u6761\u6b3e\u53ca\u6761\u4ef6\u3002</li> </ol>"},{"location":"about/license/#\u7b2c\u516b\u6761-\u89e3\u91ca","title":"\u7b2c\u516b\u6761 \u89e3\u91ca","text":"<ol> <li>\u4e3a\u907f\u514d\u7591\u4e49\uff0c\u672c\u8bb8\u53ef\u534f\u8bae\u4e0d\u4f1a\u4e5f\u4e0d\u5e94\u88ab\u89e3\u91ca\u4e3a\u51cf\u5c11\u3001\u9650\u5236\u3001\u7ea6\u675f\u6216\u65bd\u52a0\u6761\u4ef6\u4e8e\u65e0\u9700\u672c\u516c\u5171\u8bb8\u53ef\u534f\u8bae\u6388\u6743\u5373\u53ef\u4f9d\u6cd5\u884c\u4f7f\u7684\u5bf9\u6388\u6743\u4f5c\u54c1(Licensed Material)\u7684\u4efb\u4f55\u4f7f\u7528\u3002</li> <li>\u5728\u6700\u5927\u53ef\u80fd\u8303\u56f4\u5185\uff0c\u5982\u679c\u672c\u516c\u5171\u8bb8\u53ef\u534f\u8bae\u7684\u4efb\u4f55\u6761\u6b3e\u88ab\u89c6\u4e3a\u65e0\u6cd5\u6267\u884c\uff0c\u8be5\u6761\u6b3e\u5728\u5fc5\u8981\u7684\u6700\u5c0f\u9650\u5ea6\u5185\uff0c\u81ea\u52a8\u8c03\u6574\u81f3\u53ef\u4ee5\u6267\u884c\u3002\u5982\u679c\u8be5\u6761\u6b3e\u4e0d\u80fd\u88ab\u8c03\u6574\uff0c\u5176\u5e94\u81ea\u672c\u516c\u5171\u8bb8\u53ef\u534f\u8bae\u4e2d\u6392\u9664\u9002\u7528\uff0c\u4e0d\u5f71\u54cd\u5176\u4f59\u6761\u6b3e\u7684\u6548\u529b\u3002</li> <li>\u9664\u975e\u8bb8\u53ef\u4eba\u660e\u793a\u540c\u610f\uff0c\u672c\u516c\u5171\u8bb8\u53ef\u534f\u8bae\u7684\u4efb\u4f55\u6761\u6b3e\u6216\u6761\u4ef6\u5747\u4e0d\u5f97\u653e\u5f03\u3002</li> <li>\u672c\u516c\u5171\u8bb8\u53ef\u534f\u8bae\u6761\u6b3e\u4e0d\u6784\u6210\u3001\u4e5f\u4e0d\u5f97\u88ab\u89e3\u91ca\u4e3a\u9650\u5236\u6216\u8005\u653e\u5f03\u9002\u7528\u4e8e\u8bb8\u53ef\u4eba\u6216\u60a8\u7684\u7279\u6743\u6216\u8c41\u514d\uff0c\u5305\u62ec\u8c41\u514d\u4e8e\u4efb\u4f55\u53f8\u6cd5\u7ba1\u8f96\u533a\u6216\u884c\u653f\u673a\u6784\u7684\u6cd5\u5f8b\u7a0b\u5e8f\u3002</li> </ol>"},{"location":"about/privacy/","title":"\u9690\u79c1\u653f\u7b56\u4e0e\u6761\u6b3e","text":""},{"location":"about/privacy/#\u9690\u79c1\u653f\u7b56\u4e0e\u6761\u6b3e","title":"\u9690\u79c1\u653f\u7b56\u4e0e\u6761\u6b3e","text":"<p>\u672c\u9875\u9762\u89e3\u91ca\u4e86\u6211\u4eec\u5982\u4f55\u6536\u96c6\u60a8\u7684\u4e2a\u4eba\u4fe1\u606f\u3001\u5982\u4f55\u4f7f\u7528\u60a8\u7684\u4e2a\u4eba\u4fe1\u606f\u3001\u6211\u4eec\u5982\u4f55\u4fdd\u62a4\u60a8\u7684\u4e2a\u4eba\u4fe1\u606f\u4ee5\u53ca\u60a8\u9700\u8981\u9075\u5b88\u7684\u6761\u6b3e\u3002\u672c\u9875\u9762\u7684\u6240\u6709\u5185\u5bb9\u9002\u5408\u60a8\u4f7f\u7528\u672c\u7f51\u7ad9\u7684\u4efb\u4f55\u60c5\u666f\u3002</p> <p>\u672c\u9875\u9762\u4e2d\u7684\u201c\u6211\u4eec\u201d\u3001\u201c\u672c\u7ad9\u201d\u6307\u7684\u662f<code>panxuc.com</code>\u53ca\u5176\u6240\u6709\u5b50\u57df\u540d\uff08<code>*.panxuc.com</code>\uff0c\u5982 <code>docs.panxuc.com</code>\uff09\u53ca\u5176\u6240\u6709\u4eba Xuc Pan\u3002</p> <p>\u672c\u9690\u79c1\u653f\u7b56\u4e0e\u6761\u6b3e\u7684\u6700\u7ec8\u89e3\u91ca\u6743\u5f52\u672c\u7ad9\u6240\u6709\u3002</p>"},{"location":"about/privacy/#\u9690\u79c1\u653f\u7b56","title":"\u9690\u79c1\u653f\u7b56","text":"<p>\u60a8\u4f7f\u7528\u672c\u7ad9\u670d\u52a1\uff0c\u5373\u8868\u793a\u60a8\u4fe1\u8d56\u6211\u4eec\u5bf9\u60a8\u7684\u4fe1\u606f\u7684\u5904\u7406\u65b9\u5f0f\u3002\u6211\u4eec\u6df1\u77e5\u8fd9\u9879\u8d23\u4efb\u4e8b\u5173\u91cd\u5927\uff0c\u56e0\u6b64\u4e00\u76f4\u81f4\u529b\u4e8e\u4fdd\u62a4\u60a8\u7684\u4fe1\u606f\uff0c\u5e76\u8ba9\u60a8\u62e5\u6709\u63a7\u5236\u6743\u3002</p> <p>\u672c\u9690\u79c1\u6743\u653f\u7b56\u65e8\u5728\u534f\u52a9\u60a8\u4e86\u89e3\u6211\u4eec\u4f1a\u6536\u96c6\u54ea\u4e9b\u4fe1\u606f\u3001\u4e3a\u4ec0\u4e48\u6536\u96c6\u8fd9\u4e9b\u4fe1\u606f\u3002</p>"},{"location":"about/privacy/#\u6211\u4eec\u6536\u96c6\u7684\u4fe1\u606f","title":"\u6211\u4eec\u6536\u96c6\u7684\u4fe1\u606f","text":"<p>\u6211\u4eec\u6536\u96c6\u7684\u4fe1\u606f\u5305\u62ec\u60a8\u7684IP\u5730\u5740\u3001\u6d4f\u89c8\u5668\u7c7b\u578b\u3001\u64cd\u4f5c\u7cfb\u7edf\u3001\u6b63\u5728\u6d4f\u89c8\u7684\u672c\u7ad9\u9875\u9762\u3001\u4f55\u65f6\u6d4f\u89c8\u672c\u7ad9\u7b49\u4fe1\u606f\u3002</p>"},{"location":"about/privacy/#\u6211\u4eec\u4e3a\u4ec0\u4e48\u8981\u6536\u96c6\u6570\u636e","title":"\u6211\u4eec\u4e3a\u4ec0\u4e48\u8981\u6536\u96c6\u6570\u636e","text":"<p>\u6211\u4eec\u4f7f\u7528\u60a8\u7684\u4fe1\u606f\u6765\u6539\u5584\u6211\u4eec\u7684\u670d\u52a1\u3002</p>"},{"location":"about/privacy/#\u6211\u4eec\u5982\u4f55\u4f7f\u7528\u60a8\u7684\u4fe1\u606f","title":"\u6211\u4eec\u5982\u4f55\u4f7f\u7528\u60a8\u7684\u4fe1\u606f","text":"<p>\u6211\u4eec\u4f7f\u7528\u60a8\u7684\u4fe1\u606f\u6765\u6539\u5584\u6211\u4eec\u7684\u670d\u52a1\u3002</p>"},{"location":"about/privacy/#\u786e\u4fdd\u60a8\u7684\u4fe1\u606f\u5b89\u5168\u65e0\u865e","title":"\u786e\u4fdd\u60a8\u7684\u4fe1\u606f\u5b89\u5168\u65e0\u865e","text":"<p>\u6211\u4eec\u4f1a\u5b9a\u671f\u68c0\u67e5\u6211\u4eec\u7684\u5b89\u5168\u63aa\u65bd\uff0c\u4ee5\u786e\u4fdd\u6211\u4eec\u7684\u670d\u52a1\u6ca1\u6709\u88ab\u9ed1\u5ba2\u653b\u51fb\u3002</p>"},{"location":"about/privacy/#\u5bfc\u51fa\u548c\u5220\u9664\u60a8\u7684\u4fe1\u606f","title":"\u5bfc\u51fa\u548c\u5220\u9664\u60a8\u7684\u4fe1\u606f","text":"<p>\u60a8\u53ef\u4ee5\u901a\u8fc7\u8054\u7cfb\u6211\u4eec\u6765\u5bfc\u51fa\u60a8\u7684\u4fe1\u606f\u6216\u5220\u9664\u60a8\u7684\u4fe1\u606f\u3002</p>"},{"location":"about/privacy/#\u9075\u5b88\u76d1\u7ba1\u673a\u6784\u7684\u89c4\u5b9a\u5e76\u4e0e\u4e4b\u5408\u4f5c","title":"\u9075\u5b88\u76d1\u7ba1\u673a\u6784\u7684\u89c4\u5b9a\u5e76\u4e0e\u4e4b\u5408\u4f5c","text":"<p>\u6211\u4eec\u4f1a\u5b9a\u671f\u67e5\u770b\u672c\u9690\u79c1\u6743\u653f\u7b56\uff0c\u786e\u4fdd\u6211\u4eec\u6309\u7167\u7b26\u5408\u672c\u653f\u7b56\u7684\u65b9\u5f0f\u5904\u7406\u60a8\u7684\u4fe1\u606f\u3002</p> <p>\u6211\u4eec\u7ef4\u62a4\u7740\u4f4d\u4e8e\u7f8e\u5229\u575a\u5408\u4f17\u56fd\u7684\u670d\u52a1\u5668\uff0c\u56e0\u6b64\uff0c\u6211\u4eec\u5904\u7406\u60a8\u7684\u4fe1\u606f\u65f6\u6240\u7528\u7684\u670d\u52a1\u5668\u53ef\u80fd\u5e76\u4e0d\u4f4d\u4e8e\u60a8\u6240\u5728\u7684\u56fd\u5bb6/\u5730\u533a\u3002\u6570\u636e\u4fdd\u62a4\u6cd5\u5f8b\u56e0\u56fd\u5bb6/\u5730\u533a\u800c\u5f02\uff0c\u4e0d\u540c\u56fd\u5bb6/\u5730\u533a\u7684\u6570\u636e\u4fdd\u62a4\u529b\u5ea6\u4e5f\u662f\u6709\u5f3a\u6709\u5f31\u3002\u65e0\u8bba\u662f\u5728\u54ea\u91cc\u5904\u7406\u60a8\u7684\u4fe1\u606f\uff0c\u6211\u4eec\u90fd\u4f1a\u4e00\u5f8b\u91c7\u7528\u672c\u653f\u7b56\u4e2d\u6240\u8ff0\u7684\u4fdd\u62a4\u63aa\u65bd\u3002\u53e6\u5916\uff0c\u6211\u4eec\u8fd8\u4f1a\u9075\u5b88\u67d0\u4e9b\u4e0e\u6570\u636e\u4f20\u8f93\u6709\u5173\u7684\u6cd5\u5f8b\u6846\u67b6\u3002</p> <p>\u6536\u5230\u6b63\u5f0f\u7684\u4e66\u9762\u6295\u8bc9\u540e\uff0c\u6211\u4eec\u53ef\u80fd\u4f1a\u4e0e\u6295\u8bc9\u65b9\u8054\u7cfb\u3002\u6211\u4eec\u53ef\u80fd\u4f1a\u4e0e\u76f8\u5e94\u7684\u76d1\u7ba1\u673a\u6784\uff08\u5305\u62ec\u5f53\u5730\u7684\u6570\u636e\u4fdd\u62a4\u673a\u6784\uff09\u5408\u4f5c\uff0c\u4ee5\u89e3\u51b3\u4efb\u4f55\u4e0e\u4f20\u8f93\u60a8\u7684\u6570\u636e\u6709\u5173\u4e14\u65e0\u6cd5\u7531\u6211\u4eec\u548c\u60a8\u76f4\u63a5\u89e3\u51b3\u7684\u6295\u8bc9\u3002</p>"},{"location":"about/privacy/#\u5173\u4e8e\u672c\u653f\u7b56","title":"\u5173\u4e8e\u672c\u653f\u7b56","text":"<p>\u672c\u9690\u79c1\u6743\u653f\u7b56\u9002\u7528\u4e8e\u7531\u672c\u7ad9\u63d0\u4f9b\u7684\u6240\u6709\u670d\u52a1\u3002</p> <p>\u672c\u9690\u79c1\u6743\u653f\u7b56\u4e0d\u9002\u7528\u4e8e\uff1a</p> <ul> <li>\u8fdd\u53cd\u672c\u7ad9\u6761\u6b3e\u7684\u884c\u4e3a\u53ca\u4e2a\u4f53\u3002</li> </ul> <p>\u6211\u4eec\u4f1a\u4e0d\u65f6\u4fee\u8ba2\u672c\u9690\u79c1\u6743\u653f\u7b56\u3002\u672c\u653f\u7b56\u7684\u6700\u65b0\u7248\u672c\u5c06\u59cb\u7ec8\u5728\u672c\u9875\u9762\u4e0a\u516c\u5e03\u3002</p>"},{"location":"about/privacy/#\u6761\u6b3e","title":"\u6761\u6b3e","text":"<p>\u6211\u4eec\u77e5\u9053\u60a8\u4f1a\u60f3\u8981\u8df3\u8fc7\u8fd9\u4e9b\u670d\u52a1\u6761\u6b3e\uff0c\u4f46\u5728\u4f7f\u7528\u672c\u7ad9\u670d\u52a1\u65f6\uff0c\u4e86\u89e3\u6211\u4eec\u63d0\u4f9b\u7684\u670d\u52a1\u4ee5\u53ca\u6211\u4eec\u5bf9\u60a8\u7684\u671f\u671b\u662f\u975e\u5e38\u5fc5\u8981\u7684\u3002</p> <p>\u672c\u670d\u52a1\u6761\u6b3e\u53cd\u6620\u4e86\u672c\u7ad9\u7684\u4e1a\u52a1\u6a21\u5f0f\u3001\u9002\u7528\u7684\u6cd5\u5f8b\u4ee5\u53ca\u6211\u4eec\u4e00\u76f4\u575a\u4fe1\u7684\u67d0\u4e9b\u539f\u5219\u3002\u56e0\u6b64\uff0c\u672c\u670d\u52a1\u6761\u6b3e\u6709\u52a9\u4e8e\u5728\u60a8\u4e0e\u6211\u4eec\u7684\u670d\u52a1\u4e92\u52a8\u65f6\u754c\u5b9a\u672c\u7ad9\u4e0e\u60a8\u7684\u5173\u7cfb\u3002\u4f8b\u5982\uff0c\u672c\u6761\u6b3e\u5305\u62ec\u4ee5\u4e0b\u4e3b\u9898\uff1a</p> <ul> <li>\u6211\u4eec\u63d0\u4f9b\u7684\u670d\u52a1\uff0c\u6b64\u90e8\u5206\u8bf4\u660e\u4e86\u6211\u4eec\u5982\u4f55\u63d0\u4f9b\u548c\u5f00\u53d1\u672c\u7ad9\u670d\u52a1</li> <li>\u201c\u6211\u4eec\u5bf9\u60a8\u7684\u671f\u671b\u201d\uff0c\u6b64\u90e8\u5206\u89c4\u5b9a\u4e86\u4f7f\u7528\u6211\u4eec\u7684\u670d\u52a1\u65f6\u9700\u9075\u5b88\u7684\u67d0\u4e9b\u89c4\u5219</li> <li>\u201c\u672c\u7ad9\u670d\u52a1\u4e2d\u7684\u5185\u5bb9\u201d\uff0c\u6b64\u90e8\u5206\u4ecb\u7ecd\u4e86\u6211\u4eec\u670d\u52a1\u4e2d\u7684\u5185\u5bb9\u7684\u77e5\u8bc6\u4ea7\u6743\uff0c\u65e0\u8bba\u8fd9\u4e9b\u5185\u5bb9\u5f52\u60a8\u3001\u672c\u7ad9\u8fd8\u662f\u4ed6\u4eba\u6240\u6709</li> <li>\u201c\u95ee\u9898\u6216\u5f02\u8bae\u201d\uff0c\u6b64\u90e8\u5206\u4ecb\u7ecd\u4e86\u60a8\u4eab\u6709\u7684\u5176\u4ed6\u6cd5\u5b9a\u6743\u5229\uff0c\u4ee5\u53ca\u8fdd\u53cd\u672c\u6761\u6b3e\u4f1a\u4ea7\u751f\u4ec0\u4e48\u6837\u7684\u540e\u679c</li> </ul> <p>\u4e86\u89e3\u672c\u6761\u6b3e\u81f3\u5173\u91cd\u8981\uff0c\u56e0\u4e3a\u60a8\u4f7f\u7528\u6211\u4eec\u7684\u670d\u52a1\u5373\u8868\u793a\u60a8\u5df2\u540c\u610f\u672c\u6761\u6b3e\u3002</p>"},{"location":"about/privacy/#\u60a8\u4e0e\u672c\u7ad9\u7684\u5173\u7cfb","title":"\u60a8\u4e0e\u672c\u7ad9\u7684\u5173\u7cfb","text":"<p>\u60a8\u53ea\u662f\u666e\u901a\u7684\u6d4f\u89c8\u8005\uff0c\u672c\u7ad9\u901a\u5e38\u6ca1\u6709\u4e49\u52a1\u6ee1\u8db3\u60a8\u7684\u8981\u6c42\u3002\u5982\u679c\u60a8\u575a\u6301\u9700\u8981\u6ee1\u8db3\u60a8\u7684\u8981\u6c42\uff0c\u8bf7\u8054\u7cfb\u6211\u4eec\u3002</p> <p>\u5982\u679c\u60a8\u662f 2022 \u5e74\u5165\u5b66\u7684\u6e05\u534e\u5927\u5b66\u7535\u5b50\u5de5\u7a0b\u7cfb\u672c\u79d1\u4e8c\u5b57\u73ed\u5b66\u751f\uff0c\u6216\u662f\u53c2\u52a0\u4efb\u4f55\u6709 2022 \u5e74\u5165\u5b66\u7684\u6e05\u534e\u5927\u5b66\u7535\u5b50\u5de5\u7a0b\u7cfb\u672c\u79d1\u4e8c\u5b57\u73ed\u5b66\u751f\u53c2\u52a0\u7684\u8bfe\u7a0b\u7684\u5b66\u751f\uff0c\u56e0\u6d4f\u89c8\u672c\u7ad9\u9020\u6210\u7684\u4efb\u4f55\u635f\u5931\u4e0e\u672c\u7ad9\u65e0\u5173\uff0c\u4e0d\u5f97\u8981\u6c42\u672c\u7ad9\u627f\u62c5\u4efb\u4f55\u8d23\u4efb\u3002</p>"},{"location":"about/privacy/#\u6211\u4eec\u5bf9\u60a8\u7684\u671f\u671b","title":"\u6211\u4eec\u5bf9\u60a8\u7684\u671f\u671b","text":"<p>\u53ea\u8981\u60a8\u9075\u5b88\u672c\u6761\u6b3e\uff0c\u6211\u4eec\u5411\u60a8\u6388\u4e88\u7684\u670d\u52a1\u4f7f\u7528\u6743\u9650\u5c31\u6301\u7eed\u6709\u6548\u3002</p> <p>\u6211\u4eec\u5e0c\u671b\u4e3a\u6240\u6709\u7528\u6237\u8425\u9020\u76f8\u4e92\u5c0a\u91cd\u7684\u73af\u5883\uff0c\u8fd9\u610f\u5473\u7740\u60a8\u5fc5\u987b\u9075\u5faa\u4ee5\u4e0b\u57fa\u672c\u7684\u884c\u4e3a\u51c6\u5219\uff1a</p> <ul> <li>\u9075\u5b88\u9002\u7528\u7684\u6cd5\u5f8b</li> <li>\u5c0a\u91cd\u4ed6\u4eba\u7684\u6743\u5229\uff0c\u5305\u62ec\u9690\u79c1\u6743\u548c\u77e5\u8bc6\u4ea7\u6743</li> <li>\u4e0d\u5f97\u9a9a\u6270\u6216\u4f24\u5bb3\u4ed6\u4eba\u6216\u60a8\u81ea\u5df1\uff08\u6216\u662f\u5a01\u80c1\u6216\u9f13\u52a8\u6b64\u7c7b\u9a9a\u6270\u6216\u4f24\u5bb3\uff09\uff0c\u4f8b\u5982\u901a\u8fc7\u8bef\u5bfc\u3001\u6b3a\u8bc8\u3001\u975e\u6cd5\u5192\u5145\u3001\u8bfd\u8c24\u3001\u6b3a\u51cc\u3001\u9a9a\u6270\u6216\u8ddf\u8e2a\u4ed6\u4eba\u7684\u65b9\u5f0f\u5b9e\u73b0\u6b64\u7c7b\u76ee\u7684</li> <li>\u4e0d\u5f97\u6ee5\u7528\u3001\u635f\u5bb3\u3001\u5e72\u6270\u6216\u7834\u574f\u6211\u4eec\u7684\u670d\u52a1 \u2014 \u4f8b\u5982\uff0c\u4ee5\u6b3a\u8bc8\u6216\u6b3a\u9a97\u65b9\u5f0f\u8bbf\u95ee\u6216\u4f7f\u7528\u6211\u4eec\u7684\u670d\u52a1\u3001\u5f15\u5165\u6076\u610f\u8f6f\u4ef6\u3001\u53d1\u5e03\u5783\u573e\u5185\u5bb9\u3001\u5f00\u5c55\u9ed1\u5ba2\u653b\u51fb\u6216\u7ed5\u8fc7\u6211\u4eec\u7684\u7cfb\u7edf\u6216\u4fdd\u62a4\u63aa\u65bd\u3002\u5f53\u6211\u4eec\u5f15\u7528\u4efb\u4f55\u5185\u5bb9\uff0c\u4f1a\u5c0a\u91cd\u6240\u6709\u8005\u6307\u5b9a\u7684\u6807\u51c6\u4f7f\u7528\u9650\u5236\uff0c\u56e0\u6b64\u6211\u4eec\u5e0c\u671b\u5176\u4ed6\u4eba\u4f7f\u7528\u6211\u4eec\u7684\u670d\u52a1\u65f6\uff0c\u4e5f\u9075\u5b88\u6211\u4eec\u7684\u8981\u6c42</li> </ul> <p>\u6211\u4eec\u7684\u67d0\u4e9b\u670d\u52a1\u5141\u8bb8\u60a8\u4e0a\u4f20\u3001\u63d0\u4ea4\u3001\u5b58\u50a8\u3001\u53d1\u9001\u3001\u63a5\u6536\u6216\u5206\u4eab\u60a8\u7684\u5185\u5bb9\u3002\u60a8\u6ca1\u6709\u4e3a\u6211\u4eec\u7684\u670d\u52a1\u63d0\u4f9b\u4efb\u4f55\u5185\u5bb9\u7684\u4e49\u52a1\uff0c\u5e76\u4e14\u53ef\u4ee5\u968f\u610f\u9009\u62e9\u5e0c\u671b\u63d0\u4f9b\u7684\u5185\u5bb9\u3002\u5982\u679c\u60a8\u9009\u62e9\u4e0a\u4f20\u6216\u5206\u4eab\u5185\u5bb9\uff0c\u8bf7\u786e\u4fdd\u60a8\u6709\u6743\u8fd9\u6837\u505a\uff0c\u5e76\u4e14\u4e0a\u4f20\u6216\u5206\u4eab\u7684\u5185\u5bb9\u662f\u5408\u6cd5\u7684\u3002\u60a8\u7684\u5185\u5bb9\u4e00\u65e6\u4e0a\u4f20\u672c\u7ad9\uff0c\u8bb8\u53ef\u8bc1\u5c06\u81ea\u52a8\u53d8\u4e3a\u77e5\u8bc6\u5171\u4eab\u7f72\u540d-\u76f8\u540c\u65b9\u5f0f\u5171\u4eab 4.0 \u56fd\u9645\u8bb8\u53ef\u534f\u8bae\u3002</p>"},{"location":"about/privacy/#\u672c\u7ad9\u670d\u52a1\u4e2d\u7684\u5185\u5bb9","title":"\u672c\u7ad9\u670d\u52a1\u4e2d\u7684\u5185\u5bb9","text":"<p>\u60a8\u53ef\u4ee5\u901a\u8fc7\u6211\u4eec\u7684\u67d0\u4e9b\u670d\u52a1\uff08\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e\u8bc4\u8bba\uff09\u516c\u5f00\u53d1\u5e03\u81ea\u5df1\u7684\u5185\u5bb9\u3002\u8bf7\u8bb0\u4f4f\uff0c\u60a8\u5bf9\u60a8\u7684\u5185\u5bb9\u8d1f\u8d23\u3002\u4f8b\u5982\uff0c\u5982\u679c\u60a8\u53d1\u5e03\u4e86\u7167\u7247\uff0c\u60a8\u5c31\u9700\u8981\u786e\u4fdd\u60a8\u6709\u6743\u53d1\u5e03\u8fd9\u4e9b\u7167\u7247\u3002\u5f53\u7136\uff0c\u6211\u4eec\u4e0d\u4f1a\u5bf9\u60a8\u7684\u5185\u5bb9\u8d1f\u8d23\u3002\u60a8\u7684\u5185\u5bb9\u4e00\u65e6\u4e0a\u4f20\u672c\u7ad9\uff0c\u8bb8\u53ef\u8bc1\u5c06\u81ea\u52a8\u53d8\u4e3a\u77e5\u8bc6\u5171\u4eab\u7f72\u540d-\u76f8\u540c\u65b9\u5f0f\u5171\u4eab 4.0 \u56fd\u9645\u8bb8\u53ef\u534f\u8bae\u3002</p>"},{"location":"about/privacy/#\u95ee\u9898\u6216\u5f02\u8bae","title":"\u95ee\u9898\u6216\u5f02\u8bae","text":"<p>\u5982\u679c\u60a8\u5bf9\u672c\u9690\u79c1\u653f\u7b56\u4e0e\u6761\u6b3e\u6709\u4efb\u4f55\u7591\u95ee\uff0c\u8bf7\u8054\u7cfb\u6211\u4eec\u3002</p>"},{"location":"blog/","title":"Blog","text":""},{"location":"code/","title":"\u7f16\u7a0b\u5f00\u53d1 - \u76ee\u5f55","text":""},{"location":"code/#\u7f16\u7a0b\u5f00\u53d1---\u76ee\u5f55","title":"\u7f16\u7a0b\u5f00\u53d1 - \u76ee\u5f55","text":"<ul> <li> \u6b63\u5219\u8868\u8fbe\u5f0f</li> <li> C &amp; C++<ul> <li>STL</li> <li> GCC</li> <li> CMake</li> </ul> </li> <li> C# &amp; .NET<ul> <li> NuGet</li> <li> WPF</li> <li> MAUI</li> <li> Unity</li> <li> Godot</li> </ul> </li> <li>Matlab</li> <li> Python<ul> <li> Flask</li> <li>Matplotlib</li> <li> NumPy</li> <li> Pandas</li> <li> SciPy</li> <li> SymPy</li> </ul> </li> </ul>"},{"location":"code/regex/","title":"\u6b63\u5219\u8868\u8fbe\u5f0f","text":""},{"location":"code/regex/#\u6b63\u5219\u8868\u8fbe\u5f0f","title":"\u6b63\u5219\u8868\u8fbe\u5f0f","text":"<p>\u6b63\u5219\u8868\u8fbe\u5f0f\uff08Regular expression\uff0c\u5373 regex\uff09\uff0c\u662f\u4e00\u79cd\u7528\u7b80\u5355\u5b57\u7b26\u4e32\u6765\u63cf\u8ff0\u3001\u5339\u914d\u6307\u5b9a\u683c\u5f0f\u7684\u5b57\u7b26\u4e32\u7684\u65b9\u6cd5\uff0c\u73b0\u5728\u5f88\u591a\u6587\u672c\u7f16\u8f91\u5668\u3001\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u90fd\u652f\u6301\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u64cd\u4f5c\u5339\u914d\u6307\u5b9a\u683c\u5f0f\u7684\u5b57\u7b26\u4e32\u3002</p> <p>\u5728\u65e5\u5e38\u751f\u6d3b\u4e2d\u5f88\u591a\u5730\u65b9\u90fd\u53ef\u4ee5\u7528\u5230\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u6bd4\u5982\u64b0\u5199 <code>.gitignore</code> \u6587\u4ef6\u3001\u641c\u7d22\u6587\u4ef6\u3001\u66ff\u6362\u6587\u672c\u3001\u722c\u866b\u7b49\u7b49\u3002</p>"},{"location":"code/regex/#\u6b63\u5219\u8868\u8fbe\u5f0f\u5143\u5b57\u7b26\u548c\u7279\u6027","title":"\u6b63\u5219\u8868\u8fbe\u5f0f\u5143\u5b57\u7b26\u548c\u7279\u6027","text":""},{"location":"code/regex/#\u5b57\u7b26\u5339\u914d","title":"\u5b57\u7b26\u5339\u914d","text":"<ul> <li>\u666e\u901a\u5b57\u7b26\uff1a\u666e\u901a\u5b57\u7b26\u6309\u7167\u5b57\u9762\u610f\u4e49\u8fdb\u884c\u5339\u914d\uff0c\u4f8b\u5982\u5339\u914d\u5b57\u6bcd \"a\" \u5c06\u5339\u914d\u5230\u6587\u672c\u4e2d\u7684 \"a\" \u5b57\u7b26\u3002</li> <li>\u5143\u5b57\u7b26\uff1a\u5143\u5b57\u7b26\u5177\u6709\u7279\u6b8a\u7684\u542b\u4e49\uff0c\u4f8b\u5982 <code>\\d</code> \u5339\u914d\u4efb\u610f\u6570\u5b57\u5b57\u7b26\uff0c<code>\\w</code> \u5339\u914d\u4efb\u610f\u5b57\u6bcd\u6570\u5b57\u5b57\u7b26\uff0c<code>.</code> \u5339\u914d\u4efb\u610f\u5b57\u7b26\uff08\u9664\u4e86\u6362\u884c\u7b26\uff09\u7b49\u3002</li> </ul>"},{"location":"code/regex/#\u91cf\u8bcd","title":"\u91cf\u8bcd","text":"<ul> <li><code>*</code>\uff1a\u5339\u914d\u524d\u9762\u7684\u6a21\u5f0f\u96f6\u6b21\u6216\u591a\u6b21\u3002</li> <li><code>+</code>\uff1a\u5339\u914d\u524d\u9762\u7684\u6a21\u5f0f\u4e00\u6b21\u6216\u591a\u6b21\u3002</li> <li><code>?</code>\uff1a\u5339\u914d\u524d\u9762\u7684\u6a21\u5f0f\u96f6\u6b21\u6216\u4e00\u6b21\u3002</li> <li><code>{n}</code>\uff1a\u5339\u914d\u524d\u9762\u7684\u6a21\u5f0f\u6070\u597d n \u6b21\u3002</li> <li><code>{n,}</code>\uff1a\u5339\u914d\u524d\u9762\u7684\u6a21\u5f0f\u81f3\u5c11 n \u6b21\u3002</li> <li><code>{n,m}</code>\uff1a\u5339\u914d\u524d\u9762\u7684\u6a21\u5f0f\u81f3\u5c11 n \u6b21\u4e14\u4e0d\u8d85\u8fc7 m \u6b21\u3002</li> </ul>"},{"location":"code/regex/#\u5b57\u7b26\u7c7b","title":"\u5b57\u7b26\u7c7b","text":"<ul> <li><code>[ ]</code>\uff1a\u5339\u914d\u62ec\u53f7\u5185\u7684\u4efb\u610f\u4e00\u4e2a\u5b57\u7b26\u3002\u4f8b\u5982\uff0c<code>[abc]</code> \u5339\u914d\u5b57\u7b26 \"a\"\u3001\"b\" \u6216 \"c\"\u3002</li> <li><code>[^ ]</code>\uff1a\u5339\u914d\u9664\u4e86\u62ec\u53f7\u5185\u7684\u5b57\u7b26\u4ee5\u5916\u7684\u4efb\u610f\u4e00\u4e2a\u5b57\u7b26\u3002\u4f8b\u5982\uff0c<code>[^abc]</code> \u5339\u914d\u9664\u4e86\u5b57\u7b26 \"a\"\u3001\"b\" \u6216 \"c\" \u4ee5\u5916\u7684\u4efb\u610f\u5b57\u7b26\u3002</li> </ul>"},{"location":"code/regex/#\u8fb9\u754c\u5339\u914d","title":"\u8fb9\u754c\u5339\u914d","text":"<ul> <li><code>^</code>\uff1a\u5339\u914d\u5b57\u7b26\u4e32\u7684\u5f00\u5934\u3002</li> <li><code>$</code>\uff1a\u5339\u914d\u5b57\u7b26\u4e32\u7684\u7ed3\u5c3e\u3002</li> <li><code>\\b</code>\uff1a\u5339\u914d\u5355\u8bcd\u8fb9\u754c\u3002</li> <li><code>\\B</code>\uff1a\u5339\u914d\u975e\u5355\u8bcd\u8fb9\u754c\u3002</li> </ul>"},{"location":"code/regex/#\u5206\u7ec4\u548c\u6355\u83b7","title":"\u5206\u7ec4\u548c\u6355\u83b7","text":"<ul> <li><code>( )</code>\uff1a\u7528\u4e8e\u5206\u7ec4\u548c\u6355\u83b7\u5b50\u8868\u8fbe\u5f0f\u3002</li> <li><code>(?: )</code>\uff1a\u7528\u4e8e\u5206\u7ec4\u4f46\u4e0d\u6355\u83b7\u5b50\u8868\u8fbe\u5f0f\u3002</li> </ul>"},{"location":"code/regex/#\u7279\u6b8a\u5b57\u7b26","title":"\u7279\u6b8a\u5b57\u7b26","text":"<ul> <li><code>\\</code>\uff1a\u8f6c\u4e49\u5b57\u7b26\uff0c\u7528\u4e8e\u5339\u914d\u7279\u6b8a\u5b57\u7b26\u672c\u8eab\u3002</li> <li><code>.</code>\uff1a\u5339\u914d\u4efb\u610f\u5b57\u7b26\uff08\u9664\u4e86\u6362\u884c\u7b26\uff09\u3002</li> <li><code>|</code>\uff1a\u7528\u4e8e\u6307\u5b9a\u591a\u4e2a\u6a21\u5f0f\u7684\u9009\u62e9\u3002</li> </ul>"},{"location":"code/regex/#\u6b63\u5219\u8868\u8fbe\u5f0f\u8bed\u6cd5","title":"\u6b63\u5219\u8868\u8fbe\u5f0f\u8bed\u6cd5","text":""},{"location":"code/regex/#\u666e\u901a\u5b57\u7b26","title":"\u666e\u901a\u5b57\u7b26","text":"<ul> <li><code>a</code>\uff1a\u5339\u914d\u5b57\u7b26 \"a\"\u3002</li> <li><code>abc</code>\uff1a\u5339\u914d\u5b57\u7b26\u4e32 \"abc\"\u3002</li> <li><code>[ABC]</code>\uff1a\u5339\u914d\u5b57\u7b26 \"A\"\u3001\"B\" \u6216 \"C\"\u3002</li> <li><code>[^ABC]</code>\uff1a\u5339\u914d\u9664\u4e86\u5b57\u7b26 \"A\"\u3001\"B\" \u6216 \"C\" \u4ee5\u5916\u7684\u4efb\u610f\u5b57\u7b26\u3002</li> <li><code>[A-Z]</code>\uff1a\u5339\u914d\u4efb\u610f\u5927\u5199\u5b57\u6bcd\u3002</li> <li><code>.</code>\uff1a\u5339\u914d\u4efb\u610f\u5b57\u7b26\uff08\u9664\u4e86\u6362\u884c\u7b26\uff08<code>\\n</code>\u3001<code>\\r</code>\uff09\uff09\u3002</li> <li><code>\\</code>\uff1a\u8f6c\u4e49\u5b57\u7b26\uff0c\u7528\u4e8e\u5339\u914d\u7279\u6b8a\u5b57\u7b26\u672c\u8eab\u3002</li> <li><code>\\d</code>\uff1a\u5339\u914d\u4efb\u610f\u6570\u5b57\u5b57\u7b26\uff0c\u7b49\u4ef7\u4e8e <code>[0-9]</code>\u3002</li> <li><code>\\D</code>\uff1a\u5339\u914d\u4efb\u610f\u975e\u6570\u5b57\u5b57\u7b26\uff0c\u7b49\u4ef7\u4e8e <code>[^0-9]</code>\u3002</li> <li><code>\\w</code>\uff1a\u5339\u914d\u4efb\u610f\u5b57\u6bcd\u6570\u5b57\u4e0b\u5212\u7ebf\u5b57\u7b26\uff0c\u7b49\u4ef7\u4e8e <code>[A-Za-z0-9_]</code>\u3002</li> <li><code>\\W</code>\uff1a\u5339\u914d\u4efb\u610f\u975e\u5b57\u6bcd\u6570\u5b57\u4e0b\u5212\u7ebf\u5b57\u7b26\uff0c\u7b49\u4ef7\u4e8e <code>[^A-Za-z0-9_]</code>\u3002</li> </ul>"},{"location":"code/regex/#\u975e\u6253\u5370\u5b57\u7b26","title":"\u975e\u6253\u5370\u5b57\u7b26","text":"<ul> <li><code>\\cx</code>\uff1a\u5339\u914d\u7531 <code>x</code> \u6307\u660e\u7684\u63a7\u5236\u5b57\u7b26\u3002\u4f8b\u5982\uff0c<code>\\cM</code> \u5339\u914d\u4e00\u4e2a Control-M \u6216\u56de\u8f66\u7b26\u3002</li> <li><code>\\f</code>\uff1a\u5339\u914d\u4e00\u4e2a\u6362\u9875\u7b26\u3002</li> <li><code>\\n</code>\uff1a\u5339\u914d\u4e00\u4e2a\u6362\u884c\u7b26\u3002</li> <li><code>\\r</code>\uff1a\u5339\u914d\u4e00\u4e2a\u56de\u8f66\u7b26\u3002</li> <li><code>\\s</code>\uff1a\u5339\u914d\u4efb\u610f\u7a7a\u767d\u5b57\u7b26\uff0c\u7b49\u4ef7\u4e8e <code>[\\f\\n\\r\\t\\v]</code>\u3002</li> <li><code>\\S</code>\uff1a\u5339\u914d\u4efb\u610f\u975e\u7a7a\u767d\u5b57\u7b26\uff0c\u7b49\u4ef7\u4e8e <code>[^\\f\\n\\r\\t\\v]</code>\u3002</li> <li><code>\\t</code>\uff1a\u5339\u914d\u4e00\u4e2a\u5236\u8868\u7b26\u3002</li> <li><code>\\v</code>\uff1a\u5339\u914d\u4e00\u4e2a\u5782\u76f4\u5236\u8868\u7b26\u3002</li> </ul>"},{"location":"code/csharp/","title":"C# & .NET","text":""},{"location":"code/csharp/#c--net","title":"C# &amp; .NET","text":"<p>C# \u662f\u5fae\u8f6f\u63a8\u51fa\u7684\u4e00\u79cd\u57fa\u4e8e .NET \u7684\u3001\u7531 C \u548c C++ \u6d3e\u751f\u51fa\u6765\u7684\u3001\u9762\u5411\u5bf9\u8c61\u7684\u9ad8\u7ea7\u7f16\u7a0b\u8bed\u8a00\u3002\u5b83\u5728\u7ee7\u627f C \u548c C++ \u5f3a\u5927\u529f\u80fd\u7684\u540c\u65f6\u53bb\u6389\u4e86\u4e00\u4e9b\u5b83\u4eec\u7684\u590d\u6742\u7279\u6027\uff0c\u4f7f\u5176\u6210\u4e3a C \u8bed\u8a00\u5bb6\u65cf\u4e2d\u7684\u4e00\u79cd\u9ad8\u6548\u5f3a\u5927\u7684\u7f16\u7a0b\u8bed\u8a00\u3002</p> <p>\u5f53\u524d\uff0cC# \u5728\u4f17\u591a\u9886\u57df\u6709\u5e7f\u6cdb\u7684\u5e94\u7528\u3002\u4f60\u53ef\u4ee5\u7528 WPF \u5f00\u53d1\u684c\u9762\u5e94\u7528\uff0c\u7528 MAUI \u5f00\u53d1\u8de8\u5e73\u53f0\u5e94\u7528\uff0c\u7528 Unity \u5f00\u53d1\u6e38\u620f\uff0c\u7528 ASP.NET Core \u5f00\u53d1 Web \u5e94\u7528\u7b49\u7b49\u3002</p>"},{"location":"code/csharp/#net","title":".NET","text":"<p>C# \u7a0b\u5e8f\u5728 .NET \u4e0a\u8fd0\u884c\uff0c.NET \u662f\u540d\u4e3a\u201c\u516c\u5171\u8bed\u8a00\u8fd0\u884c\u65f6 (CLR\uff0cCommon Language Runtime) \u201d\u7684\u865a\u6267\u884c\u7cfb\u7edf\u548c\u4e00\u7ec4\u7c7b\u5e93\u3002</p> <p>\u5728\u751f\u6210\u4e00\u4e2a .NET \u7a0b\u5e8f\u65f6\uff0c\u7a0b\u5e8f\u5458\u7f16\u5199\u7684\u4ee3\u7801\u6682\u65f6\u4e0d\u7ffb\u8bd1\u6210\u672c\u5730\u7684\u673a\u5668\u8bed\u8a00\uff0c\u800c\u662f\u5148\u88ab\u7f16\u8bd1\u6210\u7b26\u5408 CLI \u89c4\u8303\u7684\u4e2d\u95f4\u8bed\u8a00 (IL)\u3002\u5728\u6267\u884c\u53ef\u6267\u884c\u6587\u4ef6\u65f6\uff0c\u5c06\u542f\u52a8\u5bf9\u5e94 .NET \u6846\u67b6\u7684\u201c\u516c\u5171\u8bed\u8a00\u8fd0\u884c\u65f6\u201d\uff0c\u7531\u8be5 CLR \u5c06 MSIL \u7f16\u8bd1\u4e3a\u673a\u5668\u7801\u6267\u884c\uff0c\u79f0\u4f5c JIT \u7f16\u8bd1\uff08just-in-time compilation\uff09\u3002</p> <p>.NET \u7248\u672c\u4e2d\uff0c\u5947\u6570\u7248\u672c\u53f7\u8868\u793a STS \u7248\u672c\uff0c\u652f\u6301\u671f\u9650\u4e3a 18 \u4e2a\u6708\uff1b\u5076\u6570\u7248\u672c\u53f7\u8868\u793a LTS \u7248\u672c\uff0c\u652f\u6301\u671f\u9650\u4e3a 3 \u5e74\u3002\u5f53\u524d\u6700\u65b0\u7684 LTS \u7248\u672c\u662f .NET 8\u3002</p>"},{"location":"code/csharp/#\u4ece-hello-world-\u5f00\u59cb","title":"\u4ece Hello World \u5f00\u59cb","text":"<p>\u8ba9\u6211\u4eec\u6765\u770b\u4e00\u4e2a\u7528 C# \u5199\u7684 Hello World \u7a0b\u5e8f\uff1a</p> <pre><code>using System;\n\nnamespace HelloWorld\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            Console.WriteLine(\"Hello World!\");\n        }\n    }\n}\n</code></pre> <ul> <li><code>using</code> \u8bed\u53e5\u7528\u4e8e\u5f15\u5165\u547d\u540d\u7a7a\u95f4\uff0c\u8fd9\u91cc\u5f15\u5165\u4e86 <code>System</code> \u547d\u540d\u7a7a\u95f4\uff0c\u8be5\u547d\u540d\u7a7a\u95f4\u5305\u542b\u4e86 <code>Console</code> \u7c7b\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 <code>Console</code> \u7c7b\u4e86\u3002</li> <li><code>namespace</code> \u8bed\u53e5\u7528\u4e8e\u58f0\u660e\u547d\u540d\u7a7a\u95f4\uff0c\u8fd9\u91cc\u58f0\u660e\u4e86 <code>HelloWorld</code> \u547d\u540d\u7a7a\u95f4\u3002</li> <li><code>class</code> \u8bed\u53e5\u7528\u4e8e\u58f0\u660e\u7c7b\uff0c\u8fd9\u91cc\u58f0\u660e\u4e86 <code>Program</code> \u7c7b\u3002</li> <li><code>static</code> \u8bed\u53e5\u7528\u4e8e\u58f0\u660e\u9759\u6001\u6210\u5458\uff0c\u8fd9\u91cc\u58f0\u660e\u4e86 <code>Main</code> \u65b9\u6cd5\u3002</li> <li><code>void</code> \u8bed\u53e5\u7528\u4e8e\u58f0\u660e\u65b9\u6cd5\u8fd4\u56de\u503c\u7c7b\u578b\uff0c\u8fd9\u91cc\u58f0\u660e\u4e86 <code>Main</code> \u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u7c7b\u578b\u4e3a <code>void</code>\uff0c\u5373\u65e0\u8fd4\u56de\u503c\u3002</li> <li><code>Main</code> \u65b9\u6cd5\u662f\u7a0b\u5e8f\u7684\u5165\u53e3\u70b9\uff0c\u7a0b\u5e8f\u4ece\u8fd9\u91cc\u5f00\u59cb\u6267\u884c\u3002</li> <li><code>Console.WriteLine</code> \u65b9\u6cd5\u7528\u4e8e\u8f93\u51fa\u4e00\u884c\u6587\u672c\uff0c\u7531\u4e8e\u6211\u4eec\u5f15\u5165\u4e86 <code>System</code> \u547d\u540d\u7a7a\u95f4\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 <code>Console</code> \u7c7b\uff0c\u65e0\u9700\u5199\u6210 <code>System.Console.WriteLine</code>\u3002</li> </ul>"},{"location":"code/csharp/#main-\u65b9\u6cd5","title":"<code>Main</code> \u65b9\u6cd5","text":"<p>\u5728 C# \u4e2d\uff0c\u4e00\u822c\u6765\u8bf4\uff0c\u7a0b\u5e8f\u7684\u5165\u53e3\u70b9\u662f <code>Main</code> \u65b9\u6cd5\u3002\u4e00\u4e2a\u7a0b\u5e8f\u901a\u5e38\u53ea\u4f1a\u5b9a\u4e49\u4e00\u4e2a <code>Main</code> \u65b9\u6cd5\uff0c\u4f46\u4e5f\u53ef\u4ee5\u5b9a\u4e49\u591a\u4e2a <code>Main</code> \u65b9\u6cd5\uff0c\u4f46\u662f\u8fd9\u6837\u5c31\u8981\u5728\u9879\u76ee\u914d\u7f6e\u4e2d\u6307\u5b9a\u5165\u53e3\u70b9\u4e86\u3002</p> <p><code>Main</code> \u65b9\u6cd5\u901a\u5e38\u6709\u4ee5\u4e0b\u51e0\u79cd\u5f62\u5f0f\uff1a</p> <pre><code>public static void Main() { }\npublic static int Main() { }\npublic static void Main(string[] args) { }\npublic static int Main(string[] args) { }\npublic static async Task Main() { }\npublic static async Task&lt;int&gt; Main() { }\npublic static async Task Main(string[] args) { }\npublic static async Task&lt;int&gt; Main(string[] args) { }\n</code></pre>"},{"location":"code/csharp/#\u6570\u636e\u7c7b\u578b","title":"\u6570\u636e\u7c7b\u578b","text":"<p>C# \u4e2d\u7684\u6570\u636e\u7c7b\u578b\u5206\u4e3a\u503c\u7c7b\u578b\u548c\u5f15\u7528\u7c7b\u578b\u3002\u503c\u7c7b\u578b\u5305\u62ec\u6574\u578b\u3001\u6d6e\u70b9\u578b\u3001\u5e03\u5c14\u578b\u3001\u5b57\u7b26\u578b\u3001\u679a\u4e3e\u578b\u548c\u7ed3\u6784\u4f53\uff1b\u5f15\u7528\u7c7b\u578b\u5305\u62ec\u7c7b\u3001\u63a5\u53e3\u3001\u59d4\u6258\u548c\u6570\u7ec4\u3002</p> C# \u7c7b\u578b .NET \u7c7b\u578b \u5927\u5c0f\uff08\u5b57\u8282\uff09 \u8303\u56f4 <code>sbyte</code> <code>System.SByte</code> 1 -128 ~ 127 <code>byte</code> <code>System.Byte</code> 1 0 ~ 255 <code>short</code> <code>System.Int16</code> 2 -32,768 ~ 32,767 <code>ushort</code> <code>System.UInt16</code> 2 0 ~ 65,535 <code>int</code> <code>System.Int32</code> 4 -2,147,483,648 ~ 2,147,483,647 <code>uint</code> <code>System.UInt32</code> 4 0 ~ 4,294,967,295 <code>long</code> <code>System.Int64</code> 8 -9,223,372,036,854,775,808 ~ 9,223,372,036,854,775,807 <code>ulong</code> <code>System.UInt64</code> 8 0 ~ 18,446,744,073,709,551,615 <code>float</code> <code>System.Single</code> 4 \u00b11.5 \u00d7 10<sup>-45</sup> ~ \u00b13.4 \u00d7 10<sup>38</sup> <code>double</code> <code>System.Double</code> 8 \u00b15.0 \u00d7 10<sup>-324</sup> ~ \u00b11.7 \u00d7 10<sup>308</sup> <code>decimal</code> <code>System.Decimal</code> 16 \u00b11.0 \u00d7 10<sup>-28</sup> ~ \u00b17.9228 \u00d7 10<sup>28</sup> <code>bool</code> <code>System.Boolean</code> 1 <code>true</code> \u6216 <code>false</code> <code>char</code> <code>System.Char</code> 2 U+0000 ~ U+ffff <code>string</code> <code>System.String</code> 2 - <code>object</code> <code>System.Object</code> 4 - <code>enum</code> <code>System.Enum</code> 4 - <code>struct</code> <code>System.ValueType</code> 0 - <code>class</code> <code>System.Object</code> 4 - <code>interface</code> <code>System.Object</code> 4 - <code>delegate</code> <code>System.Delegate</code> 4 - <code>array</code> <code>System.Array</code> 0 -"},{"location":"code/csharp/#\u503c\u7c7b\u578b","title":"\u503c\u7c7b\u578b","text":"<p>\u503c\u7c7b\u578b\u7684\u53d8\u91cf\u5305\u542b\u7c7b\u578b\u7684\u5b9e\u4f8b\uff0c\u800c\u4e0d\u662f\u6307\u5411\u7c7b\u578b\u7684\u5f15\u7528\u3002</p> <p>\u6574\u5f62\u7c7b\u578b\u3001\u6d6e\u70b9\u578b\u3001\u5e03\u5c14\u578b\u3001\u5b57\u7b26\u578b\u4e0e C/C++ \u4e2d\u7684\u5bf9\u5e94\u7c7b\u578b\u57fa\u672c\u76f8\u540c\uff0c\u4e0d\u518d\u8d58\u8ff0\u3002</p>"},{"location":"code/csharp/#\u679a\u4e3e\u7c7b\u578b","title":"\u679a\u4e3e\u7c7b\u578b","text":"<p>\u679a\u4e3e\u7c7b\u578b\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u503c\u7c7b\u578b\uff0c\u5b83\u662f\u4e00\u7ec4\u547d\u540d\u7684\u5e38\u91cf\u7684\u96c6\u5408\u3002\u679a\u4e3e\u7c7b\u578b\u7684\u58f0\u660e\u5982\u4e0b\uff1a</p> <pre><code>enum Color\n{\n    Red,\n    Green,\n    Blue\n}\n</code></pre> <p>\u679a\u4e3e\u7c7b\u578b\u7684\u9ed8\u8ba4\u57fa\u7840\u7c7b\u578b\u662f <code>int</code>\uff0c\u53ef\u4ee5\u901a\u8fc7\u6307\u5b9a\u57fa\u7840\u7c7b\u578b\u6765\u6539\u53d8\u5b83\uff1a</p> <pre><code>enum Color : byte\n{\n    Red,\n    Green,\n    Blue\n}\n</code></pre> <p>\u679a\u4e3e\u7c7b\u578b\u7684\u503c\u53ef\u4ee5\u901a\u8fc7\u679a\u4e3e\u7c7b\u578b\u7684\u540d\u79f0\u6765\u8bbf\u95ee\uff1a</p> <pre><code>Color c = Color.Red;\n</code></pre> <p>\u4e5f\u53ef\u4ee5\u901a\u8fc7\u679a\u4e3e\u7c7b\u578b\u7684\u503c\u6765\u8bbf\u95ee\uff1a</p> <pre><code>Color c = (Color)1;\n</code></pre>"},{"location":"code/csharp/#\u7ed3\u6784\u4f53","title":"\u7ed3\u6784\u4f53","text":"<p>\u7ed3\u6784\u4f53\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u503c\u7c7b\u578b\uff0c\u5b83\u662f\u4e00\u7ec4\u4e0d\u540c\u7c7b\u578b\u7684\u53d8\u91cf\u7684\u96c6\u5408\u3002\u7ed3\u6784\u4f53\u7684\u58f0\u660e\u5982\u4e0b\uff1a</p> <pre><code>struct Point\n{\n    public int x;\n    public int y;\n}\n</code></pre> <p>\u7ed3\u6784\u4f53\u7684\u6210\u5458\u53ef\u4ee5\u662f\u5b57\u6bb5\u3001\u65b9\u6cd5\u3001\u5c5e\u6027\u3001\u7d22\u5f15\u5668\u3001\u8fd0\u7b97\u7b26\u65b9\u6cd5\u3001\u4e8b\u4ef6\u548c\u5d4c\u5957\u7c7b\u578b\u7b49\u3002</p> <p>\u7ed3\u6784\u4f53\u7684\u5b9e\u4f8b\u5316\u53ef\u4ee5\u901a\u8fc7 <code>new</code> \u5173\u952e\u5b57\u6765\u5b9e\u73b0\uff1a</p> <pre><code>Point p = new Point();\n</code></pre> <p>\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5bf9\u8c61\u521d\u59cb\u5316\u5668\u6765\u5b9e\u73b0\uff1a</p> <pre><code>Point p = new Point { x = 1, y = 2 };\n</code></pre>"},{"location":"code/csharp/#\u5f15\u7528\u7c7b\u578b","title":"\u5f15\u7528\u7c7b\u578b","text":"<p>\u5f15\u7528\u7c7b\u578b\u7684\u53d8\u91cf\u5305\u542b\u6307\u5411\u7c7b\u578b\u7684\u5f15\u7528\uff0c\u800c\u4e0d\u662f\u7c7b\u578b\u7684\u5b9e\u4f8b\u3002</p> <p>\u5bf9\u8c61\u7c7b\u578b\u3001\u52a8\u6001\u7c7b\u578b\u3001\u5b57\u7b26\u4e32\u7c7b\u578b\u3001\u6570\u7ec4\u7c7b\u578b\u4e0e C/C++ \u4e2d\u7684\u5bf9\u5e94\u7c7b\u578b\u57fa\u672c\u76f8\u540c\uff0c\u4e0d\u518d\u8d58\u8ff0\u3002</p>"},{"location":"code/csharp/#\u7c7b","title":"\u7c7b","text":"<p>\u7c7b\u662f\u4e00\u79cd\u5f15\u7528\u7c7b\u578b\uff0c\u5b83\u662f\u4e00\u7ec4\u4e0d\u540c\u7c7b\u578b\u7684\u53d8\u91cf\u548c\u65b9\u6cd5\u7684\u96c6\u5408\u3002\u7c7b\u7684\u58f0\u660e\u5982\u4e0b\uff1a</p> <pre><code>class Person\n{\n    public string name;\n    public int age;\n}\n</code></pre>"},{"location":"code/csharp/#\u59d4\u6258","title":"\u59d4\u6258","text":"<p>\u59d4\u6258\u662f\u4e00\u79cd\u5f15\u7528\u7c7b\u578b\uff0c\u5b83\u662f\u4e00\u79cd\u5f15\u7528\u65b9\u6cd5\u7684\u7c7b\u578b\u3002\u59d4\u6258\u7684\u58f0\u660e\u5982\u4e0b\uff1a</p> <pre><code>delegate void MyDelegate(string message);\n</code></pre>"},{"location":"coursework/","title":"\u8bfe\u7a0b\u4f5c\u4e1a - \u76ee\u5f55","text":""},{"location":"coursework/#\u8bfe\u7a0b\u4f5c\u4e1a---\u76ee\u5f55","title":"\u8bfe\u7a0b\u4f5c\u4e1a - \u76ee\u5f55","text":"<ul> <li>\u8ba1\u7b97\u673a\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840</li> <li>\u7535\u5b50\u7cfb\u7edf\u4e13\u9898\u8bbe\u8ba1\u4e0e\u5236\u4f5c</li> <li>\u6570\u636e\u4e0e\u7b97\u6cd5</li> </ul>"},{"location":"coursework/pdmes/","title":"\u7535\u5b50\u7cfb\u7edf\u4e13\u9898\u8bbe\u8ba1\u4e0e\u5236\u4f5c","text":""},{"location":"coursework/pdmes/#\u7535\u5b50\u7cfb\u7edf\u4e13\u9898\u8bbe\u8ba1\u4e0e\u5236\u4f5c","title":"\u7535\u5b50\u7cfb\u7edf\u4e13\u9898\u8bbe\u8ba1\u4e0e\u5236\u4f5c","text":""},{"location":"coursework/pdmes/#xprism-\u667a\u80fd\u773c\u955c","title":"XPrism \u667a\u80fd\u773c\u955c","text":""},{"location":"coursework/pdmes/#\u5173\u4e8e","title":"\u5173\u4e8e","text":"<p>\u6e05\u534e\u5927\u5b66\u7535\u5b50\u5de5\u7a0b\u7cfb\u786c\u4ef6\u8bbe\u8ba1\u5927\u8d5b\u53c2\u8d5b\u4f5c\u54c1\u3002</p> <p>\u9075\u5faa GPL-3.0 \u8bb8\u53ef\u8bc1\u3002</p> <p>XPrism \u662f\u57fa\u4e8e ESP32-PICO-D4 \u5f00\u53d1\u7684\u667a\u80fd\u773c\u955c\u3002</p> <p>\u6b64\u4ed3\u5e93\u540c\u65f6\u5305\u542b\u57fa\u4e8e .NET MAUI \u5f00\u53d1\u7684 Android \u7aef\u63a7\u5236\u5668\u3002</p> <p>Copyright \u00a9 2023 Panxuc always-del</p>"},{"location":"coursework/pdmes/#\u7279\u8272","title":"\u7279\u8272","text":"<ul> <li>\u4f7f\u7528 ESP32-PICO-KIT \u5f00\u53d1\u677f\u4f5c\u4e3a\u4e3b\u63a7\uff0c\u4f7f\u7528 ESP32-CAM \u6a21\u7ec4\u4f5c\u4e3a\u6444\u50cf\u5934\u3002</li> <li>\u53ef\u4ee5\u4f7f\u7528\u5b9e\u4f53\u6309\u94ae\u3001\u52a8\u4f5c\u8bc6\u522b\u7b49\u591a\u79cd\u65b9\u5f0f\u63a7\u5236\u3002</li> <li>\u4f7f\u7528 LVGL \u56fe\u5f62\u5e93\uff0c\u7f16\u5199\u4e86\u4e00\u5957\u7b80\u6613\u7684 UI \u6846\u67b6\uff1b\u540c\u65f6\u5236\u4f5c\u591a\u6b3e\u8f6f\u4ef6\u7a0b\u5e8f\uff0c\u6ee1\u8db3\u65e5\u5e38\u4f7f\u7528\u9700\u6c42\u3002</li> <li>\u4e0e\u624b\u673a\u7aef\u914d\u5408\uff0c\u53ef\u4ee5\u5b9e\u73b0\u63a5\u6536\u624b\u673a\u901a\u77e5\u63d0\u9192\u7b49\u591a\u79cd\u529f\u80fd\u3002</li> <li>\u652f\u6301\u6700\u9ad8 32 GB \u7684 TF \u5361\uff0c\u53ef\u4ee5\u5b58\u50a8\u5927\u91cf\u6570\u636e\u3002\u53ef\u4ee5\u76f4\u63a5\u6253\u5f00\u56fe\u7247\u3001\u89c6\u9891\u7b49\u6587\u4ef6\u3002</li> </ul>"},{"location":"coursework/pdmes/#\u81f4\u8c22","title":"\u81f4\u8c22","text":"<p>XPrism \u7684\u8bde\u751f\u79bb\u4e0d\u5f00\u4ee5\u4e0b\u5f00\u6e90\u9879\u76ee\u7684\u652f\u6301\u3001\u53c2\u8003\u4e0e\u5f15\u7528\u3002</p> <ul> <li>ArduinoJson</li> <li>ESP32Time</li> <li>HoloCubic</li> <li>HoloCubic_AIO</li> <li>i2cdevlib</li> <li>littlefs</li> <li>lvgl</li> <li>MPU6050</li> <li>TFT_eSPI</li> <li>TinyGPSPlus</li> <li>TJpg_Decoder</li> </ul>"},{"location":"coursework/cpd/","title":"\u8ba1\u7b97\u673a\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840 \u8bfe\u7a0b\u4f5c\u4e1a","text":""},{"location":"coursework/cpd/#\u8ba1\u7b97\u673a\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840-\u8bfe\u7a0b\u4f5c\u4e1a","title":"\u8ba1\u7b97\u673a\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840 \u8bfe\u7a0b\u4f5c\u4e1a","text":"<p>\u6b64\u4ed3\u5e93\u53ea\u7528\u4f5c\u5907\u4efd\u3002\u7531\u4e8e\u4fee\u8bfb\u8be5\u8bfe\u7a0b\u65f6\u5bf9\u8ba1\u7b97\u673a\u7a0b\u5e8f\u8bbe\u8ba1\u5c1a\u672a\u5f62\u6210\u8f83\u4e3a\u6e05\u6670\u7684\u8ba4\u8bc6\uff0c\u6545\u7b54\u6848\u4e2d\u5b58\u5728\u8f83\u591a\u7eb0\u6f0f\u548c\u4e0d\u8db3\u3002</p>"},{"location":"coursework/cpd/#\u76ee\u5f55","title":"\u76ee\u5f55","text":"<ul> <li>\u8ba1\u7b97\u673a\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\uff081\uff09<ul> <li>\u7b2c\u4e00\u6b21\u4f5c\u4e1a</li> <li>\u7b2c\u4e8c\u6b21\u4f5c\u4e1a</li> <li>\u7b2c\u4e09\u6b21\u4f5c\u4e1a</li> <li>\u7b2c\u56db\u6b21\u4f5c\u4e1a</li> <li>\u7b2c\u4e94\u6b21\u4f5c\u4e1a</li> <li>\u7b2c\u516d\u6b21\u4f5c\u4e1a</li> <li>\u7b2c\u4e03\u6b21\u4f5c\u4e1a</li> <li>\u7b2c\u516b\u6b21\u4f5c\u4e1a</li> <li>\u7b2c\u4e5d\u6b21\u4f5c\u4e1a</li> <li>\u7b2c\u5341\u6b21\u4f5c\u4e1a</li> <li>\u7b2c\u5341\u4e00\u6b21\u4f5c\u4e1a</li> <li>\u7b2c\u5341\u4e8c\u6b21\u4f5c\u4e1a</li> <li>\u7b2c\u5341\u4e09\u6b21\u4f5c\u4e1a</li> <li>\u7b2c\u5341\u56db\u6b21\u4f5c\u4e1a</li> <li>\u7b2c\u5341\u4e94\u6b21\u4f5c\u4e1a</li> <li>\u52a0\u5206\u4f5c\u4e1a\uff1a\u77f3\u5934\u526a\u5200\u5e03</li> </ul> </li> <li>\u8ba1\u7b97\u673a\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\uff082\uff09\uff08\u6625\u5b63\u5b66\u671f\u90e8\u5206\uff09<ul> <li>\u7b2c\u4e00\u6b21\u4f5c\u4e1a</li> <li>\u7b2c\u4e8c\u6b21\u4f5c\u4e1a</li> <li>\u7b2c\u4e09\u6b21\u4f5c\u4e1a</li> <li>\u7b2c\u56db\u6b21\u4f5c\u4e1a</li> <li>\u7b2c\u4e94\u6b21\u4f5c\u4e1a</li> <li>\u7b2c\u516d\u6b21\u4f5c\u4e1a</li> <li>\u7b2c\u4e03\u6b21\u4f5c\u4e1a</li> <li>\u7b2c\u516b\u6b21\u4f5c\u4e1a</li> <li>\u7b2c\u4e5d\u6b21\u4f5c\u4e1a</li> <li>\u7b2c\u5341\u6b21\u4f5c\u4e1a</li> <li>\u7b2c\u5341\u4e00\u6b21\u4f5c\u4e1a</li> <li>\u7b2c\u5341\u4e8c\u6b21\u4f5c\u4e1a</li> <li>\u52a0\u5206\u4f5c\u4e1a\uff1a\u4e94\u5b50\u68cb</li> </ul> </li> <li>\u8ba1\u7b97\u673a\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\uff082\uff09\uff08\u590f\u5b63\u5b66\u671f\u90e8\u5206\uff09<ul> <li>\u7b2c\u4e00\u6b21\u4f5c\u4e1a</li> <li>\u7b2c\u4e8c\u6b21\u4f5c\u4e1a</li> <li>\u7b2c\u4e09\u6b21\u4f5c\u4e1a</li> <li>\u9644\u52a0\u4f5c\u4e1a\uff1a\u8c03\u67e5\u95ee\u5377</li> <li>\u5927\u4f5c\u4e1a\uff1a\u5b66\u751f\u6210\u7ee9\u7ba1\u7406\u7cfb\u7edf</li> </ul> </li> </ul>"},{"location":"coursework/cpd/1/01/","title":"\u7b2c\u4e00\u6b21\u4f5c\u4e1a","text":""},{"location":"coursework/cpd/1/01/#\u7b2c\u4e00\u6b21\u4f5c\u4e1a","title":"\u7b2c\u4e00\u6b21\u4f5c\u4e1a","text":""},{"location":"coursework/cpd/1/01/#\u5fc5\u505a\u9898","title":"\u5fc5\u505a\u9898","text":"<p>\u539f\u6587\u4ef6</p> <pre><code>#include \u201cstdio.h\u201d;\nmain()\n{  int a,b;\n    c=getchar()\n    scanf(\"%d%d\",&amp;a,&amp;b);\n    putchar(c);\n    printf(\"%d,%d\\n\",a,b)\n    system(\u201cpause\u201d);\n}\n</code></pre>"},{"location":"coursework/cpd/1/01/#visual-studio-premium-2012-debug-win32--microsoft-windows-7-professional-service-pack-1","title":"<code>Visual Studio Premium 2012, Debug Win32 @ Microsoft Windows 7 Professional Service Pack 1</code>","text":"<pre><code>1&gt;------ \u5df2\u542f\u52a8\u5168\u90e8\u91cd\u65b0\u751f\u6210: \u9879\u76ee: XXX, \u914d\u7f6e: Debug Win32 ------\n1&gt;  XXX.c\n1&gt;c:\\users\\xuc\\documents\\visual studio 2012\\projects\\XXX\\XXX\\XXX.c(1): warning C4067: \u9884\u5904\u7406\u5668\u6307\u4ee4\u540e\u6709\u610f\u5916\u6807\u8bb0 - \u5e94\u8f93\u5165\u6362\u884c\u7b26\n1&gt;c:\\users\\xuc\\documents\\visual studio 2012\\projects\\XXX\\XXX\\XXX.c(5): error C2065: \u201cc\u201d: \u672a\u58f0\u660e\u7684\u6807\u8bc6\u7b26\n1&gt;c:\\users\\xuc\\documents\\visual studio 2012\\projects\\XXX\\XXX\\XXX.c(6): error C2146: \u8bed\u6cd5\u9519\u8bef: \u7f3a\u5c11\u201c;\u201d(\u5728\u6807\u8bc6\u7b26\u201cscanf\u201d\u7684\u524d\u9762)\n1&gt;c:\\users\\xuc\\documents\\visual studio 2012\\projects\\XXX\\XXX\\XXX.c(7): error C2065: \u201cc\u201d: \u672a\u58f0\u660e\u7684\u6807\u8bc6\u7b26\n1&gt;c:\\users\\xuc\\documents\\visual studio 2012\\projects\\XXX\\XXX\\XXX.c(9): error C2146: \u8bed\u6cd5\u9519\u8bef: \u7f3a\u5c11\u201c;\u201d(\u5728\u6807\u8bc6\u7b26\u201csystem\u201d\u7684\u524d\u9762)\n1&gt;c:\\users\\xuc\\documents\\visual studio 2012\\projects\\XXX\\XXX\\XXX.c(9): warning C4013: \u201csystem\u201d\u672a\u5b9a\u4e49\uff1b\u5047\u8bbe\u5916\u90e8\u8fd4\u56de int\n1&gt;c:\\users\\xuc\\documents\\visual studio 2012\\projects\\XXX\\XXX\\XXX.c(9): error C2065: \u201c\u201cpause\u201d\u201d: \u672a\u58f0\u660e\u7684\u6807\u8bc6\u7b26\n========== \u5168\u90e8\u91cd\u65b0\u751f\u6210: \u6210\u529f 0 \u4e2a\uff0c\u5931\u8d25 1 \u4e2a\uff0c\u8df3\u8fc7 0 \u4e2a ==========\n</code></pre>"},{"location":"coursework/cpd/1/01/#visual-studio-code-g--microsoft-windows-11-pro","title":"<code>Visual Studio Code, G++ @ Microsoft Windows 11 Pro</code>","text":"<pre><code> *  \u6b63\u5728\u6267\u884c\u4efb\u52a1: C/C++: g++.exe \u751f\u6210\u6d3b\u52a8\u6587\u4ef6 \n\n\u6b63\u5728\u542f\u52a8\u751f\u6210...\nD:\\msys64\\mingw64\\bin\\g++.exe -fdiagnostics-color=always -g D:\\Test\\C\\XXX.c -o D:\\Test\\C\\XXX.exe\nD:\\Test\\C\\XXX.c:1:19: warning: extra tokens at end of #include directive\n    1 | #include \"stdio.h\";\n      |                   ^\nD:\\Test\\C\\XXX.c: In function 'int main()':\nD:\\Test\\C\\XXX.c:5:9: error: 'c' was not declared in this scope\n    5 |         c=getchar()\n      |         ^\nD:\\Test\\C\\XXX.c:8:30: error: expected ';' before 'system'\n    8 |         printf(\"%d,%d\\n\",a,b)\n      |                              ^\n      |                              ;\n    9 |         system(\"pause\");\n      |         ~~~~~~                \n\n\u751f\u6210\u5df2\u5b8c\u6210\uff0c\u4f46\u51fa\u73b0\u9519\u8bef\u3002\n\n *  \u7ec8\u7aef\u8fdb\u7a0b\u5df2\u7ec8\u6b62\uff0c\u9000\u51fa\u4ee3\u7801: -1\u3002 \n *  \u7ec8\u7aef\u5c06\u88ab\u4efb\u52a1\u91cd\u7528\uff0c\u6309\u4efb\u610f\u952e\u5173\u95ed\u3002 \n</code></pre>"},{"location":"coursework/cpd/1/01/#visual-studio-code-gcc--microsoft-windows-11-pro","title":"<code>Visual Studio Code, GCC @ Microsoft Windows 11 Pro</code>","text":"<pre><code> *  \u6b63\u5728\u6267\u884c\u4efb\u52a1: C/C++: gcc.exe \u751f\u6210\u6d3b\u52a8\u6587\u4ef6 \n\n\u6b63\u5728\u542f\u52a8\u751f\u6210...\nD:\\msys64\\mingw64\\bin\\gcc.exe -fdiagnostics-color=always -g D:\\Test\\C\\XXX.c -o D:\\Test\\C\\XXX.exe\nD:\\Test\\C\\XXX.c:1:19: warning: extra tokens at end of #include directive\n    1 | #include \"stdio.h\";\n      |                   ^\nD:\\Test\\C\\XXX.c:2:1: warning: return type defaults to 'int' [-Wimplicit-int]\n    2 | main()\n      | ^~~~\nD:\\Test\\C\\XXX.c: In function 'main':\nD:\\Test\\C\\XXX.c:5:9: error: 'c' undeclared (first use in this function)\n    5 |         c=getchar()\n      |         ^\nD:\\Test\\C\\XXX.c:5:9: note: each undeclared identifier is reported only once for each function it appears in\nD:\\Test\\C\\XXX.c:5:20: error: expected ';' before 'scanf'\n    5 |         c=getchar()\n      |                    ^\n      |                    ;\n    6 |         scanf(\"%d%d\",&amp;a,&amp;b);\n      |         ~~~~~       \nD:\\Test\\C\\XXX.c:8:30: error: expected ';' before 'system'\n    8 |         printf(\"%d,%d\\n\",a,b)\n      |                              ^\n      |                              ;\n    9 |         system(\"pause\");\n      |         ~~~~~~                \n\n\u751f\u6210\u5df2\u5b8c\u6210\uff0c\u4f46\u51fa\u73b0\u9519\u8bef\u3002\n\n *  \u7ec8\u7aef\u8fdb\u7a0b\u542f\u52a8\u5931\u8d25(\u9000\u51fa\u4ee3\u7801: -1)\u3002 \n *  \u7ec8\u7aef\u5c06\u88ab\u4efb\u52a1\u91cd\u7528\uff0c\u6309\u4efb\u610f\u952e\u5173\u95ed\u3002 \n</code></pre>"},{"location":"coursework/cpd/1/01/#code-app-clang--ipados-1561","title":"<code>Code App, Clang @ iPadOS 15.6.1</code>","text":"<pre><code>/private/var/mobile/Containers/Data/Application/BE86F901-B36A-4B02-B580-4471FE94F3C6/Documents/XXX.c:1:19: warning:\n      extra tokens at end of #include directive [-Wextra-tokens]\n#include \"stdio.h\";\n                  ^\n                  //\n/private/var/mobile/Containers/Data/Application/BE86F901-B36A-4B02-B580-4471FE94F3C6/Documents/XXX.c:2:1: warning:\n      type specifier missing, defaults to 'int'[-Wimplicit-int]\nmain()\n^\n/private/var/mobile/Containers/Data/Application/BE86F901-B36A-4B02-B580-4471FE94F3C6/Documents/XXX.c:5:5: error:\n      use of undeclared identifier 'c'\n    c=getchar()\n    ^\n/private/var/mobile/Containers/Data/Application/BE86F901-B36A-4B02-B580-4471FE94F3C6/Documents/XXX.c:7:13: error:\n      use of undeclared identifier 'c'\n    putchar(c);\n            ^\n/private/var/mobile/Containers/Data/Application/BE86F901-B36A-4B02-B580-4471FE94F3C6/Documents/XXX.c:8:29: error:\n      expected ';' after expression\n    printf(\"%d, %d\\n\", a, b)\n                            ^\n                            ;\n/private/var/mobile/Containers/Data/Application/BE86F901-B36A-4B02-B580-4471FE94F3C6/Documents/XXX.c:9:5: warning:\n      implicit declaration of function 'system' is invalid in C99 [-Wimplicit-function-declaration]\n    system(\"pause\");\n    ^\n2 warnings and 3 errors generated.\n</code></pre> <p>\u4fee\u6539\u540e</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\nint main()\n{\n    int a, b, c;\n    c = getchar();\n    scanf(\"%d%d\", &amp;a, &amp;b);\n    putchar(c);\n    printf(\"%d, %d\\n\", a, b);\n    system(\"pause\");\n}\n</code></pre>"},{"location":"coursework/cpd/1/01/#\u9009\u505a\u9898","title":"\u9009\u505a\u9898","text":""},{"location":"coursework/cpd/1/01/#6-1","title":"6-1","text":"<pre><code>#include &lt;stdio.h&gt;\n#include &lt;math.h&gt;\n</code></pre>"},{"location":"coursework/cpd/1/01/#6-2","title":"6-2","text":"<pre><code>20 30XY\n</code></pre>"},{"location":"coursework/cpd/1/01/#6-7","title":"6-7","text":"<pre><code>#include &lt;stdio.h&gt;\nint main()\n{\n    char c;\n    scanf(\"%c\", &amp;c);\n    if( c &gt;= 'a' &amp;&amp; c &lt;= 'z' )\n        c = c + 'A' - 'a';\n    printf(\"%c\\n\", c);\n    return 0;\n}\n</code></pre>"},{"location":"coursework/cpd/1/02/","title":"\u7b2c\u4e8c\u6b21\u4f5c\u4e1a","text":""},{"location":"coursework/cpd/1/02/#\u7b2c\u4e8c\u6b21\u4f5c\u4e1a","title":"\u7b2c\u4e8c\u6b21\u4f5c\u4e1a","text":""},{"location":"coursework/cpd/1/02/#\u5fc5\u505a\u9898","title":"\u5fc5\u505a\u9898","text":""},{"location":"coursework/cpd/1/02/#1","title":"1","text":"<pre><code>#include &lt;stdio.h&gt;\nint main()\n{\n    short a = 10;\n    int b = 100;\n\n    int short_length = sizeof a;\n    int int_length = sizeof(b);\n    int long_length = sizeof(long);\n    int char_length = sizeof(char);\n\n    printf(\"short=%d, int=%d, long=%d, char=%d\\n\", short_length, int_length, long_length, char_length);\n\n    return 0;\n}\n</code></pre> <p>\u7a0b\u5e8f\u7684\u8fd0\u884c\u7ed3\u679c\u4e3a</p> <pre><code>short=2, int=4, long=4, char=1\n</code></pre> <p>\u5b83\u7684\u542b\u4e49\u662f\uff1a\u5728\u6211\u7684\u8ba1\u7b97\u673a\u7f16\u8bd1\u73af\u5883\u4e2d\uff0c\u77ed\u6574\u578b\u53d8\u91cf<code>short</code>\u53602\u5b57\u8282\uff0c\u57fa\u672c\u6574\u578b\u53d8\u91cf<code>int</code>\u53604\u5b57\u8282\uff0c\u957f\u6574\u578b\u53d8\u91cf<code>long</code>\u53604\u5b57\u8282\uff0c\u5b57\u7b26\u578b\u53d8\u91cf<code>char</code>\u53601\u5b57\u8282\u3002</p>"},{"location":"coursework/cpd/1/02/#2","title":"2","text":"<pre><code>#include &lt;stdio.h&gt;\nint main()\n{\n    int m = 306587;\n    long n =28166459852;\n    printf(\"m=%hd, n=%hd\\n\", m, n);\n    printf(\"n=%d\\n\", n);\n\n    return 0;\n}\n</code></pre> <p>\u7a0b\u5e8f\u7684\u8fd0\u884c\u7ed3\u679c\u4e3a</p> <pre><code>m=-21093, n=4556\nn=-1898311220\n</code></pre> <p>\u8fd9\u4e2a\u7ed3\u679c\u662f\u9519\u7684\u3002\u9519\u8bef\u539f\u56e0\u5728\u4e8e<code>%hd</code>\u8868\u793a\u8f93\u51fa\u4e00\u4e2a\u6709\u7b26\u53f7\u7684\u77ed\u6574\u578b\u6570\u636e\uff0c\u5373\u5b83\u8f93\u51fa\u7684\u6570\u636e\u8303\u56f4\u662f\\(-32768\\) ~ \\(32767\\)\uff1b<code>%d</code>\u8868\u793a\u8f93\u51fa\u4e00\u4e2a\u6709\u7b26\u53f7\u7684\u6574\u578b\u6570\u636e\uff0c\u5373\u5b83\u8f93\u51fa\u7684\u6570\u636e\u8303\u56f4\u662f\\(-2147483648\\) ~ \\(2147483647\\)\u3002\u800c\u7a0b\u5e8f\u4e2d<code>m</code>\u3001<code>n</code>\u7684\u503c\u663e\u7136\u8d85\u51fa\u4e86\u8fd9\u4e00\u8303\u56f4\u3002</p>"},{"location":"coursework/cpd/1/02/#3","title":"3","text":"<pre><code>#include &lt;stdio.h&gt;\nint main()\n{\n    char num, pre, post;\n    scanf(\"%c\", &amp;num);\n    pre = num - 1;\n    post = num + 1;\n    printf(\"%d\\n\", num);\n    printf(\"%c %c\", pre, post);\n    return 0;\n}\n</code></pre> <p>\u7a0b\u5e8f\u7684\u8fd0\u884c\u7ed3\u679c\u4e3a</p> <p>\u8f93\u5165<code>0</code></p> <pre><code>48\n/ 1\n</code></pre> <p>\u8f93\u5165<code>9</code></p> <pre><code>57\n8 :\n</code></pre>"},{"location":"coursework/cpd/1/02/#\u9009\u505a\u9898","title":"\u9009\u505a\u9898","text":""},{"location":"coursework/cpd/1/02/#1_1","title":"1","text":"<pre><code>#include &lt;stdio.h&gt;\nint main()\n{\n    int x1, x2;                 //\u5b9a\u4e49\u6574\u578b\u53d8\u91cfx1, x2\n    unsigned y;                 //\u5b9a\u4e49\u65e0\u7b26\u53f7\u6574\u578b\u53d8\u91cfy\n    char c1, c2;                //\u5b9a\u4e49\u5b57\u7b26\u578b\u53d8\u91cfc1, c2\n    x1 = 65535;                 //x1\u8d4b\u503c\u4e3a65535\n    x2 = x1 + 5;                //x2\u8d4b\u503c\u4e3ax1 + 5\n    printf(\"enter y: \");        //\u8f93\u51fa\u201center y: \u201d\n    scanf(\"%u\", &amp;y);            //\u8f93\u5165y\u7684\u503c\n    c1 = 97;                    //c1\u8d4b\u503c\u4e3a97\uff0c\u5373'a'\n    c2 = 'A';                   //c2\u8d4b\u503c\u4e3a'A'\n    c2 = c2 + 32;               //\u5c06c2\u8f6c\u6362\u4e3a'a'\n    printf(\"x1=%d \", x1);       //\u8f93\u51fax1\n    printf(\"x2=%d \", x2);       //\u8f93\u51fax2\n    printf(\"y=%u \", (y + 15));  //\u8f93\u51fay\n    printf(\"c1=%c \", c1);       //\u8f93\u51fac1\n    printf(\"c2=%c\\n\", c2);      //\u8f93\u51fac2\n    return(0);\n}\n</code></pre>"},{"location":"coursework/cpd/1/02/#2_1","title":"2","text":"<p>\u52a0\u5bc6</p> <p></p><pre><code>#include &lt;stdio.h&gt;\nint main()\n{\n    char M[110]={'\\0'}, C[110]={'\\0'};\n    int K;\n    scanf(\"%s\", M);\n    scanf(\"%d\", &amp;K);\n    for(int i = 0; M[i] != '\\0'; i++)\n        C[i] = (M[i] - 65 + K) % 26 + 65;\n    printf(\"%s\\n\", C);\n    return 0;\n}\n</code></pre> \u89e3\u5bc6 <pre><code>#include &lt;stdio.h&gt;\nint main()\n{\n    char M[110]={'\\0'}, C[110]={'\\0'};\n    int K;\n    scanf(\"%s\", C);\n    scanf(\"%d\", &amp;K);\n    for(int i = 0; C[i] != '\\0'; i++)\n        M[i] = (C[i] + 26 - 65 - K) % 26 + 65;\n    printf(\"%s\\n\", M);\n    return 0;\n}\n</code></pre>"},{"location":"coursework/cpd/1/03/","title":"\u7b2c\u4e09\u6b21\u4f5c\u4e1a","text":""},{"location":"coursework/cpd/1/03/#\u7b2c\u4e09\u6b21\u4f5c\u4e1a","title":"\u7b2c\u4e09\u6b21\u4f5c\u4e1a","text":""},{"location":"coursework/cpd/1/03/#\u5fc5\u505a\u9898","title":"\u5fc5\u505a\u9898","text":""},{"location":"coursework/cpd/1/03/#1","title":"1","text":"<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdbool.h&gt;\nint main()\n{\n    printf(\"short = %zd\\n\", sizeof(short));\n    printf(\"int = %zd\\n\", sizeof(int));\n    printf(\"long = %zd\\n\", sizeof(long));\n    printf(\"unsigned short = %zd\\n\", sizeof(unsigned short));\n    printf(\"unsigned long = %zd\\n\", sizeof(unsigned long));\n    printf(\"char = %zd\\n\", sizeof(char));\n    printf(\"bool = %zd\\n\", sizeof(bool));\n    printf(\"double = %zd\\n\", sizeof(double));\n    printf(\"float = %zd\\n\", sizeof(float));\n    float a = 1.111111111111111111111111111111111111111111, b = 1.0, c = 0;\n    int i = 0;\n    do\n    {\n        b = 10 * b + 1;\n        a = 10 * a;\n        i++;\n        c = a - b;\n    }\n    while (c &gt; 0);\n    printf(\"%d\", i);\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c\u4e3a</p> <pre><code>short = 2\nint = 4\nlong = 4\nunsigned short = 2\nunsigned long = 4\nchar = 1\nbool = 1\ndouble = 8\nfloat = 4\n7\n</code></pre> <p></p>"},{"location":"coursework/cpd/1/03/#2","title":"2","text":"<pre><code>#include &lt;stdio.h&gt;\nint main()\n{\n    char a, b;\n    int c, d;\n    scanf(\"%d %d\", &amp;c, &amp;d);\n    a = c; b = d;\n    printf(\"%c%c%c%c%c\\n\",b,a,a,a,b);\n    printf(\"%c%c%c%c%c\\n\",a,b,a,b,a);\n    printf(\"%c%c%c%c%c\\n\",a,a,b,a,a);\n    printf(\"%c%c%c%c%c\\n\",a,b,a,b,a);\n    printf(\"%c%c%c%c%c\\n\",b,a,a,a,b);\n    return 0;\n}\n</code></pre> <p>\u8f93\u5165</p> <pre><code>65 66\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c\u4e3a</p> <pre><code>BAAAB\nABABA\nAABAA\nABABA\nBAAAB\n</code></pre> <p></p>"},{"location":"coursework/cpd/1/03/#3","title":"3","text":"<pre><code>#include &lt;stdio.h&gt;\n#define MAXMONTH 6\nint main()\n{\n    int month = 1, bigSheep = 0, smallSheep = 2,\n        money = ((bigSheep + smallSheep) * 10), temp = 0;\n    printf(\"\u6708\u4efd\\t\u7f8a\u6570\u91cf\\t\u94b1\\n\");\n    printf(\"%d\\t%d\\t%d\\n\", month, bigSheep + smallSheep, money);\n    for (month = 2; month &lt;= MAXMONTH; month++)\n    {\n        temp = smallSheep;\n        smallSheep = bigSheep;\n        bigSheep += temp;\n        money = ((bigSheep + smallSheep) * 10);\n        printf(\"%d\\t%d\\t%d\\n\", month, bigSheep + smallSheep, money);\n    }\n    return 0;\n}\n</code></pre> <p>\u8f93\u51fa\u7ed3\u679c\u4e3a</p> <pre><code>\u6708\u4efd    \u7f8a\u6570\u91cf  \u94b1\n1       2       20\n2       2       20\n3       4       40\n4       6       60\n5       10      100\n6       16      160\n</code></pre> <p></p>"},{"location":"coursework/cpd/1/03/#\u9009\u505a\u9898","title":"\u9009\u505a\u9898","text":"<p>\u2460\u901a\u8fc7<code>long long</code>\u6765\u5b9e\u73b0</p> <pre><code>#include &lt;stdio.h&gt;\nint main()\n{\n    long long phone;\n    scanf(\"%lld\", &amp;phone);\n    printf(\"%lld\", phone);\n    return 0;\n}\n</code></pre> <p></p> <p>\u2461\u901a\u8fc7\u5b57\u7b26\u4e32\u6765\u5b9e\u73b0</p> <pre><code>#include &lt;stdio.h&gt;\nint main()\n{\n    char phone[12];\n    scanf(\"%s\", phone);\n    printf(\"%s\", phone);\n    return 0;\n}\n</code></pre> <p></p>"},{"location":"coursework/cpd/1/04/","title":"\u7b2c\u56db\u6b21\u4f5c\u4e1a","text":""},{"location":"coursework/cpd/1/04/#\u7b2c\u56db\u6b21\u4f5c\u4e1a","title":"\u7b2c\u56db\u6b21\u4f5c\u4e1a","text":""},{"location":"coursework/cpd/1/04/#1","title":"1","text":""},{"location":"coursework/cpd/1/04/#1_1","title":"(1)","text":"<pre><code>#include &lt;stdio.h&gt;\n#include &lt;math.h&gt;\nconst double PI = 3.141592654;\nint main()\n{\n    printf(\n        \"                x\u00b2\\n\"\n        \"             - ---\\n\"\n        \"         1      2\\n\"\n        \"f(x) = ----- e\\n\"\n        \"       \u221a(2\u03c0)\\n\"\n    );\n    double x, y;\n    printf(\"x = \");\n    scanf(\"%lf\", &amp;x);\n    y = (exp(-(pow(x, 2)) / 2))/(sqrt(2 * PI));\n    printf(\"f(x) = %lf\", y);\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c\u4e3a</p> <pre><code>                x\u00b2\n             - ---\n         1      2\nf(x) = ----- e\n       \u221a(2\u03c0)\nx = 1\nf(x) = 0.241971\n</code></pre> <p></p>"},{"location":"coursework/cpd/1/04/#2","title":"(2)","text":"<pre><code>#include &lt;stdio.h&gt;\n#include &lt;math.h&gt;\nint main()\n{\n    printf(\n        \"        1\\n\"\n        \"f(x) = ---sin(x\u00b2+y\u00b2)cos(x+y)\\n\"\n        \"        3\\n\"\n        );\n    double x, y, z;\n    printf(\"x = \");\n    scanf(\"%lf\", &amp;x);\n    printf(\"y = \");\n    scanf(\"%lf\", &amp;y);\n    z = (sin(pow(x, 2) + pow(y, 2)) * cos(x + y)) / 3;\n    printf(\"f(x) = %lf\", z);\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c\u4e3a</p> <pre><code>        1\nf(x) = ---sin(x\u00b2+y\u00b2)cos(x+y)\n        3\nx = 1\ny = 1\nf(x) = -0.126134\n</code></pre> <p></p>"},{"location":"coursework/cpd/1/04/#2_1","title":"2","text":"<pre><code>0\n0\n0\n1\n1\n1\n1\n</code></pre>"},{"location":"coursework/cpd/1/04/#3","title":"3","text":""},{"location":"coursework/cpd/1/04/#1_2","title":"(1)","text":"<pre><code>a + b == 1 &amp;&amp; b + c == 1 &amp;&amp; b + c == 1\n</code></pre>"},{"location":"coursework/cpd/1/04/#2_2","title":"(2)","text":"<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdbool.h&gt;\nint main()\n{\n    int i;\n    bool a[3] = {0};\n    for(i = 0; i &lt;= 2; i++)\n    {\n        a[i] = 1;\n        if(a[0] + a[1] == 1 &amp;&amp; a[1] + a[2] == 1 &amp;&amp; a[1] + a[2] == 1)\n        {\n            printf(\"\u8bf4\u8c0e\u8005\u662f\");\n            switch (i)\n            {\n            case 0:\n                printf(\"\u7532\u3002\\n\");\n                break;\n            case 1:\n                printf(\"\u4e59\u3002\\n\");\n                break;\n            case 2:\n                printf(\"\u4e19\u3002\\n\");\n                break;\n            default:\n                break;\n            }\n            break;\n        }\n        a[i] = 0;\n    }\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c\u4e3a</p> <pre><code>\u8bf4\u8c0e\u8005\u662f\u4e59\u3002\n</code></pre> <p></p>"},{"location":"coursework/cpd/1/04/#\u9009\u505a\u9898","title":"\u9009\u505a\u9898","text":"<pre><code>#include &lt;stdio.h&gt;\nint main()\n{\n    int chick, cock, hen, flag = 0;\n    printf(\"\u6bcd\u9e21\\t\u516c\u9e21\\t\u5c0f\u9e21\\n\");\n    for(hen = 66; hen &gt; 0; hen--)\n    {\n        for(cock = 100; cock &gt; 0; cock--)\n            for(chick = 200; chick &gt; 0; chick--)\n                if(hen + cock + chick == 100 &amp;&amp; 15*hen + 10*cock + 5*chick == 1000)\n                {\n                    printf(\"%d\\t%d\\t%d\\n\", hen, cock, chick);\n                    flag = 1;\n                }\n        if(flag)\n            break;\n    }\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c\u4e3a </p><pre><code>\u6bcd\u9e21    \u516c\u9e21    \u5c0f\u9e21\n49      2       49\n</code></pre> <p></p>"},{"location":"coursework/cpd/1/05/","title":"\u7b2c\u4e94\u6b21\u4f5c\u4e1a","text":""},{"location":"coursework/cpd/1/05/#\u7b2c\u4e94\u6b21\u4f5c\u4e1a","title":"\u7b2c\u4e94\u6b21\u4f5c\u4e1a","text":""},{"location":"coursework/cpd/1/05/#\u5b9e\u9a8c\u76ee\u7684","title":"\u5b9e\u9a8c\u76ee\u7684","text":"<p>\u5b8c\u6210\u672c\u6b21\u4f5c\u4e1a\uff0c\u5de9\u56fa\u4e0a\u8bfe\u6240\u5b66\u77e5\u8bc6</p>"},{"location":"coursework/cpd/1/05/#\u5b9e\u9a8c\u73af\u5883","title":"\u5b9e\u9a8c\u73af\u5883","text":"<p>\u8bbe\u5907\uff1aOMEN by HP Laptop 16-b1xxx \u64cd\u4f5c\u7cfb\u7edf: Windows 11 \u4e13\u4e1a\u7248 22H2 \u7f16\u8f91\u5668: Visual Studio Code 1.72.1 \u7f16\u8bd1\u5668: gcc 12.1.0 \u7ec8\u7aef\uff1aWindows Powershell</p>"},{"location":"coursework/cpd/1/05/#\u5b9e\u9a8c\u5185\u5bb9","title":"\u5b9e\u9a8c\u5185\u5bb9","text":""},{"location":"coursework/cpd/1/05/#\u5fc5\u505a\u7b2c1\u9898","title":"\u5fc5\u505a\u7b2c1\u9898","text":"<p>\u6d41\u7a0b\u56fe </p> <p>\u7a0b\u5e8f\u4ee3\u7801 </p><pre><code>#include &lt;stdio.h&gt;\nvoid sort(int ar[], int size)\n{\n    int i, j;\n    int temp;\n    for(i = 0; i &lt; size - 1; i++)\n    {\n        for(j = 0; j &lt; size - 1; j++)\n        {\n            if(ar[j] &gt; ar[j+1])\n            {\n                temp = ar[j];\n                ar[j] = ar[j+1];\n                ar[j+1] = temp;\n            }\n        }\n    }\n}\nint main()\n{\n    int a[3] = {0};\n    scanf(\"%d %d %d\", a, a+1, a+2);\n    sort(a, 3);\n    if(a[0] + a[1] &lt;= a[2])\n    {\n        printf(\"Not triangle\\n\");\n    }\n    else if(a[0] == a[1] &amp;&amp; a[1] == a[2])\n    {\n        printf(\"Equilateral triangle\\n\");\n    }\n    else if(a[0] == a[1] || a[1] == a[2])\n    {\n        printf(\"Isosceles triangle\\n\");\n    }\n    else\n    {\n        printf(\"Triangle\\n\");\n    }\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c </p>"},{"location":"coursework/cpd/1/05/#\u5fc5\u505a\u7b2c2\u9898","title":"\u5fc5\u505a\u7b2c2\u9898","text":"<p>\u6d41\u7a0b\u56fe </p> <p>\u7a0b\u5e8f\u4ee3\u7801 </p><pre><code>#include &lt;stdio.h&gt;\nint main()\n{\n    double a, b, c, d;\n    double o1, o2;\n    char symbol;\n    scanf(\"%c\", &amp;symbol);\n    scanf(\"%lf %lf %lf %lf\", &amp;a, &amp;b, &amp;c, &amp;d);\n    if((b == 0 || d == 0) || (symbol == '/' &amp;&amp; c == 0))\n        printf(\"input error\\n\");\n    else\n    {\n        switch(symbol)\n        {\n            case '+':\n                o1 = (a/b)+(c/d);\n                o2 = a+b+c+d;\n                printf(\"%lf %lf\", o1, o2);\n                break;\n            case '-':\n                o1 = (a/b)-(c/d);\n                o2 = a-b-c-d;\n                printf(\"%lf %lf\", o1, o2);\n                break;\n            case '*':\n                o1 = (a/b)*(c/d);\n                o2 = a*b*c*d;\n                printf(\"%lf %lf\", o1, o2);\n                break;\n            case '/':\n                o1 = (a/b)/(c/d);\n                o2 = a/b/c/d;\n                printf(\"%lf %lf\", o1, o2);\n                break;\n            default:\n                printf(\"input error\\n\");\n                break;\n        }\n    }\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c </p>"},{"location":"coursework/cpd/1/05/#\u5fc5\u505a\u7b2c3\u9898","title":"\u5fc5\u505a\u7b2c3\u9898","text":"<p>\u7a0b\u5e8f\u4ee3\u7801 </p><pre><code>#include &lt;stdio.h&gt;\nint main()\n{\n    int a = 0, i = 0, cnt = 0;\n    int n[6] = {-1};\n    scanf(\"%d\", &amp;a);\n    do\n    {\n        n[i] = a % 10;\n        a /= 10;\n        i++;\n        cnt++;\n    } while (a &gt; 0);\n    printf(\"%d\\n\", cnt);\n    for(i = 0; i &lt; cnt; i++)\n        printf(\"%d\", n[i]);\n    printf(\"\\n\");\n    for(i = cnt - 1; i &gt;= 0; i--)\n        printf(\"%d\", n[i]);\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c  </p>"},{"location":"coursework/cpd/1/05/#\u9009\u505a\u7b2c1\u9898","title":"\u9009\u505a\u7b2c1\u9898","text":"<p>\u7a0b\u5e8f\u4ee3\u7801 </p><pre><code>#include &lt;stdio.h&gt;\nint main()\n{\n    int h, m;\n    int h1, h2, m1, m2;\n    scanf(\"%d %d\", &amp;h, &amp;m);\n    h1 = h / 10; h2 = h % 10;\n    m1 = m / 10; m2 = m % 10;\n    hour:\n    switch(h1)\n    {\n        case 0:\n            break;\n        case 1:\n            switch(h2)\n            {\n                case 0:\n                    printf(\"ten \");\n                    goto minute;\n                    break;\n                case 1:\n                    printf(\"eleven \");\n                    goto minute;\n                    break;\n                case 2:\n                    printf(\"twelve \");\n                    goto minute;\n                    break;\n                case 3:\n                    printf(\"thirteen \");\n                    goto minute;\n                    break;\n                case 4:\n                    printf(\"fourteen \");\n                    goto minute;\n                    break;\n                case 5:\n                    printf(\"fifteen \");\n                    goto minute;\n                    break;\n                case 6:\n                    printf(\"sixteen \");\n                    goto minute;\n                    break;\n                case 7:\n                    printf(\"seventeen \");\n                    goto minute;\n                    break;\n                case 8:\n                    printf(\"eighteen \");\n                    goto minute;\n                    break;\n                case 9:\n                    printf(\"nineteen \");\n                    goto minute;\n                    break;\n                default:\n                    break;\n            }\n            break;\n        case 2:\n            printf(\"twenty \");\n            break;\n        default:\n            break;\n    }\n    switch(h2)\n    {\n        case 0:\n            if(h1 == 0)\n                printf(\"zero \");\n            break;\n        case 1:\n            printf(\"one \");\n            break;\n        case 2:\n            printf(\"two \");\n            break;\n        case 3:\n            printf(\"three \");\n            break;\n        case 4:\n            printf(\"four \");\n            break;\n        case 5:\n            printf(\"five \");\n            break;\n        case 6:\n            printf(\"six \");\n            break;\n        case 7:\n            printf(\"seven \");\n            break;\n        case 8:\n            printf(\"eight \");\n            break;\n        case 9:\n            printf(\"nine \");\n            break;\n        default:\n            break;\n    }\n    minute:\n    switch(m1)\n    {\n        case 0:\n            break;\n        case 1:\n            switch(m2)\n            {\n                case 0:\n                    printf(\"ten\");\n                    goto end;\n                    break;\n                case 1:\n                    printf(\"eleven\");\n                    goto end;\n                    break;\n                case 2:\n                    printf(\"twelve\");\n                    goto end;\n                    break;\n                case 3:\n                    printf(\"thirteen\");\n                    goto end;\n                    break;\n                case 4:\n                    printf(\"fourteen\");\n                    goto end;\n                    break;\n                case 5:\n                    printf(\"fifteen\");\n                    goto end;\n                    break;\n                case 6:\n                    printf(\"sixteen\");\n                    goto end;\n                    break;\n                case 7:\n                    printf(\"seventeen\");\n                    goto end;\n                    break;\n                case 8:\n                    printf(\"eighteen\");\n                    goto end;\n                    break;\n                case 9:\n                    printf(\"nineteen\");\n                    goto end;\n                    break;\n                default:\n                    break;\n            }\n            break;\n        case 2:\n            printf(\"twenty \");\n            break;\n        case 3:\n            printf(\"thirty \");\n            break;\n        case 4:\n            printf(\"forty \");\n            break;\n        case 5:\n            printf(\"fifty \");\n            break;\n        default:\n            break;\n    }\n    switch(m2)\n    {\n        case 0:\n            if(m1 == 0)\n                printf(\"o'clock\");\n            break;\n        case 1:\n            printf(\"one\");\n            break;\n        case 2:\n            printf(\"two\");\n            break;\n        case 3:\n            printf(\"three\");\n            break;\n        case 4:\n            printf(\"four\");\n            break;\n        case 5:\n            printf(\"five\");\n            break;\n        case 6:\n            printf(\"six\");\n            break;\n        case 7:\n            printf(\"seven\");\n            break;\n        case 8:\n            printf(\"eight\");\n            break;\n        case 9:\n            printf(\"nine\");\n            break;\n        default:\n            break;\n    }\n    end:\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c </p>"},{"location":"coursework/cpd/1/05/#\u9009\u505a\u7b2c2\u9898","title":"\u9009\u505a\u7b2c2\u9898","text":"<p>\u7a0b\u5e8f\u4ee3\u7801 </p><pre><code>#include &lt;stdio.h&gt;\n#include &lt;math.h&gt;\nint main()\n{\n    double x, y;\n    scanf(\"%lf %lf\", &amp;x, &amp;y);\n    if(pow(x-2, 2) + pow(y-2, 2) &lt;= 1)\n        printf(\"10m\\n\");\n    else if(pow(x+2, 2) + pow(y-2, 2) &lt;= 1)\n        printf(\"9m\\n\");\n    else if(pow(x+2, 2) + pow(y+2, 2) &lt;= 1)\n        printf(\"8m\\n\");\n    else if(pow(x-2, 2) + pow(y+2, 2) &lt;= 1)\n        printf(\"7m\\n\");\n    else printf(\"0m\\n\");\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c </p>"},{"location":"coursework/cpd/1/05/#\u9009\u505a\u7b2c3\u9898","title":"\u9009\u505a\u7b2c3\u9898","text":"<p>\u7a0b\u5e8f\u4ee3\u7801 </p><pre><code>#include &lt;stdio.h&gt;\nint main()\n{\n    int n;\n    int cnt5 = 0, cnt6 = 0, cnt7 = 0;\n    scanf(\"%d\", &amp;n);\n    do\n    {\n        switch(n % 10)\n        {\n        case 5:\n            cnt5++;\n            break;\n        case 6:\n            cnt6++;\n            break;\n        case 7:\n            cnt7++;\n            break;\n        default:\n            break;\n        }\n        n /= 10;\n    } while (n != 0);\n    printf(\"%d %d %d\", cnt5, cnt6, cnt7);\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c </p>"},{"location":"coursework/cpd/1/05/#\u5b9e\u9a8c\u4f53\u4f1a","title":"\u5b9e\u9a8c\u4f53\u4f1a","text":"<p>\u987a\u5e8f\u7ed3\u6784\u548c\u5206\u652f\u7ed3\u6784\u9700\u8981\u8ba4\u771f\u5b66\u4e60\uff0c\u4ed4\u7ec6\u5b8c\u6210\u4f5c\u4e1a\u3002</p>"},{"location":"coursework/cpd/1/06/","title":"\u7b2c\u516d\u6b21\u4f5c\u4e1a","text":""},{"location":"coursework/cpd/1/06/#\u7b2c\u516d\u6b21\u4f5c\u4e1a","title":"\u7b2c\u516d\u6b21\u4f5c\u4e1a","text":""},{"location":"coursework/cpd/1/06/#\u5b9e\u9a8c\u76ee\u7684","title":"\u5b9e\u9a8c\u76ee\u7684","text":"<p>\u5b8c\u6210\u672c\u6b21\u4f5c\u4e1a\uff0c\u5de9\u56fa\u4e0a\u8bfe\u6240\u5b66\u77e5\u8bc6</p>"},{"location":"coursework/cpd/1/06/#\u5b9e\u9a8c\u73af\u5883","title":"\u5b9e\u9a8c\u73af\u5883","text":"<p>\u8bbe\u5907\uff1aOMEN by HP Laptop 16-b1xxx \u64cd\u4f5c\u7cfb\u7edf: Windows 11 \u4e13\u4e1a\u7248 22H2 \u7f16\u8f91\u5668: Visual Studio Code 1.72.1 \u7f16\u8bd1\u5668: gcc 12.1.0 \u7ec8\u7aef\uff1aWindows Powershell</p>"},{"location":"coursework/cpd/1/06/#\u5b9e\u9a8c\u5185\u5bb9","title":"\u5b9e\u9a8c\u5185\u5bb9","text":""},{"location":"coursework/cpd/1/06/#\u5fc5\u505a\u7b2c1\u9898","title":"\u5fc5\u505a\u7b2c1\u9898","text":"<p>\u6d41\u7a0b\u56fe </p> <p>\u7a0b\u5e8f\u4ee3\u7801 </p><pre><code>#include &lt;stdio.h&gt;\n#include &lt;math.h&gt;\nint prime(int a)\n{\n    int ret = 1;\n    for(int i = 2; i &lt;= (int)sqrt(a); i++)\n        if(a % i == 0)\n            ret = 0;\n    return ret;\n}\nint main()\n{\n    for(int i = 10; i &lt;= 198; i++)\n        if(prime(i) &amp;&amp; prime(i+2))\n            printf(\"%d %d\\n\", i, i+2);\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c </p>"},{"location":"coursework/cpd/1/06/#\u5fc5\u505a\u7b2c2\u9898","title":"\u5fc5\u505a\u7b2c2\u9898","text":"<p>\u6d41\u7a0b\u56fe </p> <p>\u7a0b\u5e8f\u4ee3\u7801 \u7b2c\u4e00\u79cd </p><pre><code>#include &lt;stdio.h&gt;\nint main()\n{\n    int n;\n    scanf(\"%d\", &amp;n);\n    if(n &gt; 2 &amp;&amp; n % 2)\n    {\n        for(int i = 1; i &lt;= (n - 1) / 2; i++)\n            printf(\" \");\n        printf(\"^\\n\");\n        for(int i = 1; i &lt;= (n - 3) / 2; i++)\n        {\n            for(int j = 1; j &lt;= (n - 1) / 2 - i; j++)\n            {\n                printf(\" \");\n            }\n            printf(\"/\");\n            for(int j = 1; j &lt;= 2 * i - 1; j++)\n            {\n                printf(\" \");\n            }\n            printf(\"\\\\\\n\");\n        }\n        printf(\"&lt;\");\n        for(int i = 1; i &lt;= n - 2; i++)\n            printf(\" \");\n        printf(\"&gt;\\n\");\n        for(int i = 1; i &lt;= (n - 3) / 2; i++)\n        {\n            for(int j = 1; j &lt;= i; j++)\n            {\n                printf(\" \");\n            }\n            printf(\"\\\\\");\n            for(int j = 1; j &lt;= n - 2 * i - 2; j++)\n            {\n                printf(\" \");\n            }\n            printf(\"/\\n\");\n        }\n        for(int i = 1; i &lt;= (n - 1) / 2; i++)\n            printf(\" \");\n        printf(\"v\\n\");\n    }\n    else printf(\"Input Error\\n\");\n    return 0;\n}\n</code></pre> \u7b2c\u4e8c\u79cd <pre><code>#include &lt;stdio.h&gt;\nint main()\n{\n    int n;\n    char c[110][110];\n    scanf(\"%d\", &amp;n);\n    for(int i = 1; i &lt;= n; i++)\n        for(int j = 1; j &lt;= n; j++)\n            c[i][j]=' ';\n    if(n &gt; 2 &amp;&amp; n % 2)\n    {\n        c[1][(n + 1) / 2] = '^';\n        c[(n + 1) / 2][1] = '&lt;';\n        c[(n + 1) / 2][n] = '&gt;';\n        c[n][(n + 1) / 2] = 'v';\n        for(int i = 2; i &lt;= (n - 1) / 2; i++)\n        {\n            c[i][(n + 3) / 2 - i] = '/';\n            c[i][(n - 1) / 2 + i] = '\\\\';\n            c[n - i + 1][(n + 3) / 2 - i] = '\\\\';\n            c[n - i + 1][(n - 1) / 2 + i] = '/';\n        }\n        for(int i = 1; i &lt;= n; i++)\n        {\n            for(int j = 1; j &lt;= n; j++)\n                printf(\"%c\", c[i][j]);\n            printf(\"\\n\");\n        }\n    }\n    else printf(\"Input Error\\n\");\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c  </p>"},{"location":"coursework/cpd/1/06/#\u5fc5\u505a\u7b2c3\u9898","title":"\u5fc5\u505a\u7b2c3\u9898","text":"<p>\u6d41\u7a0b\u56fe </p> <p>\u7a0b\u5e8f\u4ee3\u7801 </p><pre><code>#include &lt;stdio.h&gt;\n#include &lt;math.h&gt;\nint prime(int a)\n{\n    int ret = 1;\n    for(int i = 2; i &lt;= (int)sqrt(a); i++)\n        if(a % i == 0)\n            ret = 0;\n    return ret;\n}\nint main()\n{\n    int n, p1, p2;\n    scanf(\"%d\", &amp;n);\n    if(n &gt;= 4 &amp;&amp; n % 2 == 0)\n    {\n        for(p1 = 2; p1 &lt;= n / 2; p1++)\n        {\n            p2 = n - p1;\n            if(prime(p1) &amp;&amp; prime(p2))\n            {\n                printf(\"%d = %d + %d\\n\", n, p1, p2);\n                goto end;\n            }\n        }\n    }\n    else printf(\"input error\\n\");\n    end:\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c </p>"},{"location":"coursework/cpd/1/06/#\u9009\u505a\u7b2c1\u9898","title":"\u9009\u505a\u7b2c1\u9898","text":"<p>\u6d41\u7a0b\u56fe </p> <p>\u7a0b\u5e8f\u4ee3\u7801 </p><pre><code>#include &lt;stdio.h&gt;\nint main()\n{\n    int a[6] = {0};\n    int  i = 4, sum = 0;\n    a[5] = 11;\n    sum = a[5];\n    for(i = 4; i &gt;= 1; i--)\n    {\n        a[i] = (a[i] + sum + 1) / i;\n        sum += a[i];\n    }\n    printf(\"\u539f\u6765\u5171\u6709%d\u4e2a\u82f9\u679c\u3002\\n\", sum);\n    printf(\"A\u5f97\u5230%d\u4e2a\u82f9\u679c\u3002\\n\", a[1]);\n    printf(\"B\u5f97\u5230%d\u4e2a\u82f9\u679c\u3002\\n\", a[2]);\n    printf(\"C\u5f97\u5230%d\u4e2a\u82f9\u679c\u3002\\n\", a[3]);\n    printf(\"D\u5f97\u5230%d\u4e2a\u82f9\u679c\u3002\\n\", a[4]);\n    printf(\"E\u5f97\u5230%d\u4e2a\u82f9\u679c\u3002\\n\", a[5]);\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c </p>"},{"location":"coursework/cpd/1/06/#\u9009\u505a\u7b2c2\u9898","title":"\u9009\u505a\u7b2c2\u9898","text":"<p>\u6d41\u7a0b\u56fe </p> <p>\u7a0b\u5e8f\u4ee3\u7801 </p><pre><code>#include &lt;stdio.h&gt;\nint main()\n{\n    int n = 0, k = 1, s = 0;\n    scanf(\"%d\", &amp;n);\n    for(int i = 1; i &lt;= n; i++)\n    {\n        k = 1;\n        for(int j = 1; j &lt;= i; j++)\n        {\n            k *= j;\n        }\n        s += k;\n    }\n    printf(\"%d\", s);\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c </p>"},{"location":"coursework/cpd/1/06/#\u9009\u505a\u7b2c3\u9898","title":"\u9009\u505a\u7b2c3\u9898","text":"<p>\u6d41\u7a0b\u56fe </p> <p>\u7a0b\u5e8f\u4ee3\u7801 </p><pre><code>#include &lt;stdio.h&gt;\n#include &lt;math.h&gt;\nint main()\n{\n    int i = 1, j = 1, cnt = 0, k = 0;\n    int a[5] = {0};\n    int b[5] = {0};\n    printf(\"\u8fd9\u4e9b\u6570\u662f\uff1a\\n\");\n    for(i = 1; i &lt;= 1000; i++)\n    {\n        if(pow((int)sqrt(i), 2) == i)\n        {\n            cnt = 0; k = 0;\n            for(j = 1; j &lt; (int)sqrt(i); j++)\n            {\n                if(i % j == 0)\n                {\n                    cnt += 2;\n                    a[k] = j;\n                    b[k] = i / j;\n                    k++;\n                    if(k &gt; 4) break;\n                }\n            }\n            if(cnt == 4)\n                printf(\"%5d:%5d%5d%5d%5d%5d\\n\", i, a[0], a[1], (int)sqrt(i), b[1], b[0]);\n        }\n    }\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c </p>"},{"location":"coursework/cpd/1/06/#\u9009\u505a\u7b2c4\u9898","title":"\u9009\u505a\u7b2c4\u9898","text":"<p>\u6d41\u7a0b\u56fe </p> <p>\u7a0b\u5e8f\u4ee3\u7801 </p><pre><code>#include &lt;stdio.h&gt;\nint main()\n{\n    int a[6] = {0};\n    int cnt = 0;\n    for(a[0] = 0; a[0] &lt;= 1; a[0]++)\n        for(a[1] = 0; a[1] &lt;= 1; a[1]++)\n            for(a[2] = 0; a[2] &lt;= 1; a[2]++)\n                for(a[3] = 0; a[3] &lt;= 1; a[3]++)\n                    for(a[4] = 0; a[4] &lt;= 1; a[4]++)\n                        for(a[5] = 0; a[5] &lt;= 1; a[5]++)\n                            if(a[0] + a[1] + a[2] + a[3] + a[4] + a[5] == 3)\n                                {\n                                    for(int i = 0; i &lt;= 5; i++)\n                                    {\n                                        printf(\"%c--\", i + 65);\n                                        switch (a[i])\n                                        {\n                                        case 0:\n                                            printf(\"\u767d\");\n                                            break;\n                                        case 1:\n                                            printf(\"\u9ed1\");\n                                            break;\n                                        default:\n                                            break;\n                                        }\n                                        if(i != 5) printf(\"  \");\n                                        else printf(\"\\n\");\n                                    }\n                                    cnt++;\n                                }\n    printf(\"\u5171%d\u79cd\u3002\\n\", cnt);\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c </p>"},{"location":"coursework/cpd/1/06/#\u9009\u505a\u7b2c5\u9898","title":"\u9009\u505a\u7b2c5\u9898","text":"<p>\u6d41\u7a0b\u56fe </p> <p>\u7a0b\u5e8f\u4ee3\u7801 </p><pre><code>#include &lt;stdio.h&gt;\n#include &lt;math.h&gt;\nint main()\n{\n    int n = 0, t = 0;\n    int i, a, b, c, d, e;\n    int num[5] = {0};\n    int min1 = 0, min2 = 0;\n    scanf(\"%d\", &amp;n);\n    if(n &gt;= 10000 &amp;&amp; n &lt;= 99999)\n    {\n        for(i = 0; i &lt;= 4; i++)\n        {\n            num[i] = n % 10;\n            n /= 10;\n        }\n        for(a = 0; a &lt;= 4; a++)\n            for(b = 0; b &lt;= 4; b++)\n                if(a != b)\n                    for(c = 0; c &lt;= 4; c++)\n                        if(c != a &amp;&amp; c != b)\n                            for(d = 0; d &lt;= 4; d++)\n                                if(d != a &amp;&amp; d != b &amp;&amp; d != c)\n                                    for(e = 0; e &lt;= 4; e++)\n                                        if(e != a &amp;&amp; e != b &amp;&amp; e != c &amp;&amp; e != d)\n                                        {\n                                            t = num[0] * pow(10, a) + num[1] * pow(10, b)\n                                                + num[2] * pow(10, c) + num[3] * pow(10, d)\n                                                + num[4] * pow(10, e);\n                                            if(fabs(t - 40000) &lt; fabs(min1 - 40000)) min1 = t;\n                                            if(fabs(t - 60000) &lt; fabs(min2 - 60000)) min2 = t;\n                                        }\n        printf(\"%d  %d\\n\", min1, min2);\n    }\n    else\n    {\n        printf(\"\u9519\u8bef\u63d0\u793a\u3002\\n\");\n    }\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c </p>"},{"location":"coursework/cpd/1/06/#\u5b9e\u9a8c\u4f53\u4f1a","title":"\u5b9e\u9a8c\u4f53\u4f1a","text":"<p>\u987a\u5e8f\u7ed3\u6784\u548c\u5206\u652f\u7ed3\u6784\u9700\u8981\u8ba4\u771f\u5b66\u4e60\uff0c\u4ed4\u7ec6\u5b8c\u6210\u4f5c\u4e1a\u3002</p>"},{"location":"coursework/cpd/1/07/","title":"\u7b2c\u4e03\u6b21\u4f5c\u4e1a","text":""},{"location":"coursework/cpd/1/07/#\u7b2c\u4e03\u6b21\u4f5c\u4e1a","title":"\u7b2c\u4e03\u6b21\u4f5c\u4e1a","text":""},{"location":"coursework/cpd/1/07/#\u5b9e\u9a8c\u76ee\u7684","title":"\u5b9e\u9a8c\u76ee\u7684","text":"<p>\u5b8c\u6210\u672c\u6b21\u4f5c\u4e1a\uff0c\u5de9\u56fa\u4e0a\u8bfe\u6240\u5b66\u77e5\u8bc6</p>"},{"location":"coursework/cpd/1/07/#\u5b9e\u9a8c\u73af\u5883","title":"\u5b9e\u9a8c\u73af\u5883","text":"<p>\u8bbe\u5907\uff1aOMEN by HP Laptop 16-b1xxx \u64cd\u4f5c\u7cfb\u7edf: Windows 11 \u4e13\u4e1a\u7248 22H2 \u7f16\u8f91\u5668: Visual Studio Code 1.72.1 \u7f16\u8bd1\u5668: gcc 12.1.0 \u7ec8\u7aef\uff1aWindows Powershell</p>"},{"location":"coursework/cpd/1/07/#\u5b9e\u9a8c\u5185\u5bb9","title":"\u5b9e\u9a8c\u5185\u5bb9","text":""},{"location":"coursework/cpd/1/07/#\u5fc5\u505a\u7b2c1\u9898","title":"\u5fc5\u505a\u7b2c1\u9898","text":"<p>\u6d41\u7a0b\u56fe </p> <p>\u7a0b\u5e8f\u4ee3\u7801 </p><pre><code>#include &lt;stdio.h&gt;\n#include &lt;math.h&gt;\ndouble f(double x)\n{\n    double ret;\n    ret = pow(exp(1.0), -x*x);\n    return ret;\n}\ndouble S(double a, double b, int m)\n{\n    double h = (b - a) / m;\n    int k = 1;\n    double sum = 0.0;\n    double ret;\n    for(k = 1; k &lt; m; k++)\n        sum += f(a + (k * h));\n    ret = (( f(a) + f(b) ) / 2 + sum) * h;\n    return ret;\n}\nint main()\n{\n    int m = 1000;\n    for(m = 1000;; m++)\n    {\n        printf(\"S=%.4lf, m=%d\\n\", S(-1.0, 1.0, m), m);\n        if(fabs(S(-1.0, 1.0, m) - S(-1.0, 1.0, m - 1)) &lt; 1e-4) break;\n    }\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c </p>"},{"location":"coursework/cpd/1/07/#\u5fc5\u505a\u7b2c2\u9898","title":"\u5fc5\u505a\u7b2c2\u9898","text":"<p>\u6d41\u7a0b\u56fe </p> <p>\u7a0b\u5e8f\u4ee3\u7801 </p><pre><code>#include &lt;stdio.h&gt;\nint main()\n{\n    int a, b;\n    printf(\"\u7ad9\\t\u8eba\\t\u8001\\n\");\n    for(a = 1; a &lt;= 20; a++)\n        for(b = 1; b &lt;= 33; b++)\n            if(a * 5 + b * 3 + (100 - a - b) / 3 == 100 &amp;&amp; (100 - a - b) % 3 == 0)\n                printf(\"%d\\t%d\\t%d\\n\", a, b, 100 - a - b);\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c </p>"},{"location":"coursework/cpd/1/07/#\u9009\u505a\u7b2c1\u9898","title":"\u9009\u505a\u7b2c1\u9898","text":"<p>\u6d41\u7a0b\u56fe </p> <p>\u7a0b\u5e8f\u4ee3\u7801 </p><pre><code>#include &lt;stdio.h&gt;\n#include &lt;math.h&gt;\n#define N 1000\nint calc(int n)\n{\n    double i;\n    double sum = 0.0;\n    for(i = 1.0; i &lt;= n; i++)\n        sum += log10(i);\n    if(sum &gt; (int)sum) return (int)sum+1;\n    else return (int)sum;\n}\nint main()\n{\n    printf(\"%d\", calc(N));\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c </p>"},{"location":"coursework/cpd/1/07/#\u9009\u505a\u7b2c2\u9898","title":"\u9009\u505a\u7b2c2\u9898","text":"<p>\u6d41\u7a0b\u56fe </p> <p>\u7a0b\u5e8f\u4ee3\u7801 </p><pre><code>#include &lt;stdio.h&gt;\nint main()\n{\n    long long a, b, n, i, sum = 0;\n    printf(\"please input a,b,n\\t\\t\");\n    scanf(\"%lld\", &amp;a);\n    getchar();\n    scanf(\"%lld\", &amp;b);\n    getchar();\n    scanf(\"%lld\", &amp;n);\n    for(i = 1; i &lt;= n; i++)\n    {\n        sum += a * b;\n        a--; b--;\n    }\n    printf(\"the all number of guan tou is %lld\", sum);\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c </p>"},{"location":"coursework/cpd/1/07/#\u9009\u505a\u7b2c3\u9898","title":"\u9009\u505a\u7b2c3\u9898","text":"<p>\u6d41\u7a0b\u56fe </p> <p>\u7a0b\u5e8f\u4ee3\u7801 </p><pre><code>#include &lt;stdio.h&gt;\nint main()\n{\n    int a, b, c, d, e, f, n, n1, n2, i;\n    int s1[6] = {0}, s2[6] = {0};\n    int c1[6] = {0}, c2[6] = {0};\n    printf(\"\u6ee1\u8db3\u6761\u4ef6\u7684\u6570\u6709\uff1a\\n\");\n    for(a = 1; a &lt;= 3; a++)\n        for(b = 0; b &lt;= 9; b++)\n            if(a != b)\n                for(c = 0; c &lt;= 9; c++)\n                    if(c != a &amp;&amp; c != b)\n                        for(d = 0; d &lt;= 9; d++)\n                            if(d != a &amp;&amp; d != b &amp;&amp; d != c)\n                                for(e = 0; e &lt;= 9; e++)\n                                    if(e != a &amp;&amp; e != b &amp;&amp; e != c &amp;&amp; e != d)\n                                        for(f = 0; f &lt;= 9; f++)\n                                            if(f != a &amp;&amp; f != b &amp;&amp; f != c &amp;&amp; f != d &amp;&amp; f != e)\n                                            {\n                                                n = a*100000+b*10000+c*1000+d*100+e*10+f;\n                                                if(n &gt; 100000 &amp;&amp; n &lt; 333333)\n                                                {\n                                                    for(i = 0; i &lt;= 5; i++)\n                                                    {\n                                                        c1[i] = 0;\n                                                        c2[i] = 0;\n                                                    }\n                                                    n1 = n * 2;\n                                                    n2 = n * 3;\n                                                    for(i = 0; i &lt;= 5; i++)\n                                                    {\n                                                        s1[i] = n1 % 10;\n                                                        n1 /= 10;\n                                                    }\n                                                    for(i = 0; i &lt;= 5; i++)\n                                                    {\n                                                        s2[i] = n2 % 10;\n                                                        n2 /= 10;\n                                                    }\n                                                    for(i = 0; i &lt;= 5; i++)\n                                                    {\n                                                        if(s1[i] == a) c1[0]++;\n                                                        if(s1[i] == b) c1[1]++;\n                                                        if(s1[i] == c) c1[2]++;\n                                                        if(s1[i] == d) c1[3]++;\n                                                        if(s1[i] == e) c1[4]++;\n                                                        if(s1[i] == f) c1[5]++;\n                                                        if(s2[i] == a) c2[0]++;\n                                                        if(s2[i] == b) c2[1]++;\n                                                        if(s2[i] == c) c2[2]++;\n                                                        if(s2[i] == d) c2[3]++;\n                                                        if(s2[i] == e) c2[4]++;\n                                                        if(s2[i] == f) c2[5]++;\n                                                    }\n                                                    if(c1[0]&amp;&amp;c1[1]&amp;&amp;c1[2]&amp;&amp;c1[3]&amp;&amp;c1[4]&amp;&amp;c1[5])\n                                                        if(c2[0]&amp;&amp;c2[1]&amp;&amp;c2[2]&amp;&amp;c2[3]&amp;&amp;c2[4]&amp;&amp;c2[5])\n                                                            printf(\"%d\\n\", n);\n                                                }\n                                            }\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c </p>"},{"location":"coursework/cpd/1/07/#\u9009\u505a\u7b2c4\u9898","title":"\u9009\u505a\u7b2c4\u9898","text":"<p>\u6d41\u7a0b\u56fe </p> <p>\u7a0b\u5e8f\u4ee3\u7801 </p><pre><code>#include &lt;stdio.h&gt;\nint main()\n{\n    int a = 1, b = 1, c = 1, d = 1, e = 1;\n    int max = 0;\n    while(c == a || c == b)\n        c++;\n    while(d == a || d == b || d == c)\n        d++;\n    while(e == a || e == d)\n        e++;\n    if(a &gt; max) max = a;\n    if(b &gt; max) max = b;\n    if(c &gt; max) max = c;\n    if(d &gt; max) max = d;\n    if(e &gt; max) max = e;\n    printf(\"\u81f3\u5c11\u9700\u8981%d\u79cd\u989c\u8272\\n\", max);\n    printf(\"A:%d\\n\", a);\n    printf(\"B:%d\\n\", b);\n    printf(\"C:%d\\n\", c);\n    printf(\"D:%d\\n\", d);\n    printf(\"E:%d\\n\", e);\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c </p>"},{"location":"coursework/cpd/1/07/#\u9009\u505a\u7b2c5\u9898","title":"\u9009\u505a\u7b2c5\u9898","text":"<p>\u6d41\u7a0b\u56fe </p> <p>\u7a0b\u5e8f\u4ee3\u7801 \u7b2c\u4e00\u79cd </p><pre><code>#include &lt;stdio.h&gt;\nint a[3][3] = {0};\nint main()\n{\n    int i, j;\n    for(a[0][0] = 1; a[0][0] &lt;= 9; a[0][0]++)\n        for(a[0][1] = 1; a[0][1] &lt;= 9; a[0][1]++)\n            if(a[0][1] != a[0][0])\n                for(a[0][2] = 1; a[0][2] &lt;= 9; a[0][2]++)\n                    if(a[0][2] != a[0][0] &amp;&amp; a[0][2] != a[0][1])\n                        for(a[1][0] = 1; a[1][0] &lt;= 9; a[1][0]++)\n                            if(a[1][0] != a[0][0] &amp;&amp; a[1][0] != a[0][1] &amp;&amp; a[1][0] != a[0][2])\n                                for(a[1][1] = 1; a[1][1] &lt;= 9; a[1][1]++)\n                                    if(a[1][1] != a[0][0] &amp;&amp; a[1][1] != a[0][1] &amp;&amp; a[1][1] != a[0][2] &amp;&amp; a[1][1] != a[1][0])\n                                        for(a[1][2] = 1; a[1][2] &lt;= 9; a[1][2]++)\n                                            if(a[1][2] != a[0][0] &amp;&amp; a[1][2] != a[0][1] &amp;&amp; a[1][2] != a[0][2] &amp;&amp; a[1][2] != a[1][0] &amp;&amp; a[1][2] != a[1][1])\n                                                for(a[2][0] = 1; a[2][0] &lt;= 9; a[2][0]++)\n                                                    if(a[2][0] != a[0][0] &amp;&amp; a[2][0] != a[0][1] &amp;&amp; a[2][0] != a[0][2] &amp;&amp; a[2][0] != a[1][0] &amp;&amp; a[2][0] != a[1][1] &amp;&amp; a[2][0] != a[1][2])\n                                                        for(a[2][1] = 1; a[2][1] &lt;= 9; a[2][1]++)\n                                                            if(a[2][1] != a[0][0] &amp;&amp; a[2][1] != a[0][1] &amp;&amp; a[2][1] != a[0][2] &amp;&amp; a[2][1] != a[1][0] &amp;&amp; a[2][1] != a[1][1] &amp;&amp; a[2][1] != a[1][2] &amp;&amp; a[2][1] != a[2][0])\n                                                                for(a[2][2] = 1; a[2][2] &lt;= 9; a[2][2]++)\n                                                                    if(a[2][2] != a[0][0] &amp;&amp; a[2][2] != a[0][1] &amp;&amp; a[2][2] != a[0][2] &amp;&amp; a[2][2] != a[1][0] &amp;&amp; a[2][2] != a[1][1] &amp;&amp; a[2][2] != a[1][2] &amp;&amp; a[2][2] != a[2][0] &amp;&amp; a[2][2] != a[2][1])\n                                                                        if(a[0][0] + a[0][1] + a[0][2] == 15 &amp;&amp; a[1][0] + a[1][1] + a[1][2] == 15 &amp;&amp; a[2][0] + a[2][1] + a[2][2] == 15)\n                                                                            if(a[0][0] + a[1][0] + a[2][0] == 15 &amp;&amp; a[0][1] + a[1][1] + a[2][1] == 15 &amp;&amp; a[0][2] + a[1][2] + a[2][2] == 15)\n                                                                                if(a[0][0] + a[1][1] + a[2][2] == 15 &amp;&amp; a[2][0] + a[1][1] + a[0][2] == 15)\n                                                                                {\n                                                                                    for(i = 0; i &lt;= 2; i++)\n                                                                                    {\n                                                                                        for(j = 0; j &lt;= 2; j++)\n                                                                                        {\n                                                                                            printf(\"%2d\", a[i][j]);\n                                                                                        }\n                                                                                        printf(\"\\n\");\n                                                                                    }\n                                                                                    printf(\"\\n\");\n                                                                                }\n    return 0;\n}\n</code></pre> \u7b2c\u4e8c\u79cd <pre><code>#include &lt;stdio.h&gt;\nint a[3][3] = {0};\nint checkRepeat(int m, int n)\n{\n    int i, j, ret = 1;\n    for(i = 0; i &lt;= m; i++)\n        for(j = 0; i == m ? j &lt; n : j &lt;= 2; j++)\n            if(a[i][j] == a[m][n]) ret = 0;\n    return ret;\n}\nint checkRow()\n{\n    int i, ret = 1;\n    for(i = 0; i &lt;= 2; i++)\n        if(a[i][0] + a[i][1] + a[i][2] != 15) ret = 0;\n    return ret;\n}\nint checkColumn()\n{\n    int i, ret = 1;\n    for(i = 0; i &lt;= 2; i++)\n        if(a[0][i] + a[1][i] + a[2][i] != 15) ret = 0;\n    return ret;\n}\nint checkDiagonal()\n{\n    int ret = 1;\n    if(a[0][0] + a[1][1] + a[2][2] != 15 || a[2][0] + a[1][1] + a[0][2] != 15) ret = 0;\n    return ret;\n}\nvoid showShowWay()\n{\n    int i, j;\n    for(i = 0; i &lt;= 2; i++)\n    {\n        for(j = 0; j &lt;= 2; j++)\n        {\n            printf(\"%2d\", a[i][j]);\n        }\n        printf(\"\\n\");\n    }\n    printf(\"\\n\");\n}\nint main()\n{\n    for(a[0][0] = 1; a[0][0] &lt;= 9; a[0][0]++)\n        for(a[0][1] = 1; a[0][1] &lt;= 9; a[0][1]++)\n        if(checkRepeat(0, 1))\n            for(a[0][2] = 1; a[0][2] &lt;= 9; a[0][2]++)\n            if(checkRepeat(0, 2))\n                for(a[1][0] = 1; a[1][0] &lt;= 9; a[1][0]++)\n                if(checkRepeat(1, 0))\n                    for(a[1][1] = 1; a[1][1] &lt;= 9; a[1][1]++)\n                    if(checkRepeat(1, 1))\n                        for(a[1][2] = 1; a[1][2] &lt;= 9; a[1][2]++)\n                        if(checkRepeat(1, 2))\n                            for(a[2][0] = 1; a[2][0] &lt;= 9; a[2][0]++)\n                            if(checkRepeat(2, 0))\n                                for(a[2][1] = 1; a[2][1] &lt;= 9; a[2][1]++)\n                                if(checkRepeat(2, 1))\n                                    for(a[2][2] = 1; a[2][2] &lt;= 9; a[2][2]++)\n                                    if(checkRepeat(2, 2))\n                                        if(checkRow() &amp;&amp; checkColumn() &amp;&amp; checkDiagonal())\n                                            showShowWay();\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c  </p>"},{"location":"coursework/cpd/1/07/#\u5b9e\u9a8c\u4f53\u4f1a","title":"\u5b9e\u9a8c\u4f53\u4f1a","text":"<p>\u9700\u8981\u8ba4\u771f\u5b66\u4e60\uff0c\u4ed4\u7ec6\u5b8c\u6210\u4f5c\u4e1a\u3002</p>"},{"location":"coursework/cpd/1/08/","title":"\u7b2c\u516b\u6b21\u4f5c\u4e1a","text":""},{"location":"coursework/cpd/1/08/#\u7b2c\u516b\u6b21\u4f5c\u4e1a","title":"\u7b2c\u516b\u6b21\u4f5c\u4e1a","text":""},{"location":"coursework/cpd/1/08/#\u5b9e\u9a8c\u76ee\u7684","title":"\u5b9e\u9a8c\u76ee\u7684","text":"<p>\u5b8c\u6210\u672c\u6b21\u4f5c\u4e1a\uff0c\u5de9\u56fa\u4e0a\u8bfe\u6240\u5b66\u77e5\u8bc6</p>"},{"location":"coursework/cpd/1/08/#\u5b9e\u9a8c\u73af\u5883","title":"\u5b9e\u9a8c\u73af\u5883","text":"<p>\u8bbe\u5907\uff1aOMEN by HP Laptop 16-b1xxx \u64cd\u4f5c\u7cfb\u7edf: Windows 11 \u4e13\u4e1a\u7248 22H2 \u7f16\u8f91\u5668: Visual Studio Code 1.72.1 \u7f16\u8bd1\u5668: gcc 12.1.0 \u7ec8\u7aef\uff1aWindows Powershell</p>"},{"location":"coursework/cpd/1/08/#\u5b9e\u9a8c\u5185\u5bb9","title":"\u5b9e\u9a8c\u5185\u5bb9","text":""},{"location":"coursework/cpd/1/08/#\u5fc5\u505a\u7b2c1\u9898","title":"\u5fc5\u505a\u7b2c1\u9898","text":"<p>\u6d41\u7a0b\u56fe </p> <p>\u7a0b\u5e8f\u4ee3\u7801 \u9012\u5f52 </p><pre><code>#include &lt;stdio.h&gt;\nint a[40] = {0};\nint sum = 40;\nvoid suicide(int n)\n{\n    int cnt = 0;\n    while(sum &gt; 1)\n    {\n        n++;\n        if(n &gt; 39) n -= 40;\n        if(!a[n])\n            cnt++;\n        if(cnt == 3)\n        {\n            a[n] = 1;\n            sum--;\n            suicide(n);\n        }\n    }\n}\nint main()\n{\n    int i;\n    suicide(-1);\n    for(i = 0; i &lt;= 39; i++)\n    {\n        if(!a[i])\n        {\n            printf(\"%d\\n\", i + 1);\n            break;\n        }\n    }\n    return 0;\n}\n</code></pre> \u9012\u63a8 <pre><code>#include &lt;stdio.h&gt;\nint main()\n{\n    int a[40] = {0};\n    int sum = 40;\n    int n = -1;\n    int cnt = 0;\n    int i;\n    while(sum &gt; 1)\n    {\n        n++;\n        if(n &gt; 39) n -= 40;\n        if(!a[n])\n            cnt++;\n        if(cnt == 3)\n        {\n            cnt = 0;\n            a[n] = 1;\n            sum--;\n        }\n    }\n    for(i = 0; i &lt;= 39; i++)\n    {\n        if(!a[i])\n        {\n            printf(\"%d\\n\", i + 1);\n            break;\n        }\n    }\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c \u5728\u6211\u7684\u8bbe\u5907\u4e0a\uff0c\u4e8c\u8005\u5e76\u65e0\u5dee\u8ddd\uff08\u53ef\u80fd\u662f1ms\u7684\u7cbe\u5ea6\u4e0d\u591f\uff1f\uff09 \u539f\u56e0\uff1a\u9012\u5f52\u6d89\u53ca\u5230\u7684\u5185\u5b58\u64cd\u4f5c\u8981\u6bd4\u9012\u63a8\u590d\u6742 </p>"},{"location":"coursework/cpd/1/08/#\u5fc5\u505a\u7b2c2\u9898","title":"\u5fc5\u505a\u7b2c2\u9898","text":"<p>\u6d41\u7a0b\u56fe </p> <p>\u7a0b\u5e8f\u4ee3\u7801 </p><pre><code>#include &lt;stdio.h&gt;\nint GoDown(int n)\n{\n    int ret;\n    if(n == 1)\n        ret = 1;\n    else if(n == 2)\n        ret = 2;\n    else if(n == 3)\n        ret = 4;\n    else ret = GoDown(n - 1) + GoDown(n - 2) + GoDown(n - 3);\n    return ret;\n}\nint main()\n{\n    int n;\n    scanf(\"%d\", &amp;n);\n    printf(\"%d\\n\", GoDown(n));\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c </p><pre><code>\u7ed3\u679c\n13\n24\n44\n81\n149\n274\n504\n927\n1705\n3136\n5768\n10609\n19513\n35890\n66012\n121415\n</code></pre> <pre><code>n   \u8017\u65f6\n15  0 0 0\n25  16 15 15\n35  593 608 593\n</code></pre>"},{"location":"coursework/cpd/1/08/#\u9009\u505a\u7b2c1\u9898","title":"\u9009\u505a\u7b2c1\u9898","text":"<p>\u6d41\u7a0b\u56fe </p> <p>\u7a0b\u5e8f\u4ee3\u7801 </p><pre><code>#include &lt;stdio.h&gt;\nint check(int ar[], int n)\n{\n    int i, ret = 1;\n    for(i = 0; i &lt; n; i++)\n        if(ar[n] == ar[i])\n        {\n            ret = 0;\n            break;\n        }\n    return ret;\n}\nint main()\n{\n    int a[6];\n    int chick = 0, hare = 0;\n    for(a[0] = 1; a[0] &lt;= 5; a[0]++)\n        for(a[1] = 0; a[1] &lt;= 5; a[1]++)\n            if(check(a, 1))\n                for(a[2] = 0; a[2] &lt;= 5; a[2]++)\n                    if(check(a, 2))\n                        for(a[3] = 1; a[3] &lt;= 5; a[3]++)\n                            if(check(a, 3))\n                                for(a[4] = 0; a[4] &lt;= 5; a[4]++)\n                                    if(check(a, 4))\n                                        for(a[5] = 0; a[5] &lt;= 5; a[5]++)\n                                            if(check(a, 5))\n                                            {\n                                                chick = a[0]*100 + a[1]*10 + a[2];\n                                                hare = a[3]*100 + a[4]*10 + a[5];\n                                                if(hare == chick * 2 &amp;&amp; hare % 4 == 0)\n                                                {\n                                                    printf(\"\u9e21\u6216\u5154\u5b50\u7684\u53ea\u6570\u4e3a%d\uff0c\u9e21\u811a\u6709%d\u652f\uff0c\u5154\u811a\u6709%d\u652f\\n\", hare / 4, chick, hare);\n                                                }\n                                            }\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c </p>"},{"location":"coursework/cpd/1/08/#\u9009\u505a\u7b2c2\u9898","title":"\u9009\u505a\u7b2c2\u9898","text":"<p>\u6d41\u7a0b\u56fe </p> <p>\u7a0b\u5e8f\u4ee3\u7801 </p><pre><code>#include &lt;stdio.h&gt;\nlong long Sk(int k)\n{\n    long long ret = 0;\n    int i;\n    for(i = 1; i &lt;= k; i++)\n        ret += i * i;\n    ret *= k;\n    return ret;\n}\nlong long Sn(int n)\n{\n    long long ret = 0;\n    int i;\n    for(i = 1; i &lt;= n; i++)\n        ret += Sk(i);\n    return ret;\n}\nint main()\n{\n    long long S, NS;\n    long long n;\n    printf(\"please input integer num n\\n\");\n    scanf(\"%d\", &amp;n);\n    S = Sn(n);\n    NS = (n * (n + 1) * (n + 2) * (8 * n * n + 11 * n + 1)) / 120;\n    printf(\"S=%lld\\tNS=%lld\\n\", S, NS);\n    if(S &gt; NS) printf(\"S&gt;NS,output=1\");\n    if(S == NS) printf(\"S=NS,output=0\");\n    if(S &lt; NS) printf(\"S&lt;NS,output=-1\");\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c </p>"},{"location":"coursework/cpd/1/08/#\u5b9e\u9a8c\u4f53\u4f1a","title":"\u5b9e\u9a8c\u4f53\u4f1a","text":"<p>\u9700\u8981\u8ba4\u771f\u5b66\u4e60\uff0c\u4ed4\u7ec6\u5b8c\u6210\u4f5c\u4e1a\u3002</p>"},{"location":"coursework/cpd/1/09/","title":"\u7b2c\u4e5d\u6b21\u4f5c\u4e1a","text":""},{"location":"coursework/cpd/1/09/#\u7b2c\u4e5d\u6b21\u4f5c\u4e1a","title":"\u7b2c\u4e5d\u6b21\u4f5c\u4e1a","text":""},{"location":"coursework/cpd/1/09/#\u5b9e\u9a8c\u76ee\u7684","title":"\u5b9e\u9a8c\u76ee\u7684","text":"<p>\u5b8c\u6210\u672c\u6b21\u4f5c\u4e1a\uff0c\u5de9\u56fa\u4e0a\u8bfe\u6240\u5b66\u77e5\u8bc6</p>"},{"location":"coursework/cpd/1/09/#\u5b9e\u9a8c\u73af\u5883","title":"\u5b9e\u9a8c\u73af\u5883","text":"<p>\u8bbe\u5907\uff1aOMEN by HP Laptop 16-b1xxx \u64cd\u4f5c\u7cfb\u7edf: Windows 11 \u4e13\u4e1a\u7248 22H2 \u7f16\u8f91\u5668: Visual Studio Code 1.72.1 \u7f16\u8bd1\u5668: gcc 12.1.0 \u7ec8\u7aef\uff1aWindows Powershell</p>"},{"location":"coursework/cpd/1/09/#\u5b9e\u9a8c\u5185\u5bb9","title":"\u5b9e\u9a8c\u5185\u5bb9","text":""},{"location":"coursework/cpd/1/09/#\u5fc5\u505a\u7b2c1\u9898","title":"\u5fc5\u505a\u7b2c1\u9898","text":"<p>\u7a0b\u5e8f\u4ee3\u7801 \u7b2c\u4e00\u79cd </p><pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;time.h&gt;\nint main()\n{\n    int sheep[110] = {0};\n    int i = 0, max = 0, j = 0;\n    srand((unsigned int)time(NULL));\n    for(i = 1; i &lt;= 100; i++)\n        sheep[i] = rand();\n    for(i = 1; i &lt;= 100; i++)\n    {\n        if(max &lt; sheep[i])\n        {\n            max = sheep[i];\n            j = i;\n        }\n    }\n    printf(\"%d %d\\n\", max, j);\n    return 0;\n}\n</code></pre> \u7b2c\u4e8c\u79cd <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;time.h&gt;\nvoid sort(int ar1[], int ar2[], int n)\n{\n    int i, j, t;\n    for(i = 1; i &lt;= n; i++)\n        for(j = 1; j &lt;= n; j++)\n            if(ar1[j] &lt; ar1[j + 1])\n            {\n                t = ar1[j];\n                ar1[j] = ar1[j + 1];\n                ar1[j + 1] = t;\n                t = ar2[j];\n                ar2[j] = ar2[j + 1];\n                ar2[j + 1] = t;\n            }\n}\nint main()\n{\n    int sheep[110] = {0};\n    int num[110];\n    int i = 0, max = 0, j = 0;\n    srand((unsigned int)time(NULL));\n    for(i = 1; i &lt;= 100; i++)\n        sheep[i] = rand();\n    for(i = 1; i &lt;= 100; i++)\n        num[i] = i;\n    sort(sheep, num, 100);\n    printf(\"%d %d\\n\", sheep[1], num[1]);\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c  </p>"},{"location":"coursework/cpd/1/09/#\u5fc5\u505a\u7b2c2\u9898","title":"\u5fc5\u505a\u7b2c2\u9898","text":"<p>\u7a0b\u5e8f\u4ee3\u7801 </p><pre><code>#include &lt;stdio.h&gt;\ndouble A[4][4] = {1.1161, 0.1254, 0.1397, 0.1490,\n                  0.1582, 1.1675, 0.1768, 0.1871,\n                  0.2368, 0.2471, 0.2568, 1.2671,\n                  0.1968, 0.2071, 1.2168, 0.2271};\ndouble B[4] = {1.5471, 1.6471, 1.8471, 1.7471};\ndouble x[4] = {0};\nint main()\n{\n    int i, j, k;\n    double t, r;\n    for(i = 0; i &lt;= 3; i++)\n    {\n        t = A[i][i];\n        for(j = 0; j &lt;= 3; j++)\n            A[i][j] /= t;\n        B[i] /= t;\n        if(i &lt; 3)\n        {\n            for(j = i + 1; j &lt;= 3; j++)\n            {\n                r = A[j][i];\n                for(k = 0; k &lt;= 3; k++)\n                {\n                    A[j][k] -= r * A[i][k];\n                }\n                B[j] -= r * B[i];\n            }\n        }\n    }\n    for(i = 3; i &gt;= 0; i--)\n    {\n        x[i] = B[i];\n        if(i &lt; 3)\n        {\n            for(j = 3; j &gt; i; j--)\n                x[i] -= A[i][j] * x[j];\n        }\n    }\n    for(i = 0; i &lt;= 3; i++)\n    {\n        printf(\"x(%d)=%lf\\n\", i + 1, x[i]);\n    }\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c </p>"},{"location":"coursework/cpd/1/09/#\u5fc5\u505a\u7b2c3\u9898","title":"\u5fc5\u505a\u7b2c3\u9898","text":"<p>\u7a0b\u5e8f\u4ee3\u7801 </p><pre><code>#include &lt;stdio.h&gt;\nint main()\n{\n    int head = 15, foot = 40;\n    printf(\"Chicken = %d, Rabbit = %d\\n\", head - (foot - 2 * head) / 2, (foot - 2 * head) / 2);\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c </p>"},{"location":"coursework/cpd/1/09/#\u9009\u505a\u7b2c1\u9898","title":"\u9009\u505a\u7b2c1\u9898","text":"<p>\u7a0b\u5e8f\u4ee3\u7801 </p><pre><code>#include &lt;stdio.h&gt;\nint checkRepeat(int num, int ar[])\n{\n    int i = 0, ret = 0;\n    while(i &lt; num)\n    {\n        if(ar[i] == ar[num])\n        {\n            ret = 1;\n            break;\n        }\n        i++;\n    }\n    return ret;\n}\nint checkHappiness(int a, int num, int ar[])\n{\n    int b[11] = {0};\n    int cnt = 0, sum = 0, i;\n    while(a &gt; 0)\n    {\n        b[cnt] = a % 10;\n        a /= 10;\n        cnt++;\n    }\n    for(i = 0; i &lt; cnt; i++)\n        sum += b[i] * b[i];\n    ar[num] = sum;\n    if(sum == 1) return 1;\n    else if(checkRepeat(num, ar)) return -1;\n    else return 0;\n}\nint main()\n{\n    int num, i, t;\n    int temp[110] = {0};\n    scanf(\"%d\", &amp;num);\n    if(checkHappiness(num, 0, temp) == 1) printf(\"1\\n\");\n    else\n    {\n        for(i = 1; ; i++)\n        {\n            t = checkHappiness(temp[i - 1], i, temp);\n            if(t == 1)\n            {\n                printf(\"1\\n\");\n                break;\n            }\n            if(t == -1)\n            {\n                printf(\"0\\n\");\n                break;\n            }\n        }\n    }\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c </p>"},{"location":"coursework/cpd/1/09/#\u9009\u505a\u7b2c2\u9898","title":"\u9009\u505a\u7b2c2\u9898","text":"<p>\u8fd0\u884c\u7ed3\u679c </p><pre><code>10, 9, 8, 7, 6, 1, 2, 3, 4, 5,\n</code></pre>"},{"location":"coursework/cpd/1/09/#\u9009\u505a\u7b2c3\u9898","title":"\u9009\u505a\u7b2c3\u9898","text":"<p>\u7a0b\u5e8f\u4ee3\u7801 </p><pre><code>#include &lt;stdio.h&gt;\nint main()\n{\n    char c[19] = {0};\n    int d[19] = {0};\n    int w[19] = {0, 7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2, -1};\n    int i = 1, S = 0;\n    for(i = 1; i &lt;= 18; i++)\n    {\n        scanf(\"%c\", &amp;c[i]);\n        if((c[i] &gt;= '0' &amp;&amp; c[i] &lt;= '9') || c[18] == 'X')\n            (c[i] == 'X') ? (d[i] = 10) : (d[i] = c[i] - 48);\n        else goto err;\n    }\n    for(i = 1; i &lt;= 17; i++)\n    {\n        S += w[i] * d[i];\n    }\n    d[0] = (12 - (S % 11)) % 11;\n    if(d[0] == d[18]) printf(\"\u5408\u6cd5\\n\");\n    else if(d[0] == 10) printf(\"\u975e\u6cd5\uff0c\u6b63\u786e\u6821\u9a8c\u4f4d\u662fX\");\n    else printf(\"\u975e\u6cd5\uff0c\u6b63\u786e\u6821\u9a8c\u4f4d\u662f%d\\n\", d[0]);\n    if(0) err: printf(\"ERROR\\n\");\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c </p>"},{"location":"coursework/cpd/1/09/#\u5b9e\u9a8c\u4f53\u4f1a","title":"\u5b9e\u9a8c\u4f53\u4f1a","text":"<p>\u9700\u8981\u8ba4\u771f\u5b66\u4e60\uff0c\u4ed4\u7ec6\u5b8c\u6210\u4f5c\u4e1a\u3002</p>"},{"location":"coursework/cpd/1/10/","title":"\u7b2c\u5341\u6b21\u4f5c\u4e1a","text":""},{"location":"coursework/cpd/1/10/#\u7b2c\u5341\u6b21\u4f5c\u4e1a","title":"\u7b2c\u5341\u6b21\u4f5c\u4e1a","text":""},{"location":"coursework/cpd/1/10/#\u5b9e\u9a8c\u76ee\u7684","title":"\u5b9e\u9a8c\u76ee\u7684","text":"<p>\u5b8c\u6210\u672c\u6b21\u4f5c\u4e1a\uff0c\u5de9\u56fa\u4e0a\u8bfe\u6240\u5b66\u77e5\u8bc6</p>"},{"location":"coursework/cpd/1/10/#\u5b9e\u9a8c\u73af\u5883","title":"\u5b9e\u9a8c\u73af\u5883","text":"<p>\u8bbe\u5907\uff1aOMEN by HP Laptop 16-b1xxx \u64cd\u4f5c\u7cfb\u7edf: Windows 11 \u4e13\u4e1a\u7248 22H2 \u7f16\u8f91\u5668: Visual Studio Code 1.72.1 \u7f16\u8bd1\u5668: gcc 12.1.0 \u7ec8\u7aef\uff1aWindows Powershell</p>"},{"location":"coursework/cpd/1/10/#\u5b9e\u9a8c\u5185\u5bb9","title":"\u5b9e\u9a8c\u5185\u5bb9","text":""},{"location":"coursework/cpd/1/10/#\u5fc5\u505a\u7b2c1\u9898","title":"\u5fc5\u505a\u7b2c1\u9898","text":"<p>\u7a0b\u5e8f\u4ee3\u7801 </p><pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\nint main()\n{\n    char sA[31] = {0}, sB[31] = {0};\n    int i, j, flag, cnt = 0;\n    scanf(\"%s\", sA);\n    scanf(\"%s\", sB);\n    for(i = 0; i &lt;= strlen(sA) - strlen(sB); i++)\n        if(sA[i] == *sB)\n        {\n            flag = 1;\n            for(j = 0; j &lt; strlen(sB); j++)\n                if(sA[i + j] != sB[j] &amp;&amp; sB[j] != '?')\n                {\n                    flag = 0;\n                    break;\n                }\n            if(flag)\n            {\n                printf(\"%d \", i);\n                cnt++;\n            }\n        }\n    if(!cnt) printf(\"No match found\\n\");\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c </p>"},{"location":"coursework/cpd/1/10/#\u5fc5\u505a\u7b2c2\u9898","title":"\u5fc5\u505a\u7b2c2\u9898","text":"<p>\u7a0b\u5e8f\u4ee3\u7801 </p><pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\nint main()\n{\n    char str[110] = {0}, vwl[110] = {0};\n    int vwlNum[110] = {0};\n    int i = 0, j = 0, l, t;\n    scanf(\"%s\", str);\n    for(i = 0; i &lt; strlen(str); i++)\n        if(str[i] == 'a' || str[i] == 'e' || str[i] == 'i' || str[i] == 'o' || str[i] == 'u')\n        {\n            vwl[j] = str[i];\n            vwlNum[j] = i + 1;\n            j++;\n        }\n    l = strlen(vwl);\n    for(i = 0; i &lt; l / 2; i++)\n    {\n        t = vwl[i];\n        vwl[i] = vwl[l - i - 1];\n        vwl[l - i - 1] = t;\n    }\n    for(i = 0; vwlNum[i] != 0; i++)\n        str[vwlNum[i] - 1] = vwl[i];\n    printf(\"%s\", str);\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c </p>"},{"location":"coursework/cpd/1/10/#\u5fc5\u505a\u7b2c3\u9898","title":"\u5fc5\u505a\u7b2c3\u9898","text":"<p>\u7a0b\u5e8f\u4ee3\u7801 </p><pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\nvoid sort(char ar[])\n{\n    int i, j;\n    char t;\n    for(i = 0; i &lt; strlen(ar); i++)\n        for(j = 0; j &lt; strlen(ar); j++)\n            if(ar[j] &lt; ar[j + 1])\n            {\n                t = ar[j];\n                ar[j] = ar[j + 1];\n                ar[j + 1] = t;\n            }\n}\nint main()\n{\n    char str[110] = {0};\n    scanf(\"%s\", str);\n    sort(str);\n    printf(\"%s\", str);\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c </p>"},{"location":"coursework/cpd/1/10/#\u9009\u505a\u7b2c1\u9898","title":"\u9009\u505a\u7b2c1\u9898","text":"<p>\u7a0b\u5e8f\u4ee3\u7801 </p><pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\nint main()\n{\n    char s[110] = {0}, t[110] = {0};\n    int sCnt[26] = {0}, tCnt[26] = {0};\n    int i, flag = 1;\n    scanf(\"%s\", s);\n    scanf(\"%s\", t);\n    for(i = 0; i &lt; strlen(s); i++)\n        sCnt[s[i] - 97]++;\n    for(i = 0; i &lt; strlen(t); i++)\n        tCnt[t[i] - 97]++;\n    for(i = 0; i &lt; 26; i++)\n        if(sCnt[i] != tCnt[i])\n        {\n            flag = 0;\n            break;\n        }\n    printf(\"%d\", flag);\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c </p>"},{"location":"coursework/cpd/1/10/#\u9009\u505a\u7b2c2\u9898","title":"\u9009\u505a\u7b2c2\u9898","text":"<p>\u7a0b\u5e8f\u4ee3\u7801 </p><pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n#include &lt;math.h&gt;\nint aton(const char str[])\n{\n    int a[4] = {0};\n    int i = 0, j = 0, cnt = 0;\n    long long ret = 1;\n    for(i = 0; i &lt; strlen(str); i++)\n    {\n        if(str[i] &gt;= '0' &amp;&amp; str[i] &lt;= '9')\n        {\n            a[j] *= 10;\n            a[j] += (str[i] - 48);\n        }\n        else if(str[i] == '.')\n        {\n            cnt++;\n            j++;\n        }\n        else\n        {\n            ret = 0;\n            break;\n        }\n        if(cnt &gt; 3)\n        {\n            ret = 0;\n            break;\n        }\n        if(a[j] &gt; 255 || a[j] &lt; 0)\n        {\n            ret = 0;\n            break;\n        }\n    }\n    if(ret)\n    {\n        ret = 0;\n        for(i = 0; i &lt;= 3; i++)\n            ret += a[i] * (int)pow(256.0, (double)(3 - i));\n    }\n    return ret;\n}\nint main()\n{\n    char ipv4[16] = {0};\n    scanf(\"%s\", ipv4);\n    printf(\"%d\", aton(ipv4));\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c </p>"},{"location":"coursework/cpd/1/10/#\u5b9e\u9a8c\u4f53\u4f1a","title":"\u5b9e\u9a8c\u4f53\u4f1a","text":"<p>\u9700\u8981\u8ba4\u771f\u5b66\u4e60\uff0c\u4ed4\u7ec6\u5b8c\u6210\u4f5c\u4e1a\u3002</p>"},{"location":"coursework/cpd/1/11/","title":"\u7b2c\u5341\u4e00\u6b21\u4f5c\u4e1a","text":""},{"location":"coursework/cpd/1/11/#\u7b2c\u5341\u4e00\u6b21\u4f5c\u4e1a","title":"\u7b2c\u5341\u4e00\u6b21\u4f5c\u4e1a","text":""},{"location":"coursework/cpd/1/11/#\u5b9e\u9a8c\u76ee\u7684","title":"\u5b9e\u9a8c\u76ee\u7684","text":"<p>\u5b8c\u6210\u672c\u6b21\u4f5c\u4e1a\uff0c\u5de9\u56fa\u4e0a\u8bfe\u6240\u5b66\u77e5\u8bc6</p>"},{"location":"coursework/cpd/1/11/#\u5b9e\u9a8c\u73af\u5883","title":"\u5b9e\u9a8c\u73af\u5883","text":"<p>\u8bbe\u5907\uff1aOMEN by HP Laptop 16-b1xxx \u64cd\u4f5c\u7cfb\u7edf: Windows 11 \u4e13\u4e1a\u7248 22H2 \u7f16\u8f91\u5668: Visual Studio Code 1.72.1 \u7f16\u8bd1\u5668: gcc 12.1.0 \u7ec8\u7aef\uff1aWindows Powershell</p>"},{"location":"coursework/cpd/1/11/#\u5b9e\u9a8c\u5185\u5bb9","title":"\u5b9e\u9a8c\u5185\u5bb9","text":""},{"location":"coursework/cpd/1/11/#\u5fc5\u505a\u7b2c1\u9898","title":"\u5fc5\u505a\u7b2c1\u9898","text":"<p>\u7a0b\u5e8f\u4ee3\u7801 </p><pre><code>#include &lt;stdio.h&gt;\nvoid sort(int ar[], int n)\n{\n    int i, j, t;\n    for(i = 0; i &lt; n - 1; i++)\n        for(j = 0; j &lt; n - 1 - i; j++)\n            if(*(ar + j) &gt; *(ar + j + 1))\n            {\n                t = *(ar + j);\n                *(ar + j) = *(ar + j + 1);\n                *(ar + j + 1) = t;\n            }\n}\nint main()\n{\n    int a[10] = {0}, b[10] = {0}, c[20] = {0};\n    int i;\n    int *p = a, *q = b, *r = c;\n    for(i = 0; i &lt; 10; i++)\n        scanf(\"%d\", a + i);\n    for(i = 0; i &lt; 10; i++)\n        scanf(\"%d\", b + i);\n    sort(a, 10); sort(b, 10);\n    while((p - a) &lt; 10 || (q - b) &lt; 10)\n    {\n        if((p - a) == 10)\n        {\n            *r = *q;\n            q++; r++;\n        }\n        else if((q - b) == 10)\n        {\n            *r = *p;\n            p++; r++;\n        }\n        else if(*p &lt; *q)\n        {\n            *r = *p;\n            p++; r++;\n        }\n        else\n        {\n            *r = *q;\n            q++; r++;\n        }\n    }\n    for(i = 0; i &lt; 20; i++)\n        printf(\"%d \", *(c + i));\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c </p>"},{"location":"coursework/cpd/1/11/#\u5fc5\u505a\u7b2c2\u9898","title":"\u5fc5\u505a\u7b2c2\u9898","text":"<p>\u7a0b\u5e8f\u4ee3\u7801 </p><pre><code>#include &lt;stdio.h&gt;\nvoid del(int *p, int m);\nint main()\n{\n    int num[50] = {0};      //\u8bbe\u7f6e\u4e00\u4e2a\u4fdd\u5b58\u6bcf\u4eba\u7f16\u53f7\u6570\u7ec4num[50]\n    int n;\n    scanf(\"%d\", &amp;n);        //\u8f93\u5165n\u7684\u503c\n    del(num, n);\n    return 0;\n}\nvoid del(int *p, int m)\n{\n    int cnt = 0, sum = m;\n    int *q;\n    q = p;\n    while(sum &gt; 1)\n    {\n        if(!(*q)) cnt++;\n        if(cnt == 3) {*q = 1; sum--; cnt = 0;}\n        q++;\n        if(q - p &gt;= m) q -= m;\n    }\n    for(q = p; q - p &lt; m; q++)\n        if(!(*q))\n        {\n            printf(\"%d\\n\", (q - p) + 1);\n            break;\n        }\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c </p>"},{"location":"coursework/cpd/1/11/#\u5fc5\u505a\u7b2c3\u9898","title":"\u5fc5\u505a\u7b2c3\u9898","text":"<p>\u7a0b\u5e8f\u4ee3\u7801 </p><pre><code>#include &lt;stdio.h&gt;\nvoid sort(int *ar[], int n)\n{\n    int i, j;\n    int *t;\n    for(i = 0; i &lt; n - 1; i++)\n        for(j = 0; j &lt; n - 1 - i; j++)\n            if(**(ar + j) &gt; **(ar + j + 1))\n            {\n                t = *(ar + j);\n                *(ar + j) = *(ar + j + 1);\n                *(ar + j + 1) = t;\n            }\n}\nint main()\n{\n    int a[10] = {0};\n    int *pa[10] = {0};\n    int i;\n    for(i = 0; i &lt; 10; i++)\n        pa[i] = &amp;a[i];\n    for(i = 0; i &lt; 10; i++)\n        scanf(\"%d\", a + i);\n    sort(pa, 10);\n    for(i = 0; i &lt; 10; i++)\n        printf(\"%d\\t\", **(pa + i));\n    printf(\"\\n\");\n    for(i = 0; i &lt; 10; i++)\n        printf(\"%d\\t\", *(pa + i) - a);\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c </p>"},{"location":"coursework/cpd/1/11/#\u9009\u505a\u7b2c1\u9898","title":"\u9009\u505a\u7b2c1\u9898","text":"<p>\u8fd0\u884c\u7ed3\u679c </p><pre><code>HhnewyearNEWYEAR\nYEAR\n</code></pre>"},{"location":"coursework/cpd/1/11/#\u9009\u505a\u7b2c2\u9898","title":"\u9009\u505a\u7b2c2\u9898","text":"<p>\u7a0b\u5e8f\u4ee3\u7801 </p><pre><code>#include &lt;stdio.h&gt;\nvoid sort(int a[])\n{\n    int i, j, t;\n    for(i = 0; i &lt; 3; i++)\n        for(j = 0; j &lt; 3 - i; j++)\n            if(a[j] &gt; a[j + 1])\n            {\n                t = a[j];\n                a[j] = a[j + 1];\n                a[j + 1] = t;\n            }\n}\nvoid kablek(int *a)\n{\n    int max, min, output, i;\n    sort(a);\n    max = a[3] * 1000 + a[2] * 100 + a[1] * 10 + a[0];\n    min = a[0] * 1000 + a[1] * 100 + a[2] * 10 + a[3];\n    output = max - min;\n    printf(\"%d-%d=%d\\n\", max, min, output);\n    if(output != 6174)\n    {\n        for(i = 0; i &lt; 4; i++)\n        {\n            a[i] = output % 10;\n            output /= 10;\n        }\n        kablek(a);\n    }\n}\nint main()\n{\n    int n = 0;\n    int a[4] = {0};\n    int i;\n    scanf(\"%d\", &amp;n);\n    if(n &gt;= 1000 &amp;&amp; n &lt;= 9999)\n    {\n        for(i = 0; i &lt; 4; i++)\n        {\n            a[i] = n % 10;\n            n /= 10;\n        }\n        kablek(a);\n    }\n    else printf(\"error\\n\");\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c </p>"},{"location":"coursework/cpd/1/11/#\u5b9e\u9a8c\u4f53\u4f1a","title":"\u5b9e\u9a8c\u4f53\u4f1a","text":"<p>\u9700\u8981\u8ba4\u771f\u5b66\u4e60\uff0c\u4ed4\u7ec6\u5b8c\u6210\u4f5c\u4e1a\u3002</p>"},{"location":"coursework/cpd/1/12/","title":"\u7b2c\u5341\u4e8c\u6b21\u4f5c\u4e1a","text":""},{"location":"coursework/cpd/1/12/#\u7b2c\u5341\u4e8c\u6b21\u4f5c\u4e1a","title":"\u7b2c\u5341\u4e8c\u6b21\u4f5c\u4e1a","text":""},{"location":"coursework/cpd/1/12/#\u5b9e\u9a8c\u76ee\u7684","title":"\u5b9e\u9a8c\u76ee\u7684","text":"<p>\u5b8c\u6210\u672c\u6b21\u4f5c\u4e1a\uff0c\u5de9\u56fa\u4e0a\u8bfe\u6240\u5b66\u77e5\u8bc6</p>"},{"location":"coursework/cpd/1/12/#\u5b9e\u9a8c\u73af\u5883","title":"\u5b9e\u9a8c\u73af\u5883","text":"<p>\u8bbe\u5907\uff1aOMEN by HP Laptop 16-b1xxx \u64cd\u4f5c\u7cfb\u7edf: Windows 11 \u4e13\u4e1a\u7248 22H2 \u7f16\u8f91\u5668: Visual Studio Code 1.72.1 \u7f16\u8bd1\u5668: gcc 12.1.0 \u7ec8\u7aef\uff1aWindows Powershell</p>"},{"location":"coursework/cpd/1/12/#\u5b9e\u9a8c\u5185\u5bb9","title":"\u5b9e\u9a8c\u5185\u5bb9","text":""},{"location":"coursework/cpd/1/12/#\u5fc5\u505a\u7b2c1\u9898","title":"\u5fc5\u505a\u7b2c1\u9898","text":"<p>\u7a0b\u5e8f\u4ee3\u7801 </p><pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\nvoid input(int n, char **p)\n{\n    int i = 0;\n    char str[80] = {0};\n    for(i = 0; i &lt; n; i++)\n    {\n        scanf(\"%s\", str);\n        p[i] = (char*)malloc(sizeof(strlen(str)));\n        strcpy(p[i], str);\n    }\n}\nvoid sort(int n, char **p)\n{\n    char *t;\n    int i = 0, j = 0, k = 0;\n    for(k = 79; k &gt;= 0; k--)\n    {\n        for(i = 0; i &lt; n - 1; i++)\n        {\n            for(j = 0; j &lt; n - 1 - i; j++)\n            {\n                if(p[j][k] &gt; p[j + 1][k])\n                {\n                    t = p[j];\n                    p[j] = p[j + 1];\n                    p[j + 1] = t;\n                }\n            }\n        }\n    }\n}\nint main()\n{\n    int n, i;\n    scanf(\"%d\", &amp;n);\n    char **p = (char**)malloc(sizeof(char*) * n);\n    input(n, p);\n    sort(n, p);\n    printf(\"\\n\\n\");\n    for(i = 0; i &lt; n; i++)\n    {\n        printf(\"%s\\n\", p[i]);\n    }\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c </p>"},{"location":"coursework/cpd/1/12/#\u5fc5\u505a\u7b2c2\u9898","title":"\u5fc5\u505a\u7b2c2\u9898","text":"<p>\u7a0b\u5e8f\u4ee3\u7801 </p><pre><code>#include &lt;stdio.h&gt;\n#define N 10\nint maruplus(int i, int n)\n{\n    int ret;\n    if(i + n &lt;= N) ret = i + n;\n    else ret = (i + n) % N;\n    return ret;\n}\nint main()\n{\n    int a[10][10];\n    int *p;\n    int sum = 0, i = 1, n;\n\n    for(p = (int*)a; p &lt; (int*)a + 100; p++)\n    {\n        *p = p - (int*)a;\n    }\n    scanf(\"%d\", &amp;n);\n    for(i = 1; i &lt;= N; i++)\n    {\n        sum += *((int*)a + (i - 1) * N + maruplus((i - 1), n));\n    }\n    printf(\"%d\", sum);\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c </p>"},{"location":"coursework/cpd/1/12/#\u5fc5\u505a\u7b2c3\u9898","title":"\u5fc5\u505a\u7b2c3\u9898","text":"<p>\u7a0b\u5e8f\u4ee3\u7801 </p><pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\nint main()\n{\n    char tweet[140] = {0};\n    char charBegin, charEnd;\n    char *emojiBegin, *emojiEnd, *p;\n    int i = 0, hasBegin = 0, hasEnd = 0;\n    printf(\"\u8f6c\u4e49\u7b26\uff1a\");\n    scanf(\"%c\", &amp;charBegin);\n    getchar();\n    printf(\"\u7ec8\u6b62\u7b26\uff1a\");\n    scanf(\"%c\", &amp;charEnd);\n    getchar();\n    printf(\"\u8f93\u5165\u6587\u5b57\uff1a\");\n    gets(tweet);\n    for(i = 0; i &lt; strlen(tweet); i++)\n    {\n        if(*(tweet + i) == charBegin &amp;&amp; !hasEnd)\n        {\n            emojiBegin = tweet + i;\n            hasBegin = 1;\n        }\n        if(*(tweet + i) == charEnd &amp;&amp; hasBegin)\n        {\n            emojiEnd = tweet + i;\n            hasEnd = 1;\n            break;\n        }\n    }\n    printf(\"\u8f93\u51fa\uff1a\");\n    for(p = emojiBegin + 1; p &lt; emojiEnd; p++)\n        printf(\"%c\", *p);\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c </p>"},{"location":"coursework/cpd/1/12/#\u9009\u505a\u7b2c1\u9898","title":"\u9009\u505a\u7b2c1\u9898","text":"<p>\u7a0b\u5e8f\u4ee3\u7801 </p> <p>\u8fd0\u884c\u7ed3\u679c </p>"},{"location":"coursework/cpd/1/12/#\u9009\u505a\u7b2c2\u9898","title":"\u9009\u505a\u7b2c2\u9898","text":"<p>\u8fd0\u884c\u7ed3\u679c </p><pre><code>FFINALEEXAM\n</code></pre>"},{"location":"coursework/cpd/1/12/#\u5b9e\u9a8c\u4f53\u4f1a","title":"\u5b9e\u9a8c\u4f53\u4f1a","text":"<p>\u9700\u8981\u8ba4\u771f\u5b66\u4e60\uff0c\u4ed4\u7ec6\u5b8c\u6210\u4f5c\u4e1a\u3002</p>"},{"location":"coursework/cpd/1/13/","title":"\u7b2c\u5341\u4e09\u6b21\u4f5c\u4e1a","text":""},{"location":"coursework/cpd/1/13/#\u7b2c\u5341\u4e09\u6b21\u4f5c\u4e1a","title":"\u7b2c\u5341\u4e09\u6b21\u4f5c\u4e1a","text":""},{"location":"coursework/cpd/1/13/#\u5b9e\u9a8c\u76ee\u7684","title":"\u5b9e\u9a8c\u76ee\u7684","text":"<p>\u5b8c\u6210\u672c\u6b21\u4f5c\u4e1a\uff0c\u5de9\u56fa\u4e0a\u8bfe\u6240\u5b66\u77e5\u8bc6</p>"},{"location":"coursework/cpd/1/13/#\u5b9e\u9a8c\u73af\u5883","title":"\u5b9e\u9a8c\u73af\u5883","text":"<p>\u8bbe\u5907\uff1aOMEN by HP Laptop 16-b1xxx \u64cd\u4f5c\u7cfb\u7edf: Windows 11 \u4e13\u4e1a\u7248 22H2 \u7f16\u8f91\u5668: Visual Studio Code 1.72.1 \u7f16\u8bd1\u5668: gcc 12.1.0 \u7ec8\u7aef\uff1aWindows Powershell</p>"},{"location":"coursework/cpd/1/13/#\u5b9e\u9a8c\u5185\u5bb9","title":"\u5b9e\u9a8c\u5185\u5bb9","text":""},{"location":"coursework/cpd/1/13/#\u5fc5\u505a\u7b2c1\u9898","title":"\u5fc5\u505a\u7b2c1\u9898","text":"<p>\u7a0b\u5e8f\u4ee3\u7801 </p><pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#define N 10\nstruct student\n{\n    int ID;\n    char name[16];\n    char sex;\n    struct\n    {\n        int month;\n        int day;\n        int year;\n    }birthday;\n    float score;\n};\nfloat average(struct student stu[])\n{\n    float scoreSum = 0.0, scoreAve = 0.0;\n    int i = 0;\n    for(i = 0; i &lt; N; i++)\n        scoreSum += stu[i].score;\n    scoreAve = scoreSum / N;\n    return scoreAve;\n}\nvoid sortnShow(struct student stu[])\n{\n    int i = 0, j = 0;\n    struct student t, *p;\n    for(i = 0; i &lt; N - 1; i++)\n        for(j = i + 1; j &lt; N; j++)\n            if(stu[i].score &lt; stu[j].score)\n            {\n                t = stu[i];\n                stu[i] = stu[j];\n                stu[j] = t;\n            }\n    printf(\"ID\\tName\\tSex\\tBirthday\\tScore\\n\");\n    for(p = stu; p &lt; stu + N; p++)\n        printf(\"%d\\t%s\\t%c\\t%d/%d/%d\\t%.2f\\n\", p-&gt;ID, p-&gt;name, p-&gt;sex, p-&gt;birthday.month, p-&gt;birthday.day, p-&gt;birthday.year, p-&gt;score);\n}\nvoid save(struct student stu[])\n{\n    FILE *fp;\n    struct student *p;\n    if((fp = fopen(\"student.dat\", \"wb\")) == NULL)\n    {\n        printf(\"Cannot Open File!\\n\");\n        exit(0);\n    }\n    fwrite(stu, sizeof(struct student), N, fp);\n    fclose(fp);\n}\nvoid search()\n{\n    int searchID, flag = 0;\n    struct student dat[N], *p;\n    FILE *fp;\n    if((fp = fopen(\"student.dat\", \"rb\")) == NULL)\n    {\n        printf(\"Cannot Open File.\\n\");\n        exit(0);\n    }\n    fread(dat, sizeof(struct student), N, fp);\n    fclose(fp);\n    scanf(\"%d\", &amp;searchID);\n    for(p = dat; p &lt; dat + N; p++)\n        if(p-&gt;ID == searchID)\n        {\n            printf(\"ID\\tName\\tSex\\tBirthday\\tScore\\n\");\n            printf(\"%d\\t%s\\t%c\\t%d/%d/%d\\t%.2f\\n\", p-&gt;ID, p-&gt;name, p-&gt;sex, p-&gt;birthday.month, p-&gt;birthday.day, p-&gt;birthday.year, p-&gt;score);\n            flag = 1;\n            break;\n        }\n    if(!flag) printf(\"No Result.\\n\");\n}\nvoid interface(struct student stu[])\n{\n    int opt = 0;\n    do\n    {\n        printf(\"\\n\\n\");\n        printf(\"1) Average\\n\");\n        printf(\"2) Sort &amp; Display\\n\");\n        printf(\"3) Save to 'student.dat'\\n\");\n        printf(\"4) Search from Saved Data\\n\");\n        printf(\"5) Quit\\n\");\n        printf(\"\\nInput Option: \");\n        scanf(\"%d\", &amp;opt);\n        switch(opt)\n        {\n            case 1: printf(\"\\nAverage Score = %.2f\\n\", average(stu)); break;\n            case 2: sortnShow(stu); break;\n            case 3: save(stu); printf(\"\\nSaved Successfully!\\n\"); break;\n            case 4: search(stu); break;\n            case 5: break;\n            default: printf(\"\\nPlease Input a Valid Value.\\n\"); break;\n        }\n    }\n    while(opt != 5);\n}\nint main()\n{\n    struct student stu[N];\n    int i = 0;\n    printf(\"Input Data: ID Name Sex Birthday(MDY) Score\\n\");\n    for(i = 0; i &lt; N; i++)\n    {\n        scanf(\"%d\", &amp;stu[i].ID);\n        scanf(\"%s\", stu[i].name);\n        getchar();\n        scanf(\"%c\", &amp;stu[i].sex);\n        scanf(\"%d\", &amp;stu[i].birthday.month);\n        scanf(\"%d\", &amp;stu[i].birthday.day);\n        scanf(\"%d\", &amp;stu[i].birthday.year);\n        scanf(\"%f\", &amp;stu[i].score);\n    }\n    interface(stu);\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c  </p>"},{"location":"coursework/cpd/1/13/#\u5fc5\u505a\u7b2c2\u9898","title":"\u5fc5\u505a\u7b2c2\u9898","text":"<p>\u7a0b\u5e8f\u4ee3\u7801 </p><pre><code>#include &lt;stdio.h&gt;\nint main()\n{\n    enum week{Monday = 1, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday} day;\n    scanf(\"%d\", &amp;day);\n    switch(day){\n        case Monday: puts(\"Monday\"); break;\n        case Tuesday: puts(\"Tuesday\"); break;\n        case Wednesday: puts(\"Wednesday\"); break;\n        case Thursday: puts(\"Thursday\"); break;\n        case Friday: puts(\"Friday\"); break;\n        case Saturday: puts(\"Saturday\"); break;\n        case Sunday: puts(\"Sunday\"); break;\n        default: puts(\"Error!\");\n    }\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c </p>"},{"location":"coursework/cpd/1/13/#\u5fc5\u505a\u7b2c3\u9898","title":"\u5fc5\u505a\u7b2c3\u9898","text":"<p>\u7a0b\u5e8f\u4ee3\u7801 </p><pre><code>#include &lt;stdio.h&gt;\n#define N 10\nstruct fraction\n{\n    long long int numerator;\n    unsigned long long int denominator;\n};\nstruct fraction Fra_Red(struct fraction f)\n{\n    int i = 2;\n    while(i &lt;= f.denominator)\n    {\n        if(f.denominator % i == 0 &amp;&amp; f.numerator % i == 0)\n        {\n            f.denominator /= i;\n            f.numerator /= i;\n            i = 2;\n        }\n        i++;\n    }\n    return f;\n}\nstruct fraction Fra_Add(struct fraction f1, struct fraction f2)\n{\n    struct fraction ret;\n    if(f1.denominator == 0 || f2.denominator == 0)\n    {\n        ret.denominator = 0;\n        ret.numerator = 0;\n    }\n    else\n    {\n        ret.denominator = f1.denominator * f2.denominator;\n        ret.numerator = f1.numerator * f2.denominator + f2.numerator * f1.denominator;\n        ret = Fra_Red(ret);\n    }\n    return ret;\n}\nstruct fraction Fra_Sub(struct fraction f1, struct fraction f2)\n{\n    struct fraction ret;\n    if(f1.denominator == 0 || f2.denominator == 0)\n    {\n        ret.denominator = 0;\n        ret.numerator = 0;\n    }\n    else\n    {\n        ret.denominator = f1.denominator * f2.denominator;\n        ret.numerator = f1.numerator * f2.denominator - f2.numerator * f1.denominator;\n        ret = Fra_Red(ret);\n    }\n    return ret;\n}\nint main()\n{\n    struct fraction f = {4, 1}, sum = {0, 1};\n    double sumValue = 0.0;\n    int i = 1;\n    for(i = 1; i &lt;= N; i++)\n    {\n        f.denominator = 2 * i - 1;\n        if(i % 2) sum = Fra_Add(sum, f);\n        else sum = Fra_Sub(sum, f);\n    }\n    sumValue = (double)sum.numerator / (double)sum.denominator;\n    printf(\"%lld/%llu\\n\", sum.numerator, sum.denominator);\n    printf(\"%lf\\n\", sumValue);\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c </p>"},{"location":"coursework/cpd/1/13/#\u5b9e\u9a8c\u4f53\u4f1a","title":"\u5b9e\u9a8c\u4f53\u4f1a","text":"<p>\u9700\u8981\u8ba4\u771f\u5b66\u4e60\uff0c\u4ed4\u7ec6\u5b8c\u6210\u4f5c\u4e1a\u3002</p>"},{"location":"coursework/cpd/1/14/","title":"\u7b2c\u5341\u56db\u6b21\u4f5c\u4e1a","text":""},{"location":"coursework/cpd/1/14/#\u7b2c\u5341\u56db\u6b21\u4f5c\u4e1a","title":"\u7b2c\u5341\u56db\u6b21\u4f5c\u4e1a","text":""},{"location":"coursework/cpd/1/14/#\u5b9e\u9a8c\u76ee\u7684","title":"\u5b9e\u9a8c\u76ee\u7684","text":"<p>\u5b8c\u6210\u672c\u6b21\u4f5c\u4e1a\uff0c\u5de9\u56fa\u4e0a\u8bfe\u6240\u5b66\u77e5\u8bc6</p>"},{"location":"coursework/cpd/1/14/#\u5b9e\u9a8c\u73af\u5883","title":"\u5b9e\u9a8c\u73af\u5883","text":"<p>\u8bbe\u5907\uff1aOMEN by HP Laptop 16-b1xxx \u64cd\u4f5c\u7cfb\u7edf: Windows 11 \u4e13\u4e1a\u7248 22H2 \u7f16\u8f91\u5668: Visual Studio Code 1.72.1 \u7f16\u8bd1\u5668: gcc 12.1.0 \u7ec8\u7aef\uff1aWindows Powershell</p>"},{"location":"coursework/cpd/1/14/#\u5b9e\u9a8c\u5185\u5bb9","title":"\u5b9e\u9a8c\u5185\u5bb9","text":""},{"location":"coursework/cpd/1/14/#\u5fc5\u505a\u7b2c1\u9898","title":"\u5fc5\u505a\u7b2c1\u9898","text":"<p>\u7a0b\u5e8f\u4ee3\u7801</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#define N 10\nstruct student\n{\n    int ID;\n    char name[16];\n    char sex;\n    struct\n    {\n        int month;\n        int day;\n        int year;\n    }birthday;\n    float score;\n};\nfloat average(struct student stu[])\n{\n    float scoreSum = 0.0, scoreAve = 0.0;\n    int i = 0;\n    for(i = 0; i &lt; N; i++)\n        scoreSum += stu[i].score;\n    scoreAve = scoreSum / N;\n    return scoreAve;\n}\nvoid sortnShow(struct student stu[])\n{\n    int i = 0, j = 0;\n    struct student t, *p;\n    for(i = 0; i &lt; N - 1; i++)\n        for(j = i + 1; j &lt; N; j++)\n            if(stu[i].score &lt; stu[j].score)\n            {\n                t = stu[i];\n                stu[i] = stu[j];\n                stu[j] = t;\n            }\n    printf(\"ID\\tName\\tSex\\tBirthday\\tScore\\n\");\n    for(p = stu; p &lt; stu + N; p++)\n        printf(\"%d\\t%s\\t%c\\t%d/%d/%d\\t%.2f\\n\", p-&gt;ID, p-&gt;name, p-&gt;sex, p-&gt;birthday.month, p-&gt;birthday.day, p-&gt;birthday.year, p-&gt;score);\n}\nvoid save(struct student stu[])\n{\n    FILE *fp;\n    struct student *p;\n    if((fp = fopen(\"student.dat\", \"wb\")) == NULL)\n    {\n        printf(\"Cannot Open File!\\n\");\n        exit(0);\n    }\n    fwrite(stu, sizeof(struct student), N, fp);\n    fclose(fp);\n}\nvoid search()\n{\n    int searchID, flag = 0;\n    struct student dat[N], *p;\n    FILE *fp;\n    if((fp = fopen(\"student.dat\", \"rb\")) == NULL)\n    {\n        printf(\"Cannot Open File.\\n\");\n        exit(0);\n    }\n    fread(dat, sizeof(struct student), N, fp);\n    fclose(fp);\n    scanf(\"%d\", &amp;searchID);\n    for(p = dat; p &lt; dat + N; p++)\n        if(p-&gt;ID == searchID)\n        {\n            printf(\"ID\\tName\\tSex\\tBirthday\\tScore\\n\");\n            printf(\"%d\\t%s\\t%c\\t%d/%d/%d\\t%.2f\\n\", p-&gt;ID, p-&gt;name, p-&gt;sex, p-&gt;birthday.month, p-&gt;birthday.day, p-&gt;birthday.year, p-&gt;score);\n            flag = 1;\n            break;\n        }\n    if(!flag) printf(\"No Result.\\n\");\n}\nvoid interface(struct student stu[])\n{\n    int opt = 0;\n    do\n    {\n        printf(\"\\n\\n\");\n        printf(\"1) Average\\n\");\n        printf(\"2) Sort &amp; Display\\n\");\n        printf(\"3) Save to 'student.dat'\\n\");\n        printf(\"4) Search from Saved Data\\n\");\n        printf(\"5) Quit\\n\");\n        printf(\"\\nInput Option: \");\n        scanf(\"%d\", &amp;opt);\n        switch(opt)\n        {\n            case 1: printf(\"\\nAverage Score = %.2f\\n\", average(stu)); break;\n            case 2: sortnShow(stu); break;\n            case 3: save(stu); printf(\"\\nSaved Successfully!\\n\"); break;\n            case 4: search(stu); break;\n            case 5: break;\n            default: printf(\"\\nPlease Input a Valid Value.\\n\"); break;\n        }\n    }\n    while(opt != 5);\n}\nint main()\n{\n    struct student stu[N];\n    int i = 0;\n    printf(\"Input Data: ID Name Sex Birthday(MDY) Score\\n\");\n    for(i = 0; i &lt; N; i++)\n    {\n        scanf(\"%d\", &amp;stu[i].ID);\n        scanf(\"%s\", stu[i].name);\n        getchar();\n        scanf(\"%c\", &amp;stu[i].sex);\n        scanf(\"%d\", &amp;stu[i].birthday.month);\n        scanf(\"%d\", &amp;stu[i].birthday.day);\n        scanf(\"%d\", &amp;stu[i].birthday.year);\n        scanf(\"%f\", &amp;stu[i].score);\n    }\n    interface(stu);\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c  </p>"},{"location":"coursework/cpd/1/14/#\u5fc5\u505a\u7b2c2\u9898","title":"\u5fc5\u505a\u7b2c2\u9898","text":"<p>\u7a0b\u5e8f\u4ee3\u7801</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\nint main()\n{\n    FILE *fp;\n    char ch = 0;\n    if((fp = fopen(\"upper.txt\", \"wt\")) == NULL)\n    {\n        printf(\"Cannot Open File!\\n\");\n        exit(0);\n    }\n    while((ch = getchar()) != '#')\n    {\n        if(ch &gt;= 'a' &amp;&amp; ch &lt;= 'z') ch -= 32;\n        fputc(ch, fp);\n    }\n    fclose(fp);\n    if((fp = fopen(\"upper.txt\", \"rt\")) == NULL)\n    {\n        printf(\"Cannot Open File!\\n\");\n        exit(0);\n    }\n    while((ch = fgetc(fp)) != EOF) putchar(ch);\n    fclose(fp);\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c </p>"},{"location":"coursework/cpd/1/14/#\u5fc5\u505a\u7b2c3\u9898","title":"\u5fc5\u505a\u7b2c3\u9898","text":"<p>\u7a0b\u5e8f\u4ee3\u7801</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\nint main()\n{\n    FILE *fp;\n    char fName[81] = {0}, str[81] = {0};\n    scanf(\"%s\", fName);\n    if((fp = fopen(fName, \"rt\")) == NULL)\n    {\n        printf(\"Cannot Open File!\\n\");\n        exit(0);\n    }\n    fgets(str, 80, fp);\n    printf(\"%s\\n\", str);\n    printf(\"%d\\n\", strlen(str));\n    fclose(fp);\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c </p>"},{"location":"coursework/cpd/1/14/#\u5b9e\u9a8c\u4f53\u4f1a","title":"\u5b9e\u9a8c\u4f53\u4f1a","text":"<p>\u9700\u8981\u8ba4\u771f\u5b66\u4e60\uff0c\u4ed4\u7ec6\u5b8c\u6210\u4f5c\u4e1a\u3002</p>"},{"location":"coursework/cpd/1/15/","title":"\u7b2c\u5341\u4e94\u6b21\u4f5c\u4e1a","text":""},{"location":"coursework/cpd/1/15/#\u7b2c\u5341\u4e94\u6b21\u4f5c\u4e1a","title":"\u7b2c\u5341\u4e94\u6b21\u4f5c\u4e1a","text":"<p>\u96be\u70b9\u77e5\u8bc6\uff1a\u6307\u9488\u3001\u94fe\u8868\u3001\u6587\u4ef6</p> <p>\u96be\u70b9\uff1a\u8fd9\u4e9b\u77e5\u8bc6\u76f8\u6bd4\u5176\u4ed6\u77e5\u8bc6\u800c\u8a00\u6bd4\u8f83\u62bd\u8c61\uff0c\u60f3\u8c61\u8d77\u6765\u6709\u4e00\u4e9b\u56f0\u96be\uff0c\u6545\u800c\u611f\u89c9\u6bd4\u8f83\u96be</p> <p>\u5efa\u8bae\uff1a\u201c\u6559\u201d\u65f6\u591a\u7ed3\u5408\u56fe\u50cf\u3001\u901f\u5ea6\u6162\u4e00\u70b9\u8bb2\u89e3\uff1b\u201c\u5b66\u201d\u65f6\u501f\u52a9\u4e00\u4e9b\u53c2\u8003\u4e66\u6765\u4f53\u4f1a\u8be5\u77e5\u8bc6</p> <p></p>"},{"location":"coursework/cpd/1/ex/","title":"\u77f3\u5934\u526a\u5200\u5e03","text":""},{"location":"coursework/cpd/1/ex/#\u77f3\u5934\u526a\u5200\u5e03","title":"\u77f3\u5934\u526a\u5200\u5e03","text":""},{"location":"coursework/cpd/1/ex/#\u529f\u80fd","title":"\u529f\u80fd","text":"<ul> <li>\u4e3b\u83dc\u5355\uff1b</li> <li>\u672c\u5730\u53cc\u4eba\u5bf9\u6218\uff1b</li> <li>\u66f4\u6e05\u6670\u7684\u7528\u6237\u754c\u9762\uff1b</li> <li>\u591a\u5e73\u53f0\u652f\u6301\uff1b</li> <li>\u2026\u2026</li> </ul>"},{"location":"coursework/cpd/1/ex/#\u5907\u6ce8","title":"\u5907\u6ce8","text":"<p>Source Code\u4e3aWindows\u7248\u53ef\u6267\u884c\u6587\u4ef6\u7684\u5de5\u7a0b\u6587\u4ef6\uff0c\u4f7f\u7528Microsoft Visual Studio Ultimate 2013\u5236\u4f5c\u3002</p> <p>\u751f\u6210UNIX\u7248\u53ef\u6267\u884c\u6587\u4ef6\u65f6\uff0c\u5c06\u6240\u6709\u7684<code>system(\"cls\");</code>\u66ff\u6362\u4e3a\u4e86<code>printf(\"\\x1b[H\\x1b[2J\");</code>\u3002</p>"},{"location":"coursework/cpd/2/01/","title":"\u7b2c1\u6b21\u4f5c\u4e1a","text":""},{"location":"coursework/cpd/2/01/#\u7b2c1\u6b21\u4f5c\u4e1a","title":"\u7b2c1\u6b21\u4f5c\u4e1a","text":""},{"location":"coursework/cpd/2/01/#\u5fc5\u505a\u9898","title":"\u5fc5\u505a\u9898","text":""},{"location":"coursework/cpd/2/01/#\u7b2c1\u9898","title":"\u7b2c1\u9898","text":"<p>\u4ee3\u7801</p> <pre><code>#include &lt;iostream&gt;\nusing namespace std;\nenum CPU_Rank\n{\n    P1 = 1,\n    P2,\n    P3,\n    P4,\n    P5,\n    P6,\n    P7\n};\nclass CPU\n{\npublic:\n    void enter();\n    void display();\n\nprivate:\n    CPU_Rank rank;\n    int frequency;\n    float voltage;\n};\nvoid CPU::enter()\n{\n    int r;\n    cout &lt;&lt; \"\u8bf7\u4f9d\u6b21\u8f93\u5165CPU\u7684\u7b49\u7ea7\u3001\u9891\u7387\u548c\u7535\u538b\\n\";\n    cin &gt;&gt; r &gt;&gt; frequency &gt;&gt; voltage;\n    rank = (CPU_Rank)r;\n}\nvoid CPU::display()\n{\n    cout &lt;&lt; \"\u7b49\u7ea7\uff1a\"\n         &lt;&lt; \"P\" &lt;&lt; rank &lt;&lt; endl;\n    cout &lt;&lt; \"\u9891\u7387\uff1a\" &lt;&lt; frequency &lt;&lt; endl;\n    cout &lt;&lt; \"\u7535\u538b\uff1a\" &lt;&lt; voltage &lt;&lt; endl;\n}\nint main()\n{\n    CPU CPU_1;\n    CPU_1.enter();\n    CPU_1.display();\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c</p> <p></p>"},{"location":"coursework/cpd/2/01/#\u7b2c2\u9898","title":"\u7b2c2\u9898","text":"<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\n#define SIZE 15\n\nstruct Position\n{\n    int x, y;\n};\n\nenum ChessColor\n{\n    black = 1,\n    white = 2\n};\n\nclass ChessBoard\n{\npublic:\n    void show();\n    bool setchess(int x, int y, int chesstype);\n\nprivate:\n    short boardinfo[SIZE][SIZE];\n} board;\n\nclass player\n{\npublic:\n    void setchess();\n    void setplayer();\n\nprivate:\n    char name[17];\n    int chesstype;\n    Position chesspos[114];\n    int currentStep;\n} p1, p2;\n\nvoid ChessBoard::show()\n{\n    for (int i = 0; i &lt; SIZE; i++)\n    {\n        for (int j = 0; j &lt; SIZE; j++)\n        {\n            switch (boardinfo[i][j])\n            {\n            case 0:\n                if (i &gt; 0 &amp;&amp; j &gt; 0 &amp;&amp; i &lt; SIZE - 1 &amp;&amp; j &lt; SIZE - 1)\n                    printf(\"\u253c\");\n                else if (i == 0 &amp;&amp; j &gt; 0 &amp;&amp; j &lt; SIZE - 1)\n                    printf(\"\u252c\");\n                else if (i == SIZE - 1 &amp;&amp; j &gt; 0 &amp;&amp; j &lt; SIZE - 1)\n                    printf(\"\u2534\");\n                else if (j == 0 &amp;&amp; i &gt; 0 &amp;&amp; i &lt; SIZE - 1)\n                    printf(\"\u251c\");\n                else if (j == SIZE - 1 &amp;&amp; i &gt; 0 &amp;&amp; i &lt; SIZE - 1)\n                    printf(\"\u2524\");\n                else if (i == 0 &amp;&amp; j == 0)\n                    printf(\"\u250c\");\n                else if (i == 0 &amp;&amp; j == SIZE - 1)\n                    printf(\"\u2510\");\n                else if (i == SIZE - 1 &amp;&amp; j == 0)\n                    printf(\"\u2514\");\n                else if (i == SIZE - 1 &amp;&amp; j == SIZE - 1)\n                    printf(\"\u2518\");\n                break;\n            case 1:\n                printf(\"\u25cf\");\n                break;\n            case 2:\n                printf(\"\u25cb\");\n                break;\n            }\n        }\n        printf(\"\\n\");\n    }\n}\n\nbool ChessBoard::setchess(int x, int y, int chesstype)\n{\n    if (x &gt;= 0 &amp;&amp; x &lt; SIZE &amp;&amp; y &gt;= 0 &amp;&amp; y &lt; SIZE)\n    {\n        if (!boardinfo[x][y])\n        {\n            boardinfo[x][y] = chesstype;\n            return true;\n        }\n        else\n        {\n            printf(\"\u8be5\u4f4d\u7f6e\u5df2\u88ab\u5360\u7528\uff01\\n\");\n            return false;\n        }\n    }\n    else\n    {\n        printf(\"\u8be5\u4f4d\u7f6e\u8d85\u51fa\u8303\u56f4\uff01\\n\");\n        return false;\n    }\n}\n\nvoid player::setchess()\n{\n    bool flag;\n    Position currentchess;\n    do\n    {\n        printf(\"\u8bf7\u8f93\u5165\u4e0b\u5b50\u7684\u4f4d\u7f6e\uff1a\");\n        cin &gt;&gt; currentchess.x &gt;&gt; currentchess.y;\n        flag = board.setchess(currentchess.x, currentchess.y, chesstype);\n    } while (!flag);\n    chesspos[currentStep] = currentchess;\n    currentStep++;\n}\n\nvoid player::setplayer()\n{\n    cin &gt;&gt; name;\n    currentStep = 0;\n}\n\n// int main()\n// {\n//  board.show();\n// }\n</code></pre>"},{"location":"coursework/cpd/2/01/#\u9009\u505a\u9898","title":"\u9009\u505a\u9898","text":""},{"location":"coursework/cpd/2/01/#\u7b2c1\u9898_1","title":"\u7b2c1\u9898","text":"<p>\u4ee3\u7801</p> <p><code>employee.h</code></p> <pre><code>#include &lt;iostream&gt;\nusing namespace std;\nclass employee\n{\npublic:\n    void set_emp()\n    {\n        cin &gt;&gt; individualEmpNo &gt;&gt; grade &gt;&gt; accumPay;\n    };\n    void show()\n    {\n        cout &lt;&lt; endl\n             &lt;&lt; \"Showing Employee Information:\\n\"\n             &lt;&lt; \"individualEmpNo:\" &lt;&lt; individualEmpNo &lt;&lt; endl\n             &lt;&lt; \"grade:\" &lt;&lt; grade &lt;&lt; endl\n             &lt;&lt; \"accumPay:\" &lt;&lt; accumPay &lt;&lt; endl;\n    };\n\nprivate:\n    int individualEmpNo;\n    int grade;\n    int accumPay;\n};\n</code></pre> <p><code>XXX.cpp</code></p> <pre><code>#include \"employee.h\"\nint main()\n{\n    employee emp1, emp2, emp3, emp4;\n    emp1.set_emp();\n    emp2.set_emp();\n    emp3.set_emp();\n    emp4.set_emp();\n    emp1.show();\n    emp2.show();\n    emp3.show();\n    emp4.show();\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c</p> <p></p>"},{"location":"coursework/cpd/2/01/#\u7b2c2\u9898_1","title":"\u7b2c2\u9898","text":"<p>\u8fd0\u884c\u6d4b\u8bd5\u7ed3\u679c</p> <p></p> <p>\u4ee3\u7801\u529f\u80fd\u4e0e\u6ce8\u91ca</p> <p><code>C</code></p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;stdbool.h&gt;\n#define STACK_SIZE 100 // \u5b9a\u4e49\u6808\u7684\u5bb9\u91cf\nstruct Stack           // \u5b9a\u4e49\u6808\u7684\u7ed3\u6784\u4f53\n{\n    int top;                // \u5b9a\u4e49\u6808\u9876\n    int buffer[STACK_SIZE]; // \u5b9a\u4e49\u6570\u91cf\u4e3a\u6808\u7684\u5bb9\u91cf\u7684\u6808\u7684\u7f13\u51b2\n};\nbool stack_push(struct Stack *s, int i) // \u5b9a\u4e49\u63a8\u5165\u51fd\u6570\n{\n    if (s-&gt;top == STACK_SIZE - 1) // \u68c0\u6d4b\u6808\u662f\u5426\u5df2\u6ee1\n    {\n        printf(\"Stack is overflow.\\n\"); // \u663e\u793a\u63d0\u793a\u4fe1\u606f\n        return false;                   // \u8fd4\u56de\u9519\u8bef\u4fe1\u606f\n    }\n    else // \u6808\u672a\u6ee1\uff0c\u7ee7\u7eed\u63a8\u5165\n    {\n        s-&gt;buffer[++(s-&gt;top)] = i; // \u5728\u6808\u7684\u7f13\u51b2\u4e2d\u5b58\u5165\u6240\u63a8\u5165\u7684\u53d8\u91cf\uff0c\u5e76\u5c06\u6808\u9876\u4e0a\u79fb\n        return true;               // \u8fd4\u56de\u6210\u529f\u4fe1\u606f\n    }\n}\nbool stack_pop(struct Stack *s, int *i) // \u5b9a\u4e49\u5f39\u51fa\u51fd\u6570\n{\n    if (s-&gt;top == -1) // \u68c0\u6d4b\u6808\u662f\u5426\u5df2\u7a7a\n    {\n        printf(\"Stack is empty.\\n\"); // \u663e\u793a\u63d0\u793a\u4fe1\u606f\n        return false;                // \u8fd4\u56de\u9519\u8bef\u4fe1\u606f\n    }\n    else // \u6808\u672a\u7a7a\uff0c\u7ee7\u7eed\u5f39\u51fa\n    {\n        *i = s-&gt;buffer[(s-&gt;top)--]; // \u8bb0\u5f55\u5f39\u51fa\u7684\u53d8\u91cf\uff0c\u5e76\u5c06\u6808\u9876\u4e0b\u79fb\n        return true;                // \u8fd4\u56de\u6210\u529f\u4fe1\u606f\n    }\n}\nint main()\n{\n    struct Stack st1, st2; // \u58f0\u660e2\u4e2a\u6808\n    int x;                 // \u58f0\u660e\u4e00\u4e2a\u6574\u578b\u53d8\u91cf\n    st1.top = -1;          // \u521d\u59cb\u5316st1\u7684\u6808\u9876\n    st2.top = -1;          // \u521d\u59cb\u5316st2\u7684\u6808\u9876\n    stack_push(&amp;st1, 12);  // \u5411st1\u4e2d\u63a8\u516512\n    stack_pop(&amp;st1, &amp;x);   // \u5f39\u51fast1\u7684\u6808\u9876\n    stack_push(&amp;st1, 20);  // \u5411st1\u4e2d\u63a8\u516520\n    stack_pop(&amp;st1, &amp;x);   // \u5f39\u51fast1\u7684\u6808\u9876\n    return 0;\n}\n</code></pre> <p><code>C++</code></p> <pre><code>#include &lt;iostream&gt;\nusing namespace std;\n#define STACK_SIZE 100 // \u5b9a\u4e49\u6808\u7684\u5bb9\u91cf\nclass Stack            // \u5b9a\u4e49\u6808\u7684\u7c7b\n{\n    int top;                // \u5b9a\u4e49\u6808\u9876\n    int buffer[STACK_SIZE]; // \u5b9a\u4e49\u6570\u91cf\u4e3a\u6808\u7684\u5bb9\u91cf\u7684\u6808\u7684\u7f13\u51b2\npublic:\n    Stack() { top = -1; } // \u5b9a\u4e49\u6784\u9020\u51fd\u6570\uff0c\u521d\u59cb\u5316\u6808\u9876\n    bool push(int i);     // \u58f0\u660e\u63a8\u5165\u51fd\u6570\n    bool pop(int &amp;i);     // \u58f0\u660e\u5f39\u51fa\u51fd\u6570\n};\nbool Stack::push(int i) // \u5b9a\u4e49\u63a8\u5165\u51fd\u6570\n{\n    if (top == STACK_SIZE - 1) // \u68c0\u6d4b\u6808\u662f\u5426\u5df2\u6ee1\n    {\n        cout &lt;&lt; \"Stack is overflow.\\n\"; // \u663e\u793a\u63d0\u793a\u4fe1\u606f\n        return false;                   // \u8fd4\u56de\u9519\u8bef\u4fe1\u606f\n    }\n    else // \u6808\u672a\u6ee1\uff0c\u7ee7\u7eed\u63a8\u5165\n    {\n        buffer[++top] = i; // \u5728\u6808\u7684\u7f13\u51b2\u4e2d\u5b58\u5165\u6240\u63a8\u5165\u7684\u53d8\u91cf\uff0c\u5e76\u5c06\u6808\u9876\u4e0a\u79fb\n        return true;       // \u8fd4\u56de\u6210\u529f\u4fe1\u606f\n    }\n}\nbool Stack::pop(int &amp;i) // \u5b9a\u4e49\u5f39\u51fa\u51fd\u6570\n{\n    if (top == -1) // \u68c0\u6d4b\u6808\u662f\u5426\u5df2\u7a7a\n    {\n        cout &lt;&lt; \"Stack is empty.\\n\"; // \u663e\u793a\u63d0\u793a\u4fe1\u606f\n        return false;                // \u8fd4\u56de\u9519\u8bef\u4fe1\u606f\n    }\n    else // \u6808\u672a\u7a7a\uff0c\u7ee7\u7eed\u5f39\u51fa\n    {\n        i = buffer[top--]; // \u8bb0\u5f55\u5f39\u51fa\u7684\u53d8\u91cf\uff0c\u5e76\u5c06\u6808\u9876\u4e0b\u79fb\n        return true;       // \u8fd4\u56de\u6210\u529f\u4fe1\u606f\n    }\n}\nint main()\n{\n    Stack st1, st2; // \u58f0\u660e2\u4e2a\u6808\n    int x;          // \u58f0\u660e\u4e00\u4e2a\u6574\u578b\u53d8\u91cf\n    st1.push(12);   // \u5411st1\u4e2d\u63a8\u516512\n    st1.pop(x);     // \u5f39\u51fast1\u7684\u6808\u9876\n    st2.push(20);   // \u5411st1\u4e2d\u63a8\u516520\n    st2.pop(x);     // \u5f39\u51fast1\u7684\u6808\u9876\n    return 0;\n}\n</code></pre>"},{"location":"coursework/cpd/2/02/","title":"\u7b2c\u4e8c\u6b21\u4f5c\u4e1a","text":""},{"location":"coursework/cpd/2/02/#\u7b2c\u4e8c\u6b21\u4f5c\u4e1a","title":"\u7b2c\u4e8c\u6b21\u4f5c\u4e1a","text":""},{"location":"coursework/cpd/2/02/#\u5fc5\u505a\u9898","title":"\u5fc5\u505a\u9898","text":""},{"location":"coursework/cpd/2/02/#\u7b2c1\u9898","title":"\u7b2c1\u9898","text":"<p>\u6e90\u7a0b\u5e8f</p> <pre><code>#include &lt;iostream&gt;\nusing namespace std;\nclass Student\n{\npublic:\n    Student(int i, int g);\n    int getID();\n    int getGrade();\n\nprivate:\n    int studentID;\n    int grade;\n};\nStudent::Student(int i, int g)\n{\n    studentID = i;\n    grade = g;\n}\nint Student::getID()\n{\n    return studentID;\n}\nint Student::getGrade()\n{\n    return grade;\n}\nint main()\n{\n    Student stu[5] = {Student(1, 100), Student(2, 99), Student(3, 98), Student(4, 97), Student(5, 96)};\n    Student *p = stu;\n    for (p = stu; p &lt;= stu + 4; p += 2)\n        cout &lt;&lt; \"\u7b2c\" &lt;&lt; p - stu + 1 &lt;&lt; \"\u4e2a\u5b66\u751f\u7684\u5b66\u53f7\u4e3a\" &lt;&lt; p-&gt;getID() &lt;&lt; \"\uff0c\u6210\u7ee9\u4e3a\" &lt;&lt; p-&gt;getGrade() &lt;&lt; \"\u3002\" &lt;&lt; endl;\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c</p> <p></p>"},{"location":"coursework/cpd/2/02/#\u7b2c2\u9898","title":"\u7b2c2\u9898","text":"<p>\u6e90\u7a0b\u5e8f</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\nusing namespace std;\n\nstruct Position\n{\n    int x, y;\n};\n\nenum ChessColor\n{\n    black = 1,\n    white = 2\n};\n\nclass ChessBoard\n{\npublic:\n    ChessBoard();\n    ChessBoard(int s);\n    void init();\n    void show();\n    bool setchess(int x, int y, int chesstype);\n    ~ChessBoard();\n\nprivate:\n    int size;\n    char **boardinfo;\n} board;\n\nclass player\n{\npublic:\n    player();\n    player(char *n);\n    void setchess();\n    void setname(char *n);\n    ~player();\n\nprivate:\n    char *name;\n    int chesstype;\n    Position chesspos[114];\n    int currentStep;\n} p1, p2;\n\n\nChessBoard::ChessBoard()\n{\n    size = 15;\n    init();\n}\n\nChessBoard::ChessBoard(int s)\n{\n    size = s;\n    init();\n}\n\nvoid ChessBoard::init()\n{\n    boardinfo = new char *[size];\n    for (int i = 0; i &lt; size; i++)\n    {\n        boardinfo[i] = new char[size];\n    }\n    for (int i = 0; i &lt; size; i++)\n    {\n        for (int j = 0; j &lt; size; j++)\n        {\n            boardinfo[i][j] = 0;\n        }\n    }\n}\n\nvoid ChessBoard::show()\n{\n    for (int i = 0; i &lt; size; i++)\n    {\n        for (int j = 0; j &lt; size; j++)\n        {\n            switch (boardinfo[i][j])\n            {\n            case 0:\n                if (i &gt; 0 &amp;&amp; j &gt; 0 &amp;&amp; i &lt; size - 1 &amp;&amp; j &lt; size - 1)\n                    printf(\"\u253c\");\n                else if (i == 0 &amp;&amp; j &gt; 0 &amp;&amp; j &lt; size - 1)\n                    printf(\"\u252c\");\n                else if (i == size - 1 &amp;&amp; j &gt; 0 &amp;&amp; j &lt; size - 1)\n                    printf(\"\u2534\");\n                else if (j == 0 &amp;&amp; i &gt; 0 &amp;&amp; i &lt; size - 1)\n                    printf(\"\u251c\");\n                else if (j == size - 1 &amp;&amp; i &gt; 0 &amp;&amp; i &lt; size - 1)\n                    printf(\"\u2524\");\n                else if (i == 0 &amp;&amp; j == 0)\n                    printf(\"\u250c\");\n                else if (i == 0 &amp;&amp; j == size - 1)\n                    printf(\"\u2510\");\n                else if (i == size - 1 &amp;&amp; j == 0)\n                    printf(\"\u2514\");\n                else if (i == size - 1 &amp;&amp; j == size - 1)\n                    printf(\"\u2518\");\n                break;\n            case 1:\n                printf(\"\u25cf\");\n                break;\n            case 2:\n                printf(\"\u25cb\");\n                break;\n            }\n        }\n        printf(\"\\n\");\n    }\n}\n\nbool ChessBoard::setchess(int x, int y, int chesstype)\n{\n    if (x &gt;= 0 &amp;&amp; x &lt; size &amp;&amp; y &gt;= 0 &amp;&amp; y &lt; size)\n    {\n        if (!boardinfo[x][y])\n        {\n            boardinfo[x][y] = chesstype;\n            return true;\n        }\n        else\n        {\n            printf(\"\u8be5\u4f4d\u7f6e\u5df2\u88ab\u5360\u7528\uff01\\n\");\n            return false;\n        }\n    }\n    else\n    {\n        printf(\"\u8be5\u4f4d\u7f6e\u8d85\u51fa\u8303\u56f4\uff01\\n\");\n        return false;\n    }\n}\n\nChessBoard::~ChessBoard()\n{\n    for (int i = 0; i &lt; size; i++)\n    {\n        delete[] boardinfo[i];\n    }\n    delete[] boardinfo;\n}\n\nplayer::player()\n{\n    name = new char[14];\n    strcpy(name, \"PlayerUnknown\");\n}\n\nplayer::player(char *n)\n{\n    name = new char[strlen(n) + 1];\n    strcpy(name, n);\n}\n\nvoid player::setchess()\n{\n    bool flag;\n    Position currentchess;\n    do\n    {\n        printf(\"\u8bf7\u8f93\u5165\u4e0b\u5b50\u7684\u4f4d\u7f6e\uff1a\");\n        cin &gt;&gt; currentchess.x &gt;&gt; currentchess.y;\n        flag = board.setchess(currentchess.x, currentchess.y, chesstype);\n    } while (!flag);\n    chesspos[currentStep] = currentchess;\n    currentStep++;\n}\n\nvoid player::setname(char *n)\n{\n    delete[] name;\n    name = new char[strlen(n) + 1];\n    strcpy(name, n);\n}\n\nplayer::~player()\n{\n    delete[] name;\n}\n\n// int main()\n// {\n//  board.show();\n// }\n</code></pre>"},{"location":"coursework/cpd/2/02/#\u9009\u505a\u9898","title":"\u9009\u505a\u9898","text":""},{"location":"coursework/cpd/2/02/#\u7b2c1\u9898_1","title":"\u7b2c1\u9898","text":"<p>\u6e90\u7a0b\u5e8f</p> <p><code>employee.h</code></p> <p></p><pre><code>#include &lt;iostream&gt;\nusing namespace std;\nclass employee\n{\npublic:\n    employee();\n    employee(int g, int p);\n    void set_emp();\n    void show();\n    ~employee();\n\nprivate:\n    int individualEmpNo;\n    int grade;\n    int accumPay;\n    static int currentEmpNo;\n};\n</code></pre> <code>XXX.cpp</code> <pre><code>#include \"employee.h\"\n\nint employee::currentEmpNo = 1;\n\nemployee::employee()\n{\n    individualEmpNo = currentEmpNo;\n    currentEmpNo++;\n    grade = individualEmpNo * 10;\n    accumPay = individualEmpNo * 1000;\n}\n\nemployee::employee(int g, int p)\n{\n    individualEmpNo = currentEmpNo;\n    currentEmpNo++;\n    grade = g;\n    accumPay = p;\n}\n\nvoid employee::set_emp()\n{\n    cout &lt;&lt; \"\u8bf7\u8f93\u5165\u7f16\u53f7\u4e3a\" &lt;&lt; individualEmpNo &lt;&lt; \"\u7684\u5458\u5de5\u7684\u7ea7\u522b\uff1a\" &lt;&lt; endl;\n    cin &gt;&gt; grade;\n    cout &lt;&lt; \"\u8bf7\u8f93\u5165\u7f16\u53f7\u4e3a\" &lt;&lt; individualEmpNo &lt;&lt; \"\u7684\u5458\u5de5\u7684\u6708\u85aa\uff1a\" &lt;&lt; endl;\n    cin &gt;&gt; accumPay;\n}\n\nvoid employee::show()\n{\n    cout &lt;&lt; \"\u6b63\u5728\u8f93\u51fa\u5458\u5de5\u4fe1\u606f\uff1a\" &lt;&lt; endl\n         &lt;&lt; \"\u7f16\u53f7\uff1a\" &lt;&lt; individualEmpNo &lt;&lt; endl\n         &lt;&lt; \"\u7ea7\u522b\uff1a\" &lt;&lt; grade &lt;&lt; endl\n         &lt;&lt; \"\u6708\u85aa\uff1a\" &lt;&lt; accumPay &lt;&lt; endl\n         &lt;&lt; endl;\n}\n\nemployee::~employee()\n{\n    cout &lt;&lt; \"\u7f16\u53f7\u4e3a\" &lt;&lt; individualEmpNo &lt;&lt; \"\u7684\u5458\u5de5\uff0c\u6b22\u8fce\u4f7f\u7528\uff0c\u518d\u89c1\uff01\" &lt;&lt; endl;\n}\n\nint main()\n{\n    employee emp1, emp2, emp3, emp4;\n    emp1.set_emp();\n    emp2.set_emp();\n    emp3.set_emp();\n    emp4.set_emp();\n    emp1.show();\n    emp2.show();\n    emp3.show();\n    emp4.show();\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c</p> <p></p>"},{"location":"coursework/cpd/2/02/#\u7b2c2\u9898_1","title":"\u7b2c2\u9898","text":"<p>\u6e90\u7a0b\u5e8f</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\nusing namespace std;\nclass Strings\n{\npublic:\n    Strings(char *s);\n    ~Strings();\n    void Print();\n    void Set(char *s);\n\nprivate:\n    int length;\n    char *str;\n};\n\nStrings::Strings(char *s)\n{\n    length = strlen(s);\n    str = new char[length + 1];\n    strcpy(str, s);\n}\n\nStrings::~Strings()\n{\n    delete[] str;\n}\n\nvoid Strings::Print()\n{\n    cout &lt;&lt; \"str = \" &lt;&lt; str &lt;&lt; endl\n         &lt;&lt; \"length = \" &lt;&lt; length &lt;&lt; endl;\n}\n\nvoid Strings::Set(char *s)\n{\n    delete[] str;\n    length = strlen(s);\n    str = new char[length + 1];\n    strcpy(str, s);\n}\n\nint main()\n{\n    Strings str1(\"114\");\n    Strings str2(\"514\");\n    str1.Print();\n    str2.Print();\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c</p> <p></p>"},{"location":"coursework/cpd/2/03/","title":"\u7b2c\u4e09\u6b21\u4f5c\u4e1a","text":""},{"location":"coursework/cpd/2/03/#\u7b2c\u4e09\u6b21\u4f5c\u4e1a","title":"\u7b2c\u4e09\u6b21\u4f5c\u4e1a","text":""},{"location":"coursework/cpd/2/03/#\u5fc5\u505a\u9898","title":"\u5fc5\u505a\u9898","text":""},{"location":"coursework/cpd/2/03/#\u7b2c1\u9898","title":"\u7b2c1\u9898","text":"<p>\u6e90\u4ee3\u7801</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\nusing namespace std;\n\nstruct Position\n{\n    int x, y;\n};\n\nclass ChessBoard;\nclass player;\n\nclass ChessBoard\n{\npublic:                                         // \u4e3a\u907f\u514d\u9ebb\u70e6\u5168\u90e8\u516c\u6709\n    ChessBoard(int s = 15);                     // \u58f0\u660e\u6784\u9020\u51fd\u6570\n    void init();                                // \u58f0\u660e\u521d\u59cb\u5316\u68cb\u76d8\u51fd\u6570\n    void show();                                // \u58f0\u660e\u5c55\u793a\u68cb\u76d8\u51fd\u6570\n    bool setchess(int x, int y, int chesstype); // \u58f0\u660e\u5168\u5c40\u4e0b\u5b50\u51fd\u6570\n    char judge(player &amp;p);                      // \u58f0\u660e\u5224\u65ad\u8f93\u8d62\u51fd\u6570\n    ~ChessBoard();                              // \u58f0\u660e\u6790\u6784\u51fd\u6570\n    char **boardinfo;                           // \u68cb\u76d8\n    static int step;                            // \u603b\u6b65\u6570\n    int size;                                   // \u68cb\u76d8\u5927\u5c0f\n};\n\nint ChessBoard::step = 0;\n\nclass player\n{\npublic:\n    player(char *n = \"PlayerUnknown\");                     // \u58f0\u660e\u6784\u9020\u51fd\u6570\n    void setchess(ChessBoard &amp;board);                      // \u58f0\u660e\u73a9\u5bb6\u4e0b\u5b50\u51fd\u6570\n    void setname(char *n);                                 // \u58f0\u660e\u73a9\u5bb6\u8bbe\u7f6e\u540d\u79f0\u51fd\u6570\n    char *getname();                                       // \u58f0\u660e\u73a9\u5bb6\u83b7\u53d6\u540d\u79f0\u51fd\u6570\n    char getChessType();                                   // \u58f0\u660e\u73a9\u5bb6\u83b7\u53d6\u68cb\u5b50\u7c7b\u578b\u51fd\u6570\n    Position getLastChess();                               // \u58f0\u660e\u83b7\u53d6\u73a9\u5bb6\u6700\u540e\u4e00\u6b65\u843d\u5b50\u4f4d\u7f6e\u51fd\u6570\n    bool checkRow(ChessBoard &amp;board, Position lastChess);  // \u58f0\u660e\u68c0\u67e5\u662f\u5426\u4e94\u5b50\u8fde\u73e0\u51fd\u6570\n    bool checkCol(ChessBoard &amp;board, Position lastChess);  // \u58f0\u660e\u68c0\u67e5\u662f\u5426\u4e94\u5b50\u8fde\u73e0\u51fd\u6570\n    bool checkDiag(ChessBoard &amp;board, Position lastChess); // \u58f0\u660e\u68c0\u67e5\u662f\u5426\u4e94\u5b50\u8fde\u73e0\u51fd\u6570\n    bool checkGaid(ChessBoard &amp;board, Position lastChess); // \u58f0\u660e\u68c0\u67e5\u662f\u5426\u4e94\u5b50\u8fde\u73e0\u51fd\u6570\n    ~player();//\u58f0\u660e\u6790\u6784\u51fd\u6570\n\nprivate:\n    char *name;             // \u73a9\u5bb6\u540d\u79f0\n    char chesstype;         // \u68cb\u5b50\u7c7b\u578b\n    Position chesspos[114]; // \u73a9\u5bb6\u6bcf\u6b65\u843d\u5b50\u4f4d\u7f6e\n    int currentStep;        // \u5f53\u524d\u6b65\u6570\n    static char temp;\n};\n\nchar player::temp = 1;\n\n//\u68cb\u76d8\u6784\u9020\u51fd\u6570\nChessBoard::ChessBoard(int s)\n{\n    size = s;\n    init();\n}\n\n//\u68cb\u76d8\u521d\u59cb\u5316\u51fd\u6570\nvoid ChessBoard::init()\n{\n    boardinfo = new char *[size];\n    for (int i = 0; i &lt; size; i++)\n    {\n        boardinfo[i] = new char[size];\n    }\n    for (int i = 0; i &lt; size; i++)\n    {\n        for (int j = 0; j &lt; size; j++)\n        {\n            boardinfo[i][j] = 0;\n        }\n    }\n}\n\n//\u68cb\u76d8\u5c55\u793a\u51fd\u6570\nvoid ChessBoard::show()\n{\n    system(\"clear\"); // Windows `system(\"cls\");`\n    printf(\" \");\n    for (int i = 0; i &lt; size; i++)\n        printf(\"%d\", i % 10);\n    printf(\"\\n\");\n    for (int i = 0; i &lt; size; i++)\n    {\n        printf(\"%d\", i % 10);\n        for (int j = 0; j &lt; size; j++)\n        {\n            switch (boardinfo[i][j])\n            {\n            case 0:\n                if (i &gt; 0 &amp;&amp; j &gt; 0 &amp;&amp; i &lt; size - 1 &amp;&amp; j &lt; size - 1)\n                    printf(\"\u253c\");\n                else if (i == 0 &amp;&amp; j &gt; 0 &amp;&amp; j &lt; size - 1)\n                    printf(\"\u252c\");\n                else if (i == size - 1 &amp;&amp; j &gt; 0 &amp;&amp; j &lt; size - 1)\n                    printf(\"\u2534\");\n                else if (j == 0 &amp;&amp; i &gt; 0 &amp;&amp; i &lt; size - 1)\n                    printf(\"\u251c\");\n                else if (j == size - 1 &amp;&amp; i &gt; 0 &amp;&amp; i &lt; size - 1)\n                    printf(\"\u2524\");\n                else if (i == 0 &amp;&amp; j == 0)\n                    printf(\"\u250c\");\n                else if (i == 0 &amp;&amp; j == size - 1)\n                    printf(\"\u2510\");\n                else if (i == size - 1 &amp;&amp; j == 0)\n                    printf(\"\u2514\");\n                else if (i == size - 1 &amp;&amp; j == size - 1)\n                    printf(\"\u2518\");\n                break;\n            case 1:\n                printf(\"\u25cf\");\n                break;\n            case 2:\n                printf(\"\u25cb\");\n                break;\n            }\n        }\n        printf(\"\\n\");\n    }\n}\n\n//\u5168\u5c40\u4e0b\u5b50\u51fd\u6570\nbool ChessBoard::setchess(int x, int y, int chesstype)\n{\n    if (x &gt;= 0 &amp;&amp; x &lt; size &amp;&amp; y &gt;= 0 &amp;&amp; y &lt; size)\n    {\n        if (!boardinfo[x][y])\n        {\n            boardinfo[x][y] = chesstype;\n            step++;\n            return true;\n        }\n        else\n        {\n            printf(\"\u8be5\u4f4d\u7f6e\u5df2\u88ab\u5360\u7528\uff01\\n\");\n            return false;\n        }\n    }\n    else\n    {\n        printf(\"\u8be5\u4f4d\u7f6e\u8d85\u51fa\u8303\u56f4\uff01\\n\");\n        return false;\n    }\n}\n\n//\u5168\u5c40\u5224\u65ad\u8f93\u8d62\u51fd\u6570\nchar ChessBoard::judge(player &amp;p)\n{\n    Position lastChess = p.getLastChess();\n    if (p.checkRow(*this, lastChess) || p.checkCol(*this, lastChess) || p.checkDiag(*this, lastChess) || p.checkGaid(*this, lastChess))\n        return p.getChessType();\n    else\n        return 0;\n}\n\n//\u68cb\u76d8\u6790\u6784\u51fd\u6570\nChessBoard::~ChessBoard()\n{\n    for (int i = 0; i &lt; size; i++)\n    {\n        delete[] boardinfo[i];\n    }\n    delete[] boardinfo;\n}\n\n//\u73a9\u5bb6\u6784\u9020\u51fd\u6570\nplayer::player(char *n)\n{\n    name = new char[strlen(n) + 1];\n    strcpy(name, n);\n    currentStep = 0;\n    chesstype = temp;\n    temp++;\n}\n\n//\u73a9\u5bb6\u4e0b\u5b50\u51fd\u6570\nvoid player::setchess(ChessBoard &amp;board)\n{\n    bool flag;\n    Position currentchess;\n    do\n    {\n        cout &lt;&lt; name &lt;&lt; \"\uff0c\u8bf7\u8f93\u5165\u4e0b\u5b50\u7684\u4f4d\u7f6e\uff1a\uff08\u7eb5\u5411x \u6a2a\u5411y\uff09\" &lt;&lt; endl;\n        cin &gt;&gt; currentchess.x &gt;&gt; currentchess.y;\n        flag = board.setchess(currentchess.x, currentchess.y, chesstype);\n    } while (!flag);\n    chesspos[currentStep] = currentchess;\n    currentStep++;\n}\n\n//\u73a9\u5bb6\u8bbe\u7f6e\u540d\u79f0\u51fd\u6570\nvoid player::setname(char *n)\n{\n    delete[] name;\n    name = new char[strlen(n) + 1];\n    strcpy(name, n);\n}\n\n//\u73a9\u5bb6\u83b7\u53d6\u540d\u79f0\u51fd\u6570\nchar *player::getname()\n{\n    return name;\n}\n\n//\u73a9\u5bb6\u83b7\u53d6\u68cb\u5b50\u7c7b\u578b\u51fd\u6570\nchar player::getChessType()\n{\n    return chesstype;\n}\n\n//\u73a9\u5bb6\u83b7\u53d6\u6700\u540e\u4e00\u6b65\u843d\u5b50\u4f4d\u7f6e\u51fd\u6570\nPosition player::getLastChess()\n{\n    return chesspos[currentStep - 1];\n}\n\n//\u68c0\u67e5\u662f\u5426\u4e94\u5b50\u8fde\u73e0\nbool player::checkRow(ChessBoard &amp;board, Position lastChess)\n{\n    int count = 0;\n    bool flag = false;\n    for (int i = ((lastChess.x &lt; 4) ? 0 : lastChess.x - 4); i &lt;= ((lastChess.x &gt; board.size - 5) ? board.size - 1 : lastChess.x + 4); i++)\n    {\n        if (board.boardinfo[i][lastChess.y] == chesstype)\n            count++;\n        else\n            count = 0;\n        if (count &gt;= 5)\n        {\n            flag = true;\n            break;\n        }\n    }\n    return flag;\n}\n\n//\u68c0\u67e5\u662f\u5426\u4e94\u5b50\u8fde\u73e0\nbool player::checkCol(ChessBoard &amp;board, Position lastChess)\n{\n    int count = 0;\n    bool flag = false;\n    for (int i = ((lastChess.y &lt; 4) ? 0 : lastChess.y - 4); i &lt;= ((lastChess.y &gt; board.size - 5) ? board.size - 1 : lastChess.y + 4); i++)\n    {\n        if (board.boardinfo[lastChess.x][i] == chesstype)\n            count++;\n        else\n            count = 0;\n        if (count &gt;= 5)\n        {\n            flag = true;\n            break;\n        }\n    }\n    return flag;\n}\n\n//\u68c0\u67e5\u662f\u5426\u4e94\u5b50\u8fde\u73e0\nbool player::checkDiag(ChessBoard &amp;board, Position lastChess)\n{\n    int count = 0;\n    bool flag = false;\n    for (int i = ((lastChess.x &gt; lastChess.y) ? ((lastChess.y &lt; 4) ? lastChess.x - lastChess.y : lastChess.x - 4) : ((lastChess.x &lt; 4) ? 0 : lastChess.x - 4)); i &lt;= ((lastChess.x &gt; lastChess.y) ? ((lastChess.x &gt; board.size - 5) ? board.size - 1 : lastChess.x + 4) : ((lastChess.y &gt; board.size - 5) ? board.size - lastChess.y + lastChess.x - 1 : lastChess.x + 4)); i++)\n    {\n        if (board.boardinfo[i][i + lastChess.y - lastChess.x] == chesstype)\n            count++;\n        else\n            count = 0;\n        if (count &gt;= 5)\n        {\n            flag = true;\n            break;\n        }\n    }\n    return flag;\n}\n\n//\u68c0\u67e5\u662f\u5426\u4e94\u5b50\u8fde\u73e0\nbool player::checkGaid(ChessBoard &amp;board, Position lastChess)\n{\n    int x = lastChess.x, y = lastChess.y;\n    char **_boardinfo = new char *[board.size];\n    for (int i = 0; i &lt; board.size; i++)\n    {\n        _boardinfo[i] = new char[board.size];\n    }\n    for (int i = 0; i &lt; board.size; i++)\n    {\n        for (int j = 0; j &lt; board.size; j++)\n        {\n            _boardinfo[i][j] = board.boardinfo[i][board.size - j - 1];\n        }\n    }\n    int count = 0;\n    bool flag = false;\n    y = board.size - y - 1;\n    for (int i = ((x &gt; y) ? ((y &lt; 4) ? x - y : x - 4) : ((x &lt; 4) ? 0 : x - 4)); i &lt;= ((x &gt; y) ? ((x &gt; board.size - 5) ? board.size - 1 : x + 4) : ((y &gt; board.size - 5) ? board.size - y + x - 1 : x + 4)); i++)\n    {\n        if (_boardinfo[i][i + y - x] == chesstype)\n            count++;\n        else\n            count = 0;\n        if (count &gt;= 5)\n        {\n            flag = true;\n            break;\n        }\n    }\n    for (int i = 0; i &lt; board.size; i++)\n    {\n        delete[] _boardinfo[i];\n    }\n    delete[] _boardinfo;\n    return flag;\n}\n\n//\u73a9\u5bb6\u6790\u6784\u51fd\u6570\nplayer::~player()\n{\n    delete[] name;\n}\n\nint main()\n{\n    char p1n[17] = {0}, p2n[17] = {0};\n    int size = 0;\n    char flag = 0;\n    player p[2];\n    int i = 0;\n    cout &lt;&lt; \"--\u4e94\u5b50\u68cb--\" &lt;&lt; endl\n         &lt;&lt; endl;\n    cout &lt;&lt; \"\u8f93\u5165\u73a9\u5bb61\uff08\u9ed1\u5b50\uff09\u540d\u79f0\uff1a\" &lt;&lt; endl\n         &lt;&lt; \"&gt;&gt;&gt; \";\n    cin &gt;&gt; p1n;\n    cout &lt;&lt; \"\u8f93\u5165\u73a9\u5bb62\uff08\u767d\u5b50\uff09\u540d\u79f0\uff1a\" &lt;&lt; endl\n         &lt;&lt; \"&gt;&gt;&gt; \";\n    cin &gt;&gt; p2n;\n    cout &lt;&lt; \"\u8f93\u5165\u68cb\u76d8\u5927\u5c0f\uff1a\" &lt;&lt; endl\n         &lt;&lt; \"&gt;&gt;&gt; \";\n    cin &gt;&gt; size;\n    p[0].setname(p1n);\n    p[1].setname(p2n);\n    ChessBoard board(size);\n    do\n    {\n        board.show();\n        cout &lt;&lt; p[i].getname() &lt;&lt; \"\u6765\u4e0b\u7b2c\" &lt;&lt; board.step + 1 &lt;&lt; \"\u6b65\u68cb\uff01\";\n        p[i].setchess(board);\n        flag = board.judge(p[i]);\n        i++;\n        i %= 2;\n    } while (!flag);\n    board.show();\n    cout &lt;&lt; \"\u672c\u573a\u6e38\u620f\u5171\u4e0b\u4e86\" &lt;&lt; board.step &lt;&lt; \"\u6b65\u68cb\uff0c\u6700\u7ec8\" &lt;&lt; ((flag % 2) ? p[0].getname() : p[1].getname()) &lt;&lt; \"\u83b7\u80dc\uff01\" &lt;&lt; endl;\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c</p> <p></p>"},{"location":"coursework/cpd/2/03/#\u7b2c2\u9898","title":"\u7b2c2\u9898","text":"<p>\u6e90\u4ee3\u7801</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\nusing namespace std;\n\nclass Student\n{\npublic:\n    Student()\n    {\n        char defname[] = {\"DefaultName\"};\n        stuName = new char[strlen(defname) + 1];\n        strcpy(stuName, defname);\n    }\n    Student(Student &amp;stu)\n    {\n        stuName = new char[strlen(stu.stuName) + 1];\n        strcpy(stuName, stu.stuName);\n        stuNo = stu.stuNo;\n        stuScore = stu.stuScore;\n    }\n    void set(char *_stuName, int _stuNo, int _stuScore)\n    {\n        delete[] stuName;\n        stuName = new char[strlen(_stuName) + 1];\n        strcpy(stuName, _stuName);\n        stuNo = _stuNo;\n        stuScore = _stuScore;\n    }\n    char *getName()\n    {\n        return stuName;\n    }\n    int getNo()\n    {\n        return stuNo;\n    }\n    int getScore()\n    {\n        return stuScore;\n    }\n    void print()\n    {\n        cout &lt;&lt; \"Student Info:\" &lt;&lt; endl\n             &lt;&lt; \"StuName: \" &lt;&lt; stuName &lt;&lt; endl\n             &lt;&lt; \"StuNo: \" &lt;&lt; stuNo &lt;&lt; endl\n             &lt;&lt; \"StuScore: \" &lt;&lt; stuScore &lt;&lt; endl;\n    }\n    ~Student()\n    {\n        delete[] stuName;\n    }\n\nprivate:\n    char *stuName;\n    int stuNo;\n    int stuScore;\n};\n\nStudent *max(Student stu[], int n)\n{\n    Student *p, *max = stu;\n    for (p = stu; p - stu &lt; n; p++)\n    {\n        if (p-&gt;getScore() &gt; max-&gt;getScore())\n            max = p;\n    }\n    cout &lt;&lt; max-&gt;getNo() &lt;&lt; endl;\n    return max;\n}\n\nint main()\n{\n    Student stu[10];\n    Student *p;\n    stu[0].set(\"Hitotsu\", 1919810, 233);\n    stu[1].set(\"Futatsu\", 1919811, 666);\n    stu[2].set(\"Mittsu\", 1919812, 114);\n    stu[3].set(\"Yottsu\", 1919813, 514);\n    stu[4].set(\"Itsutsu\", 1919814, 251);\n    stu[5].set(\"Muttsu\", 1919815, 486);\n    stu[6].set(\"Nanatsu\", 1919816, 196);\n    stu[7].set(\"Yattsu\", 1919817, 384);\n    stu[8].set(\"Kokonotsu\", 1919818, 667);\n    stu[9].set(\"Too\", 1919819, 665);\n    p = max(stu, 10);\n    Student newStu(*p);\n    newStu.print();\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c</p> <p></p>"},{"location":"coursework/cpd/2/03/#\u9009\u505a\u9898","title":"\u9009\u505a\u9898","text":""},{"location":"coursework/cpd/2/03/#\u7b2c1\u9898_1","title":"\u7b2c1\u9898","text":"<p>\u6e90\u4ee3\u7801</p> <pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nclass Salesman\n{\npublic:\n    Salesman(int _saleNo, int _saleNum, float _salePri);\n    static float getSum();\n    static float getAvePri();\n\nprivate:\n    int saleNo;\n    int saleNum;\n    float salePri;\n    static int sumNum;\n    static float sumPri;\n    static float avePri;\n};\n\nint Salesman::sumNum = 0;\nfloat Salesman::sumPri = 0;\nfloat Salesman::avePri = 0;\n\nSalesman::Salesman(int _saleNo, int _saleNum, float _salePri)\n{\n    saleNo = _saleNo;\n    saleNum = _saleNum;\n    salePri = _salePri;\n    sumNum += saleNum;\n    sumPri += salePri * saleNum;\n    avePri = sumPri / sumNum;\n}\n\nfloat Salesman::getSum()\n{\n    return sumPri;\n}\n\nfloat Salesman::getAvePri()\n{\n    return avePri;\n}\n\nint main()\n{\n    Salesman s1(101, 5, 23.5), s2(102, 12, 24.5), s3(103, 100, 21.5);\n    cout &lt;&lt; \"\u5f53\u65e5\u6b64\u5546\u54c1\u603b\u9500\u552e\u6b3e\u4e3a\" &lt;&lt; s3.getSum() &lt;&lt; \"\u5143\u3002\" &lt;&lt; endl\n         &lt;&lt; \"\u6bcf\u4ef6\u5546\u54c1\u5e73\u5747\u552e\u4ef7\u4e3a\" &lt;&lt; s3.getAvePri() &lt;&lt; \"\u5143\u3002\" &lt;&lt; endl;\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c</p> <p></p>"},{"location":"coursework/cpd/2/03/#\u7b2c2\u9898_1","title":"\u7b2c2\u9898","text":"<p>\u6e90\u4ee3\u7801</p> <p><code>employee.h</code></p> <pre><code>#include &lt;iostream&gt;\nusing namespace std;\nclass employee\n{\npublic:\n    employee();\n    employee(int g, int p);\n    void set_emp();\n    void show();\n    ~employee();\n\nprivate:\n    int individualEmpNo;\n    int grade;\n    int accumPay;\n    static int currentEmpNo;\n};\n</code></pre> <p><code>XXX.cpp</code></p> <pre><code>#include \"employee.h\"\n\nint employee::currentEmpNo = 1;\n\nemployee::employee()\n{\n    individualEmpNo = currentEmpNo; // \u804c\u5de5\u7f16\u53f7\u81ea\u52a8\u4ea7\u751f\n    currentEmpNo++;                 // \u81ea\u52a8\u52a01\n    grade = 1;\n    accumPay = 1000;\n}\n\nemployee::employee(int g, int p)\n{\n    individualEmpNo = currentEmpNo; // \u804c\u5de5\u7f16\u53f7\u81ea\u52a8\u4ea7\u751f\n    currentEmpNo++;                 // \u81ea\u52a8\u52a01\n    grade = g;\n    accumPay = p;\n}\n\nvoid employee::set_emp()\n{\n    cout &lt;&lt; \"\u8bf7\u8f93\u5165\u7f16\u53f7\u4e3a\" &lt;&lt; individualEmpNo &lt;&lt; \"\u7684\u5458\u5de5\u7684\u7ea7\u522b\uff1a\" &lt;&lt; endl;\n    cin &gt;&gt; grade;\n    cout &lt;&lt; \"\u8bf7\u8f93\u5165\u7f16\u53f7\u4e3a\" &lt;&lt; individualEmpNo &lt;&lt; \"\u7684\u5458\u5de5\u7684\u6708\u85aa\uff1a\" &lt;&lt; endl;\n    cin &gt;&gt; accumPay;\n}\n\nvoid employee::show()\n{\n    cout &lt;&lt; \"\u6b63\u5728\u8f93\u51fa\u5458\u5de5\u4fe1\u606f\uff1a\" &lt;&lt; endl\n         &lt;&lt; \"\u7f16\u53f7\uff1a\" &lt;&lt; individualEmpNo &lt;&lt; endl\n         &lt;&lt; \"\u7ea7\u522b\uff1a\" &lt;&lt; grade &lt;&lt; endl\n         &lt;&lt; \"\u6708\u85aa\uff1a\" &lt;&lt; accumPay &lt;&lt; endl\n         &lt;&lt; endl;\n}\n\nemployee::~employee()\n{\n    cout &lt;&lt; \"\u7f16\u53f7\u4e3a\" &lt;&lt; individualEmpNo &lt;&lt; \"\u7684\u5458\u5de5\uff0c\u6b22\u8fce\u4f7f\u7528\uff0c\u518d\u89c1\uff01\" &lt;&lt; endl;\n}\n\nint main()\n{\n    employee emp[20];\n    for (int i = 0; i &lt; 20; i++)\n        emp[i].set_emp();\n    for (int i = 0; i &lt; 20; i++)\n        emp[i].show();\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c</p> <p></p>"},{"location":"coursework/cpd/2/03/#\u7b2c3\u9898","title":"\u7b2c3\u9898","text":"<p>\u6e90\u4ee3\u78010</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;iomanip&gt;\nusing namespace std;\nclass Date\n{\n    int d, m, y;\n\npublic:\n    Date(int dd = 0, int mm = 0, int yy = 0);\n    Date(Date &amp;D);\n    ~Date();\n    /**/\n};\nDate::Date(int dd, int mm, int yy) : d(dd), m(mm), y(yy)\n{\n    cout &lt;&lt; \"Constructor called! Address = 0x\" &lt;&lt; hex &lt;&lt; setw(8) &lt;&lt; setfill('0') &lt;&lt; this &lt;&lt; endl;\n}\nDate::Date(Date &amp;D)\n{\n    d = D.d;\n    m = D.m;\n    y = D.y;\n    cout &lt;&lt; \"Copy constructor called! Address = 0x\" &lt;&lt; hex &lt;&lt; setw(8) &lt;&lt; setfill('0') &lt;&lt; this &lt;&lt; endl;\n}\nDate::~Date()\n{\n    cout &lt;&lt; \"Destructor called! Address = 0x\" &lt;&lt; hex &lt;&lt; setw(8) &lt;&lt; setfill('0') &lt;&lt; this &lt;&lt; endl;\n}\nDate func(Date A)\n{\n    return Date(A);\n}\nint main()\n{\n    Date today;\n    today = func(today);\n}\n</code></pre> <p>\u6e90\u4ee3\u78011</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;iomanip&gt;\nusing namespace std;\nclass Date\n{\n    int d, m, y;\n\npublic:\n    Date(int dd = 0, int mm = 0, int yy = 0);\n    Date(Date &amp;D);\n    ~Date();\n    /**/\n};\nDate::Date(int dd, int mm, int yy) : d(dd), m(mm), y(yy)\n{\n    cout &lt;&lt; \"Constructor called! Address = 0x\" &lt;&lt; hex &lt;&lt; setw(8) &lt;&lt; setfill('0') &lt;&lt; this &lt;&lt; endl;\n}\nDate::Date(Date &amp;D)\n{\n    d = D.d;\n    m = D.m;\n    y = D.y;\n    cout &lt;&lt; \"Copy constructor called! Address = 0x\" &lt;&lt; hex &lt;&lt; setw(8) &lt;&lt; setfill('0') &lt;&lt; this &lt;&lt; endl;\n}\nDate::~Date()\n{\n    cout &lt;&lt; \"Destructor called! Address = 0x\" &lt;&lt; hex &lt;&lt; setw(8) &lt;&lt; setfill('0') &lt;&lt; this &lt;&lt; endl;\n}\nDate func(Date A)\n{\n    Date B(A);\n    return B;\n}\nint main()\n{\n    Date today;\n    today = func(today);\n}\n</code></pre> <p>\u6e90\u4ee3\u78012</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;iomanip&gt;\nusing namespace std;\nclass Date\n{\n    int d, m, y;\n\npublic:\n    Date(int dd = 0, int mm = 0, int yy = 0);\n    Date(Date &amp;D);\n    ~Date();\n    /**/\n};\nDate::Date(int dd, int mm, int yy) : d(dd), m(mm), y(yy)\n{\n    cout &lt;&lt; \"Constructor called! Address = 0x\" &lt;&lt; hex &lt;&lt; setw(8) &lt;&lt; setfill('0') &lt;&lt; this &lt;&lt; endl;\n}\nDate::Date(Date &amp;D)\n{\n    d = D.d;\n    m = D.m;\n    y = D.y;\n    cout &lt;&lt; \"Copy constructor called! Address = 0x\" &lt;&lt; hex &lt;&lt; setw(8) &lt;&lt; setfill('0') &lt;&lt; this &lt;&lt; endl;\n}\nDate::~Date()\n{\n    cout &lt;&lt; \"Destructor called! Address = 0x\" &lt;&lt; hex &lt;&lt; setw(8) &lt;&lt; setfill('0') &lt;&lt; this &lt;&lt; endl;\n}\nDate &amp;func(Date A)\n{\n    Date B(A);\n    return B;\n}\nint main()\n{\n    Date today;\n    today = func(today);\n}\n</code></pre> <p>\u6e90\u4ee3\u78013</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;iomanip&gt;\nusing namespace std;\nclass Date\n{\n    int d, m, y;\n\npublic:\n    Date(int dd = 0, int mm = 0, int yy = 0);\n    Date(Date &amp;D);\n    ~Date();\n    /**/\n};\nDate::Date(int dd, int mm, int yy) : d(dd), m(mm), y(yy)\n{\n    cout &lt;&lt; \"Constructor called! Address = 0x\" &lt;&lt; hex &lt;&lt; setw(8) &lt;&lt; setfill('0') &lt;&lt; this &lt;&lt; endl;\n}\nDate::Date(Date &amp;D)\n{\n    d = D.d;\n    m = D.m;\n    y = D.y;\n    cout &lt;&lt; \"Copy constructor called! Address = 0x\" &lt;&lt; hex &lt;&lt; setw(8) &lt;&lt; setfill('0') &lt;&lt; this &lt;&lt; endl;\n}\nDate::~Date()\n{\n    cout &lt;&lt; \"Destructor called! Address = 0x\" &lt;&lt; hex &lt;&lt; setw(8) &lt;&lt; setfill('0') &lt;&lt; this &lt;&lt; endl;\n}\nDate func(Date A)\n{\n    return A;\n}\nint main()\n{\n    Date today;\n    today = func(today);\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c</p> <p> </p>"},{"location":"coursework/cpd/2/04/","title":"\u7b2c\u56db\u6b21\u4f5c\u4e1a","text":""},{"location":"coursework/cpd/2/04/#\u7b2c\u56db\u6b21\u4f5c\u4e1a","title":"\u7b2c\u56db\u6b21\u4f5c\u4e1a","text":""},{"location":"coursework/cpd/2/04/#\u5fc5\u505a\u9898","title":"\u5fc5\u505a\u9898","text":""},{"location":"coursework/cpd/2/04/#\u7b2c1\u9898","title":"\u7b2c1\u9898","text":"<pre><code>#include &lt;iostream&gt;\nusing namespace std;\nclass Date\n{\n    int d, m, y;\n\npublic:\n    Date(int dd = 0, int mm = 0, int yy = 0);\n    void addDay();\n    friend Date operator++(Date &amp;D);\n    friend Date operator++(Date &amp;D, int);\n    void Print()\n    {\n        cout &lt;&lt; d &lt;&lt; \", \" &lt;&lt; m &lt;&lt; \", \" &lt;&lt; y &lt;&lt; endl;\n    }\n};\nDate operator++(Date &amp;D)\n{\n    D.addDay();\n    return D;\n}\nDate operator++(Date &amp;D, int)\n{\n    Date temp(D.d, D.m, D.y);\n    D.addDay();\n    return temp;\n}\n</code></pre>"},{"location":"coursework/cpd/2/04/#\u7b2c2\u9898","title":"\u7b2c2\u9898","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\nusing namespace std;\n\nclass string_\n{\npublic:\n    char *str;\n    string_()\n    {\n        str = new char[0];\n    }\n    string_(int len)\n    {\n        str = new char[len + 1];\n    }\n    string_(const string_ &amp;s)\n    {\n        str = new char[strlen(s.str) + 1];\n        strcpy(str, s.str);\n    }\n    string_(const char *s)\n    {\n        str = new char[strlen(s) + 1];\n        strcpy(str, s);\n    }\n    ~string_()\n    {\n        delete[] str;\n    }\n    bool operator==(const string_ &amp;s)\n    {\n        bool ret = true;\n        if (strlen(str) == strlen(s.str))\n            for (int i = 0; i &lt; strlen(str); i++)\n                if (str[i] != s.str[i])\n                {\n                    ret = false;\n                    break;\n                }\n                else\n                    ret = false;\n        return ret;\n    }\n    bool operator&gt;(const string_ &amp;s)\n    {\n        bool ret = false;\n        for (int i = 0; i &lt; (strlen(str) &gt;= strlen(s.str) ? strlen(s.str) : strlen(str)); i++)\n        {\n            if (str[i] &lt; s.str[i])\n                break;\n            else if (str[i] &gt; s.str[i])\n            {\n                ret = true;\n                break;\n            }\n        }\n        return ret;\n    }\n    bool operator&lt;(const string_ &amp;s)\n    {\n        bool ret = false;\n        for (int i = 0; i &lt; (strlen(str) &gt;= strlen(s.str) ? strlen(s.str) : strlen(str)); i++)\n        {\n            if (str[i] &gt; s.str[i])\n                break;\n            else if (str[i] &lt; s.str[i])\n            {\n                ret = true;\n                break;\n            }\n        }\n        return ret;\n    }\n    string_ operator+(const string_ &amp;s)\n    {\n        string_ temp(strlen(str) + strlen(s.str));\n        strcpy(temp.str, str);\n        strcpy(&amp;temp.str[strlen(str) + 1], s.str);\n        return temp;\n    }\n    void operator=(const string_ &amp;s)\n    {\n        delete[] str;\n        str = new char[strlen(s.str) + 1];\n        strcpy(str, s.str);\n    }\n    void operator=(const char *s)\n    {\n        delete[] str;\n        str = new char[strlen(s) + 1];\n        strcpy(str, s);\n    }\n};\n\nstruct Position\n{\n    int x, y;\n};\n\nclass ChessBoard;\nclass player;\n\nclass ChessBoard\n{\npublic:                                         // \u4e3a\u907f\u514d\u9ebb\u70e6\u5168\u90e8\u516c\u6709\n    ChessBoard(int s = 15);                     // \u58f0\u660e\u6784\u9020\u51fd\u6570\n    void init();                                // \u58f0\u660e\u521d\u59cb\u5316\u68cb\u76d8\u51fd\u6570\n    void show();                                // \u58f0\u660e\u5c55\u793a\u68cb\u76d8\u51fd\u6570\n    bool setchess(int x, int y, int chesstype); // \u58f0\u660e\u5168\u5c40\u4e0b\u5b50\u51fd\u6570\n    char judge(player &amp;p);                      // \u58f0\u660e\u5224\u65ad\u8f93\u8d62\u51fd\u6570\n    ~ChessBoard();                              // \u58f0\u660e\u6790\u6784\u51fd\u6570\n    char **boardinfo;                           // \u68cb\u76d8\n    static int step;                            // \u603b\u6b65\u6570\n    int size;                                   // \u68cb\u76d8\u5927\u5c0f\n};\n\nint ChessBoard::step = 0;\n\nclass player\n{\npublic:\n    player(char *n = \"PlayerUnknown\");                     // \u58f0\u660e\u6784\u9020\u51fd\u6570\n    void setchess(ChessBoard &amp;board);                      // \u58f0\u660e\u73a9\u5bb6\u4e0b\u5b50\u51fd\u6570\n    void setname(char *n);                                 // \u58f0\u660e\u73a9\u5bb6\u8bbe\u7f6e\u540d\u79f0\u51fd\u6570\n    string_ getname();                                     // \u58f0\u660e\u73a9\u5bb6\u83b7\u53d6\u540d\u79f0\u51fd\u6570\n    char getChessType();                                   // \u58f0\u660e\u73a9\u5bb6\u83b7\u53d6\u68cb\u5b50\u7c7b\u578b\u51fd\u6570\n    Position getLastChess();                               // \u58f0\u660e\u83b7\u53d6\u73a9\u5bb6\u6700\u540e\u4e00\u6b65\u843d\u5b50\u4f4d\u7f6e\u51fd\u6570\n    bool checkRow(ChessBoard &amp;board, Position lastChess);  // \u58f0\u660e\u68c0\u67e5\u662f\u5426\u4e94\u5b50\u8fde\u73e0\u51fd\u6570\n    bool checkCol(ChessBoard &amp;board, Position lastChess);  // \u58f0\u660e\u68c0\u67e5\u662f\u5426\u4e94\u5b50\u8fde\u73e0\u51fd\u6570\n    bool checkDiag(ChessBoard &amp;board, Position lastChess); // \u58f0\u660e\u68c0\u67e5\u662f\u5426\u4e94\u5b50\u8fde\u73e0\u51fd\u6570\n    bool checkGaid(ChessBoard &amp;board, Position lastChess); // \u58f0\u660e\u68c0\u67e5\u662f\u5426\u4e94\u5b50\u8fde\u73e0\u51fd\u6570\n    ~player();                                             // \u58f0\u660e\u6790\u6784\u51fd\u6570\n\nprivate:\n    string_ name;           // \u73a9\u5bb6\u540d\u79f0\n    char chesstype;         // \u68cb\u5b50\u7c7b\u578b\n    Position chesspos[114]; // \u73a9\u5bb6\u6bcf\u6b65\u843d\u5b50\u4f4d\u7f6e\n    int currentStep;        // \u5f53\u524d\u6b65\u6570\n    static char temp;\n};\n\nchar player::temp = 1;\n\n// \u68cb\u76d8\u6784\u9020\u51fd\u6570\nChessBoard::ChessBoard(int s)\n{\n    size = s;\n    init();\n}\n\n// \u68cb\u76d8\u521d\u59cb\u5316\u51fd\u6570\nvoid ChessBoard::init()\n{\n    boardinfo = new char *[size];\n    for (int i = 0; i &lt; size; i++)\n    {\n        boardinfo[i] = new char[size];\n    }\n    for (int i = 0; i &lt; size; i++)\n    {\n        for (int j = 0; j &lt; size; j++)\n        {\n            boardinfo[i][j] = 0;\n        }\n    }\n}\n\n// \u68cb\u76d8\u5c55\u793a\u51fd\u6570\nvoid ChessBoard::show()\n{\n    system(\"clear\"); // Windows `system(\"cls\");`\n    printf(\" \");\n    for (int i = 0; i &lt; size; i++)\n        printf(\"%d\", i % 10);\n    printf(\"\\n\");\n    for (int i = 0; i &lt; size; i++)\n    {\n        printf(\"%d\", i % 10);\n        for (int j = 0; j &lt; size; j++)\n        {\n            switch (boardinfo[i][j])\n            {\n            case 0:\n                if (i &gt; 0 &amp;&amp; j &gt; 0 &amp;&amp; i &lt; size - 1 &amp;&amp; j &lt; size - 1)\n                    printf(\"\u253c\");\n                else if (i == 0 &amp;&amp; j &gt; 0 &amp;&amp; j &lt; size - 1)\n                    printf(\"\u252c\");\n                else if (i == size - 1 &amp;&amp; j &gt; 0 &amp;&amp; j &lt; size - 1)\n                    printf(\"\u2534\");\n                else if (j == 0 &amp;&amp; i &gt; 0 &amp;&amp; i &lt; size - 1)\n                    printf(\"\u251c\");\n                else if (j == size - 1 &amp;&amp; i &gt; 0 &amp;&amp; i &lt; size - 1)\n                    printf(\"\u2524\");\n                else if (i == 0 &amp;&amp; j == 0)\n                    printf(\"\u250c\");\n                else if (i == 0 &amp;&amp; j == size - 1)\n                    printf(\"\u2510\");\n                else if (i == size - 1 &amp;&amp; j == 0)\n                    printf(\"\u2514\");\n                else if (i == size - 1 &amp;&amp; j == size - 1)\n                    printf(\"\u2518\");\n                break;\n            case 1:\n                printf(\"\u25cf\");\n                break;\n            case 2:\n                printf(\"\u25cb\");\n                break;\n            }\n        }\n        printf(\"\\n\");\n    }\n}\n\n// \u5168\u5c40\u4e0b\u5b50\u51fd\u6570\nbool ChessBoard::setchess(int x, int y, int chesstype)\n{\n    if (x &gt;= 0 &amp;&amp; x &lt; size &amp;&amp; y &gt;= 0 &amp;&amp; y &lt; size)\n    {\n        if (!boardinfo[x][y])\n        {\n            boardinfo[x][y] = chesstype;\n            step++;\n            return true;\n        }\n        else\n        {\n            printf(\"\u8be5\u4f4d\u7f6e\u5df2\u88ab\u5360\u7528\uff01\\n\");\n            return false;\n        }\n    }\n    else\n    {\n        printf(\"\u8be5\u4f4d\u7f6e\u8d85\u51fa\u8303\u56f4\uff01\\n\");\n        return false;\n    }\n}\n\n// \u5168\u5c40\u5224\u65ad\u8f93\u8d62\u51fd\u6570\nchar ChessBoard::judge(player &amp;p)\n{\n    Position lastChess = p.getLastChess();\n    if (p.checkRow(*this, lastChess) || p.checkCol(*this, lastChess) || p.checkDiag(*this, lastChess) || p.checkGaid(*this, lastChess))\n        return p.getChessType();\n    else\n        return 0;\n}\n\n// \u68cb\u76d8\u6790\u6784\u51fd\u6570\nChessBoard::~ChessBoard()\n{\n    for (int i = 0; i &lt; size; i++)\n    {\n        delete[] boardinfo[i];\n    }\n    delete[] boardinfo;\n}\n\n// \u73a9\u5bb6\u6784\u9020\u51fd\u6570\nplayer::player(char *n)\n{\n    name = n;\n    currentStep = 0;\n    chesstype = temp;\n    temp++;\n}\n\n// \u73a9\u5bb6\u4e0b\u5b50\u51fd\u6570\nvoid player::setchess(ChessBoard &amp;board)\n{\n    bool flag;\n    Position currentchess;\n    do\n    {\n        cout &lt;&lt; name.str &lt;&lt; \"\uff0c\u8bf7\u8f93\u5165\u4e0b\u5b50\u7684\u4f4d\u7f6e\uff1a\uff08\u7eb5\u5411x \u6a2a\u5411y\uff09\" &lt;&lt; endl;\n        cin &gt;&gt; currentchess.x &gt;&gt; currentchess.y;\n        flag = board.setchess(currentchess.x, currentchess.y, chesstype);\n    } while (!flag);\n    chesspos[currentStep] = currentchess;\n    currentStep++;\n}\n\n// \u73a9\u5bb6\u8bbe\u7f6e\u540d\u79f0\u51fd\u6570\nvoid player::setname(char *n)\n{\n    name = n;\n}\n\n// \u73a9\u5bb6\u83b7\u53d6\u540d\u79f0\u51fd\u6570\nstring_ player::getname()\n{\n    return name;\n}\n\n// \u73a9\u5bb6\u83b7\u53d6\u68cb\u5b50\u7c7b\u578b\u51fd\u6570\nchar player::getChessType()\n{\n    return chesstype;\n}\n\n// \u73a9\u5bb6\u83b7\u53d6\u6700\u540e\u4e00\u6b65\u843d\u5b50\u4f4d\u7f6e\u51fd\u6570\nPosition player::getLastChess()\n{\n    return chesspos[currentStep - 1];\n}\n\n// \u68c0\u67e5\u662f\u5426\u4e94\u5b50\u8fde\u73e0\nbool player::checkRow(ChessBoard &amp;board, Position lastChess)\n{\n    int count = 0;\n    bool flag = false;\n    for (int i = ((lastChess.x &lt; 4) ? 0 : lastChess.x - 4); i &lt;= ((lastChess.x &gt; board.size - 5) ? board.size - 1 : lastChess.x + 4); i++)\n    {\n        if (board.boardinfo[i][lastChess.y] == chesstype)\n            count++;\n        else\n            count = 0;\n        if (count &gt;= 5)\n        {\n            flag = true;\n            break;\n        }\n    }\n    return flag;\n}\n\n// \u68c0\u67e5\u662f\u5426\u4e94\u5b50\u8fde\u73e0\nbool player::checkCol(ChessBoard &amp;board, Position lastChess)\n{\n    int count = 0;\n    bool flag = false;\n    for (int i = ((lastChess.y &lt; 4) ? 0 : lastChess.y - 4); i &lt;= ((lastChess.y &gt; board.size - 5) ? board.size - 1 : lastChess.y + 4); i++)\n    {\n        if (board.boardinfo[lastChess.x][i] == chesstype)\n            count++;\n        else\n            count = 0;\n        if (count &gt;= 5)\n        {\n            flag = true;\n            break;\n        }\n    }\n    return flag;\n}\n\n// \u68c0\u67e5\u662f\u5426\u4e94\u5b50\u8fde\u73e0\nbool player::checkDiag(ChessBoard &amp;board, Position lastChess)\n{\n    int count = 0;\n    bool flag = false;\n    for (int i = ((lastChess.x &gt; lastChess.y) ? ((lastChess.y &lt; 4) ? lastChess.x - lastChess.y : lastChess.x - 4) : ((lastChess.x &lt; 4) ? 0 : lastChess.x - 4)); i &lt;= ((lastChess.x &gt; lastChess.y) ? ((lastChess.x &gt; board.size - 5) ? board.size - 1 : lastChess.x + 4) : ((lastChess.y &gt; board.size - 5) ? board.size - lastChess.y + lastChess.x - 1 : lastChess.x + 4)); i++)\n    {\n        if (board.boardinfo[i][i + lastChess.y - lastChess.x] == chesstype)\n            count++;\n        else\n            count = 0;\n        if (count &gt;= 5)\n        {\n            flag = true;\n            break;\n        }\n    }\n    return flag;\n}\n\n// \u68c0\u67e5\u662f\u5426\u4e94\u5b50\u8fde\u73e0\nbool player::checkGaid(ChessBoard &amp;board, Position lastChess)\n{\n    int x = lastChess.x, y = lastChess.y;\n    char **_boardinfo = new char *[board.size];\n    for (int i = 0; i &lt; board.size; i++)\n    {\n        _boardinfo[i] = new char[board.size];\n    }\n    for (int i = 0; i &lt; board.size; i++)\n    {\n        for (int j = 0; j &lt; board.size; j++)\n        {\n            _boardinfo[i][j] = board.boardinfo[i][board.size - j - 1];\n        }\n    }\n    int count = 0;\n    bool flag = false;\n    y = board.size - y - 1;\n    for (int i = ((x &gt; y) ? ((y &lt; 4) ? x - y : x - 4) : ((x &lt; 4) ? 0 : x - 4)); i &lt;= ((x &gt; y) ? ((x &gt; board.size - 5) ? board.size - 1 : x + 4) : ((y &gt; board.size - 5) ? board.size - y + x - 1 : x + 4)); i++)\n    {\n        if (_boardinfo[i][i + y - x] == chesstype)\n            count++;\n        else\n            count = 0;\n        if (count &gt;= 5)\n        {\n            flag = true;\n            break;\n        }\n    }\n    for (int i = 0; i &lt; board.size; i++)\n    {\n        delete[] _boardinfo[i];\n    }\n    delete[] _boardinfo;\n    return flag;\n}\n\n// \u73a9\u5bb6\u6790\u6784\u51fd\u6570\nplayer::~player()\n{\n}\n\nint main()\n{\n    char p1n[17] = {0}, p2n[17] = {0};\n    int size = 0;\n    char flag = 0;\n    player p[2];\n    int i = 0;\n    cout &lt;&lt; \"--\u4e94\u5b50\u68cb--\" &lt;&lt; endl\n         &lt;&lt; endl;\n    cout &lt;&lt; \"\u8f93\u5165\u73a9\u5bb6\u540d\u79f0\uff1a\" &lt;&lt; endl\n         &lt;&lt; \"&gt;&gt;&gt; \";\n    cin &gt;&gt; p1n;\n    cout &lt;&lt; \"\u8f93\u5165\u73a9\u5bb6\u540d\u79f0\uff1a\" &lt;&lt; endl\n         &lt;&lt; \"&gt;&gt;&gt; \";\n    cin &gt;&gt; p2n;\n    cout &lt;&lt; \"\u8f93\u5165\u68cb\u76d8\u5927\u5c0f\uff1a\" &lt;&lt; endl\n         &lt;&lt; \"&gt;&gt;&gt; \";\n    cin &gt;&gt; size;\n    p[0].setname(p1n);\n    p[1].setname(p2n);\n    if (p[0].getname().operator&lt;(p[1].getname()))\n    {\n        p[0].setname(p2n);\n        p[1].setname(p1n);\n    }\n    ChessBoard board(size);\n    do\n    {\n        board.show();\n        cout &lt;&lt; p[i].getname().str &lt;&lt; \"\u6765\u4e0b\u7b2c\" &lt;&lt; board.step + 1 &lt;&lt; \"\u6b65\u68cb\uff01\";\n        p[i].setchess(board);\n        flag = board.judge(p[i]);\n        i++;\n        i %= 2;\n    } while (!flag);\n    board.show();\n    cout &lt;&lt; \"\u672c\u573a\u6e38\u620f\u5171\u4e0b\u4e86\" &lt;&lt; board.step &lt;&lt; \"\u6b65\u68cb\uff0c\u6700\u7ec8\" &lt;&lt; ((flag % 2) ? p[0].getname().str : p[1].getname().str) &lt;&lt; \"\u83b7\u80dc\uff01\" &lt;&lt; endl;\n    return 0;\n}\n</code></pre>"},{"location":"coursework/cpd/2/04/#\u9009\u505a\u9898","title":"\u9009\u505a\u9898","text":""},{"location":"coursework/cpd/2/04/#\u7b2c1\u9898_1","title":"\u7b2c1\u9898","text":"<ol> <li>\u53cb\u5143\u51fd\u6570\u662f\u5426\u53ef\u4ee5\u7533\u660e\u5728\u7c7b\u4e2d\u7684<code>private</code>\uff1f</li> </ol> <p>\u53ef\u4ee5\u3002\u53cb\u5143\u51fd\u6570\u53ef\u4ee5\u7533\u660e\u5728\u7c7b\u4e2d\u7684\u4efb\u4f55\u8bbf\u95ee\u6743\u9650\u533a\u57df\uff0c\u5305\u62ec<code>private</code>\u3002</p> <ol> <li>\u7c7b\u4e2d\u7533\u660e\u7684\u53cb\u5143\u51fd\u6570\u662f\u5426\u6709<code>this</code>\u6307\u9488\uff1f</li> </ol> <p>\u6ca1\u6709\u3002\u53cb\u5143\u51fd\u6570\u4e0d\u662f\u7c7b\u7684\u6210\u5458\u51fd\u6570\uff0c\u6240\u4ee5\u6ca1\u6709<code>this</code>\u6307\u9488\u3002\u5b83\u9700\u8981\u901a\u8fc7\u53c2\u6570\u4f20\u9012\u7c7b\u5bf9\u8c61\u6216\u5f15\u7528\u6765\u8bbf\u95ee\u7c7b\u7684\u6210\u5458\u3002</p> <ol> <li>\u5982\u4f55\u4f7f\u53cb\u5143\u51fd\u6570\u83b7\u5f97\u64cd\u4f5c\u5bf9\u8c61\uff1f</li> </ol> <p>\u2460\u5728\u7c7b\u4e2d\u7533\u660e\u53cb\u5143\u51fd\u6570\u65f6\uff0c\u5c06\u7c7b\u5bf9\u8c61\u6216\u5f15\u7528\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9\u53cb\u5143\u51fd\u6570\uff1b\u2461\u5728\u7c7b\u5916\u5b9a\u4e49\u53cb\u5143\u51fd\u6570\u65f6\uff0c\u4f7f\u7528\u4f5c\u7528\u57df\u8fd0\u7b97\u7b26(<code>::</code>)\u6765\u6307\u5b9a\u8981\u64cd\u4f5c\u7684\u7c7b\u5bf9\u8c61\u3002</p> <ol> <li>\u4e3a\u4ec0\u4e48\u8bf4\uff0c\u4f7f\u7528\u53cb\u5143\u51fd\u6570\u7834\u574f\u4e86\u7c7b\u7684\u5c01\u88c5\u6027\uff0c\u800c\u4f7f\u7528\u53cb\u5143\u7c7b\u589e\u5f3a\u4e86\u7c7b\u7684\u5c01\u88c5\u6027\uff1f\u8fd0\u7528\u7c7b\u5c01\u88c5\u6027\u548c\u53cb\u5143\u7c7b\u7684\u539f\u7406\u6765\u5206\u6790\uff1f</li> </ol> <p>\u56e0\u4e3a\u53cb\u5143\u51fd\u6570\u53ef\u4ee5\u8bbf\u95ee\u4efb\u4f55\u4e00\u4e2a\u7c7b\u7684\u79c1\u6709\u6210\u5458\uff0c\u8fd9\u6837\u5c31\u7834\u574f\u4e86\u7c7b\u5bf9\u6570\u636e\u7684\u9690\u85cf\u548c\u4fdd\u62a4\u3002\u800c\u53cb\u5143\u7c7b\u53ea\u80fd\u8bbf\u95ee\u6307\u5b9a\u4e3a\u5176\u53cb\u5143\u7684\u90a3\u4e2a\u7c7b\u7684\u79c1\u6709\u6210\u5458\uff0c\u8fd9\u6837\u5c31\u4fdd\u6301\u4e86\u5176\u4ed6\u7c7b\u5bf9\u6570\u636e\u7684\u5c01\u88c5\u6027\u3002</p>"},{"location":"coursework/cpd/2/05/","title":"\u7b2c5\u6b21\u4f5c\u4e1a","text":""},{"location":"coursework/cpd/2/05/#\u7b2c5\u6b21\u4f5c\u4e1a","title":"\u7b2c5\u6b21\u4f5c\u4e1a","text":""},{"location":"coursework/cpd/2/05/#\u5fc5\u505a\u9898","title":"\u5fc5\u505a\u9898","text":""},{"location":"coursework/cpd/2/05/#\u7b2c1\u9898","title":"\u7b2c1\u9898","text":"<p>\u6e90\u4ee3\u7801</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\nusing namespace std;\n\nclass People\n{\npublic:\n    People()\n    {\n        strcpy(name, \"Default\");\n        strcpy(number, \"114514\");\n        strcpy(sex, \"M\");\n        birthday.y = 1919;\n        birthday.m = 8;\n        birthday.d = 10;\n        strcpy(id, \"123456789012345\");\n    }\n    People(People &amp;p)\n    {\n        strcpy(name, p.name);\n        strcpy(number, p.number);\n        strcpy(sex, p.sex);\n        birthday.y = p.birthday.y;\n        birthday.m = p.birthday.m;\n        birthday.d = p.birthday.d;\n        strcpy(id, p.id);\n    }\n    ~People()\n    {\n        delete[] name;\n        delete[] number;\n        delete[] sex;\n        delete[] id;\n    }\n    friend ostream &amp;operator&lt;&lt;(ostream &amp;output, People &amp;p)\n    {\n        output &lt;&lt; \"\u8f93\u51fa\u4eba\u5458\u4fe1\u606f\uff1a\" &lt;&lt; endl\n               &lt;&lt; \"\u59d3\u540d\uff1a\" &lt;&lt; p.name &lt;&lt; endl\n               &lt;&lt; \"\u7f16\u53f7\uff1a\" &lt;&lt; p.number &lt;&lt; endl\n               &lt;&lt; \"\u6027\u522b\uff1a\" &lt;&lt; p.sex &lt;&lt; endl\n               &lt;&lt; \"\u751f\u65e5\uff1a\" &lt;&lt; p.birthday.m &lt;&lt; '/' &lt;&lt; p.birthday.d &lt;&lt; '/' &lt;&lt; p.birthday.y &lt;&lt; endl\n               &lt;&lt; \"\u8eab\u4efd\u8bc1\u53f7\uff1a\" &lt;&lt; p.id &lt;&lt; endl;\n    }\n    friend istream &amp;operator&gt;&gt;(istream &amp;input, People &amp;p)\n    {\n        cout &lt;&lt; \"\u8f93\u5165\u4eba\u5458\u4fe1\u606f\uff1a\" &lt;&lt; endl;\n        cout &lt;&lt; \"\u59d3\u540d\uff1a\";\n        input &gt;&gt; p.name;\n        cout &lt;&lt; \"\u7f16\u53f7\uff1a\";\n        input &gt;&gt; p.number;\n        cout &lt;&lt; \"\u6027\u522b\uff1a\";\n        input &gt;&gt; p.sex;\n        cout &lt;&lt; \"\u751f\u65e5\uff1a\";\n        input &gt;&gt; p.birthday.m &gt;&gt; p.birthday.d &gt;&gt; p.birthday.y;\n        cout &lt;&lt; \"\u8eab\u4efd\u8bc1\u53f7\uff1a\";\n        input &gt;&gt; p.id;\n    }\n\nprivate:\n    char name[11];\n    char number[7];\n    char sex[3];\n    class Date\n    {\n    public:\n        int m;\n        int d;\n        int y;\n    } birthday;\n    char id[16];\n};\n\nint main()\n{\n    People p[10];\n    for (int i = 0; i &lt; 10; i++)\n    {\n        cin &gt;&gt; p[i];\n    }\n    for (int i = 0; i &lt; 10; i++)\n    {\n        cout &lt;&lt; p[i];\n    }\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c</p> <p>\u7565</p>"},{"location":"coursework/cpd/2/05/#\u7b2c2\u9898","title":"\u7b2c2\u9898","text":"<p>\u6e90\u4ee3\u7801</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;cassert&gt;\nusing namespace std;\n\nclass Matrix\n{\n    double *data;\n    int row;\n    int col;\n\npublic:\n    Matrix();\n    Matrix(int r, int c);\n    Matrix(double *pData, int r, int c);\n    Matrix(Matrix &amp;mat);\n    ~Matrix();\n    double &amp;operator[](int n);\n    double &amp;operator()(int r, int c);\n    Matrix RMulti(Matrix &amp;rmat);\n    void show();\n};\n\nMatrix::Matrix()\n{\n    data = NULL;\n    row = 0;\n    col = 0;\n}\nMatrix::Matrix(int r, int c)\n{\n    data = new double[r * c];\n    row = r;\n    col = c;\n}\nMatrix::Matrix(double *pData, int r, int c)\n{\n    data = new double[r * c];\n    for (int i = 0; i &lt; r * c; i++)\n    {\n        data[i] = pData[i];\n    }\n    row = r;\n    col = c;\n}\nMatrix::Matrix(Matrix &amp;mat)\n{\n    row = mat.row;\n    col = mat.col;\n    data = new double[mat.row * mat.col];\n    for (int i = 0; i &lt; row * col; i++)\n    {\n        data[i] = mat.data[i];\n    }\n}\nMatrix::~Matrix()\n{\n    delete[] data;\n}\ndouble &amp;Matrix::operator[](int n)\n{\n    assert(n &gt;= 0 &amp;&amp; n &lt; row * col);\n    return data[n];\n}\ndouble &amp;Matrix::operator()(int r, int c)\n{\n    assert(r &gt;= 0 &amp;&amp; r &lt; row &amp;&amp; c &gt;= 0 &amp;&amp; c &lt; col);\n    return data[col * r + c];\n}\nMatrix Matrix::RMulti(Matrix &amp;rmat)\n{\n    double temp = 0.0;\n    if (col == rmat.row &amp;&amp; row == rmat.col)\n    {\n        Matrix ret(row, row);\n        for (int i = 0; i &lt; row; i++)\n        {\n            for (int j = 0; j &lt; row; j++)\n            {\n                temp = 0.0;\n                for (int k = 0; k &lt; col; k++)\n                {\n                    temp += (*this)(i, k) * rmat(k, j);\n                }\n                ret(i, j) = temp;\n            }\n        }\n        return ret;\n    }\n    else\n        return Matrix();\n}\nvoid Matrix::show()\n{\n    for (int i = 0; i &lt; row; i++)\n    {\n        for (int j = 0; j &lt; col; j++)\n        {\n            cout &lt;&lt; (*this)(i, j) &lt;&lt; ' ';\n        }\n        cout &lt;&lt; endl;\n    }\n}\nint main()\n{\n    double _a[6] = {1, 2, 3, 4, 5, 6};\n    double _b[6] = {1, 4, 2, 5, 3, 6};\n    Matrix a(_a, 2, 3);\n    Matrix b(_b, 3, 2);\n    Matrix ret(a.RMulti(b));\n    ret.show();\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c</p> <p></p>"},{"location":"coursework/cpd/2/05/#\u9009\u505a\u9898","title":"\u9009\u505a\u9898","text":""},{"location":"coursework/cpd/2/05/#\u7b2c1\u9898_1","title":"\u7b2c1\u9898","text":"<p>\u6e90\u4ee3\u7801</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\nusing namespace std;\nclass Teacher\n{\npublic:\n    Teacher(char *_name = \"Teacher\", char *_number = \"000000\", char *_sex = \"M\", double _score = 0.0)\n    {\n        name = new char[strlen(_name)];\n        strcpy(name, _name);\n        number = new char[strlen(_number)];\n        strcpy(number, _number);\n        sex = new char[strlen(_sex)];\n        strcpy(sex, _sex);\n        score = _score;\n    }\n    ~Teacher()\n    {\n        delete[] name;\n        delete[] number;\n        delete[] sex;\n    }\n    char *getName()\n    {\n        return name;\n    }\n    char *getNumber()\n    {\n        return number;\n    }\n    char *getSex()\n    {\n        return sex;\n    }\n    void print()\n    {\n        cout &lt;&lt; \"Teacher Info:\" &lt;&lt; endl\n             &lt;&lt; \"Name: \" &lt;&lt; name &lt;&lt; endl\n             &lt;&lt; \"Number: \" &lt;&lt; number &lt;&lt; endl\n             &lt;&lt; \"Sex: \" &lt;&lt; sex &lt;&lt; endl\n             &lt;&lt; \"Score: \" &lt;&lt; score &lt;&lt; endl;\n    }\n\nprivate:\n    char *name;\n    char *number;\n    char *sex;\n    double score;\n};\nclass Student\n{\npublic:\n    Student(char *_name = \"Student\", char *_number = \"000000\", char *_sex = \"M\", double _gpa = 0.0)\n    {\n        name = new char[strlen(_name)];\n        strcpy(name, _name);\n        number = new char[strlen(_number)];\n        strcpy(number, _number);\n        sex = new char[strlen(_sex)];\n        strcpy(sex, _sex);\n        gpa = _gpa;\n    }\n    ~Student()\n    {\n        delete[] name;\n        delete[] number;\n        delete[] sex;\n    }\n    char *getName()\n    {\n        return name;\n    }\n    char *getNumber()\n    {\n        return number;\n    }\n    char *getSex()\n    {\n        return sex;\n    }\n    void print()\n    {\n        cout &lt;&lt; \"Student Info:\" &lt;&lt; endl\n             &lt;&lt; \"Name: \" &lt;&lt; name &lt;&lt; endl\n             &lt;&lt; \"Number: \" &lt;&lt; number &lt;&lt; endl\n             &lt;&lt; \"Sex: \" &lt;&lt; sex &lt;&lt; endl\n             &lt;&lt; \"GPA: \" &lt;&lt; gpa &lt;&lt; endl;\n    }\n    void convert(Teacher &amp;tea);\n\nprivate:\n    char *name;\n    char *number;\n    char *sex;\n    double gpa;\n};\n\nvoid Student::convert(Teacher &amp;tea)\n{\n    delete[] name;\n    name = new char[strlen(tea.getName())];\n    strcpy(name, tea.getName());\n    delete[] number;\n    number = new char[strlen(tea.getNumber())];\n    strcpy(number, tea.getNumber());\n    delete[] sex;\n    sex = new char[strlen(tea.getSex())];\n    strcpy(sex, tea.getSex());\n}\nint main()\n{\n    Teacher tea(\"Tadokoro\", \"114514\", \"Male\", 100);\n    Student stu(\"Kouji\", \"1919810\", \"Male\", 4.0);\n    stu.convert(tea);\n    tea.print();\n    cout &lt;&lt; endl;\n    stu.print();\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c</p> <p></p>"},{"location":"coursework/cpd/2/05/#\u7b2c2\u9898_1","title":"\u7b2c2\u9898","text":"<p>\u4e3b\u8981\u533a\u522b\uff1a</p> <ul> <li> <p>\u4f7f\u7528\u5bf9\u8c61\u6570\u7ec4\u5b58\u50a8\u96c7\u5458\u4fe1\u606f</p> </li> <li> <p>\u4f7f\u7528\u6587\u4ef6\u8fdb\u884c\u4e2a\u4eba\u4fe1\u606f\u7684\u8f93\u5165\u8f93\u51fa\u64cd\u4f5c</p> </li> <li> <p>\u5bf9<code>&gt;&gt;</code>\u548c<code>&lt;&lt;</code>\u8fdb\u884c\u4e86\u91cd\u8f7d\uff0c\u4f7f\u5f97\u4f7f\u7528\u4e00\u4e2a\u8fd0\u7b97\u7b26\u80fd\u5b8c\u6210\u7b49\u7ea7\u4e0e\u6708\u85aa\u7684\u8f93\u5165\u3001\u57fa\u672c\u4fe1\u606f\u7684\u8f93\u51fa</p> </li> </ul>"},{"location":"coursework/cpd/2/05/#\u7b2c3\u9898","title":"\u7b2c3\u9898","text":"<p>\u4fee\u6539\u5185\u5bb9</p> <ul> <li> <p>\u4f18\u5316\u5927\u91cf\u91cd\u590d\u4ee3\u7801\uff0c\u7cbe\u7b80\u4ee3\u7801\u7ed3\u6784\uff1b</p> </li> <li> <p>\u4f18\u5316\u5224\u5b9a\u8f93\u8d62\u7b97\u6cd5\uff0c\u4e0d\u518d\u4f7f\u7528\u53cc\u91cd\u5faa\u73af\u904d\u5386\u6574\u4e2a\u68cb\u76d8\uff0c\u800c\u662f\u53ea\u68c0\u67e5\u6700\u540e\u843d\u5b50\u5468\u56f4\u7684\u68cb\u76d8\uff0c\u63d0\u5347\u6548\u7387</p> </li> </ul> <p>\u4fee\u6539\u540e\u4ee3\u7801</p> <pre><code>// \u7531\u4e8e\u4f7f\u7528Okular\u9605\u8bfb\u5668\u76f4\u63a5\u590d\u5236\u81ea`\u5f20\u664b\u73e9-\u4e94\u5b50\u68cb\u7a0b\u5e8f\u8bbe\u8ba1.pdf`\uff0c\u53ef\u80fd\u6709\u90e8\u5206\u7b26\u53f7\uff08\u4e3b\u8981\u4f53\u73b0\u5728\u5168\u534a\u89d2\u548c\u7a7a\u683c\u4e0a\uff09\u4e0e\u539f\u6587\u6863\u4e0d\u7b26\u3002\n// \u4e3a\u9002\u914d\u6211\u7684ArchLinux\u7cfb\u7edf\u4e0eUTF-8\u7f16\u7801\u73af\u5883\uff0c\u66f4\u6539\u4e86\u90e8\u5206\u4ee3\u7801\uff08\u4e3b\u8981\u4f53\u73b0\u5728\u68cb\u76d8\u6570\u7ec4\u5927\u5c0f\u548c`system(\"clear\");`\u4e0a\uff09\u3002\n\n// \u8001\u5e08\u3002\u4e4b\u524d\u6211\u4f20\u7ed9\u60a8\u7684\u7248\u672c\u6ca1\u6709\u6ce8\u91ca,\u4e14\u5e73\u5c40\u5224\u65ad\u8fc7\u4e8e\u590d\u6742\u5197\u957f,\u56e0\u6b64\u6211\u5bf9\u5176\u8fdb\u884c\u4e86\u5b8c\u5584, \u5e76\u8fdb\u884c\u4e86\u6ce8\u91ca, \u8fd8\u671b\u60a8\u91cd\u65b0\u9a8c\u6536\u3001\u8bc4\u5b9a\u3002\u4e0b\u9762\u662f\u6211\u5bf9\u7a0b\u5e8f\u7684\u603b \u4f53\u8bf4\u660e :\n// \u9996\u5148,\u8003\u8651\u5230\u7528\u6237\u7684\u6e38\u620f\u4f53\u9a8c,\u6e38\u620f\u5148\u8be2\u95ee\u4e86\u73a9\u5bb6\u7684\u540d\u5b57,\u5e76\u5c06\u5176\u50a8\u5b58\u4e0b\u6765,\u4ee5\u5728\u4ee5\u540e\u79f0\u547c\u5bf9\u5e94\u7684\u73a9\u5bb6;\u7136\u540e, \u8be2\u95ee player1 \u7684\u68cb\u578b, \u901a\u8fc7\u8f93\u5165 12 \u4ee3\u8868 \u9ed1\u767d, \u5e76\u4e14\u5982\u679c\u8f93\u5165\u7684\u4e0d\u662f 1 \u6216 2, \u5219\u4f1a\u62a5\u9519\u5e76\u63d0\u793a\u73a9\u5bb6\u91cd\u65b0\u8f93\u5165\u3002\u7136\u540e\u8fdb\u884c\u7b80 \u77ed\u7684\u6e38\u620f\u8bf4\u660e, \u5c31\u5f00\u59cb\u7ed8\u5236\u68cb\u76d8\u5f00\u59cb\u6e38\u620f\u3002\u5728\u6e38\u620f\u8fc7\u7a0b\u4e2d, \u73a9\u5bb6\u901a\u8fc7\u8f93\u5165\u68cb\u5b50\u5750 \u6807\u7684\u65b9\u5f0f\u4e0b\u68cb, \u8f93\u5165\u7684 x\u3001y \u5bf9\u5e94\u610f\u601d\u662f\u201cx \u884c y \u5217\u201d\u3002\u82e5\u8f93\u5165\u7684\u5750\u6807\u4e3a\u5c0f\u6570, \u5219 \u901a\u8fc7 floor \u51fd\u6570\u5c06\u5176\u8f6c\u5316\u4e3a\u4e0d\u8d85\u8fc7\u5b83\u7684\u6700\u5927\u6574\u6570\u3002\u82e5\u8f6c\u5316\u540e\u7684\u6574\u6570\u4ecd\u4e0d\u5c5e\u4e8e 0 ~14,\u5219\u4f1a\u62a5\u9519, \u63d0\u793a\u73a9\u5bb6\u91cd\u65b0\u8f93\u5165\u3002\u6bcf\u4e00\u6b65\u4e0b\u5b8c\u68cb, \u4ea4\u7ed9\u5bf9\u624b\u4e0b\u65f6, \u90fd\u4f1a\u4e3a\u540e\u8005\u63d0\u793a \u4e0a\u4e00\u6b65\u5bf9\u624b\u4e0b\u7684\u4f4d\u7f6e\u3002\u6bcf\u6b21\u4e0b\u5b8c\u68cb\u90fd\u901a\u8fc7\u7cfb\u7edf clear \u547d\u4ee4\u6e05\u5c4f\u3001\u91cd\u65b0\u7ed8\u5236\u68cb\u76d8, \u68cb \u76d8\u7684\u7ed8\u5236\u662f\u901a\u8fc7\u8bb0\u5f55\u4e8c\u7ef4\u6570\u7ec4\u7684\u6bcf\u4e2a\u5143\u7d20\u7684\u503c(0\u30011\u30012), \u6765\u5224\u65ad\u8be5\u5728\u6b64\u5904\u753b \u4ec0\u4e48\u5f62\u72b6\u3002\u81f3\u4e8e\u80dc\u8d1f\u5224\u65ad, \u6211\u4eec\u53ea\u9700\u8981\u5199\u51fa\u56db\u4e2a\u5224\u65ad\u51fd\u6570, \u5206\u522b\u662f\u6a2a\u8fde\u7ebf\u3001\u7ad6\u8fde \u7ebf\u3001\u4e00\u4e09\u8c61\u9650\u659c\u8fde\u7ebf\u3001\u4e8c\u56db\u8c61\u9650\u659c\u8fde\u7ebf\u3002\u5224\u65ad\u80dc\u8d1f\u65e0\u679c\u540e\u518d\u5224\u65ad\u5e73\u5c40\u3002\u8fd9\u6837, \u6211 \u4eec\u5c31\u53ef\u4ee5\u5224\u65ad\u8f93\u8d62, \u7136\u540e\u8fdb\u884c\u7ed3\u5c3e\u7684\u8f93\u51fa, \u4e5f\u5c31\u662f\u5ba3\u5e03\u83b7\u80dc\u7684\u4e00\u65b9(\u6216\u5e73\u5c40),\u7136\u540e\u8bf4\u201c\u6b22\u8fce\u4f7f\u7528, \u518d\u89c1\u201d\u4e4b\u7c7b\u7684\u8bdd\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f, \u9898\u76ee\u4e2d\u8981\u6c42\u8bb0\u5f55\u53cc\u65b9\u5bf9\u5f08 \u7684\u70b9\u6570, \u6211\u9009\u62e9\u7528\u9759\u6001\u7c7b\u6210\u5458\u53d8\u91cf, \u7406\u7531\u5f88\u7b80\u5355, \u56e0\u4e3a\u6e38\u620f\u4e2d\u6709\u4e24\u4e2a\u73a9\u5bb6\u7c7b, \u4f46 \u662f\u6211\u4eec\u8981\u60f3\u8ba9\u4e24\u4e2a\u73a9\u5bb6\u64cd\u4f5c\u7684\u65f6\u5019\u8fd9\u4e2a\u8ba1\u6570\u53d8\u91cf\u5747\u81ea\u589e, \u56e0\u6b64 static \u53d8\u91cf\u5c31\u662f \u4e00\u4e2a\u4f18\u9009\u3002\u6700\u540e\u8f93\u51fa\u8fd9\u4e00\u6570\u636e\u7684\u503c\u5373\u53ef\u3002\u4e3a\u4e86\u5951\u5408\u6211\u4eec\u6240\u5b66\u7684\u5185\u5bb9, \u6790\u6784\u51fd\u6570\u6267 \u884c\u65f6\u8fdb\u884c\u4e86\u8bed\u53e5\u8bf4\u660e, \u4f53\u73b0\u4e86\u4e09\u4e2a\u5bf9\u8c61\u7684\u6790\u6784\u8fc7\u7a0b\u3002 \u8fd9\u4e9b\u5c31\u662f\u6211\u4e94\u5b50\u68cb\u7a0b\u5e8f\u7684\u8981 \u70b9\u3002\n// \u5177\u4f53\u7684\u6ce8\u91ca\u5728\u9644\u4ef6\u4e2d\u7684\u7a0b\u5e8f\u6e90\u4ee3\u7801\u3002\n// \u8bf7\u7528 VS2012 \u7b49\u5bf9\u4e2d\u6587\u652f\u6301\u8f83\u597d\u7684\u7f16\u8bd1\u5668\u7f16\u8bd1\u9a8c\u6536,\u8c22\u8c22\u3002\n#include &lt;iostream&gt;\n#include &lt;cstring&gt;\n#include &lt;cstdlib&gt;\n#include &lt;cmath&gt;\nusing namespace std;\nint board[15][15] = {0}; // \u5b9a\u4e49\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4, \u6765\u50a8\u5b58\u68cb\u76d8\u4e0a\u5404\u70b9\u7684\u68cb\u5b50\u60c5\u51b5\nchar type[11];           // \u5168\u5c40\u53d8\u91cf, \u4ee3\u8868 Player 1 \u68cb\u578b\nbool ping()              // \u5224\u65ad\u68cb\u76d8\u662f\u5426\u5df2\u4e0b\u6ee1\n{\n    bool p = true;\n    for (int i = 0; i &lt; 15; i++)\n    {\n        for (int j = 0; j &lt; 15; j++)\n        { // \u904d\u5386\u68cb\u76d8\n            if (board[i][j] == 0)\n            {\n                p = false;\n                break;\n            }\n        }\n    }\n    return p;\n}\nclass ChessBoard\n{\nprivate:\n    int x;\n    int y;    // \u68cb\u5b50\u4f4d\u7f6e\n    int size; // \u68cb\u76d8\u5927\u5c0f\npublic:\n    void show(); // \u5c55\u793a\u68cb\u5b50\u4f4d\u7f6e\n    void setx(int a);\n    void sety(int a);\n    int getx() { return x; }\n    int gety() { return y; }                                                          // \u8bbe\u5b9a\u68cb\u5b50\u4f4d\u7f6e\n    ChessBoard(int sizee = 15, int xx = 0, int yy = 0) : size(sizee), x(xx), y(yy) {} // \u6784\u9020\u51fd\u6570\n    ~ChessBoard()                                                                     // \u6790\u6784\u51fd\u6570\n    {\n        cout &lt;&lt; \"Destructor called.\" &lt;&lt; endl; // \u8c03\u7528\u8bed\u53e5\n    }\n};\nvoid ChessBoard::show() // \u663e\u793a\u5bf9\u624b\u7684\u4e0a\u4e00\u6b65\n{\n    cout &lt;&lt; \"Your opponent's last step:\" &lt;&lt; endl\n         &lt;&lt; \"Location x is: \" &lt;&lt; x &lt;&lt; endl\n         &lt;&lt; \"Location y is: \" &lt;&lt; y &lt;&lt; endl;\n}\nvoid ChessBoard::setx(int a)\n{\n    x = a;\n}\nvoid ChessBoard::sety(int a)\n{\n    y = a;\n}\nclass player // \u5efa\u7acb\u73a9\u5bb6\u7c7b\n{\nprivate:\n    char name[21]; // \u73a9\u5bb6\u59d3\u540d\n    enum chesstype // \u679a\u4e3e\u53d8\u91cf,\u5b9a\u4e49\u68cb\u578b\n    {\n        black = 1,\n        white\n    };\n    float px;\n    float py;\n\npublic:\n    static int numb;       // \u9759\u6001\u6210\u5458,\u8bb0\u5f55\u5bf9\u5f08\u70b9\u6570\n    void setchess(int n);  // \u73a9\u5bb6 n(1 \u6216 2)\u4e0b\u68cb\n    int givex();           // \u8bbf\u95ee x \u7684\u7aef\u53e3\n    int givey();           // \u8bbf\u95ee y \u7684\u7aef\u53e3\n    void give_name(int n); // \u8d4b\u4e88\u540d\u5b57\n    void put_name();       // \u8f93\u51fa\u540d\u5b57\n    void pick_type();      // \u9009\u62e9\u68cb\u578b\n    void show_type();      // \u5c55\u793a\u68cb\u578b\n    ~player()              // player \u7c7b\u7684\u6790\u6784\u51fd\u6570\n    {\n        cout &lt;&lt; \"Destructor called.\" &lt;&lt; endl;\n    }\n};\n//\nvoid player::give_name(int n)\n{\n    printf(\"Player %d,please enter your name (no longer than 20 letters):\", n);\n    cin &gt;&gt; name;\n    cout &lt;&lt; name &lt;&lt; \",welcome!\" &lt;&lt; endl;\n}\nvoid player::show_type()\n{\n    printf(\"So,%s,your chess type is:\", name);\n    puts(type);\n}\nvoid player::pick_type()\n{\n    cout &lt;&lt; \"\\n\"\n         &lt;&lt; name &lt;&lt; \",which colour would you want to play?\\nOne thing you need to know is that black plays first.\\nPlease enter '1' for black or '2' for white:\";\n    int a;\n    cin &gt;&gt; a;\n    switch (a)\n    {\n    case 1:\n        strcpy(type, \"black\");\n        break;\n    case 2:\n        strcpy(type, \"white\");\n        break;\n    default:\n        cout &lt;&lt; \"Input error!\" &lt;&lt; endl;\n        pick_type();\n        break; // \u9632\u6b62\u6076\u610f\u8f93\u5165,\u63d0\u793aInput error\n    }\n}\nvoid player::setchess(int n) // \u7a0b\u5e8f\u4e2d\u6700\u91cd\u8981\u7684\u51fd\u6570\u4e4b\u4e00:\u4e0b\u68cb\u51fd\u6570\n{\n    printf(\"%s,please set chess. Enter the x&amp;y location of it.Input example: 7 7 \\n\", name);\n    cin &gt;&gt; px &gt;&gt; py;\n    int a, b;\n    a = floor(px);\n    b = floor(py); // \u9632\u6b62\u6076\u610f\u8f93\u5165\u5c0f\u6570\n    bool loclegal1 = false;\n    bool loclegal2 = false;\n    bool loclegal = true; // \u4e09\u4e2a\u5e03\u5c14\u578b\u53d8\u91cf,\u5224\u65ad\u5750\u6807\u7684\u5408\u6cd5\u6027\n    for (int i = 0; i &lt; 15; i++)\n    {\n        if (floor(px) == i)\n            loclegal1 = true;\n        if (floor(py) == i)\n            loclegal2 = true; // \u904d\u5386\u5224\u65ad\u6cd5\n    }\n    if ((loclegal1 == false) || (loclegal2 == false) || board[a][b] != 0)\n        loclegal = false; // \u6570\u636e\u8d8a\u754c\u6216\u4e0b\u5728\u5df2\u6709\u68cb\u5b50\u7684\u4f4d\u7f6e\u4e0a\u5747\u4f1a\u62a5\u9519\n    if (loclegal == false)\n    {\n        cout &lt;&lt; \"Input error!\" &lt;&lt; endl;\n        setchess(n);\n    }\n    if (loclegal)\n    {\n        board[a][b] = n; // \u5982\u679c\u8f93\u5165\u6b63\u786e,\u5c31\u4e3a\u4e8c\u7ef4\u6570\u7ec4\u8d4b\u503c,\u5e76\u589e\u52a0\u68cb\u5b50\u6570\n        numb++;\n    }\n}\nint player::givex()\n{\n    return px;\n}\nint player::givey()\n{\n    return py;\n}\nvoid player::put_name()\n{\n    cout &lt;&lt; name;\n}\n// \u68c0\u67e5\u662f\u5426\u4e94\u5b50\u8fde\u73e0\nbool win_shu(int x, int y, int chesstype)\n{\n    int count = 0;\n    bool flag = false;\n    for (int i = ((x &lt; 4) ? 0 : x - 4); i &lt;= ((x &gt; 15 - 5) ? 15 - 1 : x + 4); i++)\n    {\n        if (board[i][y] == chesstype)\n            count++;\n        else\n            count = 0;\n        if (count &gt;= 5)\n        {\n            flag = true;\n            break;\n        }\n    }\n    return flag;\n}\n\n// \u68c0\u67e5\u662f\u5426\u4e94\u5b50\u8fde\u73e0\nbool win_heng(int x, int y, int chesstype)\n{\n    int count = 0;\n    bool flag = false;\n    for (int i = ((y &lt; 4) ? 0 : y - 4); i &lt;= ((y &gt; 15 - 5) ? 15 - 1 : y + 4); i++)\n    {\n        if (board[x][i] == chesstype)\n            count++;\n        else\n            count = 0;\n        if (count &gt;= 5)\n        {\n            flag = true;\n            break;\n        }\n    }\n    return flag;\n}\n\n// \u68c0\u67e5\u662f\u5426\u4e94\u5b50\u8fde\u73e0\nbool win_xie_1(int x, int y, int chesstype)\n{\n    int count = 0;\n    bool flag = false;\n    for (int i = ((x &gt; y) ? ((y &lt; 4) ? x - y : x - 4) : ((x &lt; 4) ? 0 : x - 4)); i &lt;= ((x &gt; y) ? ((x &gt; 15 - 5) ? 15 - 1 : x + 4) : ((y &gt; 15 - 5) ? 15 - y + x - 1 : x + 4)); i++)\n    {\n        if (board[i][i + y - x] == chesstype)\n            count++;\n        else\n            count = 0;\n        if (count &gt;= 5)\n        {\n            flag = true;\n            break;\n        }\n    }\n    return flag;\n}\n\n// \u68c0\u67e5\u662f\u5426\u4e94\u5b50\u8fde\u73e0\nbool win_xie_2(int x, int y, int chesstype)\n{\n    int **_boardinfo = new int *[15];\n    for (int i = 0; i &lt; 15; i++)\n    {\n        _boardinfo[i] = new int[15];\n    }\n    for (int i = 0; i &lt; 15; i++)\n    {\n        for (int j = 0; j &lt; 15; j++)\n        {\n            _boardinfo[i][j] = board[i][15 - j - 1];\n        }\n    }\n    int count = 0;\n    bool flag = false;\n    y = 15 - y - 1;\n    for (int i = ((x &gt; y) ? ((y &lt; 4) ? x - y : x - 4) : ((x &lt; 4) ? 0 : x - 4)); i &lt;= ((x &gt; y) ? ((x &gt; 15 - 5) ? 15 - 1 : x + 4) : ((y &gt; 15 - 5) ? 15 - y + x - 1 : x + 4)); i++)\n    {\n        if (_boardinfo[i][i + y - x] == chesstype)\n            count++;\n        else\n            count = 0;\n        if (count &gt;= 5)\n        {\n            flag = true;\n            break;\n        }\n    }\n    for (int i = 0; i &lt; 15; i++)\n    {\n        delete[] _boardinfo[i];\n    }\n    delete[] _boardinfo;\n    return flag;\n}\n\nvoid drawboard() // \u68cb\u76d8\u7684\u7ed8\u5236\u51fd\u6570\n{\n    char sign[15][15][7];\n    for (int i = 0; i &lt; 15; i++)\n    {\n        for (int j = 0; j &lt; 15; j++)\n        {\n            if (board[i][j] == 0)\n                strcpy(sign[i][j], \"   \\0\");\n            if (board[i][j] == 1)\n                strcpy(sign[i][j], \" \u25cf \\0\");\n            if (board[i][j] == 2)\n                strcpy(sign[i][j], \" \u25ce \\0\"); // \u6839\u636e\u4e8c\u7ef4\u6570\u7ec4\u5143\u7d20\u7684\u503c\u7ed8\u5236\u5bf9\u5e94\u4f4d\u7f6e\n        }\n    }\n    printf(\"\\nEnter location to set chess.\\n\");\n    printf(\"    0   1   2   3   4   5   6   7   8   9   10  11  12  13  14\\n\");\n    printf(\"  \u250c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2510\\n\");\n    for (int i = 0, j = 0; i &lt; 14; i++, j++)\n    {\n        printf(\"%2d\u2502%3s\u2502%3s\u2502%3s\u2502%3s\u2502%3s\u2502%3s\u2502%3s\u2502%3s\u2502%3s\u2502%3s\u2502%3s\u2502%3s\u2502%3s\u2502%3s\u2502%3s\u2502%d\\n \", j, sign[i][0], sign[i][1], sign[i][2], sign[i][3], sign[i][4], sign[i][5], sign[i][6], sign[i][7], sign[i][8], sign[i][9], sign[i][10], sign[i][11], sign[i][12], sign[i][13], sign[i][14], j);\n        printf(\" \u251c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2524\\n\");\n    }\n    printf(\"14\u2502%3s\u2502%3s\u2502%3s\u2502%3s\u2502%3s\u2502%3s\u2502%3s\u2502%3s\u2502%3s\u2502%3s\u2502%3s\u2502%3s\u2502%3s\u2502%3s\u2502%3s\u2502%d\\n\", sign[14][0], sign[14][1], sign[14][2], sign[14][3], sign[14][4], sign[14][5], sign[14][6], sign[14][7], sign[14][8], sign[14][9], sign[14][10], sign[14][11], sign[14][12], sign[14][13], sign[14][14], 14);\n    printf(\"  \u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2518\\n\");\n    printf(\"    0   1   2   3   4   5   6   7   8   9   10  11  12  13  14\\n\"); // \u63d0\u793a\u8be5\u4f4d\u7f6e\u5750\u6807\n}\nvoid claim() // \u6709\u5173\u6e38\u620f\u7684\u90e8\u5206\u8bf4\u660e\n{\n    printf(\"\\nAttention:\\nI.The vertical direction location,called 'hang' in Chinese,is considered x.\\nII.If you input decimal data as location,the program will replace it with the largest integer smaller than it.\\nExample:'Location x is 14.3' is equal to 'Location x is 14'.\\n\");\n    cout &lt;&lt; \"\\nGet ready for your fierce battle!\\n\"\n         &lt;&lt; endl;\n}\nint player::numb = 0; // \u7c7b\u5916\u521d\u59cb\u5316\u9759\u6001\u53d8\u91cf\n\nint main()\n{ // \u5f00\u59cb\u4e3b\u6e38\u620f\u7a0b\u5e8f\n    int flag = 0;\n    ChessBoard Chess;\n    // player P1, P2; // \u521b\u5efa\u4e09\u4e2a\u5bf9\u8c61\n    player P[2];\n    int a[3] = {0};\n    bool pingju = false; // \u5224\u65ad\u662f\u5426\u5e73\u5c40\u7684\u53d8\u91cf\n    P[0].give_name(1);\n    P[1].give_name(2); // \u8ba9\u73a9\u5bb6\u8f93\u5165\u4ed6\u4eec\u7684\u540d\u5b57\n    P[0].pick_type();\n    P[0].show_type(); // \u68cb\u578b\u7684\u9009\u62e9\u4e0e\u663e\u793a\n    printf(\"Thus,\");\n    P[1].put_name();\n    printf(\",you play the other colour of chess.\\n\\n\");\n    claim();                        // \u7ec6\u679d\u672b\u8282\u7684\u63d0\u793a\n    if (strcmp(type, \"black\") == 0) // \u5982\u679c\u73a9\u5bb6\u4e00\u6267\u9ed1,\u4e3b\u7a0b\u5e8f\u4e3b\u4f53\n        flag = 1;\n    if (strcmp(type, \"white\") == 0) // \u5982\u679c\u73a9\u5bb6\u4e00\u6267\u767d,\u4e3b\u7a0b\u5e8f\u4e3b\u4f53\n        flag = 2;\n    do\n    {\n        drawboard(); // \u7ed8\u5236\u68cb\u76d8\n        P[flag - 1].setchess(flag);\n        Chess.setx(P[flag - 1].givex());\n        Chess.sety(P[flag - 1].givey()); // \u4e0b\u68cb\n        if (win_xie_1(Chess.getx(), Chess.gety(), flag) || win_shu(Chess.getx(), Chess.gety(), flag) || win_heng(Chess.getx(), Chess.gety(), flag) || win_xie_2(Chess.getx(), Chess.gety(), flag))\n        {\n            a[flag - 1] = 1;\n            system(\"clear\");\n            drawboard();\n            break;\n        } // \u5224\u65ad\u80dc\u8d1f\n        if (ping())\n        {\n            pingju = true;\n            break;\n        }\n        system(\"clear\"); // \u6e05\u5c4f\n        Chess.show();    // \u63d0\u793a\u4e0a\u4e00\u6b65\u5bf9\u624b\u7684\u8d70\u5411\n        drawboard();\n        P[2 - flag].setchess(3 - flag);\n        Chess.setx(P[2 - flag].givex());\n        Chess.sety(P[2 - flag].givey());\n        if (win_xie_1(Chess.getx(), Chess.gety(), 3 - flag) || win_shu(Chess.getx(), Chess.gety(), 3 - flag) || win_heng(Chess.getx(), Chess.gety(), 3 - flag) || win_xie_2(Chess.getx(), Chess.gety(), 3 - flag))\n        {\n            a[3 - flag] = 1;\n            system(\"clear\");\n            drawboard();\n            break;\n        }\n        if (ping())\n        {\n            pingju = true;\n            break;\n        }\n        system(\"clear\");\n        Chess.show();\n    } while (1); // \u5faa\u73af\u7ed3\u675f\u7684\u552f\u4e8c\u6761\u4ef6\u662f\u5206\u51fa\u80dc\u8d1f\u6216\u5e73\u5c40\n\n    if (a[1] == 1) // \u5982\u679c\u73a9\u5bb6 1 \u80dc\u5229\u7684\u60c5\u51b5\n    {\n        P[0].put_name();\n        printf(\" wins!\\nThere are totally %d chesses played.\\nThank you for playing my game.Goodbye.\\n\", player::numb);\n    }\n    if (a[2] == 1) // \u5982\u679c\u73a9\u5bb6 2 \u80dc\u5229\u7684\u60c5\u51b5\n    {\n        P[1].put_name();\n        printf(\" wins!\\nThere are totally %d chesses played.\\nThank you for playing my game.Goodbye.\\n\", player::numb);\n    }\n    if (pingju)\n        printf(\"You two reaches a peace situation!\\nThere are totally %d chesses played.\\nThank you for playing my game.Goodbye.\\n\", player::numb);\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c</p> <p></p>"},{"location":"coursework/cpd/2/06/","title":"\u7b2c6\u6b21\u4f5c\u4e1a","text":""},{"location":"coursework/cpd/2/06/#\u7b2c6\u6b21\u4f5c\u4e1a","title":"\u7b2c6\u6b21\u4f5c\u4e1a","text":""},{"location":"coursework/cpd/2/06/#\u5fc5\u505a\u9898","title":"\u5fc5\u505a\u9898","text":""},{"location":"coursework/cpd/2/06/#\u7b2c1\u9898","title":"\u7b2c1\u9898","text":"<p>\u539f\u4ee3\u7801</p> <pre><code>#include &lt;iostream&gt;\nusing namespace std;\nclass Base\n{\nprivate:\n    int b_number;\n\npublic:\n    Base() {}\n    Base(int i) : b_number(i) {}\n    int get_number() { return b_number; }\n    void print() { cout &lt;&lt; b_number &lt;&lt; endl; }\n};\nclass Derived : public Base\n{\nprivate:\n    int d_number;\n\npublic:\n    Derived(int i, int j) : Base(i), d_number(j){};\n    void print()\n    {\n        cout &lt;&lt; get_number() &lt;&lt; \" \";\n        cout &lt;&lt; d_number &lt;&lt; endl;\n    }\n};\nint main()\n{\n    Base a(2);\n    Derived b(3, 4);\n    cout &lt;&lt; \"a is \";\n    cout &lt;&lt; \"b is \";\n    b.print();\n    cout &lt;&lt; \"base part of b is \";\n    b.Base::print();\n    return 0;\n}\n</code></pre> <p>\u95ee\u98981</p> <p>\u7f16\u8bd1\u5668\u62a5\u9519\u3002\u56e0\u4e3a\u6b64\u65f6<code>b.Base</code>\u4e0d\u53ef\u8bbf\u95ee\u3002</p> <p>\u95ee\u98982</p> <p>\u7f16\u8bd1\u5668\u62a5\u9519\u3002\u56e0\u4e3a\u6b64\u65f6<code>b.Base</code>\u4e0d\u53ef\u8bbf\u95ee\u3002</p>"},{"location":"coursework/cpd/2/06/#\u7b2c2\u9898","title":"\u7b2c2\u9898","text":"<p>\u6e90\u4ee3\u7801</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\nusing namespace std;\n\nclass People\n{\npublic:\n    People()\n    {\n        strcpy(name, \"Default\");\n        strcpy(number, \"114514\");\n        strcpy(sex, \"M\");\n        birthday.y = 1919;\n        birthday.m = 8;\n        birthday.d = 10;\n        strcpy(id, \"123456789012345\");\n    }\n    People(People &amp;p)\n    {\n        strcpy(name, p.name);\n        strcpy(number, p.number);\n        strcpy(sex, p.sex);\n        birthday.y = p.birthday.y;\n        birthday.m = p.birthday.m;\n        birthday.d = p.birthday.d;\n        strcpy(id, p.id);\n    }\n    ~People()\n    {\n    }\n    void display()\n    {\n        cout &lt;&lt; \"\u8f93\u51fa\u4eba\u5458\u4fe1\u606f\uff1a\" &lt;&lt; endl\n             &lt;&lt; \"\u59d3\u540d\uff1a\" &lt;&lt; name &lt;&lt; endl\n             &lt;&lt; \"\u7f16\u53f7\uff1a\" &lt;&lt; number &lt;&lt; endl\n             &lt;&lt; \"\u6027\u522b\uff1a\" &lt;&lt; sex &lt;&lt; endl\n             &lt;&lt; \"\u751f\u65e5\uff1a\" &lt;&lt; birthday.m &lt;&lt; '/' &lt;&lt; birthday.d &lt;&lt; '/' &lt;&lt; birthday.y &lt;&lt; endl\n             &lt;&lt; \"\u8eab\u4efd\u8bc1\u53f7\uff1a\" &lt;&lt; id &lt;&lt; endl;\n    }\n    void set()\n    {\n        cout &lt;&lt; \"\u8f93\u5165\u4eba\u5458\u4fe1\u606f\uff1a\" &lt;&lt; endl;\n        cout &lt;&lt; \"\u59d3\u540d\uff1a\";\n        cin &gt;&gt; name;\n        cout &lt;&lt; \"\u7f16\u53f7\uff1a\";\n        cin &gt;&gt; number;\n        cout &lt;&lt; \"\u6027\u522b\uff1a\";\n        cin &gt;&gt; sex;\n        cout &lt;&lt; \"\u751f\u65e5\uff1a\";\n        cin &gt;&gt; birthday.m &gt;&gt; birthday.d &gt;&gt; birthday.y;\n        cout &lt;&lt; \"\u8eab\u4efd\u8bc1\u53f7\uff1a\";\n        cin &gt;&gt; id;\n    }\n\nprotected:\n    char name[11];\n    char number[7];\n    char sex[3];\n    class Date\n    {\n    public:\n        int m;\n        int d;\n        int y;\n    } birthday;\n    char id[16];\n};\n\nclass Student : virtual public People\n{\npublic:\n    Student()\n    {\n        strcpy(name, \"Default\");\n        strcpy(number, \"114514\");\n        strcpy(sex, \"M\");\n        birthday.y = 1919;\n        birthday.m = 8;\n        birthday.d = 10;\n        strcpy(id, \"123456789012345\");\n        strcpy(classNo, \"EE26\");\n    }\n    Student(Student &amp;p)\n    {\n        strcpy(name, p.name);\n        strcpy(number, p.number);\n        strcpy(sex, p.sex);\n        birthday.y = p.birthday.y;\n        birthday.m = p.birthday.m;\n        birthday.d = p.birthday.d;\n        strcpy(id, p.id);\n        strcpy(classNo, p.classNo);\n    }\n    ~Student()\n    {\n    }\n    void display()\n    {\n        cout &lt;&lt; \"\u8f93\u51fa\u4eba\u5458\u4fe1\u606f\uff1a\" &lt;&lt; endl\n             &lt;&lt; \"\u59d3\u540d\uff1a\" &lt;&lt; name &lt;&lt; endl\n             &lt;&lt; \"\u7f16\u53f7\uff1a\" &lt;&lt; number &lt;&lt; endl\n             &lt;&lt; \"\u6027\u522b\uff1a\" &lt;&lt; sex &lt;&lt; endl\n             &lt;&lt; \"\u751f\u65e5\uff1a\" &lt;&lt; birthday.m &lt;&lt; '/' &lt;&lt; birthday.d &lt;&lt; '/' &lt;&lt; birthday.y &lt;&lt; endl\n             &lt;&lt; \"\u8eab\u4efd\u8bc1\u53f7\uff1a\" &lt;&lt; id &lt;&lt; endl\n             &lt;&lt; \"\u73ed\u53f7\uff1a\" &lt;&lt; classNo &lt;&lt; endl;\n    }\n    void set()\n    {\n        cout &lt;&lt; \"\u8f93\u5165\u4eba\u5458\u4fe1\u606f\uff1a\" &lt;&lt; endl;\n        cout &lt;&lt; \"\u59d3\u540d\uff1a\";\n        cin &gt;&gt; name;\n        cout &lt;&lt; \"\u7f16\u53f7\uff1a\";\n        cin &gt;&gt; number;\n        cout &lt;&lt; \"\u6027\u522b\uff1a\";\n        cin &gt;&gt; sex;\n        cout &lt;&lt; \"\u751f\u65e5\uff1a\";\n        cin &gt;&gt; birthday.m &gt;&gt; birthday.d &gt;&gt; birthday.y;\n        cout &lt;&lt; \"\u8eab\u4efd\u8bc1\u53f7\uff1a\";\n        cin &gt;&gt; id;\n        cout &lt;&lt; \"\u73ed\u53f7\uff1a\";\n        cin &gt;&gt; classNo;\n    }\n\nprotected:\n    char classNo[7];\n};\n\nclass Teacher : virtual public People\n{\npublic:\n    Teacher()\n    {\n        strcpy(name, \"Default\");\n        strcpy(number, \"114514\");\n        strcpy(sex, \"M\");\n        birthday.y = 1919;\n        birthday.m = 8;\n        birthday.d = 10;\n        strcpy(id, \"123456789012345\");\n        strcpy(principalship, \"Professor\");\n        strcpy(department, \"Department of EE\");\n    }\n    Teacher(Teacher &amp;p)\n    {\n        strcpy(name, p.name);\n        strcpy(number, p.number);\n        strcpy(sex, p.sex);\n        birthday.y = p.birthday.y;\n        birthday.m = p.birthday.m;\n        birthday.d = p.birthday.d;\n        strcpy(id, p.id);\n        strcpy(principalship, p.principalship);\n        strcpy(department, p.department);\n    }\n    ~Teacher()\n    {\n    }\n    void display()\n    {\n        cout &lt;&lt; \"\u8f93\u51fa\u4eba\u5458\u4fe1\u606f\uff1a\" &lt;&lt; endl\n             &lt;&lt; \"\u59d3\u540d\uff1a\" &lt;&lt; name &lt;&lt; endl\n             &lt;&lt; \"\u7f16\u53f7\uff1a\" &lt;&lt; number &lt;&lt; endl\n             &lt;&lt; \"\u6027\u522b\uff1a\" &lt;&lt; sex &lt;&lt; endl\n             &lt;&lt; \"\u751f\u65e5\uff1a\" &lt;&lt; birthday.m &lt;&lt; '/' &lt;&lt; birthday.d &lt;&lt; '/' &lt;&lt; birthday.y &lt;&lt; endl\n             &lt;&lt; \"\u8eab\u4efd\u8bc1\u53f7\uff1a\" &lt;&lt; id &lt;&lt; endl\n             &lt;&lt; \"\u804c\u52a1\uff1a\" &lt;&lt; principalship &lt;&lt; endl\n             &lt;&lt; \"\u90e8\u95e8\uff1a\" &lt;&lt; department &lt;&lt; endl;\n    }\n    void set()\n    {\n        cout &lt;&lt; \"\u8f93\u5165\u4eba\u5458\u4fe1\u606f\uff1a\" &lt;&lt; endl;\n        cout &lt;&lt; \"\u59d3\u540d\uff1a\";\n        cin &gt;&gt; name;\n        cout &lt;&lt; \"\u7f16\u53f7\uff1a\";\n        cin &gt;&gt; number;\n        cout &lt;&lt; \"\u6027\u522b\uff1a\";\n        cin &gt;&gt; sex;\n        cout &lt;&lt; \"\u751f\u65e5\uff1a\";\n        cin &gt;&gt; birthday.m &gt;&gt; birthday.d &gt;&gt; birthday.y;\n        cout &lt;&lt; \"\u8eab\u4efd\u8bc1\u53f7\uff1a\";\n        cin &gt;&gt; id;\n        cout &lt;&lt; \"\u804c\u52a1\uff1a\";\n        cin &gt;&gt; principalship;\n        cout &lt;&lt; \"\u90e8\u95e8\uff1a\";\n        cin &gt;&gt; department;\n    }\n\nprotected:\n    char principalship[11];\n    char department[21];\n};\n\nclass Graduate : virtual public Student\n{\npublic:\n    Graduate()\n    {\n        strcpy(name, \"Default\");\n        strcpy(number, \"114514\");\n        strcpy(sex, \"M\");\n        birthday.y = 1919;\n        birthday.m = 8;\n        birthday.d = 10;\n        strcpy(id, \"123456789012345\");\n        strcpy(subject, \"EE\");\n        Teacher advisor();\n    }\n    Graduate(Graduate &amp;p)\n    {\n        strcpy(name, p.name);\n        strcpy(number, p.number);\n        strcpy(sex, p.sex);\n        birthday.y = p.birthday.y;\n        birthday.m = p.birthday.m;\n        birthday.d = p.birthday.d;\n        strcpy(id, p.id);\n        strcpy(subject, p.subject);\n        Teacher advisor(p.advisor);\n    }\n    ~Graduate()\n    {\n    }\n    void display()\n    {\n        cout &lt;&lt; \"\u8f93\u51fa\u4eba\u5458\u4fe1\u606f\uff1a\" &lt;&lt; endl\n             &lt;&lt; \"\u59d3\u540d\uff1a\" &lt;&lt; name &lt;&lt; endl\n             &lt;&lt; \"\u7f16\u53f7\uff1a\" &lt;&lt; number &lt;&lt; endl\n             &lt;&lt; \"\u6027\u522b\uff1a\" &lt;&lt; sex &lt;&lt; endl\n             &lt;&lt; \"\u751f\u65e5\uff1a\" &lt;&lt; birthday.m &lt;&lt; '/' &lt;&lt; birthday.d &lt;&lt; '/' &lt;&lt; birthday.y &lt;&lt; endl\n             &lt;&lt; \"\u8eab\u4efd\u8bc1\u53f7\uff1a\" &lt;&lt; id &lt;&lt; endl\n             &lt;&lt; \"\u73ed\u53f7\uff1a\" &lt;&lt; classNo &lt;&lt; endl\n             &lt;&lt; \"\u4e13\u4e1a\uff1a\" &lt;&lt; subject &lt;&lt; endl\n             &lt;&lt; \"\u5bfc\u5e08\uff1a\" &lt;&lt; endl\n             &lt;&lt; \"---\" &lt;&lt; endl;\n        advisor.display();\n        cout &lt;&lt; \"---\" &lt;&lt; endl;\n    }\n    void set()\n    {\n        cout &lt;&lt; \"\u8f93\u5165\u4eba\u5458\u4fe1\u606f\uff1a\" &lt;&lt; endl;\n        cout &lt;&lt; \"\u59d3\u540d\uff1a\";\n        cin &gt;&gt; name;\n        cout &lt;&lt; \"\u7f16\u53f7\uff1a\";\n        cin &gt;&gt; number;\n        cout &lt;&lt; \"\u6027\u522b\uff1a\";\n        cin &gt;&gt; sex;\n        cout &lt;&lt; \"\u751f\u65e5\uff1a\";\n        cin &gt;&gt; birthday.m &gt;&gt; birthday.d &gt;&gt; birthday.y;\n        cout &lt;&lt; \"\u8eab\u4efd\u8bc1\u53f7\uff1a\";\n        cin &gt;&gt; id;\n        cout &lt;&lt; \"\u73ed\u53f7\uff1a\";\n        cin &gt;&gt; classNo;\n        cout &lt;&lt; \"\u4e13\u4e1a\uff1a\";\n        cin &gt;&gt; subject;\n        cout &lt;&lt; \"\u5bfc\u5e08\uff1a\" &lt;&lt; endl\n             &lt;&lt; \"---\" &lt;&lt; endl;\n        advisor.set();\n        cout &lt;&lt; \"---\" &lt;&lt; endl;\n    }\n\nprotected:\n    char subject[21];\n    Teacher advisor;\n};\n\nclass TA : virtual public Teacher, virtual public Graduate\n{\npublic:\n    TA()\n    {\n        strcpy(name, \"Default\");\n        strcpy(number, \"114514\");\n        strcpy(sex, \"M\");\n        birthday.y = 1919;\n        birthday.m = 8;\n        birthday.d = 10;\n        strcpy(id, \"123456789012345\");\n        strcpy(principalship, \"TA\");\n        strcpy(department, \"Department of EE\");\n        strcpy(subject, \"EE\");\n        Teacher advisor();\n        RA = true;\n    }\n    TA(TA &amp;p)\n    {\n        strcpy(name, p.name);\n        strcpy(number, p.number);\n        strcpy(sex, p.sex);\n        birthday.y = p.birthday.y;\n        birthday.m = p.birthday.m;\n        birthday.d = p.birthday.d;\n        strcpy(id, p.id);\n        strcpy(principalship, p.principalship);\n        strcpy(department, p.department);\n        strcpy(subject, p.subject);\n        Teacher advisor(p.advisor);\n        RA = p.RA;\n    }\n    ~TA()\n    {\n    }\n    void display()\n    {\n        cout &lt;&lt; \"\u8f93\u51fa\u4eba\u5458\u4fe1\u606f\uff1a\" &lt;&lt; endl\n             &lt;&lt; \"\u59d3\u540d\uff1a\" &lt;&lt; name &lt;&lt; endl\n             &lt;&lt; \"\u7f16\u53f7\uff1a\" &lt;&lt; number &lt;&lt; endl\n             &lt;&lt; \"\u6027\u522b\uff1a\" &lt;&lt; sex &lt;&lt; endl\n             &lt;&lt; \"\u751f\u65e5\uff1a\" &lt;&lt; birthday.m &lt;&lt; '/' &lt;&lt; birthday.d &lt;&lt; '/' &lt;&lt; birthday.y &lt;&lt; endl\n             &lt;&lt; \"\u8eab\u4efd\u8bc1\u53f7\uff1a\" &lt;&lt; id &lt;&lt; endl\n             &lt;&lt; \"\u804c\u52a1\uff1a\" &lt;&lt; principalship &lt;&lt; endl\n             &lt;&lt; \"\u90e8\u95e8\uff1a\" &lt;&lt; department &lt;&lt; endl\n             &lt;&lt; \"\u73ed\u53f7\uff1a\" &lt;&lt; classNo &lt;&lt; endl\n             &lt;&lt; \"\u4e13\u4e1a\uff1a\" &lt;&lt; subject &lt;&lt; endl\n             &lt;&lt; \"\u5bfc\u5e08\uff1a\" &lt;&lt; endl\n             &lt;&lt; \"---\" &lt;&lt; endl;\n        advisor.display();\n        cout &lt;&lt; \"---\" &lt;&lt; endl;\n        cout &lt;&lt; \"RA\uff1a\" &lt;&lt; RA &lt;&lt; endl;\n    }\n    void set()\n    {\n        cout &lt;&lt; \"\u8f93\u5165\u4eba\u5458\u4fe1\u606f\uff1a\" &lt;&lt; endl;\n        cout &lt;&lt; \"\u59d3\u540d\uff1a\";\n        cin &gt;&gt; name;\n        cout &lt;&lt; \"\u7f16\u53f7\uff1a\";\n        cin &gt;&gt; number;\n        cout &lt;&lt; \"\u6027\u522b\uff1a\";\n        cin &gt;&gt; sex;\n        cout &lt;&lt; \"\u751f\u65e5\uff1a\";\n        cin &gt;&gt; birthday.m &gt;&gt; birthday.d &gt;&gt; birthday.y;\n        cout &lt;&lt; \"\u8eab\u4efd\u8bc1\u53f7\uff1a\";\n        cin &gt;&gt; id;\n        cout &lt;&lt; \"\u804c\u52a1\uff1a\";\n        cin &gt;&gt; principalship;\n        cout &lt;&lt; \"\u90e8\u95e8\uff1a\";\n        cin &gt;&gt; department;\n        cout &lt;&lt; \"\u73ed\u53f7\uff1a\";\n        cin &gt;&gt; classNo;\n        cout &lt;&lt; \"\u4e13\u4e1a\uff1a\";\n        cin &gt;&gt; subject;\n        cout &lt;&lt; \"\u5bfc\u5e08\uff1a\" &lt;&lt; endl\n             &lt;&lt; \"---\" &lt;&lt; endl;\n        advisor.set();\n        cout &lt;&lt; \"---\" &lt;&lt; endl;\n        cout &lt;&lt; \"RA\uff1a\";\n        cin &gt;&gt; RA;\n    }\n\nprotected:\n    bool RA;\n};\n\nint main()\n{\n    TA t;\n    // t.set();\n    t.display();\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c</p> <p></p>"},{"location":"coursework/cpd/2/06/#\u9009\u505a\u9898","title":"\u9009\u505a\u9898","text":""},{"location":"coursework/cpd/2/06/#\u7b2c1\u9898_1","title":"\u7b2c1\u9898","text":"<p>\u6e90\u4ee3\u7801</p> <pre><code>#include &lt;iostream&gt;\nusing namespace std;\nclass employee\n{\npublic:\n    employee()\n    {\n        individualEmpNo = currentEmpNo; // \u804c\u5de5\u7f16\u53f7\u81ea\u52a8\u4ea7\u751f\n        currentEmpNo++;                 // \u81ea\u52a8\u52a01\n        grade = 1;\n        accumPay = 1000;\n    }\n    employee(int g, int p)\n    {\n        individualEmpNo = currentEmpNo; // \u804c\u5de5\u7f16\u53f7\u81ea\u52a8\u4ea7\u751f\n        currentEmpNo++;                 // \u81ea\u52a8\u52a01\n        grade = g;\n        accumPay = p;\n    }\n    void set_emp()\n    {\n        cout &lt;&lt; \"\u8bf7\u8f93\u5165\u7f16\u53f7\u4e3a\" &lt;&lt; individualEmpNo &lt;&lt; \"\u7684\u5458\u5de5\u7684\u7ea7\u522b\uff1a\" &lt;&lt; endl;\n        cin &gt;&gt; grade;\n        cout &lt;&lt; \"\u8bf7\u8f93\u5165\u7f16\u53f7\u4e3a\" &lt;&lt; individualEmpNo &lt;&lt; \"\u7684\u5458\u5de5\u7684\u6708\u85aa\uff1a\" &lt;&lt; endl;\n        cin &gt;&gt; accumPay;\n    }\n    void show()\n    {\n        cout &lt;&lt; \"\u6b63\u5728\u8f93\u51fa\u5458\u5de5\u4fe1\u606f\uff1a\" &lt;&lt; endl\n             &lt;&lt; \"\u7f16\u53f7\uff1a\" &lt;&lt; individualEmpNo &lt;&lt; endl\n             &lt;&lt; \"\u7ea7\u522b\uff1a\" &lt;&lt; grade &lt;&lt; endl\n             &lt;&lt; \"\u6708\u85aa\uff1a\" &lt;&lt; accumPay &lt;&lt; endl\n             &lt;&lt; endl;\n    }\n    ~employee()\n    {\n        cout &lt;&lt; \"\u7f16\u53f7\u4e3a\" &lt;&lt; individualEmpNo &lt;&lt; \"\u7684\u5458\u5de5\uff0c\u6b22\u8fce\u4f7f\u7528\uff0c\u518d\u89c1\uff01\" &lt;&lt; endl;\n    }\n\nprotected:\n    int individualEmpNo;\n    int grade;\n    int accumPay;\n    static int currentEmpNo;\n};\n\nclass manager : virtual public employee\n{\npublic:\n    manager()\n    {\n        accumPay = 12000;\n    }\n    manager(int g, int p)\n    {\n        grade = g;\n        accumPay = p;\n    }\n    void show()\n    {\n        cout &lt;&lt; \"\u6b63\u5728\u8f93\u51fa\u5458\u5de5\u4fe1\u606f\uff1a\" &lt;&lt; endl\n             &lt;&lt; \"\u7f16\u53f7\uff1a\" &lt;&lt; individualEmpNo &lt;&lt; endl\n             &lt;&lt; \"\u5c97\u4f4d\uff1a\u7ecf\u7406\" &lt;&lt; endl\n             &lt;&lt; \"\u7ea7\u522b\uff1a\" &lt;&lt; grade &lt;&lt; endl\n             &lt;&lt; \"\u6708\u85aa\uff1a\" &lt;&lt; accumPay &lt;&lt; endl\n             &lt;&lt; endl;\n    }\n};\n\nclass technician : virtual public employee\n{\npublic:\n    technician()\n    {\n        workhour = 288;\n        accumPay = 260 * workhour;\n    }\n    technician(int g, int h)\n    {\n        grade = g;\n        workhour = h;\n        accumPay = 260 * workhour;\n    }\n    void set_emp()\n    {\n        cout &lt;&lt; \"\u8bf7\u8f93\u5165\u7f16\u53f7\u4e3a\" &lt;&lt; individualEmpNo &lt;&lt; \"\u7684\u5458\u5de5\u7684\u7ea7\u522b\uff1a\" &lt;&lt; endl;\n        cin &gt;&gt; grade;\n        cout &lt;&lt; \"\u8bf7\u8f93\u5165\u7f16\u53f7\u4e3a\" &lt;&lt; individualEmpNo &lt;&lt; \"\u7684\u5458\u5de5\u7684\u5de5\u4f5c\u65f6\u957f\uff1a\" &lt;&lt; endl;\n        cin &gt;&gt; workhour;\n        accumPay = 260 * workhour;\n    }\n    void show()\n    {\n        cout &lt;&lt; \"\u6b63\u5728\u8f93\u51fa\u5458\u5de5\u4fe1\u606f\uff1a\" &lt;&lt; endl\n             &lt;&lt; \"\u7f16\u53f7\uff1a\" &lt;&lt; individualEmpNo &lt;&lt; endl\n             &lt;&lt; \"\u5c97\u4f4d\uff1a\u6280\u672f\" &lt;&lt; endl\n             &lt;&lt; \"\u7ea7\u522b\uff1a\" &lt;&lt; grade &lt;&lt; endl\n             &lt;&lt; \"\u5de5\u4f5c\u65f6\u957f\uff1a\" &lt;&lt; workhour &lt;&lt; endl\n             &lt;&lt; \"\u6708\u85aa\uff1a\" &lt;&lt; accumPay &lt;&lt; endl\n             &lt;&lt; endl;\n    }\n\nprotected:\n    int workhour;\n};\n\nclass salesman : virtual public employee\n{\npublic:\n    salesman()\n    {\n        sale = 114514;\n        accumPay = 0.05 * sale;\n    }\n    salesman(int g, int s)\n    {\n        grade = g;\n        sale = s;\n        accumPay = 0.05 * sale;\n    }\n    void set_emp()\n    {\n        cout &lt;&lt; \"\u8bf7\u8f93\u5165\u7f16\u53f7\u4e3a\" &lt;&lt; individualEmpNo &lt;&lt; \"\u7684\u5458\u5de5\u7684\u7ea7\u522b\uff1a\" &lt;&lt; endl;\n        cin &gt;&gt; grade;\n        cout &lt;&lt; \"\u8bf7\u8f93\u5165\u7f16\u53f7\u4e3a\" &lt;&lt; individualEmpNo &lt;&lt; \"\u7684\u5458\u5de5\u7684\u9500\u552e\u989d\uff1a\" &lt;&lt; endl;\n        cin &gt;&gt; sale;\n        accumPay = 0.05 * sale;\n    }\n    void show()\n    {\n        cout &lt;&lt; \"\u6b63\u5728\u8f93\u51fa\u5458\u5de5\u4fe1\u606f\uff1a\" &lt;&lt; endl\n             &lt;&lt; \"\u7f16\u53f7\uff1a\" &lt;&lt; individualEmpNo &lt;&lt; endl\n             &lt;&lt; \"\u5c97\u4f4d\uff1a\u9500\u552e\" &lt;&lt; endl\n             &lt;&lt; \"\u7ea7\u522b\uff1a\" &lt;&lt; grade &lt;&lt; endl\n             &lt;&lt; \"\u9500\u552e\u989d\uff1a\" &lt;&lt; sale &lt;&lt; endl\n             &lt;&lt; \"\u6708\u85aa\uff1a\" &lt;&lt; accumPay &lt;&lt; endl\n             &lt;&lt; endl;\n    }\n\nprotected:\n    double sale;\n    double accumPay;\n};\n\nint employee::currentEmpNo = 1;\n\nint main()\n{\n    manager man;\n    technician tech;\n    salesman sale;\n    man.show();\n    tech.show();\n    sale.show();\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c</p> <p></p>"},{"location":"coursework/cpd/2/06/#\u7b2c2\u9898_1","title":"\u7b2c2\u9898","text":"<p>\u6e90\u4ee3\u7801</p> <pre><code>#include &lt;iostream&gt;\n#include \"string\"\nusing namespace std;\nclass tester\n{\npublic:\n    tester() : i(5), ch('x'){};\n\nprivate:\n    int i;\n    char ch;\n};\nclass tester1 : public tester\n{\nprivate:\n    int y = 0;\n};\nint main(void)\n{\n    tester1 myTester1;\n    char *p = NULL;\n    p = (char *)&amp;myTester1 + sizeof(int);\n    cout &lt;&lt; \"Address of ch = \" &lt;&lt; (void *)p &lt;&lt; endl;\n    cout &lt;&lt; \"ch = \" &lt;&lt; *(p) &lt;&lt; endl;\n    // getchar();\n    *p = 'y';\n    cout &lt;&lt; \"Now ch = \" &lt;&lt; *(p) &lt;&lt; endl;\n    return 0;\n}\n</code></pre> <p>\u5c06\u7c7b<code>tester</code>\u4e2d\u7684\u6570\u636e\u6210\u5458<code>i</code>\u6539\u4e3a<code>long int</code>\u540e\u7684\u4ee3\u7801 </p><pre><code>#include &lt;iostream&gt;\n#include \"string\"\nusing namespace std;\nclass tester\n{\npublic:\n    tester() : i(5), ch('x'){};\n\nprivate:\n    long int i;\n    char ch;\n};\nclass tester1 : public tester\n{\nprivate:\n    int y = 0;\n};\nint main(void)\n{\n    tester1 myTester1;\n    char *p = NULL;\n    p = (char *)&amp;myTester1 + sizeof(long int);\n    cout &lt;&lt; \"Address of ch = \" &lt;&lt; (void *)p &lt;&lt; endl;\n    cout &lt;&lt; \"ch = \" &lt;&lt; *(p) &lt;&lt; endl;\n    // getchar();\n    *p = 'y';\n    cout &lt;&lt; \"Now ch = \" &lt;&lt; *(p) &lt;&lt; endl;\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c</p> <p></p>"},{"location":"coursework/cpd/2/07/","title":"\u7b2c7\u6b21\u4f5c\u4e1a","text":""},{"location":"coursework/cpd/2/07/#\u7b2c7\u6b21\u4f5c\u4e1a","title":"\u7b2c7\u6b21\u4f5c\u4e1a","text":""},{"location":"coursework/cpd/2/07/#\u5fc5\u505a\u9898","title":"\u5fc5\u505a\u9898","text":""},{"location":"coursework/cpd/2/07/#\u7b2c1\u9898","title":"\u7b2c1\u9898","text":"<p>\u6784\u9020\u57fa\u7c7b<code>B1</code>-&gt;\u6784\u9020\u57fa\u7c7b<code>B2</code>-&gt;\u6784\u9020<code>memberB1</code>-&gt;\u6784\u9020<code>memberB2</code>-&gt;\u6784\u9020<code>obj</code>-&gt;\u6790\u6784<code>obj</code>-&gt;\u6790\u6784<code>memberB2</code>-&gt;\u6790\u6784<code>memberB1</code>-&gt;\u6790\u6784\u57fa\u7c7b<code>B2</code>-&gt;\u6790\u6784\u57fa\u7c7b<code>B1</code></p>"},{"location":"coursework/cpd/2/07/#\u7b2c2\u9898","title":"\u7b2c2\u9898","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\nusing namespace std;\n\nclass People\n{\npublic:\n    People()\n    {\n        strcpy(name, \"Default\");\n        strcpy(number, \"114514\");\n        strcpy(sex, \"M\");\n        birthday.y = 1919;\n        birthday.m = 8;\n        birthday.d = 10;\n        strcpy(id, \"123456789012345\");\n        cout &lt;&lt; \"Constructed People \" &lt;&lt; name &lt;&lt; endl;\n    }\n    People(People &amp;p)\n    {\n        strcpy(name, p.name);\n        strcpy(number, p.number);\n        strcpy(sex, p.sex);\n        birthday.y = p.birthday.y;\n        birthday.m = p.birthday.m;\n        birthday.d = p.birthday.d;\n        strcpy(id, p.id);\n        cout &lt;&lt; \"Copied People \" &lt;&lt; name &lt;&lt; endl;\n    }\n    ~People()\n    {\n        cout &lt;&lt; \"Destructed People \" &lt;&lt; name &lt;&lt; endl;\n    }\n    void display()\n    {\n        cout &lt;&lt; \"\u8f93\u51fa\u4eba\u5458\u4fe1\u606f\uff1a\" &lt;&lt; endl\n             &lt;&lt; \"\u59d3\u540d\uff1a\" &lt;&lt; name &lt;&lt; endl\n             &lt;&lt; \"\u7f16\u53f7\uff1a\" &lt;&lt; number &lt;&lt; endl\n             &lt;&lt; \"\u6027\u522b\uff1a\" &lt;&lt; sex &lt;&lt; endl\n             &lt;&lt; \"\u751f\u65e5\uff1a\" &lt;&lt; birthday.m &lt;&lt; '/' &lt;&lt; birthday.d &lt;&lt; '/' &lt;&lt; birthday.y &lt;&lt; endl\n             &lt;&lt; \"\u8eab\u4efd\u8bc1\u53f7\uff1a\" &lt;&lt; id &lt;&lt; endl;\n    }\n    void set()\n    {\n        cout &lt;&lt; \"\u8f93\u5165\u4eba\u5458\u4fe1\u606f\uff1a\" &lt;&lt; endl;\n        cout &lt;&lt; \"\u59d3\u540d\uff1a\";\n        cin &gt;&gt; name;\n        cout &lt;&lt; \"\u7f16\u53f7\uff1a\";\n        cin &gt;&gt; number;\n        cout &lt;&lt; \"\u6027\u522b\uff1a\";\n        cin &gt;&gt; sex;\n        cout &lt;&lt; \"\u751f\u65e5\uff1a\";\n        cin &gt;&gt; birthday.m &gt;&gt; birthday.d &gt;&gt; birthday.y;\n        cout &lt;&lt; \"\u8eab\u4efd\u8bc1\u53f7\uff1a\";\n        cin &gt;&gt; id;\n    }\n\nprotected:\n    char name[11];\n    char number[7];\n    char sex[3];\n    class Date\n    {\n    public:\n        int m;\n        int d;\n        int y;\n    } birthday;\n    char id[16];\n};\n\nclass Student : virtual public People\n{\npublic:\n    Student()\n    {\n        strcpy(name, \"Default\");\n        strcpy(number, \"114514\");\n        strcpy(sex, \"M\");\n        birthday.y = 1919;\n        birthday.m = 8;\n        birthday.d = 10;\n        strcpy(id, \"123456789012345\");\n        strcpy(classNo, \"EE26\");\n        cout &lt;&lt; \"Constructed Student \" &lt;&lt; name &lt;&lt; endl;\n    }\n    Student(Student &amp;p)\n    {\n        strcpy(name, p.name);\n        strcpy(number, p.number);\n        strcpy(sex, p.sex);\n        birthday.y = p.birthday.y;\n        birthday.m = p.birthday.m;\n        birthday.d = p.birthday.d;\n        strcpy(id, p.id);\n        strcpy(classNo, p.classNo);\n        cout &lt;&lt; \"Copied Student \" &lt;&lt; name &lt;&lt; endl;\n    }\n    ~Student()\n    {\n        cout &lt;&lt; \"Destructed Student \" &lt;&lt; name &lt;&lt; endl;\n    }\n    void display()\n    {\n        cout &lt;&lt; \"\u8f93\u51fa\u4eba\u5458\u4fe1\u606f\uff1a\" &lt;&lt; endl\n             &lt;&lt; \"\u59d3\u540d\uff1a\" &lt;&lt; name &lt;&lt; endl\n             &lt;&lt; \"\u7f16\u53f7\uff1a\" &lt;&lt; number &lt;&lt; endl\n             &lt;&lt; \"\u6027\u522b\uff1a\" &lt;&lt; sex &lt;&lt; endl\n             &lt;&lt; \"\u751f\u65e5\uff1a\" &lt;&lt; birthday.m &lt;&lt; '/' &lt;&lt; birthday.d &lt;&lt; '/' &lt;&lt; birthday.y &lt;&lt; endl\n             &lt;&lt; \"\u8eab\u4efd\u8bc1\u53f7\uff1a\" &lt;&lt; id &lt;&lt; endl\n             &lt;&lt; \"\u73ed\u53f7\uff1a\" &lt;&lt; classNo &lt;&lt; endl;\n    }\n    void set()\n    {\n        cout &lt;&lt; \"\u8f93\u5165\u4eba\u5458\u4fe1\u606f\uff1a\" &lt;&lt; endl;\n        cout &lt;&lt; \"\u59d3\u540d\uff1a\";\n        cin &gt;&gt; name;\n        cout &lt;&lt; \"\u7f16\u53f7\uff1a\";\n        cin &gt;&gt; number;\n        cout &lt;&lt; \"\u6027\u522b\uff1a\";\n        cin &gt;&gt; sex;\n        cout &lt;&lt; \"\u751f\u65e5\uff1a\";\n        cin &gt;&gt; birthday.m &gt;&gt; birthday.d &gt;&gt; birthday.y;\n        cout &lt;&lt; \"\u8eab\u4efd\u8bc1\u53f7\uff1a\";\n        cin &gt;&gt; id;\n        cout &lt;&lt; \"\u73ed\u53f7\uff1a\";\n        cin &gt;&gt; classNo;\n    }\n\nprotected:\n    char classNo[7];\n};\n\nclass Teacher : virtual public People\n{\npublic:\n    Teacher()\n    {\n        strcpy(name, \"Default\");\n        strcpy(number, \"114514\");\n        strcpy(sex, \"M\");\n        birthday.y = 1919;\n        birthday.m = 8;\n        birthday.d = 10;\n        strcpy(id, \"123456789012345\");\n        strcpy(principalship, \"Professor\");\n        strcpy(department, \"Department of EE\");\n        cout &lt;&lt; \"Constructed Teacher \" &lt;&lt; name &lt;&lt; endl;\n    }\n    Teacher(Teacher &amp;p)\n    {\n        strcpy(name, p.name);\n        strcpy(number, p.number);\n        strcpy(sex, p.sex);\n        birthday.y = p.birthday.y;\n        birthday.m = p.birthday.m;\n        birthday.d = p.birthday.d;\n        strcpy(id, p.id);\n        strcpy(principalship, p.principalship);\n        strcpy(department, p.department);\n        cout &lt;&lt; \"Copied Teacher \" &lt;&lt; name &lt;&lt; endl;\n    }\n    ~Teacher()\n    {\n        cout &lt;&lt; \"Destructed Teacher \" &lt;&lt; name &lt;&lt; endl;\n    }\n    void display()\n    {\n        cout &lt;&lt; \"\u8f93\u51fa\u4eba\u5458\u4fe1\u606f\uff1a\" &lt;&lt; endl\n             &lt;&lt; \"\u59d3\u540d\uff1a\" &lt;&lt; name &lt;&lt; endl\n             &lt;&lt; \"\u7f16\u53f7\uff1a\" &lt;&lt; number &lt;&lt; endl\n             &lt;&lt; \"\u6027\u522b\uff1a\" &lt;&lt; sex &lt;&lt; endl\n             &lt;&lt; \"\u751f\u65e5\uff1a\" &lt;&lt; birthday.m &lt;&lt; '/' &lt;&lt; birthday.d &lt;&lt; '/' &lt;&lt; birthday.y &lt;&lt; endl\n             &lt;&lt; \"\u8eab\u4efd\u8bc1\u53f7\uff1a\" &lt;&lt; id &lt;&lt; endl\n             &lt;&lt; \"\u804c\u52a1\uff1a\" &lt;&lt; principalship &lt;&lt; endl\n             &lt;&lt; \"\u90e8\u95e8\uff1a\" &lt;&lt; department &lt;&lt; endl;\n    }\n    void set()\n    {\n        cout &lt;&lt; \"\u8f93\u5165\u4eba\u5458\u4fe1\u606f\uff1a\" &lt;&lt; endl;\n        cout &lt;&lt; \"\u59d3\u540d\uff1a\";\n        cin &gt;&gt; name;\n        cout &lt;&lt; \"\u7f16\u53f7\uff1a\";\n        cin &gt;&gt; number;\n        cout &lt;&lt; \"\u6027\u522b\uff1a\";\n        cin &gt;&gt; sex;\n        cout &lt;&lt; \"\u751f\u65e5\uff1a\";\n        cin &gt;&gt; birthday.m &gt;&gt; birthday.d &gt;&gt; birthday.y;\n        cout &lt;&lt; \"\u8eab\u4efd\u8bc1\u53f7\uff1a\";\n        cin &gt;&gt; id;\n        cout &lt;&lt; \"\u804c\u52a1\uff1a\";\n        cin &gt;&gt; principalship;\n        cout &lt;&lt; \"\u90e8\u95e8\uff1a\";\n        cin &gt;&gt; department;\n    }\n\nprotected:\n    char principalship[11];\n    char department[21];\n};\n\nclass Graduate : virtual public Student\n{\npublic:\n    Graduate()\n    {\n        strcpy(name, \"Default\");\n        strcpy(number, \"114514\");\n        strcpy(sex, \"M\");\n        birthday.y = 1919;\n        birthday.m = 8;\n        birthday.d = 10;\n        strcpy(id, \"123456789012345\");\n        strcpy(subject, \"EE\");\n        Teacher advisor();\n        cout &lt;&lt; \"Constructed Graduate \" &lt;&lt; name &lt;&lt; endl;\n    }\n    Graduate(Graduate &amp;p)\n    {\n        strcpy(name, p.name);\n        strcpy(number, p.number);\n        strcpy(sex, p.sex);\n        birthday.y = p.birthday.y;\n        birthday.m = p.birthday.m;\n        birthday.d = p.birthday.d;\n        strcpy(id, p.id);\n        strcpy(subject, p.subject);\n        Teacher advisor(p.advisor);\n        cout &lt;&lt; \"Copied Graduate \" &lt;&lt; name &lt;&lt; endl;\n    }\n    ~Graduate()\n    {\n        cout &lt;&lt; \"Destructed Graduate \" &lt;&lt; name &lt;&lt; endl;\n    }\n    void display()\n    {\n        cout &lt;&lt; \"\u8f93\u51fa\u4eba\u5458\u4fe1\u606f\uff1a\" &lt;&lt; endl\n             &lt;&lt; \"\u59d3\u540d\uff1a\" &lt;&lt; name &lt;&lt; endl\n             &lt;&lt; \"\u7f16\u53f7\uff1a\" &lt;&lt; number &lt;&lt; endl\n             &lt;&lt; \"\u6027\u522b\uff1a\" &lt;&lt; sex &lt;&lt; endl\n             &lt;&lt; \"\u751f\u65e5\uff1a\" &lt;&lt; birthday.m &lt;&lt; '/' &lt;&lt; birthday.d &lt;&lt; '/' &lt;&lt; birthday.y &lt;&lt; endl\n             &lt;&lt; \"\u8eab\u4efd\u8bc1\u53f7\uff1a\" &lt;&lt; id &lt;&lt; endl\n             &lt;&lt; \"\u73ed\u53f7\uff1a\" &lt;&lt; classNo &lt;&lt; endl\n             &lt;&lt; \"\u4e13\u4e1a\uff1a\" &lt;&lt; subject &lt;&lt; endl\n             &lt;&lt; \"\u5bfc\u5e08\uff1a\" &lt;&lt; endl\n             &lt;&lt; \"---\" &lt;&lt; endl;\n        advisor.display();\n        cout &lt;&lt; \"---\" &lt;&lt; endl;\n    }\n    void set()\n    {\n        cout &lt;&lt; \"\u8f93\u5165\u4eba\u5458\u4fe1\u606f\uff1a\" &lt;&lt; endl;\n        cout &lt;&lt; \"\u59d3\u540d\uff1a\";\n        cin &gt;&gt; name;\n        cout &lt;&lt; \"\u7f16\u53f7\uff1a\";\n        cin &gt;&gt; number;\n        cout &lt;&lt; \"\u6027\u522b\uff1a\";\n        cin &gt;&gt; sex;\n        cout &lt;&lt; \"\u751f\u65e5\uff1a\";\n        cin &gt;&gt; birthday.m &gt;&gt; birthday.d &gt;&gt; birthday.y;\n        cout &lt;&lt; \"\u8eab\u4efd\u8bc1\u53f7\uff1a\";\n        cin &gt;&gt; id;\n        cout &lt;&lt; \"\u73ed\u53f7\uff1a\";\n        cin &gt;&gt; classNo;\n        cout &lt;&lt; \"\u4e13\u4e1a\uff1a\";\n        cin &gt;&gt; subject;\n        cout &lt;&lt; \"\u5bfc\u5e08\uff1a\" &lt;&lt; endl\n             &lt;&lt; \"---\" &lt;&lt; endl;\n        advisor.set();\n        cout &lt;&lt; \"---\" &lt;&lt; endl;\n    }\n\nprotected:\n    char subject[21];\n    Teacher advisor;\n};\n\nclass TA : virtual public Teacher, virtual public Graduate\n{\npublic:\n    TA()\n    {\n        strcpy(name, \"Default\");\n        strcpy(number, \"114514\");\n        strcpy(sex, \"M\");\n        birthday.y = 1919;\n        birthday.m = 8;\n        birthday.d = 10;\n        strcpy(id, \"123456789012345\");\n        strcpy(principalship, \"TA\");\n        strcpy(department, \"Department of EE\");\n        strcpy(subject, \"EE\");\n        Teacher advisor();\n        RA = true;\n        cout &lt;&lt; \"Constructed TA \" &lt;&lt; name &lt;&lt; endl;\n    }\n    TA(TA &amp;p)\n    {\n        strcpy(name, p.name);\n        strcpy(number, p.number);\n        strcpy(sex, p.sex);\n        birthday.y = p.birthday.y;\n        birthday.m = p.birthday.m;\n        birthday.d = p.birthday.d;\n        strcpy(id, p.id);\n        strcpy(principalship, p.principalship);\n        strcpy(department, p.department);\n        strcpy(subject, p.subject);\n        Teacher advisor(p.advisor);\n        RA = p.RA;\n        cout &lt;&lt; \"Copied TA \" &lt;&lt; name &lt;&lt; endl;\n    }\n    ~TA()\n    {\n        cout &lt;&lt; \"Destructed TA \" &lt;&lt; name &lt;&lt; endl;\n    }\n    void display()\n    {\n        cout &lt;&lt; \"\u8f93\u51fa\u4eba\u5458\u4fe1\u606f\uff1a\" &lt;&lt; endl\n             &lt;&lt; \"\u59d3\u540d\uff1a\" &lt;&lt; name &lt;&lt; endl\n             &lt;&lt; \"\u7f16\u53f7\uff1a\" &lt;&lt; number &lt;&lt; endl\n             &lt;&lt; \"\u6027\u522b\uff1a\" &lt;&lt; sex &lt;&lt; endl\n             &lt;&lt; \"\u751f\u65e5\uff1a\" &lt;&lt; birthday.m &lt;&lt; '/' &lt;&lt; birthday.d &lt;&lt; '/' &lt;&lt; birthday.y &lt;&lt; endl\n             &lt;&lt; \"\u8eab\u4efd\u8bc1\u53f7\uff1a\" &lt;&lt; id &lt;&lt; endl\n             &lt;&lt; \"\u804c\u52a1\uff1a\" &lt;&lt; principalship &lt;&lt; endl\n             &lt;&lt; \"\u90e8\u95e8\uff1a\" &lt;&lt; department &lt;&lt; endl\n             &lt;&lt; \"\u73ed\u53f7\uff1a\" &lt;&lt; classNo &lt;&lt; endl\n             &lt;&lt; \"\u4e13\u4e1a\uff1a\" &lt;&lt; subject &lt;&lt; endl\n             &lt;&lt; \"\u5bfc\u5e08\uff1a\" &lt;&lt; endl\n             &lt;&lt; \"---\" &lt;&lt; endl;\n        advisor.display();\n        cout &lt;&lt; \"---\" &lt;&lt; endl;\n        cout &lt;&lt; \"RA\uff1a\" &lt;&lt; RA &lt;&lt; endl;\n    }\n    void set()\n    {\n        cout &lt;&lt; \"\u8f93\u5165\u4eba\u5458\u4fe1\u606f\uff1a\" &lt;&lt; endl;\n        cout &lt;&lt; \"\u59d3\u540d\uff1a\";\n        cin &gt;&gt; name;\n        cout &lt;&lt; \"\u7f16\u53f7\uff1a\";\n        cin &gt;&gt; number;\n        cout &lt;&lt; \"\u6027\u522b\uff1a\";\n        cin &gt;&gt; sex;\n        cout &lt;&lt; \"\u751f\u65e5\uff1a\";\n        cin &gt;&gt; birthday.m &gt;&gt; birthday.d &gt;&gt; birthday.y;\n        cout &lt;&lt; \"\u8eab\u4efd\u8bc1\u53f7\uff1a\";\n        cin &gt;&gt; id;\n        cout &lt;&lt; \"\u804c\u52a1\uff1a\";\n        cin &gt;&gt; principalship;\n        cout &lt;&lt; \"\u90e8\u95e8\uff1a\";\n        cin &gt;&gt; department;\n        cout &lt;&lt; \"\u73ed\u53f7\uff1a\";\n        cin &gt;&gt; classNo;\n        cout &lt;&lt; \"\u4e13\u4e1a\uff1a\";\n        cin &gt;&gt; subject;\n        cout &lt;&lt; \"\u5bfc\u5e08\uff1a\" &lt;&lt; endl\n             &lt;&lt; \"---\" &lt;&lt; endl;\n        advisor.set();\n        cout &lt;&lt; \"---\" &lt;&lt; endl;\n        cout &lt;&lt; \"RA\uff1a\";\n        cin &gt;&gt; RA;\n    }\n\nprotected:\n    bool RA;\n};\n\nint main()\n{\n    TA t;\n    // t.set();\n    t.display();\n    return 0;\n}\n</code></pre>"},{"location":"coursework/cpd/2/07/#1","title":"(1)","text":""},{"location":"coursework/cpd/2/07/#2","title":"(2)","text":"<p>\u865a\u57fa\u7c7b\u89e3\u51b3\u4e86\u591a\u7ee7\u627f\u65f6\u547d\u540d\u51b2\u7a81\u548c\u5197\u4f59\u6570\u636e\u7684\u95ee\u9898\uff0c\u66f4\u52a0\u65b9\u4fbf\u3002</p>"},{"location":"coursework/cpd/2/07/#\u9009\u505a\u9898","title":"\u9009\u505a\u9898","text":""},{"location":"coursework/cpd/2/07/#\u7b2c1\u9898_1","title":"\u7b2c1\u9898","text":"<p><code>manager</code>\u7c7b\uff0c\u8fd0\u7528\u201c\u865a\u57fa\u7c7b\u65b9\u6cd5\u201d\uff0c\u7ee7\u627f<code>employee</code>\u7c7b\u3002 <code>salesman</code>\u7c7b\uff0c\u8fd0\u7528\u201c\u865a\u57fa\u7c7b\u65b9\u6cd5\u201d\uff0c\u7ee7\u627f<code>employee</code>\u7c7b\u3002 <code>salemanager</code>\u7c7b\uff0c\u8fd0\u7528\u201c\u591a\u6b21\u7ee7\u627f\u65b9\u6cd5\u201d\uff0c\u7ee7\u627f<code>manager</code>\u7c7b\u4e0e<code>salesman</code>\u7c7b\u3002 <code>technician</code>\u7c7b\uff0c\u8fd0\u7528\u201c\u865a\u57fa\u7c7b\u65b9\u6cd5\u201d\uff0c\u7ee7\u627f<code>employee</code>\u7c7b\u3002</p>"},{"location":"coursework/cpd/2/07/#\u7b2c2\u9898_1","title":"\u7b2c2\u9898","text":"<pre><code>#include &lt;iostream&gt;\nusing namespace std;\nclass TT\n{\npublic:\n    TT(int n = 1, int d = 1);\n    void Print();\n    friend TT Div(TT &amp;r1, TT &amp;r2);\n\nprivate:\n    int N, D;\n};\nTT Div(TT &amp;r1, TT &amp;r2)\n{\n    return TT(r1.N / r2.D + r1.D / r2.N, r1.D / r2.D);\n}\nTT::TT(int n, int d)\n{\n    N = n;\n    D = d;\n}\nvoid TT::Print()\n{\n    cout &lt;&lt; \"N = \" &lt;&lt; N &lt;&lt; \"D = \" &lt;&lt; D &lt;&lt; endl;\n}\nint main()\n{\n    TT a(1, 2), b(3, 4), c;\n    c = Div(a, b);\n    c.Print();\n}\n</code></pre>"},{"location":"coursework/cpd/2/08/","title":"\u7b2c8\u6b21\u4f5c\u4e1a","text":""},{"location":"coursework/cpd/2/08/#\u7b2c8\u6b21\u4f5c\u4e1a","title":"\u7b2c8\u6b21\u4f5c\u4e1a","text":""},{"location":"coursework/cpd/2/08/#\u5fc5\u505a\u9898","title":"\u5fc5\u505a\u9898","text":""},{"location":"coursework/cpd/2/08/#\u7b2c1\u9898","title":"\u7b2c1\u9898","text":"<p>\u6e90\u4ee3\u7801</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\nusing namespace std;\n\nclass People\n{\npublic:\n    People()\n    {\n        strcpy(name, \"Default\");\n        strcpy(number, \"114514\");\n        strcpy(sex, \"M\");\n        birthday.y = 1919;\n        birthday.m = 8;\n        birthday.d = 10;\n        strcpy(id, \"123456789012345\");\n        cout &lt;&lt; \"Constructed People \" &lt;&lt; name &lt;&lt; endl;\n    }\n    People(People &amp;p)\n    {\n        strcpy(name, p.name);\n        strcpy(number, p.number);\n        strcpy(sex, p.sex);\n        birthday.y = p.birthday.y;\n        birthday.m = p.birthday.m;\n        birthday.d = p.birthday.d;\n        strcpy(id, p.id);\n        cout &lt;&lt; \"Copied People \" &lt;&lt; name &lt;&lt; endl;\n    }\n    ~People()\n    {\n        cout &lt;&lt; \"Destructed People \" &lt;&lt; name &lt;&lt; endl;\n    }\n    void display()\n    {\n        cout &lt;&lt; \"\u8f93\u51fa\u4eba\u5458\u4fe1\u606f\uff1a\" &lt;&lt; endl\n             &lt;&lt; \"\u59d3\u540d\uff1a\" &lt;&lt; name &lt;&lt; endl\n             &lt;&lt; \"\u7f16\u53f7\uff1a\" &lt;&lt; number &lt;&lt; endl\n             &lt;&lt; \"\u6027\u522b\uff1a\" &lt;&lt; sex &lt;&lt; endl\n             &lt;&lt; \"\u751f\u65e5\uff1a\" &lt;&lt; birthday.m &lt;&lt; '/' &lt;&lt; birthday.d &lt;&lt; '/' &lt;&lt; birthday.y &lt;&lt; endl\n             &lt;&lt; \"\u8eab\u4efd\u8bc1\u53f7\uff1a\" &lt;&lt; id &lt;&lt; endl;\n    }\n    void set()\n    {\n        cout &lt;&lt; \"\u8f93\u5165\u4eba\u5458\u4fe1\u606f\uff1a\" &lt;&lt; endl;\n        cout &lt;&lt; \"\u59d3\u540d\uff1a\";\n        cin &gt;&gt; name;\n        cout &lt;&lt; \"\u7f16\u53f7\uff1a\";\n        cin &gt;&gt; number;\n        cout &lt;&lt; \"\u6027\u522b\uff1a\";\n        cin &gt;&gt; sex;\n        cout &lt;&lt; \"\u751f\u65e5\uff1a\";\n        cin &gt;&gt; birthday.m &gt;&gt; birthday.d &gt;&gt; birthday.y;\n        cout &lt;&lt; \"\u8eab\u4efd\u8bc1\u53f7\uff1a\";\n        cin &gt;&gt; id;\n    }\n\nprotected:\n    char name[11];\n    char number[7];\n    char sex[3];\n    class Date\n    {\n    public:\n        int m;\n        int d;\n        int y;\n    } birthday;\n    char id[16];\n};\n\nclass Student : virtual public People\n{\npublic:\n    Student()\n    {\n        strcpy(name, \"Default\");\n        strcpy(number, \"114514\");\n        strcpy(sex, \"M\");\n        birthday.y = 1919;\n        birthday.m = 8;\n        birthday.d = 10;\n        strcpy(id, \"123456789012345\");\n        strcpy(classNo, \"EE26\");\n        cout &lt;&lt; \"Constructed Student \" &lt;&lt; name &lt;&lt; endl;\n    }\n    Student(Student &amp;p)\n    {\n        strcpy(name, p.name);\n        strcpy(number, p.number);\n        strcpy(sex, p.sex);\n        birthday.y = p.birthday.y;\n        birthday.m = p.birthday.m;\n        birthday.d = p.birthday.d;\n        strcpy(id, p.id);\n        strcpy(classNo, p.classNo);\n        cout &lt;&lt; \"Copied Student \" &lt;&lt; name &lt;&lt; endl;\n    }\n    ~Student()\n    {\n        cout &lt;&lt; \"Destructed Student \" &lt;&lt; name &lt;&lt; endl;\n    }\n    void display()\n    {\n        cout &lt;&lt; \"\u8f93\u51fa\u4eba\u5458\u4fe1\u606f\uff1a\" &lt;&lt; endl\n             &lt;&lt; \"\u59d3\u540d\uff1a\" &lt;&lt; name &lt;&lt; endl\n             &lt;&lt; \"\u7f16\u53f7\uff1a\" &lt;&lt; number &lt;&lt; endl\n             &lt;&lt; \"\u6027\u522b\uff1a\" &lt;&lt; sex &lt;&lt; endl\n             &lt;&lt; \"\u751f\u65e5\uff1a\" &lt;&lt; birthday.m &lt;&lt; '/' &lt;&lt; birthday.d &lt;&lt; '/' &lt;&lt; birthday.y &lt;&lt; endl\n             &lt;&lt; \"\u8eab\u4efd\u8bc1\u53f7\uff1a\" &lt;&lt; id &lt;&lt; endl\n             &lt;&lt; \"\u73ed\u53f7\uff1a\" &lt;&lt; classNo &lt;&lt; endl;\n    }\n    void set()\n    {\n        cout &lt;&lt; \"\u8f93\u5165\u4eba\u5458\u4fe1\u606f\uff1a\" &lt;&lt; endl;\n        cout &lt;&lt; \"\u59d3\u540d\uff1a\";\n        cin &gt;&gt; name;\n        cout &lt;&lt; \"\u7f16\u53f7\uff1a\";\n        cin &gt;&gt; number;\n        cout &lt;&lt; \"\u6027\u522b\uff1a\";\n        cin &gt;&gt; sex;\n        cout &lt;&lt; \"\u751f\u65e5\uff1a\";\n        cin &gt;&gt; birthday.m &gt;&gt; birthday.d &gt;&gt; birthday.y;\n        cout &lt;&lt; \"\u8eab\u4efd\u8bc1\u53f7\uff1a\";\n        cin &gt;&gt; id;\n        cout &lt;&lt; \"\u73ed\u53f7\uff1a\";\n        cin &gt;&gt; classNo;\n    }\n\nprotected:\n    char classNo[7];\n};\n\nclass Teacher : virtual public People\n{\npublic:\n    Teacher()\n    {\n        strcpy(name, \"Default\");\n        strcpy(number, \"114514\");\n        strcpy(sex, \"M\");\n        birthday.y = 1919;\n        birthday.m = 8;\n        birthday.d = 10;\n        strcpy(id, \"123456789012345\");\n        strcpy(principalship, \"Professor\");\n        strcpy(department, \"Department of EE\");\n        cout &lt;&lt; \"Constructed Teacher \" &lt;&lt; name &lt;&lt; endl;\n    }\n    Teacher(Teacher &amp;p)\n    {\n        strcpy(name, p.name);\n        strcpy(number, p.number);\n        strcpy(sex, p.sex);\n        birthday.y = p.birthday.y;\n        birthday.m = p.birthday.m;\n        birthday.d = p.birthday.d;\n        strcpy(id, p.id);\n        strcpy(principalship, p.principalship);\n        strcpy(department, p.department);\n        cout &lt;&lt; \"Copied Teacher \" &lt;&lt; name &lt;&lt; endl;\n    }\n    ~Teacher()\n    {\n        cout &lt;&lt; \"Destructed Teacher \" &lt;&lt; name &lt;&lt; endl;\n    }\n    void display()\n    {\n        cout &lt;&lt; \"\u8f93\u51fa\u4eba\u5458\u4fe1\u606f\uff1a\" &lt;&lt; endl\n             &lt;&lt; \"\u59d3\u540d\uff1a\" &lt;&lt; name &lt;&lt; endl\n             &lt;&lt; \"\u7f16\u53f7\uff1a\" &lt;&lt; number &lt;&lt; endl\n             &lt;&lt; \"\u6027\u522b\uff1a\" &lt;&lt; sex &lt;&lt; endl\n             &lt;&lt; \"\u751f\u65e5\uff1a\" &lt;&lt; birthday.m &lt;&lt; '/' &lt;&lt; birthday.d &lt;&lt; '/' &lt;&lt; birthday.y &lt;&lt; endl\n             &lt;&lt; \"\u8eab\u4efd\u8bc1\u53f7\uff1a\" &lt;&lt; id &lt;&lt; endl\n             &lt;&lt; \"\u804c\u52a1\uff1a\" &lt;&lt; principalship &lt;&lt; endl\n             &lt;&lt; \"\u90e8\u95e8\uff1a\" &lt;&lt; department &lt;&lt; endl;\n    }\n    void set()\n    {\n        cout &lt;&lt; \"\u8f93\u5165\u4eba\u5458\u4fe1\u606f\uff1a\" &lt;&lt; endl;\n        cout &lt;&lt; \"\u59d3\u540d\uff1a\";\n        cin &gt;&gt; name;\n        cout &lt;&lt; \"\u7f16\u53f7\uff1a\";\n        cin &gt;&gt; number;\n        cout &lt;&lt; \"\u6027\u522b\uff1a\";\n        cin &gt;&gt; sex;\n        cout &lt;&lt; \"\u751f\u65e5\uff1a\";\n        cin &gt;&gt; birthday.m &gt;&gt; birthday.d &gt;&gt; birthday.y;\n        cout &lt;&lt; \"\u8eab\u4efd\u8bc1\u53f7\uff1a\";\n        cin &gt;&gt; id;\n        cout &lt;&lt; \"\u804c\u52a1\uff1a\";\n        cin &gt;&gt; principalship;\n        cout &lt;&lt; \"\u90e8\u95e8\uff1a\";\n        cin &gt;&gt; department;\n    }\n    virtual void PAY()\n    {\n        cout &lt;&lt; \"Teacher\u7684\u5de5\u8d44\u4e3a1\u5143/\u6708\u3002\" &lt;&lt; endl;\n    }\n\nprotected:\n    char principalship[11];\n    char department[21];\n};\n\nclass Graduate : virtual public Student\n{\npublic:\n    Graduate()\n    {\n        strcpy(name, \"Default\");\n        strcpy(number, \"114514\");\n        strcpy(sex, \"M\");\n        birthday.y = 1919;\n        birthday.m = 8;\n        birthday.d = 10;\n        strcpy(id, \"123456789012345\");\n        strcpy(subject, \"EE\");\n        Teacher advisor();\n        cout &lt;&lt; \"Constructed Graduate \" &lt;&lt; name &lt;&lt; endl;\n    }\n    Graduate(Graduate &amp;p)\n    {\n        strcpy(name, p.name);\n        strcpy(number, p.number);\n        strcpy(sex, p.sex);\n        birthday.y = p.birthday.y;\n        birthday.m = p.birthday.m;\n        birthday.d = p.birthday.d;\n        strcpy(id, p.id);\n        strcpy(subject, p.subject);\n        Teacher advisor(p.advisor);\n        cout &lt;&lt; \"Copied Graduate \" &lt;&lt; name &lt;&lt; endl;\n    }\n    ~Graduate()\n    {\n        cout &lt;&lt; \"Destructed Graduate \" &lt;&lt; name &lt;&lt; endl;\n    }\n    void display()\n    {\n        cout &lt;&lt; \"\u8f93\u51fa\u4eba\u5458\u4fe1\u606f\uff1a\" &lt;&lt; endl\n             &lt;&lt; \"\u59d3\u540d\uff1a\" &lt;&lt; name &lt;&lt; endl\n             &lt;&lt; \"\u7f16\u53f7\uff1a\" &lt;&lt; number &lt;&lt; endl\n             &lt;&lt; \"\u6027\u522b\uff1a\" &lt;&lt; sex &lt;&lt; endl\n             &lt;&lt; \"\u751f\u65e5\uff1a\" &lt;&lt; birthday.m &lt;&lt; '/' &lt;&lt; birthday.d &lt;&lt; '/' &lt;&lt; birthday.y &lt;&lt; endl\n             &lt;&lt; \"\u8eab\u4efd\u8bc1\u53f7\uff1a\" &lt;&lt; id &lt;&lt; endl\n             &lt;&lt; \"\u73ed\u53f7\uff1a\" &lt;&lt; classNo &lt;&lt; endl\n             &lt;&lt; \"\u4e13\u4e1a\uff1a\" &lt;&lt; subject &lt;&lt; endl\n             &lt;&lt; \"\u5bfc\u5e08\uff1a\" &lt;&lt; endl\n             &lt;&lt; \"---\" &lt;&lt; endl;\n        advisor.display();\n        cout &lt;&lt; \"---\" &lt;&lt; endl;\n    }\n    void set()\n    {\n        cout &lt;&lt; \"\u8f93\u5165\u4eba\u5458\u4fe1\u606f\uff1a\" &lt;&lt; endl;\n        cout &lt;&lt; \"\u59d3\u540d\uff1a\";\n        cin &gt;&gt; name;\n        cout &lt;&lt; \"\u7f16\u53f7\uff1a\";\n        cin &gt;&gt; number;\n        cout &lt;&lt; \"\u6027\u522b\uff1a\";\n        cin &gt;&gt; sex;\n        cout &lt;&lt; \"\u751f\u65e5\uff1a\";\n        cin &gt;&gt; birthday.m &gt;&gt; birthday.d &gt;&gt; birthday.y;\n        cout &lt;&lt; \"\u8eab\u4efd\u8bc1\u53f7\uff1a\";\n        cin &gt;&gt; id;\n        cout &lt;&lt; \"\u73ed\u53f7\uff1a\";\n        cin &gt;&gt; classNo;\n        cout &lt;&lt; \"\u4e13\u4e1a\uff1a\";\n        cin &gt;&gt; subject;\n        cout &lt;&lt; \"\u5bfc\u5e08\uff1a\" &lt;&lt; endl\n             &lt;&lt; \"---\" &lt;&lt; endl;\n        advisor.set();\n        cout &lt;&lt; \"---\" &lt;&lt; endl;\n    }\n\nprotected:\n    char subject[21];\n    Teacher advisor;\n};\n\nclass TA : virtual public Teacher, virtual public Graduate\n{\npublic:\n    TA()\n    {\n        strcpy(name, \"Default\");\n        strcpy(number, \"114514\");\n        strcpy(sex, \"M\");\n        birthday.y = 1919;\n        birthday.m = 8;\n        birthday.d = 10;\n        strcpy(id, \"123456789012345\");\n        strcpy(principalship, \"TA\");\n        strcpy(department, \"Department of EE\");\n        strcpy(subject, \"EE\");\n        Teacher advisor();\n        RA = true;\n        cout &lt;&lt; \"Constructed TA \" &lt;&lt; name &lt;&lt; endl;\n    }\n    TA(TA &amp;p)\n    {\n        strcpy(name, p.name);\n        strcpy(number, p.number);\n        strcpy(sex, p.sex);\n        birthday.y = p.birthday.y;\n        birthday.m = p.birthday.m;\n        birthday.d = p.birthday.d;\n        strcpy(id, p.id);\n        strcpy(principalship, p.principalship);\n        strcpy(department, p.department);\n        strcpy(subject, p.subject);\n        Teacher advisor(p.advisor);\n        RA = p.RA;\n        cout &lt;&lt; \"Copied TA \" &lt;&lt; name &lt;&lt; endl;\n    }\n    ~TA()\n    {\n        cout &lt;&lt; \"Destructed TA \" &lt;&lt; name &lt;&lt; endl;\n    }\n    void display()\n    {\n        cout &lt;&lt; \"\u8f93\u51fa\u4eba\u5458\u4fe1\u606f\uff1a\" &lt;&lt; endl\n             &lt;&lt; \"\u59d3\u540d\uff1a\" &lt;&lt; name &lt;&lt; endl\n             &lt;&lt; \"\u7f16\u53f7\uff1a\" &lt;&lt; number &lt;&lt; endl\n             &lt;&lt; \"\u6027\u522b\uff1a\" &lt;&lt; sex &lt;&lt; endl\n             &lt;&lt; \"\u751f\u65e5\uff1a\" &lt;&lt; birthday.m &lt;&lt; '/' &lt;&lt; birthday.d &lt;&lt; '/' &lt;&lt; birthday.y &lt;&lt; endl\n             &lt;&lt; \"\u8eab\u4efd\u8bc1\u53f7\uff1a\" &lt;&lt; id &lt;&lt; endl\n             &lt;&lt; \"\u804c\u52a1\uff1a\" &lt;&lt; principalship &lt;&lt; endl\n             &lt;&lt; \"\u90e8\u95e8\uff1a\" &lt;&lt; department &lt;&lt; endl\n             &lt;&lt; \"\u73ed\u53f7\uff1a\" &lt;&lt; classNo &lt;&lt; endl\n             &lt;&lt; \"\u4e13\u4e1a\uff1a\" &lt;&lt; subject &lt;&lt; endl\n             &lt;&lt; \"\u5bfc\u5e08\uff1a\" &lt;&lt; endl\n             &lt;&lt; \"---\" &lt;&lt; endl;\n        advisor.display();\n        cout &lt;&lt; \"---\" &lt;&lt; endl;\n        cout &lt;&lt; \"RA\uff1a\" &lt;&lt; RA &lt;&lt; endl;\n    }\n    void set()\n    {\n        cout &lt;&lt; \"\u8f93\u5165\u4eba\u5458\u4fe1\u606f\uff1a\" &lt;&lt; endl;\n        cout &lt;&lt; \"\u59d3\u540d\uff1a\";\n        cin &gt;&gt; name;\n        cout &lt;&lt; \"\u7f16\u53f7\uff1a\";\n        cin &gt;&gt; number;\n        cout &lt;&lt; \"\u6027\u522b\uff1a\";\n        cin &gt;&gt; sex;\n        cout &lt;&lt; \"\u751f\u65e5\uff1a\";\n        cin &gt;&gt; birthday.m &gt;&gt; birthday.d &gt;&gt; birthday.y;\n        cout &lt;&lt; \"\u8eab\u4efd\u8bc1\u53f7\uff1a\";\n        cin &gt;&gt; id;\n        cout &lt;&lt; \"\u804c\u52a1\uff1a\";\n        cin &gt;&gt; principalship;\n        cout &lt;&lt; \"\u90e8\u95e8\uff1a\";\n        cin &gt;&gt; department;\n        cout &lt;&lt; \"\u73ed\u53f7\uff1a\";\n        cin &gt;&gt; classNo;\n        cout &lt;&lt; \"\u4e13\u4e1a\uff1a\";\n        cin &gt;&gt; subject;\n        cout &lt;&lt; \"\u5bfc\u5e08\uff1a\" &lt;&lt; endl\n             &lt;&lt; \"---\" &lt;&lt; endl;\n        advisor.set();\n        cout &lt;&lt; \"---\" &lt;&lt; endl;\n        cout &lt;&lt; \"RA\uff1a\";\n        cin &gt;&gt; RA;\n    }\n\nprotected:\n    bool RA;\n};\n\nclass Prof : virtual public Teacher\n{\npublic:\n    virtual void PAY()\n    {\n        cout &lt;&lt; \"Prof\u7684\u5de5\u8d44\u4e3a2\u5143/\u6708\u3002\" &lt;&lt; endl;\n    }\n};\n\nclass Female_Prof : virtual public Prof\n{\npublic:\n    Female_Prof()\n    {\n        strcpy(sex, \"F\");\n    }\n    virtual void PAY()\n    {\n        cout &lt;&lt; \"Female_Prof\u7684\u5de5\u8d44\u4e3a3\u5143/\u6708\u3002\" &lt;&lt; endl;\n    }\n};\n\nint main()\n{\n    Teacher t;\n    Prof p;\n    Female_Prof fp;\n    Teacher *f[3];\n    f[0] = &amp;t, f[1] = &amp;p, f[2] = &amp;fp;\n    for (int i = 0; i &lt; 3; i++)\n    {\n        f[i]-&gt;PAY();\n    }\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c</p> <p></p>"},{"location":"coursework/cpd/2/08/#\u7b2c2\u9898","title":"\u7b2c2\u9898","text":"<p>\u6e90\u4ee3\u7801</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\nusing namespace std;\nclass Mammal\n{\npublic:\n    Mammal(char *s = \"114514\")\n    {\n        len = strlen(s);\n        str = new char[len + 1];\n        strcpy(str, s);\n    }\n    virtual void Speak()\n    {\n        cout &lt;&lt; \" \";\n        for (int i = 0; i &lt; len + 2; i++)\n            cout &lt;&lt; \"_\";\n        cout &lt;&lt; \" \" &lt;&lt; endl\n             &lt;&lt; \"&lt; \" &lt;&lt; str &lt;&lt; \" &gt;\" &lt;&lt; endl\n             &lt;&lt; \" \";\n        for (int i = 0; i &lt; len + 2; i++)\n            cout &lt;&lt; \"-\";\n        cout &lt;&lt; \" \" &lt;&lt; endl\n             &lt;&lt; \"  \\\\   ^__^\" &lt;&lt; endl\n             &lt;&lt; \"   \\\\  (oo)\\\\_______\" &lt;&lt; endl\n             &lt;&lt; \"      (__)\\\\       )\\\\/\\\\\" &lt;&lt; endl\n             &lt;&lt; \"          ||----w |\" &lt;&lt; endl\n             &lt;&lt; \"          ||     ||\" &lt;&lt; endl\n             &lt;&lt; endl;\n    }\n    ~Mammal()\n    {\n        delete[] str;\n    }\n\nprotected:\n    char *str;\n    int len;\n};\n\nclass Dog : virtual public Mammal\n{\npublic:\n    Dog(char *s = \"114514\")\n    {\n        len = strlen(s);\n        str = new char[len + 1];\n        strcpy(str, s);\n    }\n    virtual void Speak()\n    {\n        cout &lt;&lt; \" \";\n        for (int i = 0; i &lt; len + 2; i++)\n            cout &lt;&lt; \"_\";\n        cout &lt;&lt; \" \" &lt;&lt; endl\n             &lt;&lt; \"&lt; \" &lt;&lt; str &lt;&lt; \" &gt;\" &lt;&lt; endl\n             &lt;&lt; \" \";\n        for (int i = 0; i &lt; len + 2; i++)\n            cout &lt;&lt; \"-\";\n        cout &lt;&lt; \" \" &lt;&lt; endl\n             &lt;&lt; \"      \\\\                    / \\\\  //\\\\\" &lt;&lt; endl\n             &lt;&lt; \"       \\\\    |\\\\___/|      /   \\\\//  \\\\\" &lt;&lt; endl\n             &lt;&lt; \"            /0  0  \\\\__  /    //  | \\\\ \\\\    \" &lt;&lt; endl\n             &lt;&lt; \"           /     /  \\\\/_/    //   |  \\\\  \\\\  \" &lt;&lt; endl\n             &lt;&lt; \"           @_^_@'/   \\\\/_   //    |   \\\\   \\\\ \" &lt;&lt; endl\n             &lt;&lt; \"           //_^_/     \\\\/_ //     |    \\\\    \\\\\" &lt;&lt; endl\n             &lt;&lt; \"        ( //) |        \\\\///      |     \\\\     \\\\\" &lt;&lt; endl\n             &lt;&lt; \"      ( / /) _|_ /   )  //       |      \\\\     _\\\\\" &lt;&lt; endl\n             &lt;&lt; \"    ( // /) '/,_ _ _/  ( ; -.    |    _ _\\\\.-~        .-~~~^-.\" &lt;&lt; endl\n             &lt;&lt; \"  (( / / )) ,-{        _      `-.|.-~-.           .~         `.\" &lt;&lt; endl\n             &lt;&lt; \" (( // / ))  '/\\\\      /                 ~-. _ .-~      .-~^-.  \\\\\" &lt;&lt; endl\n             &lt;&lt; \" (( /// ))      `.   {            }                   /      \\\\  \\\\\" &lt;&lt; endl\n             &lt;&lt; \"  (( / ))     .----~-.\\\\        \\\\-'                 .~         \\\\  `. \\\\^-.\" &lt;&lt; endl\n             &lt;&lt; \"             ///.----..&gt;        \\\\             _ -~             `.  ^-`  ^-_\" &lt;&lt; endl\n             &lt;&lt; \"               ///-._ _ _ _ _ _ _}^ - - - - ~                     ~-- ,.-~\" &lt;&lt; endl\n             &lt;&lt; \"                                                                  /.-~\" &lt;&lt; endl\n             &lt;&lt; endl;\n    }\n};\n\nint main()\n{\n    Mammal m(\"I'm a mammal.\");\n    Dog d(\"I'm a dog.\");\n    m.Speak();\n    d.Speak();\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c</p> <p></p>"},{"location":"coursework/cpd/2/08/#\u9009\u505a\u9898","title":"\u9009\u505a\u9898","text":"<p>\u6e90\u4ee3\u7801</p> <pre><code>#include &lt;iostream&gt;\nusing namespace std;\nclass Shape\n{\npublic:\n    Shape() {}\n    ~Shape() {}\n    virtual float GetArea() = 0;\n    virtual float GetPerim() = 0;\n};\nclass Rectangle : public Shape\n{\npublic:\n    Rectangle(float aa = 4, float bb = 3)\n    {\n        a = aa;\n        b = bb;\n    }\n    virtual float GetArea()\n    {\n        return a * b;\n    }\n    virtual float GetPerim()\n    {\n        return (a + b) * 2;\n    }\n\nprivate:\n    float a, b;\n};\nclass Circle : public Shape\n{\npublic:\n    Circle(float rr = 1)\n    {\n        r = rr;\n    }\n    virtual float GetArea()\n    {\n        return r * r * 3.141592653;\n    }\n    virtual float GetPerim()\n    {\n        return r * 3.141592653 * 2;\n    }\n\nprivate:\n    float r;\n};\nint main()\n{\n    float a, b, r;\n    cout &lt;&lt; \"Enter a, b, r:\" &lt;&lt; endl;\n    cin &gt;&gt; a &gt;&gt; b &gt;&gt; r;\n    Rectangle rect(a, b);\n    Circle cir(r);\n    cout &lt;&lt; \"Rectangle Area = \" &lt;&lt; rect.GetArea() &lt;&lt; endl\n         &lt;&lt; \"Rectangle Perim = \" &lt;&lt; rect.GetPerim() &lt;&lt; endl\n         &lt;&lt; \"Circle Area = \" &lt;&lt; cir.GetArea() &lt;&lt; endl\n         &lt;&lt; \"Circle Perim = \" &lt;&lt; cir.GetPerim() &lt;&lt; endl;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c</p> <p></p>"},{"location":"coursework/cpd/2/09/","title":"\u7b2c9\u6b21\u4f5c\u4e1a","text":""},{"location":"coursework/cpd/2/09/#\u7b2c9\u6b21\u4f5c\u4e1a","title":"\u7b2c9\u6b21\u4f5c\u4e1a","text":""},{"location":"coursework/cpd/2/09/#\u5fc5\u505a\u9898","title":"\u5fc5\u505a\u9898","text":""},{"location":"coursework/cpd/2/09/#\u7b2c1\u9898","title":"\u7b2c1\u9898","text":"<p>\u6e90\u4ee3\u7801</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\nusing namespace std;\n\nvoid interface()\n{\n    system(\"clear\"); // Windows `system(\"cls\")`\n    cout &lt;&lt; \"\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\" &lt;&lt; endl\n         &lt;&lt; \"\u3000\u3000 \uff38\uff38\uff38\u516c\u53f8\u4eba\u4e8b\u7ba1\u7406\u7cfb\u7edf\" &lt;&lt; endl\n         &lt;&lt; endl\n         &lt;&lt; \"\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\" &lt;&lt; endl\n         &lt;&lt; \"\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\" &lt;&lt; endl\n         &lt;&lt; endl\n         &lt;&lt; \"\u4e3b\u83dc\u5355\" &lt;&lt; endl\n         &lt;&lt; \"1.\u6570\u636e\u5f55\u5165\" &lt;&lt; endl\n         &lt;&lt; \"2.\u6570\u636e\u67e5\u8be2\" &lt;&lt; endl\n         &lt;&lt; \"3.\u6570\u636e\u4fdd\u5b58\" &lt;&lt; endl\n         &lt;&lt; \"4.\u9000\u51fa\" &lt;&lt; endl\n         &lt;&lt; \"\u8bf7\u9009\u62e9\u5e8f\u53f7\uff081-4\uff09\" &lt;&lt; endl\n         &lt;&lt; \"\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\" &lt;&lt; endl\n         &lt;&lt; endl;\n}\n\nvoid tbc()\n{\n    system(\"clear\"); // Windows `system(\"cls\")`\n    cout &lt;&lt; \"\u656c\u8bf7\u671f\u5f85\uff01\" &lt;&lt; endl\n         &lt;&lt; endl\n         &lt;&lt; \"Press Enter to continue...\" &lt;&lt; endl;\n    getchar();\n    getchar();\n}\n\nint main()\n{\n    int n = 0;\n    do\n    {\n        interface();\n        cout &lt;&lt; \"&gt;&gt;&gt; \";\n        cin &gt;&gt; n;\n        if (n == 1 || n == 2 || n == 3)\n            tbc();\n        if (n &lt; 1 || n &gt; 4)\n        {\n            cout &lt;&lt; \"\u8bf7\u8f93\u5165\u6709\u6548\u7b54\u6848\uff01\" &lt;&lt; endl\n                 &lt;&lt; endl\n                 &lt;&lt; \"Press Enter to continue...\" &lt;&lt; endl;\n            getchar();\n            getchar();\n        }\n    } while (n != 4);\n    system(\"clear\"); // Windows `system(\"cls\")`\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c</p> <p></p>"},{"location":"coursework/cpd/2/09/#\u7b2c2\u9898","title":"\u7b2c2\u9898","text":"<p>\u8fd0\u884c\u7ed3\u679c</p> <pre><code>   123.456\n123.456\n        123.456\n+123.456\n-123.456\n+1.234560e+02\n</code></pre>"},{"location":"coursework/cpd/2/09/#\u9009\u505a\u9898","title":"\u9009\u505a\u9898","text":"<p>\u6e90\u4ee3\u7801</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\nusing namespace std;\n\nistream &amp;operator&gt;&gt;(istream &amp;input, char *str)\n{\n    char temp = 0;\n    for (int i = 0; i &lt; 100; i++)\n    {\n        temp = getchar();\n        if (temp != '\\n')\n            str[i] = temp;\n        else\n            break;\n    }\n    return input;\n}\n\nint main()\n{\n    char s0[100] = {0}, s1[100] = {0}, s2[100] = {0};\n    char temp = 0;\n    cin &gt;&gt; s0;\n    cin.get(s1, 100);\n    cin.ignore(1);\n    cin.getline(s2, 100);\n    cout &lt;&lt; \"\u4f7f\u7528\u201c&gt;&gt;\u201d\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u7684\u5b57\u7b26\u7684\u4e2a\u6570\u4e3a\" &lt;&lt; strlen(s0) &lt;&lt; endl;\n    cout &lt;&lt; \"\u4f7f\u7528\u201ccin.get()\u201d\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u7684\u5b57\u7b26\u7684\u4e2a\u6570\u4e3a\" &lt;&lt; strlen(s1) &lt;&lt; endl;\n    cout &lt;&lt; \"\u4f7f\u7528\u201ccin.getline()\u201d\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u7684\u5b57\u7b26\u7684\u4e2a\u6570\u4e3a\" &lt;&lt; strlen(s2) &lt;&lt; endl;\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c</p> <p></p>"},{"location":"coursework/cpd/2/10/","title":"\u7b2c10\u6b21\u4f5c\u4e1a","text":""},{"location":"coursework/cpd/2/10/#\u7b2c10\u6b21\u4f5c\u4e1a","title":"\u7b2c10\u6b21\u4f5c\u4e1a","text":""},{"location":"coursework/cpd/2/10/#\u5fc5\u505a\u9898","title":"\u5fc5\u505a\u9898","text":""},{"location":"coursework/cpd/2/10/#\u7b2c1\u9898","title":"\u7b2c1\u9898","text":"<p>\u6e90\u4ee3\u7801</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n#include &lt;cstring&gt;\nusing namespace std;\n\nclass Teacher\n{\npublic:\n    Teacher(char *_name = \"Default\", char *_number = \"114514\", char *_sex = \"M\", int _y = 1919, int _m = 8, int _d = 10, char *_id = \"123456789012345\", char *_principalship = \"Professor\", char *_department = \"Department of EE\")\n    {\n        strcpy(name, _name);\n        strcpy(number, _number);\n        strcpy(sex, _sex);\n        birthday.y = _y;\n        birthday.m = _m;\n        birthday.d = _d;\n        strcpy(id, _id);\n        strcpy(principalship, _principalship);\n        strcpy(department, _department);\n        // cout &lt;&lt; \"Constructed Teacher \" &lt;&lt; name &lt;&lt; endl;\n    }\n    Teacher(Teacher &amp;p)\n    {\n        strcpy(name, p.name);\n        strcpy(number, p.number);\n        strcpy(sex, p.sex);\n        birthday.y = p.birthday.y;\n        birthday.m = p.birthday.m;\n        birthday.d = p.birthday.d;\n        strcpy(id, p.id);\n        strcpy(principalship, p.principalship);\n        strcpy(department, p.department);\n        // cout &lt;&lt; \"Copied Teacher \" &lt;&lt; name &lt;&lt; endl;\n    }\n    ~Teacher()\n    {\n        // cout &lt;&lt; \"Destructed Teacher \" &lt;&lt; name &lt;&lt; endl;\n    }\n    char *getName()\n    {\n        return name;\n    }\n    char *getNumber()\n    {\n        return number;\n    }\n    void display()\n    {\n        cout &lt;&lt; \"\u8f93\u51fa\u6559\u5e08\u4fe1\u606f\uff1a\" &lt;&lt; endl\n             &lt;&lt; \"\u59d3\u540d\uff1a\" &lt;&lt; name &lt;&lt; endl\n             &lt;&lt; \"\u7f16\u53f7\uff1a\" &lt;&lt; number &lt;&lt; endl\n             &lt;&lt; \"\u6027\u522b\uff1a\" &lt;&lt; sex &lt;&lt; endl\n             &lt;&lt; \"\u751f\u65e5\uff1a\" &lt;&lt; birthday.m &lt;&lt; '/' &lt;&lt; birthday.d &lt;&lt; '/' &lt;&lt; birthday.y &lt;&lt; endl\n             &lt;&lt; \"\u8eab\u4efd\u8bc1\u53f7\uff1a\" &lt;&lt; id &lt;&lt; endl\n             &lt;&lt; \"\u804c\u52a1\uff1a\" &lt;&lt; principalship &lt;&lt; endl\n             &lt;&lt; \"\u90e8\u95e8\uff1a\" &lt;&lt; department &lt;&lt; endl;\n    }\n    void set()\n    {\n        cout &lt;&lt; \"\u8f93\u5165\u6559\u5e08\u4fe1\u606f\uff1a\" &lt;&lt; endl;\n        cout &lt;&lt; \"\u59d3\u540d\uff1a\";\n        cin &gt;&gt; name;\n        cout &lt;&lt; \"\u7f16\u53f7\uff1a\";\n        cin &gt;&gt; number;\n        cout &lt;&lt; \"\u6027\u522b\uff1a\";\n        cin &gt;&gt; sex;\n        cout &lt;&lt; \"\u751f\u65e5\uff1a\";\n        cin &gt;&gt; birthday.m &gt;&gt; birthday.d &gt;&gt; birthday.y;\n        cout &lt;&lt; \"\u8eab\u4efd\u8bc1\u53f7\uff1a\";\n        cin &gt;&gt; id;\n        cout &lt;&lt; \"\u804c\u52a1\uff1a\";\n        cin &gt;&gt; principalship;\n        cout &lt;&lt; \"\u90e8\u95e8\uff1a\";\n        cin &gt;&gt; department;\n    }\n\n    // protected:\n    char name[11];\n    char number[7];\n    char sex[3];\n    class Date\n    {\n    public:\n        int m;\n        int d;\n        int y;\n    } birthday;\n    char id[16];\n    char principalship[11];\n    char department[21];\n};\n\nint interface()\n{\n    int ret = 0;\n    system(\"clear\"); // Windows `system(\"cls\")`\n    cout &lt;&lt; \"\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\" &lt;&lt; endl\n         &lt;&lt; \"\u3000\u3000 \uff38\uff38\uff38\u516c\u53f8\u4eba\u4e8b\u7ba1\u7406\u7cfb\u7edf\" &lt;&lt; endl\n         &lt;&lt; endl\n         &lt;&lt; \"\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\" &lt;&lt; endl\n         &lt;&lt; \"\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\" &lt;&lt; endl\n         &lt;&lt; endl\n         &lt;&lt; \"\u4e3b\u83dc\u5355\" &lt;&lt; endl\n         &lt;&lt; \"1.\u6570\u636e\u5f55\u5165\" &lt;&lt; endl\n         &lt;&lt; \"2.\u6570\u636e\u67e5\u8be2\" &lt;&lt; endl\n         &lt;&lt; \"3.\u6570\u636e\u4fdd\u5b58\" &lt;&lt; endl\n         &lt;&lt; \"4.\u9000\u51fa\" &lt;&lt; endl\n         &lt;&lt; \"\u8bf7\u9009\u62e9\u5e8f\u53f7\uff081-4\uff09\" &lt;&lt; endl\n         &lt;&lt; \"\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\" &lt;&lt; endl\n         &lt;&lt; endl;\n    cout &lt;&lt; \"&gt;&gt;&gt; \";\n    cin &gt;&gt; ret;\n    cin.ignore(1);\n    return ret;\n}\n\nint datainput()\n{\n    int ret = 0;\n    system(\"clear\"); // Windows `system(\"cls\")`\n    cout &lt;&lt; \"\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\" &lt;&lt; endl\n         &lt;&lt; \"\u3000\u3000 \uff38\uff38\uff38\u516c\u53f8\u4eba\u4e8b\u7ba1\u7406\u7cfb\u7edf\" &lt;&lt; endl\n         &lt;&lt; endl\n         &lt;&lt; \"\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\" &lt;&lt; endl\n         &lt;&lt; \"\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\" &lt;&lt; endl\n         &lt;&lt; endl\n         &lt;&lt; \"\u6570\u636e\u5f55\u5165\" &lt;&lt; endl\n         &lt;&lt; \"1.\u65b0\u5efa\u6587\u4ef6\" &lt;&lt; endl\n         &lt;&lt; \"2.\u4fee\u6539\u6587\u4ef6\" &lt;&lt; endl\n         &lt;&lt; \"3.\u9000\u51fa\" &lt;&lt; endl\n         &lt;&lt; \"\u8bf7\u9009\u62e9\u5e8f\u53f7\uff081-3\uff09\" &lt;&lt; endl\n         &lt;&lt; \"\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\" &lt;&lt; endl\n         &lt;&lt; endl;\n    cout &lt;&lt; \"&gt;&gt;&gt; \";\n    cin &gt;&gt; ret;\n    cin.ignore(1);\n    return ret;\n}\n\nvoid newfile()\n{\n    char filename[32];\n    int n;\n    system(\"clear\"); // Windows `system(\"cls\")`\n    cout &lt;&lt; \"\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\" &lt;&lt; endl\n         &lt;&lt; \"\u3000\u3000 \uff38\uff38\uff38\u516c\u53f8\u4eba\u4e8b\u7ba1\u7406\u7cfb\u7edf\" &lt;&lt; endl\n         &lt;&lt; endl\n         &lt;&lt; \"\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\" &lt;&lt; endl\n         &lt;&lt; \"\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\" &lt;&lt; endl\n         &lt;&lt; endl\n         &lt;&lt; \"\u65b0\u5efa\u6587\u4ef6\" &lt;&lt; endl\n         &lt;&lt; \"\u8bf7\u8f93\u5165\u6570\u636e\u6587\u4ef6\u540d\" &lt;&lt; endl\n         &lt;&lt; \"\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\" &lt;&lt; endl\n         &lt;&lt; endl;\n    cout &lt;&lt; \"&gt;&gt;&gt; \";\n    cin.getline(filename, 32);\n    ofstream outfile(filename, ios::out | ios::binary);\n    if (!outfile)\n    {\n        cerr &lt;&lt; \"\u9519\u8bef\uff01\" &lt;&lt; endl;\n        exit(1);\n    }\n    cout &lt;&lt; \"\u8bf7\u8f93\u5165\u4fdd\u5b58\u7684\u6559\u5e08\u4eba\u6570\" &lt;&lt; endl\n         &lt;&lt; \"&gt;&gt;&gt; \";\n    cin &gt;&gt; n;\n    Teacher t[n];\n    for (int i = 0; i &lt; n; i++)\n    {\n        t[i].set();\n        outfile.write((char *)&amp;t[i], sizeof(t[i]));\n    }\n    outfile.close();\n    system(\"clear\"); // Windows `system(\"cls\")`\n    cout &lt;&lt; \"\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\" &lt;&lt; endl\n         &lt;&lt; \"\u3000\u3000 \uff38\uff38\uff38\u516c\u53f8\u4eba\u4e8b\u7ba1\u7406\u7cfb\u7edf\" &lt;&lt; endl\n         &lt;&lt; endl\n         &lt;&lt; \"\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\" &lt;&lt; endl\n         &lt;&lt; \"\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\" &lt;&lt; endl\n         &lt;&lt; endl\n         &lt;&lt; \"\u65b0\u5efa\u6587\u4ef6\" &lt;&lt; endl\n         &lt;&lt; \"\u65b0\u5efa\u6587\u4ef6\u6210\u529f\uff01\" &lt;&lt; endl\n         &lt;&lt; \"\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\" &lt;&lt; endl\n         &lt;&lt; endl\n         &lt;&lt; \"Press Enter to continue...\" &lt;&lt; endl;\n    getchar();\n    getchar();\n}\n\nvoid editfile()\n{\n    char filename[32];\n    system(\"clear\"); // Windows `system(\"cls\")`\n    cout &lt;&lt; \"\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\" &lt;&lt; endl\n         &lt;&lt; \"\u3000\u3000 \uff38\uff38\uff38\u516c\u53f8\u4eba\u4e8b\u7ba1\u7406\u7cfb\u7edf\" &lt;&lt; endl\n         &lt;&lt; endl\n         &lt;&lt; \"\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\" &lt;&lt; endl\n         &lt;&lt; \"\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\" &lt;&lt; endl\n         &lt;&lt; endl\n         &lt;&lt; \"\u4fee\u6539\u6587\u4ef6\" &lt;&lt; endl\n         &lt;&lt; \"\u8bf7\u8f93\u5165\u6570\u636e\u6587\u4ef6\u540d\" &lt;&lt; endl\n         &lt;&lt; \"\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\" &lt;&lt; endl\n         &lt;&lt; endl;\n    cout &lt;&lt; \"&gt;&gt;&gt; \";\n    cin.getline(filename, 32);\n    ifstream infile(filename, ios::in | ios::binary);\n    if (!infile)\n    {\n        cerr &lt;&lt; \"\u9519\u8bef\uff01\" &lt;&lt; endl;\n        exit(1);\n    }\n    infile.seekg(ios::end);\n    int filelength = infile.tellg();\n    infile.seekg(ios::beg);\n    Teacher t[filelength];\n    for (int i = 0; i &lt; filelength; i++)\n    {\n        infile.read((char *)&amp;t[i], sizeof(t[i]));\n    }\n    infile.close();\n    cout &lt;&lt; \"\u8bf7\u8f93\u5165\u8981\u4fee\u6539\u7684\u6559\u5e08\u5de5\u53f7\" &lt;&lt; endl\n         &lt;&lt; \"&gt;&gt;&gt; \";\n    char desiredNumber[7] = {0};\n    cin.getline(desiredNumber, 7);\n    int n = -1;\n    for (int i = 0; i &lt; filelength; i++)\n    {\n        if (strcmp(t[i].getNumber(), desiredNumber) == 0)\n        {\n            n = i;\n            break;\n        }\n    }\n    if (n == -1)\n    {\n        cerr &lt;&lt; \"\u672a\u67e5\u8be2\u5230\u6559\u5e08\u4fe1\u606f\uff01\" &lt;&lt; endl;\n    }\n    t[n].set();\n    ofstream outfile(filename, ios::out | ios::binary);\n    if (!outfile)\n    {\n        cerr &lt;&lt; \"\u9519\u8bef\uff01\" &lt;&lt; endl;\n        exit(1);\n    }\n    for (int i = 0; i &lt; filelength; i++)\n    {\n        outfile.write((char *)&amp;t[i], sizeof(t[i]));\n    }\n    outfile.close();\n    system(\"clear\"); // Windows `system(\"cls\")`\n    cout &lt;&lt; \"\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\" &lt;&lt; endl\n         &lt;&lt; \"\u3000\u3000 \uff38\uff38\uff38\u516c\u53f8\u4eba\u4e8b\u7ba1\u7406\u7cfb\u7edf\" &lt;&lt; endl\n         &lt;&lt; endl\n         &lt;&lt; \"\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\" &lt;&lt; endl\n         &lt;&lt; \"\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\" &lt;&lt; endl\n         &lt;&lt; endl\n         &lt;&lt; \"\u4fee\u6539\u6587\u4ef6\" &lt;&lt; endl\n         &lt;&lt; \"\u4fee\u6539\u6587\u4ef6\u6210\u529f\uff01\" &lt;&lt; endl\n         &lt;&lt; \"\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\" &lt;&lt; endl\n         &lt;&lt; endl\n         &lt;&lt; \"Press Enter to continue...\" &lt;&lt; endl;\n    getchar();\n    getchar();\n}\n\nvoid datasearch()\n{\n    char filename[32];\n    system(\"clear\"); // Windows `system(\"cls\")`\n    cout &lt;&lt; \"\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\" &lt;&lt; endl\n         &lt;&lt; \"\u3000\u3000 \uff38\uff38\uff38\u516c\u53f8\u4eba\u4e8b\u7ba1\u7406\u7cfb\u7edf\" &lt;&lt; endl\n         &lt;&lt; endl\n         &lt;&lt; \"\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\" &lt;&lt; endl\n         &lt;&lt; \"\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\" &lt;&lt; endl\n         &lt;&lt; endl\n         &lt;&lt; \"\u6570\u636e\u67e5\u8be2\" &lt;&lt; endl\n         &lt;&lt; \"\u8bf7\u8f93\u5165\u6570\u636e\u6587\u4ef6\u540d\" &lt;&lt; endl\n         &lt;&lt; \"\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\" &lt;&lt; endl\n         &lt;&lt; endl;\n    cout &lt;&lt; \"&gt;&gt;&gt; \";\n    cin.getline(filename, 32);\n    ifstream infile(filename, ios::in | ios::binary);\n    if (!infile)\n    {\n        cerr &lt;&lt; \"\u9519\u8bef\uff01\" &lt;&lt; endl;\n        exit(1);\n    }\n    infile.seekg(ios::end);\n    int filelength = infile.tellg();\n    infile.seekg(ios::beg);\n    Teacher t[filelength];\n    for (int i = 0; i &lt; filelength; i++)\n    {\n        infile.read((char *)&amp;t[i], sizeof(t[i]));\n    }\n    infile.close();\n    cout &lt;&lt; \"\u8bf7\u8f93\u5165\u8981\u67e5\u8be2\u7684\u6559\u5e08\u59d3\u540d\" &lt;&lt; endl\n         &lt;&lt; \"&gt;&gt;&gt; \";\n    char desiredName[11] = {0};\n    cin.getline(desiredName, 11);\n    bool flag = false;\n    for (int i = 0; i &lt; filelength; i++)\n    {\n        if (strcmp(t[i].getName(), desiredName) == 0)\n        {\n            t[i].display();\n            flag = true;\n            break;\n        }\n    }\n    if (!flag)\n    {\n        cerr &lt;&lt; \"\u672a\u67e5\u8be2\u5230\u6559\u5e08\u4fe1\u606f\uff01\" &lt;&lt; endl;\n    }\n    cout &lt;&lt; \"Press Enter to continue...\" &lt;&lt; endl;\n    getchar();\n}\n\nvoid tbc()\n{\n    system(\"clear\"); // Windows `system(\"cls\")`\n    cout &lt;&lt; \"\u656c\u8bf7\u671f\u5f85\uff01\" &lt;&lt; endl\n         &lt;&lt; endl\n         &lt;&lt; \"Press Enter to continue...\" &lt;&lt; endl;\n    getchar();\n    getchar();\n}\n\nint main()\n{\n    while (true)\n    {\n    _INTERFACE:\n        switch (interface())\n        {\n        case 1:\n        _DATAINPUT:\n            switch (datainput())\n            {\n            case 1:\n                newfile();\n                break;\n            case 2:\n                editfile();\n                break;\n            case 3:\n                goto _INTERFACE;\n                break;\n            default:\n                cout &lt;&lt; \"\u8bf7\u8f93\u5165\u6b63\u786e\u7684\u9009\u9879\uff01\" &lt;&lt; endl;\n                goto _DATAINPUT;\n                break;\n            }\n            break;\n        case 2:\n            datasearch();\n            break;\n        case 3:\n            cout &lt;&lt; \"\u5df2\u4fdd\u5b58\uff01\" &lt;&lt; endl;\n            cout &lt;&lt; \"Press Enter to continue...\" &lt;&lt; endl;\n            getchar();\n            break;\n        case 4:\n            cout &lt;&lt; \"\u5df2\u9000\u51fa\uff01\" &lt;&lt; endl;\n            cout &lt;&lt; \"Press Enter to continue...\" &lt;&lt; endl;\n            getchar();\n            goto _END;\n            break;\n        default:\n            cout &lt;&lt; \"\u8bf7\u8f93\u5165\u6b63\u786e\u7684\u9009\u9879\uff01\" &lt;&lt; endl;\n            goto _INTERFACE;\n            break;\n        }\n    }\n_END:\n    system(\"clear\"); // Windows `system(\"cls\")`\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c</p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p>"},{"location":"coursework/cpd/2/10/#\u7b2c2\u9898","title":"\u7b2c2\u9898","text":"<p>\u6e90\u4ee3\u7801</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n#include &lt;strstream&gt;\n#include &lt;cstring&gt;\nusing namespace std;\nstruct student\n{\n    int num;\n    char name[20];\n    float score;\n};\nint main()\n{\n    student stud[3] = {1001, \"Li\", 78, 1002, \"Wang\", 89.5, 1004, \"Fun\", 90};\n    student stude[3];\n    char c[50];\n    ostrstream strout(c, 50);\n    for (int i = 0; i &lt; 3; i++)\n        strout &lt;&lt; stud[i].num &lt;&lt; \" \" &lt;&lt; stud[i].name &lt;&lt; \" \" &lt;&lt; stud[i].score &lt;&lt; \" \";\n    strout &lt;&lt; ends;\n    istrstream strin(c, sizeof(c));\n    for (int i = 0; i &lt; 3; i++)\n        strin &gt;&gt; stude[i].num &gt;&gt; stude[i].name &gt;&gt; stude[i].score;\n    ofstream fout(\"stud.dat\", ios::binary);\n    fout.write((char *)stude, sizeof(stude));\n    fout.close();\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c</p> <p></p>"},{"location":"coursework/cpd/2/10/#\u9009\u505a\u9898","title":"\u9009\u505a\u9898","text":"<p>\u6e90\u4ee3\u7801</p> <pre><code>#include &lt;iostream&gt;\nusing namespace std;\nint main()\n{\n    double x = 123.456;\n    cout.width(10);\n    cout.setf(ios::dec, ios::basefield);\n    cout &lt;&lt; x &lt;&lt; endl;\n    cout.setf(ios::left);\n    cout &lt;&lt; x &lt;&lt; endl;\n    cout.width(15);\n    cout.setf(ios::right);\n    cout &lt;&lt; x &lt;&lt; endl;\n    cout.setf(ios::showpos);\n    cout &lt;&lt; x &lt;&lt; endl;\n    cout &lt;&lt; -x &lt;&lt; endl;\n    cout.setf(ios::scientific);\n    cout &lt;&lt; x &lt;&lt; endl;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c</p> <pre><code>   123.456\n123.456\n        123.456\n+123.456\n-123.456\n+1.234560e+02\n</code></pre>"},{"location":"coursework/cpd/2/11/","title":"\u7b2c11\u6b21\u4f5c\u4e1a","text":""},{"location":"coursework/cpd/2/11/#\u7b2c11\u6b21\u4f5c\u4e1a","title":"\u7b2c11\u6b21\u4f5c\u4e1a","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n#include &lt;cstring&gt;\n// using namespace std;\n\nclass Teacher\n{\npublic:\n    Teacher(char *_name = \"Default\", char *_number = \"114514\", char *_sex = \"M\", int _y = 1919, int _m = 8, int _d = 10, char *_id = \"123456789012345\", char *_principalship = \"Professor\", char *_department = \"Department of EE\")\n    {\n        strcpy(name, _name);\n        strcpy(number, _number);\n        strcpy(sex, _sex);\n        birthday.y = _y;\n        birthday.m = _m;\n        birthday.d = _d;\n        strcpy(id, _id);\n        strcpy(principalship, _principalship);\n        strcpy(department, _department);\n        // std::cout &lt;&lt; \"Constructed Teacher \" &lt;&lt; name &lt;&lt; std::endl;\n    }\n    Teacher(Teacher &amp;p)\n    {\n        strcpy(name, p.name);\n        strcpy(number, p.number);\n        strcpy(sex, p.sex);\n        birthday.y = p.birthday.y;\n        birthday.m = p.birthday.m;\n        birthday.d = p.birthday.d;\n        strcpy(id, p.id);\n        strcpy(principalship, p.principalship);\n        strcpy(department, p.department);\n        // std::cout &lt;&lt; \"Copied Teacher \" &lt;&lt; name &lt;&lt; std::endl;\n    }\n    ~Teacher()\n    {\n        // std::cout &lt;&lt; \"Destructed Teacher \" &lt;&lt; name &lt;&lt; std::endl;\n    }\n    char *getName()\n    {\n        return name;\n    }\n    char *getNumber()\n    {\n        return number;\n    }\n    void display()\n    {\n        std::cout &lt;&lt; \"\u8f93\u51fa\u6559\u5e08\u4fe1\u606f\uff1a\" &lt;&lt; std::endl\n                  &lt;&lt; \"\u59d3\u540d\uff1a\" &lt;&lt; name &lt;&lt; std::endl\n                  &lt;&lt; \"\u7f16\u53f7\uff1a\" &lt;&lt; number &lt;&lt; std::endl\n                  &lt;&lt; \"\u6027\u522b\uff1a\" &lt;&lt; sex &lt;&lt; std::endl\n                  &lt;&lt; \"\u751f\u65e5\uff1a\" &lt;&lt; birthday.m &lt;&lt; '/' &lt;&lt; birthday.d &lt;&lt; '/' &lt;&lt; birthday.y &lt;&lt; std::endl\n                  &lt;&lt; \"\u8eab\u4efd\u8bc1\u53f7\uff1a\" &lt;&lt; id &lt;&lt; std::endl\n                  &lt;&lt; \"\u804c\u52a1\uff1a\" &lt;&lt; principalship &lt;&lt; std::endl\n                  &lt;&lt; \"\u90e8\u95e8\uff1a\" &lt;&lt; department &lt;&lt; std::endl;\n    }\n    void set()\n    {\n        std::cout &lt;&lt; \"\u8f93\u5165\u6559\u5e08\u4fe1\u606f\uff1a\" &lt;&lt; std::endl;\n        std::cout &lt;&lt; \"\u59d3\u540d\uff1a\";\n        std::cin &gt;&gt; name;\n        std::cout &lt;&lt; \"\u7f16\u53f7\uff1a\";\n        std::cin &gt;&gt; number;\n        std::cout &lt;&lt; \"\u6027\u522b\uff1a\";\n        std::cin &gt;&gt; sex;\n        std::cout &lt;&lt; \"\u751f\u65e5\uff1a\";\n        std::cin &gt;&gt; birthday.m &gt;&gt; birthday.d &gt;&gt; birthday.y;\n        std::cout &lt;&lt; \"\u8eab\u4efd\u8bc1\u53f7\uff1a\";\n        std::cin &gt;&gt; id;\n        std::cout &lt;&lt; \"\u804c\u52a1\uff1a\";\n        std::cin &gt;&gt; principalship;\n        std::cout &lt;&lt; \"\u90e8\u95e8\uff1a\";\n        std::cin &gt;&gt; department;\n    }\n\n    // protected:\n    char name[11];\n    char number[7];\n    char sex[3];\n    class Date\n    {\n    public:\n        int m;\n        int d;\n        int y;\n    } birthday;\n    char id[16];\n    char principalship[11];\n    char department[21];\n};\n\nint interface()\n{\n    int ret = 0;\n    system(\"clear\"); // Windows `system(\"cls\")`\n    std::cout &lt;&lt; \"\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\" &lt;&lt; std::endl\n              &lt;&lt; \"\u3000\u3000 \uff38\uff38\uff38\u516c\u53f8\u4eba\u4e8b\u7ba1\u7406\u7cfb\u7edf\" &lt;&lt; std::endl\n              &lt;&lt; std::endl\n              &lt;&lt; \"\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\" &lt;&lt; std::endl\n              &lt;&lt; \"\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\" &lt;&lt; std::endl\n              &lt;&lt; std::endl\n              &lt;&lt; \"\u4e3b\u83dc\u5355\" &lt;&lt; std::endl\n              &lt;&lt; \"1.\u6570\u636e\u5f55\u5165\" &lt;&lt; std::endl\n              &lt;&lt; \"2.\u6570\u636e\u67e5\u8be2\" &lt;&lt; std::endl\n              &lt;&lt; \"3.\u6570\u636e\u4fdd\u5b58\" &lt;&lt; std::endl\n              &lt;&lt; \"4.\u9000\u51fa\" &lt;&lt; std::endl\n              &lt;&lt; \"\u8bf7\u9009\u62e9\u5e8f\u53f7\uff081-4\uff09\" &lt;&lt; std::endl\n              &lt;&lt; \"\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\" &lt;&lt; std::endl\n              &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"&gt;&gt;&gt; \";\n    std::cin &gt;&gt; ret;\n    std::cin.ignore(1);\n    return ret;\n}\n\nint datainput()\n{\n    int ret = 0;\n    system(\"clear\"); // Windows `system(\"cls\")`\n    std::cout &lt;&lt; \"\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\" &lt;&lt; std::endl\n              &lt;&lt; \"\u3000\u3000 \uff38\uff38\uff38\u516c\u53f8\u4eba\u4e8b\u7ba1\u7406\u7cfb\u7edf\" &lt;&lt; std::endl\n              &lt;&lt; std::endl\n              &lt;&lt; \"\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\" &lt;&lt; std::endl\n              &lt;&lt; \"\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\" &lt;&lt; std::endl\n              &lt;&lt; std::endl\n              &lt;&lt; \"\u6570\u636e\u5f55\u5165\" &lt;&lt; std::endl\n              &lt;&lt; \"1.\u65b0\u5efa\u6587\u4ef6\" &lt;&lt; std::endl\n              &lt;&lt; \"2.\u4fee\u6539\u6587\u4ef6\" &lt;&lt; std::endl\n              &lt;&lt; \"3.\u9000\u51fa\" &lt;&lt; std::endl\n              &lt;&lt; \"\u8bf7\u9009\u62e9\u5e8f\u53f7\uff081-3\uff09\" &lt;&lt; std::endl\n              &lt;&lt; \"\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\" &lt;&lt; std::endl\n              &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"&gt;&gt;&gt; \";\n    std::cin &gt;&gt; ret;\n    std::cin.ignore(1);\n    return ret;\n}\n\nvoid newfile()\n{\n    char filename[32];\n    int n;\n    system(\"clear\"); // Windows `system(\"cls\")`\n    std::cout &lt;&lt; \"\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\" &lt;&lt; std::endl\n              &lt;&lt; \"\u3000\u3000 \uff38\uff38\uff38\u516c\u53f8\u4eba\u4e8b\u7ba1\u7406\u7cfb\u7edf\" &lt;&lt; std::endl\n              &lt;&lt; std::endl\n              &lt;&lt; \"\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\" &lt;&lt; std::endl\n              &lt;&lt; \"\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\" &lt;&lt; std::endl\n              &lt;&lt; std::endl\n              &lt;&lt; \"\u65b0\u5efa\u6587\u4ef6\" &lt;&lt; std::endl\n              &lt;&lt; \"\u8bf7\u8f93\u5165\u6570\u636e\u6587\u4ef6\u540d\" &lt;&lt; std::endl\n              &lt;&lt; \"\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\" &lt;&lt; std::endl\n              &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"&gt;&gt;&gt; \";\n    std::cin.getline(filename, 32);\n    std::ofstream outfile(filename, std::ios::out | std::ios::binary);\n    if (!outfile)\n    {\n        throw 1;\n    }\n    std::cout &lt;&lt; \"\u8bf7\u8f93\u5165\u4fdd\u5b58\u7684\u6559\u5e08\u4eba\u6570\" &lt;&lt; std::endl\n              &lt;&lt; \"&gt;&gt;&gt; \";\n    std::cin &gt;&gt; n;\n    Teacher t[n];\n    for (int i = 0; i &lt; n; i++)\n    {\n        t[i].set();\n        outfile.write((char *)&amp;t[i], sizeof(t[i]));\n    }\n    outfile.close();\n    system(\"clear\"); // Windows `system(\"cls\")`\n    std::cout &lt;&lt; \"\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\" &lt;&lt; std::endl\n              &lt;&lt; \"\u3000\u3000 \uff38\uff38\uff38\u516c\u53f8\u4eba\u4e8b\u7ba1\u7406\u7cfb\u7edf\" &lt;&lt; std::endl\n              &lt;&lt; std::endl\n              &lt;&lt; \"\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\" &lt;&lt; std::endl\n              &lt;&lt; \"\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\" &lt;&lt; std::endl\n              &lt;&lt; std::endl\n              &lt;&lt; \"\u65b0\u5efa\u6587\u4ef6\" &lt;&lt; std::endl\n              &lt;&lt; \"\u65b0\u5efa\u6587\u4ef6\u6210\u529f\uff01\" &lt;&lt; std::endl\n              &lt;&lt; \"\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\" &lt;&lt; std::endl\n              &lt;&lt; std::endl\n              &lt;&lt; \"Press Enter to continue...\" &lt;&lt; std::endl;\n    getchar();\n    getchar();\n}\n\nvoid editfile()\n{\n    char filename[32];\n    system(\"clear\"); // Windows `system(\"cls\")`\n    std::cout &lt;&lt; \"\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\" &lt;&lt; std::endl\n              &lt;&lt; \"\u3000\u3000 \uff38\uff38\uff38\u516c\u53f8\u4eba\u4e8b\u7ba1\u7406\u7cfb\u7edf\" &lt;&lt; std::endl\n              &lt;&lt; std::endl\n              &lt;&lt; \"\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\" &lt;&lt; std::endl\n              &lt;&lt; \"\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\" &lt;&lt; std::endl\n              &lt;&lt; std::endl\n              &lt;&lt; \"\u4fee\u6539\u6587\u4ef6\" &lt;&lt; std::endl\n              &lt;&lt; \"\u8bf7\u8f93\u5165\u6570\u636e\u6587\u4ef6\u540d\" &lt;&lt; std::endl\n              &lt;&lt; \"\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\" &lt;&lt; std::endl\n              &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"&gt;&gt;&gt; \";\n    std::cin.getline(filename, 32);\n    std::ifstream infile(filename, std::ios::in | std::ios::binary);\n    if (!infile)\n    {\n        throw 1;\n    }\n    infile.seekg(std::ios::end);\n    int filelength = infile.tellg();\n    infile.seekg(std::ios::beg);\n    Teacher t[filelength];\n    for (int i = 0; i &lt; filelength; i++)\n    {\n        infile.read((char *)&amp;t[i], sizeof(t[i]));\n    }\n    infile.close();\n    std::cout &lt;&lt; \"\u8bf7\u8f93\u5165\u8981\u4fee\u6539\u7684\u6559\u5e08\u5de5\u53f7\" &lt;&lt; std::endl\n              &lt;&lt; \"&gt;&gt;&gt; \";\n    char desiredNumber[7] = {0};\n    std::cin.getline(desiredNumber, 7);\n    int n = -1;\n    for (int i = 0; i &lt; filelength; i++)\n    {\n        if (strcmp(t[i].getNumber(), desiredNumber) == 0)\n        {\n            n = i;\n            break;\n        }\n    }\n    if (n == -1)\n    {\n        std::cerr &lt;&lt; \"\u672a\u67e5\u8be2\u5230\u6559\u5e08\u4fe1\u606f\uff01\" &lt;&lt; std::endl;\n    }\n    t[n].set();\n    std::ofstream outfile(filename, std::ios::out | std::ios::binary);\n    if (!outfile)\n    {\n        throw 1;\n    }\n    for (int i = 0; i &lt; filelength; i++)\n    {\n        outfile.write((char *)&amp;t[i], sizeof(t[i]));\n    }\n    outfile.close();\n    system(\"clear\"); // Windows `system(\"cls\")`\n    std::cout &lt;&lt; \"\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\" &lt;&lt; std::endl\n              &lt;&lt; \"\u3000\u3000 \uff38\uff38\uff38\u516c\u53f8\u4eba\u4e8b\u7ba1\u7406\u7cfb\u7edf\" &lt;&lt; std::endl\n              &lt;&lt; std::endl\n              &lt;&lt; \"\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\" &lt;&lt; std::endl\n              &lt;&lt; \"\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\" &lt;&lt; std::endl\n              &lt;&lt; std::endl\n              &lt;&lt; \"\u4fee\u6539\u6587\u4ef6\" &lt;&lt; std::endl\n              &lt;&lt; \"\u4fee\u6539\u6587\u4ef6\u6210\u529f\uff01\" &lt;&lt; std::endl\n              &lt;&lt; \"\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\" &lt;&lt; std::endl\n              &lt;&lt; std::endl\n              &lt;&lt; \"Press Enter to continue...\" &lt;&lt; std::endl;\n    getchar();\n    getchar();\n}\n\nvoid datasearch()\n{\n    char filename[32];\n    system(\"clear\"); // Windows `system(\"cls\")`\n    std::cout &lt;&lt; \"\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\" &lt;&lt; std::endl\n              &lt;&lt; \"\u3000\u3000 \uff38\uff38\uff38\u516c\u53f8\u4eba\u4e8b\u7ba1\u7406\u7cfb\u7edf\" &lt;&lt; std::endl\n              &lt;&lt; std::endl\n              &lt;&lt; \"\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\uff0b\" &lt;&lt; std::endl\n              &lt;&lt; \"\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\" &lt;&lt; std::endl\n              &lt;&lt; std::endl\n              &lt;&lt; \"\u6570\u636e\u67e5\u8be2\" &lt;&lt; std::endl\n              &lt;&lt; \"\u8bf7\u8f93\u5165\u6570\u636e\u6587\u4ef6\u540d\" &lt;&lt; std::endl\n              &lt;&lt; \"\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\uff03\" &lt;&lt; std::endl\n              &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"&gt;&gt;&gt; \";\n    std::cin.getline(filename, 32);\n    std::ifstream infile(filename, std::ios::in | std::ios::binary);\n    if (!infile)\n    {\n        throw 1;\n    }\n    infile.seekg(std::ios::end);\n    int filelength = infile.tellg();\n    infile.seekg(std::ios::beg);\n    Teacher t[filelength];\n    for (int i = 0; i &lt; filelength; i++)\n    {\n        infile.read((char *)&amp;t[i], sizeof(t[i]));\n    }\n    infile.close();\n    std::cout &lt;&lt; \"\u8bf7\u8f93\u5165\u8981\u67e5\u8be2\u7684\u6559\u5e08\u59d3\u540d\" &lt;&lt; std::endl\n              &lt;&lt; \"&gt;&gt;&gt; \";\n    char desiredName[11] = {0};\n    std::cin.getline(desiredName, 11);\n    bool flag = false;\n    for (int i = 0; i &lt; filelength; i++)\n    {\n        if (strcmp(t[i].getName(), desiredName) == 0)\n        {\n            t[i].display();\n            flag = true;\n            break;\n        }\n    }\n    if (!flag)\n    {\n        std::cerr &lt;&lt; \"\u672a\u67e5\u8be2\u5230\u6559\u5e08\u4fe1\u606f\uff01\" &lt;&lt; std::endl;\n    }\n    std::cout &lt;&lt; \"Press Enter to continue...\" &lt;&lt; std::endl;\n    getchar();\n}\n\nvoid tbc()\n{\n    system(\"clear\"); // Windows `system(\"cls\")`\n    std::cout &lt;&lt; \"\u656c\u8bf7\u671f\u5f85\uff01\" &lt;&lt; std::endl\n              &lt;&lt; std::endl\n              &lt;&lt; \"Press Enter to continue...\" &lt;&lt; std::endl;\n    getchar();\n    getchar();\n}\n\nint main()\n{\n    while (true)\n    {\n    _INTERFACE:\n        switch (interface())\n        {\n        case 1:\n        _DATAINPUT:\n            switch (datainput())\n            {\n            case 1:\n                try\n                {\n                    newfile();\n                }\n                catch (int i)\n                {\n                    std::cerr &lt;&lt; \"\u6587\u4ef6\u6253\u5f00\u5931\u8d25\uff01\" &lt;&lt; std::endl;\n                    std::cout &lt;&lt; \"Press Enter to continue...\" &lt;&lt; std::endl;\n                    getchar();\n                }\n                break;\n            case 2:\n                try\n                {\n                    editfile();\n                }\n                catch (int i)\n                {\n                    std::cerr &lt;&lt; \"\u6587\u4ef6\u6253\u5f00\u5931\u8d25\uff01\" &lt;&lt; std::endl;\n                    std::cout &lt;&lt; \"Press Enter to continue...\" &lt;&lt; std::endl;\n                    getchar();\n                }\n                break;\n            case 3:\n                goto _INTERFACE;\n                break;\n            default:\n                std::cout &lt;&lt; \"\u8bf7\u8f93\u5165\u6b63\u786e\u7684\u9009\u9879\uff01\" &lt;&lt; std::endl;\n                goto _DATAINPUT;\n                break;\n            }\n            break;\n        case 2:\n            try\n            {\n                datasearch();\n            }\n            catch (int i)\n            {\n                std::cerr &lt;&lt; \"\u6587\u4ef6\u6253\u5f00\u5931\u8d25\uff01\" &lt;&lt; std::endl;\n                std::cout &lt;&lt; \"Press Enter to continue...\" &lt;&lt; std::endl;\n                getchar();\n            }\n            break;\n        case 3:\n            std::cout &lt;&lt; \"\u5df2\u4fdd\u5b58\uff01\" &lt;&lt; std::endl;\n            std::cout &lt;&lt; \"Press Enter to continue...\" &lt;&lt; std::endl;\n            getchar();\n            break;\n        case 4:\n            std::cout &lt;&lt; \"\u5df2\u9000\u51fa\uff01\" &lt;&lt; std::endl;\n            std::cout &lt;&lt; \"Press Enter to continue...\" &lt;&lt; std::endl;\n            getchar();\n            goto _END;\n            break;\n        default:\n            std::cout &lt;&lt; \"\u8bf7\u8f93\u5165\u6b63\u786e\u7684\u9009\u9879\uff01\" &lt;&lt; std::endl;\n            goto _INTERFACE;\n            break;\n        }\n    }\n_END:\n    system(\"clear\"); // Windows `system(\"cls\")`\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c\u4e0e\u4e0a\u6b21\u4f5c\u4e1a\u76f8\u540c\u3002</p>"},{"location":"coursework/cpd/2/12/","title":"\u7b2c12\u6b21\u4f5c\u4e1a","text":""},{"location":"coursework/cpd/2/12/#\u7b2c12\u6b21\u4f5c\u4e1a","title":"\u7b2c12\u6b21\u4f5c\u4e1a","text":""},{"location":"coursework/cpd/2/12/#\u5fc5\u505a\u9898","title":"\u5fc5\u505a\u9898","text":""},{"location":"coursework/cpd/2/12/#\u7b2c1\u9053\u9898","title":"\u7b2c1\u9053\u9898","text":"<pre><code>template &lt;class T&gt;\nvoid sort(T a[], int len)\n{\n    int i, j;\n    T temp;\n    for (i = 0; i &lt; len - 1; i++)\n        for (j = i + 1; j &lt; len; j++)\n            if (a[i] &gt; a[j])\n            {\n                temp = a[i];\n                a[i] = a[j];\n                a[j] = temp;\n            }\n}\n</code></pre>"},{"location":"coursework/cpd/2/12/#\u7b2c2\u9053\u9898","title":"\u7b2c2\u9053\u9898","text":"<pre><code>template &lt;class T&gt;\nclass TList\n{\npublic:\n    int search(T x);\n\nprivate:\n    T *a;\n};\ntemplate &lt;class T&gt;\nint TList&lt;T&gt;::search(T x)\n{\n    int i;\n    for (i = 0; a[i] != x; i++)\n        ;\n    return i;\n}\n</code></pre>"},{"location":"coursework/cpd/2/12/#\u9009\u505a\u9898","title":"\u9009\u505a\u9898","text":"<pre><code>#include &lt;iostream&gt;\nusing namespace std;\nclass SNode\n{\npublic:\n    SNode(int value);\n    ~SNode(){};\n    int m_value;\n    SNode *m_next;\n};\ntemplate &lt;class Type&gt;\nclass TList\n{\npublic:\n    TList();\n    ~TList();\n    virtual bool Insert(Type value, int num = -1);\n    bool Delete(Type value);\n    bool Contain(Type value);\n    void Print();\n\nprotected:\n    SNode *m_head;\n};\ntemplate &lt;class Type&gt;\nclass TSet : public TList&lt;int&gt;\n{\npublic:\n    bool Insert(int value, int num = -1);\n};\nSNode::SNode(int value)\n{\n    m_value = value;\n    m_next = NULL;\n}\ntemplate &lt;class Type&gt;\nTList&lt;Type&gt;::TList()\n{\n    m_head = NULL;\n}\ntemplate &lt;class Type&gt;\nTList&lt;Type&gt;::~TList()\n{\n    SNode *p = m_head;\n    for (; p != NULL;)\n    {\n        m_head = m_head-&gt;m_next;\n        delete p;\n        p = m_head;\n    }\n}\ntemplate &lt;class Type&gt;\nbool TList&lt;Type&gt;::Insert(Type value, int num)\n{\n    SNode *p = new SNode(value);\n    if (p == NULL)\n    {\n        return false;\n    }\n    if (num == -1)\n    {\n        p-&gt;m_next = m_head;\n        m_head = p;\n    }\n    else\n    {\n        SNode *p1 = m_head;\n        for (int i = 0; i &lt; num - 1; i++)\n        {\n            p1 = p1-&gt;m_next;\n        }\n        p-&gt;m_next = p1-&gt;m_next;\n        p1-&gt;m_next = p;\n    }\n    return true;\n}\ntemplate &lt;class Type&gt;\nbool TList&lt;Type&gt;::Delete(Type value)\n{\n    SNode *p1, *p2;\n    if (m_head-&gt;m_value == value)\n    {\n        p1 = m_head-&gt;m_next;\n        delete m_head;\n        m_head = p1;\n        return true;\n    }\n    else\n    {\n        for (p1 = m_head, p2 = m_head-&gt;m_next; p2 != NULL;)\n        {\n            if (p2-&gt;m_value == value)\n            {\n                p1-&gt;m_next = p2-&gt;m_next;\n                delete p2;\n                p2 = NULL;\n                return true;\n            }\n            else\n            {\n                p1 = p1-&gt;m_next;\n                p2 = p2-&gt;m_next;\n            }\n        }\n    }\n    return false;\n}\ntemplate &lt;class Type&gt;\nbool TList&lt;Type&gt;::Contain(Type value)\n{\n    for (SNode *p = m_head; p != NULL; p = p-&gt;m_next)\n    {\n        if (p-&gt;m_value == value)\n        {\n            return true;\n        }\n    }\n    return false;\n}\ntemplate &lt;class Type&gt;\nvoid TList&lt;Type&gt;::Print()\n{\n    cout &lt;&lt; \"\u7ed3\u70b9\u7684\u503c\u4f9d\u6b21\u4e3a\uff1a\";\n    for (SNode *p = m_head; p != NULL; p = p-&gt;m_next)\n    {\n        cout &lt;&lt; \" \" &lt;&lt; p-&gt;m_value &lt;&lt; \";\";\n    }\n    cout &lt;&lt; endl;\n}\ntemplate &lt;class Type&gt;\nbool TSet&lt;Type&gt;::Insert(int value, int num)\n{\n    if (!(TList&lt;int&gt;::Contain(value)) &amp;&amp; (TList&lt;int&gt;::Insert(value, num)))\n    {\n        return true;\n    }\n    return false;\n}\nint main()\n{\n    TList&lt;int&gt; sIntList;\n    sIntList.Insert(12);\n    sIntList.Insert(24);\n    sIntList.Insert(48);\n    sIntList.Insert(96);\n    sIntList.Insert(24);\n    sIntList.Print();\n\n    sIntList.Delete(24);\n    sIntList.Print();\n\n    TSet&lt;int&gt; sIntSet;\n    sIntSet.Insert(12);\n    sIntSet.Insert(24);\n    sIntSet.Insert(48);\n    sIntSet.Insert(96);\n    sIntSet.Insert(24);\n    sIntSet.Print();\n\n    sIntSet.Delete(24);\n    sIntSet.Print();\n\n    cin.get();\n\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c</p> <pre><code>\u7ed3\u70b9\u7684\u503c\u4f9d\u6b21\u4e3a\uff1a 24; 96; 48; 24; 12;\n\u7ed3\u70b9\u7684\u503c\u4f9d\u6b21\u4e3a\uff1a 96; 48; 24; 12;\n\u7ed3\u70b9\u7684\u503c\u4f9d\u6b21\u4e3a\uff1a 96; 48; 24; 12;\n\u7ed3\u70b9\u7684\u503c\u4f9d\u6b21\u4e3a\uff1a 96; 48; 12;\n</code></pre>"},{"location":"coursework/cpd/2/ex/","title":"\u52a0\u5206\u4f5c\u4e1a","text":""},{"location":"coursework/cpd/2/ex/#\u52a0\u5206\u4f5c\u4e1a","title":"\u52a0\u5206\u4f5c\u4e1a","text":"<p>\u672c\u4f5c\u4e1a\u5728\u4ee5\u4e0b\u65b9\u9762\u5b9e\u73b0\u4e86\u4f18\u5316\uff1a - \u4f18\u5316\u80dc\u8d1f\u5224\u5b9a\u7b97\u6cd5\uff0c\u4e0d\u518d\u4f7f\u7528\u53cc\u91cd\u5faa\u73af\u904d\u5386\u6574\u4e2a\u68cb\u76d8\uff0c\u5b9e\u73b0\u8d44\u6e90\u7684\u5408\u7406\u8c03\u5ea6\uff1b - \u4f18\u5316\u7a0b\u5e8f\u5185\u5bb9\uff0c\u5c06\u539f\u672c\u4e92\u76f8\u72ec\u7acb\u7684\u4e0d\u540c\u9009\u624b\u7684\u51fd\u6570\u5408\u5e76\uff0c\u51cf\u5c11\u4ee3\u7801\u5197\u4f59\uff0c\u505a\u5230\u6e05\u6670\u7f8e\u89c2\uff1b - \u6539\u5584\u754c\u9762\u73af\u5883\uff0c\u7528\u6237\u754c\u9762\u66f4\u52a0\u7f8e\u89c2\uff1b - \u5176\u4ed6\u7684\u4e00\u4e9b\u5c0f\u6539\u8fdb\u3002</p> <pre><code>// \u7531\u4e8e\u4f7f\u7528Okular\u9605\u8bfb\u5668\u76f4\u63a5\u590d\u5236\u81ea`\u5f20\u664b\u73e9-\u4e94\u5b50\u68cb\u7a0b\u5e8f\u8bbe\u8ba1.pdf`\uff0c\u53ef\u80fd\u6709\u90e8\u5206\u7b26\u53f7\uff08\u4e3b\u8981\u4f53\u73b0\u5728\u5168\u534a\u89d2\u548c\u7a7a\u683c\u4e0a\uff09\u4e0e\u539f\u6587\u6863\u4e0d\u7b26\u3002\n\n// \u4e3a\u9002\u914d\u6211\u7684ArchLinux\u7cfb\u7edf\u4e0eUTF-8\u7f16\u7801\u73af\u5883\uff0c\u66f4\u6539\u4e86\u90e8\u5206\u4ee3\u7801\uff08\u4e3b\u8981\u4f53\u73b0\u5728\u68cb\u76d8\u6570\u7ec4\u5927\u5c0f\u548c`system(\"clear\");`\u4e0a\uff09\u3002\n\n// \u8bf7\u4f7f\u7528UTF-8\u7f16\u7801\u73af\u5883\u7684Linux\u6216macOS\u7cfb\u7edf\u7f16\u8bd1\u9a8c\u6536\uff0c\u8c22\u8c22\u3002\n\n/*\n\n    // \u8001\u5e08\u3002\u4e4b\u524d\u6211\u4f20\u7ed9\u60a8\u7684\u7248\u672c\u6ca1\u6709\u6ce8\u91ca\uff0c\u4e14\u5e73\u5c40\u5224\u65ad\u8fc7\u4e8e\u590d\u6742\u5197\u957f\uff0c\u56e0\u6b64\u6211\u5bf9\u5176\u8fdb\u884c\u4e86\u5b8c\u5584\uff0c\u5e76\u8fdb\u884c\u4e86\u6ce8\u91ca\uff0c\u8fd8\u671b\u60a8\u91cd\u65b0\u9a8c\u6536\u3001\u8bc4\u5b9a\u3002\u4e0b\u9762\u662f\u6211\u5bf9\u7a0b\u5e8f\u7684\u603b\u4f53\u8bf4\u660e\uff1a\n\n    // \u9996\u5148\uff0c\u8003\u8651\u5230\u7528\u6237\u7684\u6e38\u620f\u4f53\u9a8c\uff0c\u6e38\u620f\u5148\u8be2\u95ee\u4e86\u73a9\u5bb6\u7684\u540d\u5b57\uff0c\u5e76\u5c06\u5176\u50a8\u5b58\u4e0b\u6765\uff0c\u4ee5\u5728\u4ee5\u540e\u79f0\u547c\u5bf9\u5e94\u7684\u73a9\u5bb6\uff1b\u7136\u540e\uff0c\u8be2\u95eeplayer1\u7684\u68cb\u578b\uff0c\u901a\u8fc7\u8f93\u516512\u4ee3\u8868\u9ed1\u767d\uff0c\u5e76\u4e14\u5982\u679c\u8f93\u5165\u7684\u4e0d\u662f1\u62162\uff0c\u5219\u4f1a\u62a5\u9519\u5e76\u63d0\u793a\u73a9\u5bb6\u91cd\u65b0\u8f93\u5165\u3002\u7136\u540e\u8fdb\u884c\u7b80\u77ed\u7684\u6e38\u620f\u8bf4\u660e\uff0c\u5c31\u5f00\u59cb\u7ed8\u5236\u68cb\u76d8\u5f00\u59cb\u6e38\u620f\u3002\u5728\u6e38\u620f\u8fc7\u7a0b\u4e2d\uff0c\u73a9\u5bb6\u901a\u8fc7\u8f93\u5165\u68cb\u5b50\u5750\u6807\u7684\u65b9\u5f0f\u4e0b\u68cb\uff0c\u8f93\u5165\u7684x\u3001y\u5bf9\u5e94\u610f\u601d\u662f\u201cx\u884cy\u5217\u201d\u3002\u82e5\u8f93\u5165\u7684\u5750\u6807\u4e3a\u5c0f\u6570\uff0c\u5219\u901a\u8fc7floor\u51fd\u6570\u5c06\u5176\u8f6c\u5316\u4e3a\u4e0d\u8d85\u8fc7\u5b83\u7684\u6700\u5927\u6574\u6570\u3002\u82e5\u8f6c\u5316\u540e\u7684\u6574\u6570\u4ecd\u4e0d\u5c5e\u4e8e0~14\uff0c\u5219\u4f1a\u62a5\u9519\uff0c\u63d0\u793a\u73a9\u5bb6\u91cd\u65b0\u8f93\u5165\u3002\u6bcf\u4e00\u6b65\u4e0b\u5b8c\u68cb\uff0c\u4ea4\u7ed9\u5bf9\u624b\u4e0b\u65f6\uff0c\u90fd\u4f1a\u4e3a\u540e\u8005\u63d0\u793a\u4e0a\u4e00\u6b65\u5bf9\u624b\u4e0b\u7684\u4f4d\u7f6e\u3002\u6bcf\u6b21\u4e0b\u5b8c\u68cb\u90fd\u901a\u8fc7\u7cfb\u7edfclear\u547d\u4ee4\u6e05\u5c4f\u3001\u91cd\u65b0\u7ed8\u5236\u68cb\u76d8\uff0c\u68cb\u76d8\u7684\u7ed8\u5236\u662f\u901a\u8fc7\u8bb0\u5f55\u4e8c\u7ef4\u6570\u7ec4\u7684\u6bcf\u4e2a\u5143\u7d20\u7684\u503c\uff080\u30011\u30012\uff09\uff0c\u6765\u5224\u65ad\u8be5\u5728\u6b64\u5904\u753b\u4ec0\u4e48\u5f62\u72b6\u3002\u81f3\u4e8e\u80dc\u8d1f\u5224\u65ad\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5199\u51fa\u56db\u4e2a\u5224\u65ad\u51fd\u6570\uff0c\u5206\u522b\u662f\u6a2a\u8fde\u7ebf\u3001\u7ad6\u8fde\u7ebf\u3001\u4e00\u4e09\u8c61\u9650\u659c\u8fde\u7ebf\u3001\u4e8c\u56db\u8c61\u9650\u659c\u8fde\u7ebf\u3002\u5224\u65ad\u80dc\u8d1f\u65e0\u679c\u540e\u518d\u5224\u65ad\u5e73\u5c40\u3002\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5224\u65ad\u8f93\u8d62\uff0c\u7136\u540e\u8fdb\u884c\u7ed3\u5c3e\u7684\u8f93\u51fa\uff0c\u4e5f\u5c31\u662f\u5ba3\u5e03\u83b7\u80dc\u7684\u4e00\u65b9\uff08\u6216\u5e73\u5c40\uff09\uff0c\u7136\u540e\u8bf4\u201c\u6b22\u8fce\u4f7f\u7528\uff0c\u518d\u89c1\u201d\u4e4b\u7c7b\u7684\u8bdd\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u9898\u76ee\u4e2d\u8981\u6c42\u8bb0\u5f55\u53cc\u65b9\u5bf9\u5f08\u7684\u70b9\u6570\uff0c\u6211\u9009\u62e9\u7528\u9759\u6001\u7c7b\u6210\u5458\u53d8\u91cf\uff0c\u7406\u7531\u5f88\u7b80\u5355\uff0c\u56e0\u4e3a\u6e38\u620f\u4e2d\u6709\u4e24\u4e2a\u73a9\u5bb6\u7c7b\uff0c\u4f46\u662f\u6211\u4eec\u8981\u60f3\u8ba9\u4e24\u4e2a\u73a9\u5bb6\u64cd\u4f5c\u7684\u65f6\u5019\u8fd9\u4e2a\u8ba1\u6570\u53d8\u91cf\u5747\u81ea\u589e\uff0c\u56e0\u6b64static\u53d8\u91cf\u5c31\u662f\u4e00\u4e2a\u4f18\u9009\u3002\u6700\u540e\u8f93\u51fa\u8fd9\u4e00\u6570\u636e\u7684\u503c\u5373\u53ef\u3002\u4e3a\u4e86\u5951\u5408\u6211\u4eec\u6240\u5b66\u7684\u5185\u5bb9\uff0c\u6790\u6784\u51fd\u6570\u6267\u884c\u65f6\u8fdb\u884c\u4e86\u8bed\u53e5\u8bf4\u660e\uff0c\u4f53\u73b0\u4e86\u4e09\u4e2a\u5bf9\u8c61\u7684\u6790\u6784\u8fc7\u7a0b\u3002\u8fd9\u4e9b\u5c31\u662f\u6211\u4e94\u5b50\u68cb\u7a0b\u5e8f\u7684\u8981\u70b9\u3002\n\n    // \u5177\u4f53\u7684\u6ce8\u91ca\u5728\u9644\u4ef6\u4e2d\u7684\u7a0b\u5e8f\u6e90\u4ee3\u7801\u3002\n\n    // \u8bf7\u7528VS2012\u7b49\u5bf9\u4e2d\u6587\u652f\u6301\u8f83\u597d\u7684\u7f16\u8bd1\u5668\u7f16\u8bd1\u9a8c\u6536\uff0c\u8c22\u8c22\u3002\n\n*/\n\n#include &lt;iostream&gt;\n#include &lt;cstring&gt;\n#include &lt;cstdlib&gt;\n#include &lt;cmath&gt;\nusing namespace std;\n\nint board[15][15] = {0}; // \u5b9a\u4e49\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\uff0c\u6765\u50a8\u5b58\u68cb\u76d8\u4e0a\u5404\u70b9\u7684\u68cb\u5b50\u60c5\u51b5\nchar type[11];           // \u5168\u5c40\u53d8\u91cf\uff0c\u4ee3\u8868Player 1\u68cb\u578b\n\nbool ping() // \u5224\u65ad\u68cb\u76d8\u662f\u5426\u5df2\u4e0b\u6ee1\n{\n    bool p = true;\n    for (int i = 0; i &lt; 15; i++)\n    {\n        for (int j = 0; j &lt; 15; j++)\n        { // \u904d\u5386\u68cb\u76d8\n            if (board[i][j] == 0)\n            {\n                p = false;\n                break;\n            }\n        }\n    }\n    return p;\n}\n\nclass ChessBoard\n{\nprivate:\n    int x;\n    int y;    // \u68cb\u5b50\u4f4d\u7f6e\n    int size; // \u68cb\u76d8\u5927\u5c0f\npublic:\n    void show(); // \u5c55\u793a\u68cb\u5b50\u4f4d\u7f6e\n    void setx(int a);\n    void sety(int a);\n    int getx() { return x; }\n    int gety() { return y; }                                                          // \u8bbe\u5b9a\u68cb\u5b50\u4f4d\u7f6e\n    ChessBoard(int sizee = 15, int xx = 0, int yy = 0) : size(sizee), x(xx), y(yy) {} // \u6784\u9020\u51fd\u6570\n    ~ChessBoard()                                                                     // \u6790\u6784\u51fd\u6570\n    {\n        // cout &lt;&lt; \"Destructor called.\" &lt;&lt; endl; // \u8c03\u7528\u8bed\u53e5\n    }\n};\n\nvoid ChessBoard::show() // \u663e\u793a\u5bf9\u624b\u7684\u4e0a\u4e00\u6b65\n{\n    cout &lt;&lt; \"\u60a8\u7684\u5bf9\u624b\u7684\u6700\u540e\u4e00\u6b65\u68cb\u662f\uff1a\" &lt;&lt; endl\n         &lt;&lt; x &lt;&lt; \"\u884c\" &lt;&lt; y &lt;&lt; \"\u5217\" &lt;&lt; endl;\n}\n\nvoid ChessBoard::setx(int a)\n{\n    x = a;\n}\n\nvoid ChessBoard::sety(int a)\n{\n    y = a;\n}\n\nclass player // \u5efa\u7acb\u73a9\u5bb6\u7c7b\n{\nprivate:\n    char name[21]; // \u73a9\u5bb6\u59d3\u540d\n    enum chesstype // \u679a\u4e3e\u53d8\u91cf\uff0c\u5b9a\u4e49\u68cb\u578b\n    {\n        black = 1,\n        white\n    };\n    float px;\n    float py;\n\npublic:\n    static int numb;       // \u9759\u6001\u6210\u5458\uff0c\u8bb0\u5f55\u5bf9\u5f08\u70b9\u6570\n    void setchess(int n);  // \u73a9\u5bb6n\uff081\u62162\uff09\u4e0b\u68cb\n    int givex();           // \u8bbf\u95eex\u7684\u7aef\u53e3\n    int givey();           // \u8bbf\u95eey\u7684\u7aef\u53e3\n    void give_name(int n); // \u8d4b\u4e88\u540d\u5b57\n    void put_name();       // \u8f93\u51fa\u540d\u5b57\n    void pick_type();      // \u9009\u62e9\u68cb\u578b\n    void show_type();      // \u5c55\u793a\u68cb\u578b\n    ~player()              // player\u7c7b\u7684\u6790\u6784\u51fd\u6570\n    {\n        // cout &lt;&lt; \"Destructor called.\" &lt;&lt; endl;\n    }\n};\n\nvoid player::give_name(int n)\n{\n    printf(\"%d\u53f7\u73a9\u5bb6\uff0c\u8bf7\u8f93\u5165\u60a8\u7684\u59d3\u540d\uff08\u4e0d\u8d85\u8fc720\u4e2a\u5b57\u7b26\uff0c\u6c49\u5b57\u88ab\u89c6\u4e3a3\u4e2a\u5b57\u7b26\uff09\uff1a\", n);\n    cin &gt;&gt; name;\n    cout &lt;&lt; name &lt;&lt; \"\uff0c\u6b22\u8fce\u60a8\uff01\" &lt;&lt; endl;\n}\n\nvoid player::show_type()\n{\n    printf(\"\u6240\u4ee5\uff0c%s\uff0c\u60a8\u5c06\u6267\", name);\n    strcmp(type, \"black\") ? printf(\"\u767d\u5b50\u3002\") : printf(\"\u9ed1\u5b50\u3002\");\n}\n\nvoid player::pick_type()\n{\n    cout &lt;&lt; \"\\n\"\n         &lt;&lt; name &lt;&lt; \"\uff0c\u60a8\u60f3\u6267\u4f55\u79cd\u989c\u8272\u7684\u68cb\u5b50\uff1f\\n\u9ed1\u5b50\u5c06\u5148\u4e8e\u767d\u5b50\u3002\\n\u82e5\u9009\u62e9\u9ed1\u5b50\uff0c\u8bf7\u8f93\u5165\u201c1\u201d\uff1b\u82e5\u9009\u62e9\u767d\u5b50\uff0c\u8bf7\u8f93\u5165\u201c2\u201d\uff1a\";\n    int a;\n    cin &gt;&gt; a;\n    switch (a)\n    {\n    case 1:\n        strcpy(type, \"black\");\n        break;\n    case 2:\n        strcpy(type, \"white\");\n        break;\n    default:\n        cout &lt;&lt; \"\u8f93\u5165\u9519\u8bef\uff01\" &lt;&lt; endl;\n        pick_type();\n        break; // \u9632\u6b62\u6076\u610f\u8f93\u5165\uff0c\u63d0\u793aInput error\n    }\n}\n\nvoid player::setchess(int n) // \u7a0b\u5e8f\u4e2d\u6700\u91cd\u8981\u7684\u51fd\u6570\u4e4b\u4e00\uff1a\u4e0b\u68cb\u51fd\u6570\n{\n    printf(\"%s\uff0c\u8bf7\u843d\u5b50\u3002\u8bf7\u8f93\u5165\u60a8\u5c06\u8981\u843d\u5b50\u7684\u884c\u3001\u5217\u5750\u6807\u3002\u8f93\u5165\u793a\u4f8b\uff1a7 7 \\n\", name);\n    cin &gt;&gt; px &gt;&gt; py;\n    int a, b;\n    a = floor(px);\n    b = floor(py); // \u9632\u6b62\u6076\u610f\u8f93\u5165\u5c0f\u6570\n    bool loclegal1 = false;\n    bool loclegal2 = false;\n    bool loclegal = true; // \u4e09\u4e2a\u5e03\u5c14\u578b\u53d8\u91cf\uff0c\u5224\u65ad\u5750\u6807\u7684\u5408\u6cd5\u6027\n    for (int i = 0; i &lt; 15; i++)\n    {\n        if (floor(px) == i)\n            loclegal1 = true;\n        if (floor(py) == i)\n            loclegal2 = true; // \u904d\u5386\u5224\u65ad\u6cd5\n    }\n    if ((loclegal1 == false) || (loclegal2 == false) || board[a][b] != 0)\n        loclegal = false; // \u6570\u636e\u8d8a\u754c\u6216\u4e0b\u5728\u5df2\u6709\u68cb\u5b50\u7684\u4f4d\u7f6e\u4e0a\u5747\u4f1a\u62a5\u9519\n    if (loclegal == false)\n    {\n        cout &lt;&lt; \"\u8f93\u5165\u9519\u8bef\uff01\" &lt;&lt; endl;\n        setchess(n);\n    }\n    if (loclegal)\n    {\n        board[a][b] = n; // \u5982\u679c\u8f93\u5165\u6b63\u786e\uff0c\u5c31\u4e3a\u4e8c\u7ef4\u6570\u7ec4\u8d4b\u503c\uff0c\u5e76\u589e\u52a0\u68cb\u5b50\u6570\n        numb++;\n    }\n}\n\nint player::givex()\n{\n    return px;\n}\n\nint player::givey()\n{\n    return py;\n}\n\nvoid player::put_name()\n{\n    cout &lt;&lt; name;\n}\n\n// \u5224\u65ad\u6709\u65e0\u7ad6\u8fde\u7ebf\nbool win_shu(int x, int y, int chesstype)\n{\n    int count = 0;\n    bool flag = false;\n    for (int i = ((x &lt; 4) ? 0 : x - 4); i &lt;= ((x &gt; 15 - 5) ? 15 - 1 : x + 4); i++) // \u53d6\u6d88\u53cc\u5c42\u5faa\u73af\u904d\u5386\u68cb\u76d8\uff0c\u5b9e\u73b0\u8d44\u6e90\u4f18\u5316\n    {\n        if (board[i][y] == chesstype)\n            count++;\n        else\n            count = 0;\n        if (count &gt;= 5)\n        {\n            flag = true;\n            break;\n        }\n    }\n    return flag;\n}\n\n// \u5224\u65ad\u6709\u65e0\u6a2a\u8fde\u7ebf\nbool win_heng(int x, int y, int chesstype)\n{\n    int count = 0;\n    bool flag = false;\n    for (int i = ((y &lt; 4) ? 0 : y - 4); i &lt;= ((y &gt; 15 - 5) ? 15 - 1 : y + 4); i++) // \u53d6\u6d88\u53cc\u5c42\u5faa\u73af\u904d\u5386\u68cb\u76d8\uff0c\u5b9e\u73b0\u8d44\u6e90\u4f18\u5316\n    {\n        if (board[x][i] == chesstype)\n            count++;\n        else\n            count = 0;\n        if (count &gt;= 5)\n        {\n            flag = true;\n            break;\n        }\n    }\n    return flag;\n}\n\n// \u5224\u65ad\u6709\u65e0\u4e8c\u56db\u8c61\u9650\u659c\u8fde\u7ebf\nbool win_xie_1(int x, int y, int chesstype)\n{\n    int count = 0;\n    bool flag = false;\n    for (int i = ((x &gt; y) ? ((y &lt; 4) ? x - y : x - 4) : ((x &lt; 4) ? 0 : x - 4)); i &lt;= ((x &gt; y) ? ((x &gt; 15 - 5) ? 15 - 1 : x + 4) : ((y &gt; 15 - 5) ? 15 - y + x - 1 : x + 4)); i++) // \u53d6\u6d88\u53cc\u5c42\u5faa\u73af\u904d\u5386\u68cb\u76d8\uff0c\u5b9e\u73b0\u8d44\u6e90\u4f18\u5316\n    {\n        if (board[i][i + y - x] == chesstype)\n            count++;\n        else\n            count = 0;\n        if (count &gt;= 5)\n        {\n            flag = true;\n            break;\n        }\n    }\n    return flag;\n}\n\n// \u5224\u65ad\u6709\u65e0\u4e00\u4e09\u8c61\u9650\u659c\u8fde\u7ebf\nbool win_xie_2(int x, int y, int chesstype)\n{\n    int **_boardinfo = new int *[15];\n    for (int i = 0; i &lt; 15; i++)\n    {\n        _boardinfo[i] = new int[15];\n    }\n    for (int i = 0; i &lt; 15; i++)\n    {\n        for (int j = 0; j &lt; 15; j++)\n        {\n            _boardinfo[i][j] = board[i][15 - j - 1];\n        }\n    }\n    int count = 0;\n    bool flag = false;\n    y = 15 - y - 1;\n    for (int i = ((x &gt; y) ? ((y &lt; 4) ? x - y : x - 4) : ((x &lt; 4) ? 0 : x - 4)); i &lt;= ((x &gt; y) ? ((x &gt; 15 - 5) ? 15 - 1 : x + 4) : ((y &gt; 15 - 5) ? 15 - y + x - 1 : x + 4)); i++) // \u53d6\u6d88\u53cc\u5c42\u5faa\u73af\u904d\u5386\u68cb\u76d8\uff0c\u5b9e\u73b0\u8d44\u6e90\u4f18\u5316\n    {\n        if (_boardinfo[i][i + y - x] == chesstype)\n            count++;\n        else\n            count = 0;\n        if (count &gt;= 5)\n        {\n            flag = true;\n            break;\n        }\n    }\n    for (int i = 0; i &lt; 15; i++)\n    {\n        delete[] _boardinfo[i];\n    }\n    delete[] _boardinfo;\n    return flag;\n}\n\nvoid drawboard() // \u5c06\u4e0d\u540c\u73a9\u5bb6\u7684\u68cb\u76d8\u7ed8\u5236\u51fd\u6570\u5408\u5e76\uff0c\u51cf\u5c11\u4ee3\u7801\u5197\u4f59\n{\n    char sign[15][15][7];\n    for (int i = 0; i &lt; 15; i++)\n    {\n        for (int j = 0; j &lt; 15; j++)\n        {\n            if (board[i][j] == 0)\n                strcpy(sign[i][j], \"   \\0\");\n            if (board[i][j] == 1)\n                strcpy(sign[i][j], \" \u25cf \\0\");\n            if (board[i][j] == 2)\n                strcpy(sign[i][j], \" \u25cb \\0\"); // \u6839\u636e\u4e8c\u7ef4\u6570\u7ec4\u5143\u7d20\u7684\u503c\u7ed8\u5236\u5bf9\u5e94\u4f4d\u7f6e\n        }\n    }\n    printf(\"\\n\u5f53\u524d\u68cb\u76d8\u7684\u72b6\u6001\u662f\uff1a\\n\");\n    printf(\"    0   1   2   3   4   5   6   7   8   9   10  11  12  13  14\\n\");\n    printf(\"  \u250c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2510\\n\");\n    for (int i = 0, j = 0; i &lt; 14; i++, j++)\n    {\n        printf(\"%2d\u2502%3s\u2502%3s\u2502%3s\u2502%3s\u2502%3s\u2502%3s\u2502%3s\u2502%3s\u2502%3s\u2502%3s\u2502%3s\u2502%3s\u2502%3s\u2502%3s\u2502%3s\u2502%d\\n \", j, sign[i][0], sign[i][1], sign[i][2], sign[i][3], sign[i][4], sign[i][5], sign[i][6], sign[i][7], sign[i][8], sign[i][9], sign[i][10], sign[i][11], sign[i][12], sign[i][13], sign[i][14], j);\n        printf(\" \u251c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2524\\n\");\n    }\n    printf(\"14\u2502%3s\u2502%3s\u2502%3s\u2502%3s\u2502%3s\u2502%3s\u2502%3s\u2502%3s\u2502%3s\u2502%3s\u2502%3s\u2502%3s\u2502%3s\u2502%3s\u2502%3s\u2502%d\\n\", sign[14][0], sign[14][1], sign[14][2], sign[14][3], sign[14][4], sign[14][5], sign[14][6], sign[14][7], sign[14][8], sign[14][9], sign[14][10], sign[14][11], sign[14][12], sign[14][13], sign[14][14], 14);\n    printf(\"  \u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2518\\n\");\n    printf(\"    0   1   2   3   4   5   6   7   8   9   10  11  12  13  14\\n\"); // \u63d0\u793a\u8be5\u4f4d\u7f6e\u5750\u6807\n}\n\nvoid claim() // \u6709\u5173\u6e38\u620f\u7684\u90e8\u5206\u8bf4\u660e\n{\n    printf(\"\\n\u8bf7\u6ce8\u610f\uff1a\\n\u4e00\u3001\u884c\u88ab\u89c6\u4f5cx\u3002\\n\u4e8c\u3001\u5982\u679c\u60a8\u8f93\u5165\u5341\u8fdb\u5236\u6570\u636e\u4f5c\u4e3a\u4f4d\u7f6e\uff0c\u7a0b\u5e8f\u5c06\u7528\u6bd4\u5b83\u5c0f\u7684\u6700\u5927\u6574\u6570\u66ff\u6362\u5b83\u3002\\n\u793a\u4f8b\uff1a\u82e5\u60a8\u8f93\u5165\u201cx\u4e3a14.3\u201d\uff0c\u5b83\u5c06\u88ab\u89c6\u4f5c\u201cx\u4e3a14\u201d\u3002\\n\");\n    cout &lt;&lt; \"\\n\u51c6\u5907\u597d\u8fce\u63a5\u6fc0\u70c8\u7684\u6218\u6597\u5427\uff01\\n\"\n         &lt;&lt; endl;\n}\n\nint player::numb = 0; // \u7c7b\u5916\u521d\u59cb\u5316\u9759\u6001\u53d8\u91cf\n\nint main()\n{ // \u5f00\u59cb\u4e3b\u6e38\u620f\u7a0b\u5e8f\n    int flag = 0;\n    ChessBoard Chess;\n    player P[2]; // \u5c06\u73a9\u5bb6\u5bf9\u8c61\u5408\u5e76\u4e3a\u6570\u7ec4\n    int a[3] = {0};\n    bool pingju = false; // \u5224\u65ad\u662f\u5426\u5e73\u5c40\u7684\u53d8\u91cf\n\n    P[0].give_name(1);\n    P[1].give_name(2); // \u8ba9\u73a9\u5bb6\u8f93\u5165\u4ed6\u4eec\u7684\u540d\u5b57\n    P[0].pick_type();\n    P[0].show_type(); // \u68cb\u578b\u7684\u9009\u62e9\u4e0e\u663e\u793a\n    printf(\"\u90a3\u4e48\uff0c\");\n    P[1].put_name();\n    strcmp(type, \"black\") ? printf(\"\uff0c\u60a8\u5c06\u6267\u9ed1\u5b50\u3002\\n\\n\") : printf(\"\uff0c\u60a8\u5c06\u6267\u767d\u5b50\u3002\\n\\n\");\n    claim(); // \u7ec6\u679d\u672b\u8282\u7684\u63d0\u793a\n\n    if (strcmp(type, \"black\") == 0) // \u5982\u679c\u73a9\u5bb6\u4e00\u6267\u9ed1\uff0c\u4e3b\u7a0b\u5e8f\u4e3b\u4f53\n        flag = 1;\n    if (strcmp(type, \"white\") == 0) // \u5982\u679c\u73a9\u5bb6\u4e00\u6267\u767d\uff0c\u4e3b\u7a0b\u5e8f\u4e3b\u4f53\n        flag = 2;\n\n    do\n    {\n        drawboard(); // \u7ed8\u5236\u68cb\u76d8\n        P[flag - 1].setchess(flag);\n        Chess.setx(P[flag - 1].givex());\n        Chess.sety(P[flag - 1].givey()); // \u4e0b\u68cb\n        if (win_xie_1(Chess.getx(), Chess.gety(), flag) || win_shu(Chess.getx(), Chess.gety(), flag) || win_heng(Chess.getx(), Chess.gety(), flag) || win_xie_2(Chess.getx(), Chess.gety(), flag))\n        {\n            a[flag] = 1;\n            system(\"clear\");\n            drawboard();\n            break;\n        } // \u5224\u65ad\u80dc\u8d1f\n        if (ping())\n        {\n            pingju = true;\n            break;\n        }\n        system(\"clear\"); // \u6e05\u5c4f\n        Chess.show();    // \u63d0\u793a\u4e0a\u4e00\u6b65\u5bf9\u624b\u7684\u8d70\u5411\n        drawboard();\n        P[2 - flag].setchess(3 - flag);\n        Chess.setx(P[2 - flag].givex());\n        Chess.sety(P[2 - flag].givey());\n        if (win_xie_1(Chess.getx(), Chess.gety(), 3 - flag) || win_shu(Chess.getx(), Chess.gety(), 3 - flag) || win_heng(Chess.getx(), Chess.gety(), 3 - flag) || win_xie_2(Chess.getx(), Chess.gety(), 3 - flag))\n        {\n            a[3 - flag] = 1;\n            system(\"clear\");\n            drawboard();\n            break;\n        }\n        if (ping())\n        {\n            pingju = true;\n            break;\n        }\n        system(\"clear\");\n        Chess.show();\n    } while (1); // \u5faa\u73af\u7ed3\u675f\u7684\u552f\u4e8c\u6761\u4ef6\u662f\u5206\u51fa\u80dc\u8d1f\u6216\u5e73\u5c40\n\n    if (a[1] == 1) // \u5982\u679c\u73a9\u5bb61\u80dc\u5229\u7684\u60c5\u51b5\n    {\n        P[0].put_name();\n        printf(\"\u83b7\u80dc\uff01\\n\u672c\u573a\u5bf9\u5c40\u5171\u6709%d\u6b65\u68cb\u3002\\n\u611f\u8c22\u60a8\u6e38\u73a9\u672c\u6e38\u620f\u3002\u518d\u89c1\u3002\\n\", player::numb);\n    }\n    if (a[2] == 1) // \u5982\u679c\u73a9\u5bb62\u80dc\u5229\u7684\u60c5\u51b5\n    {\n        P[1].put_name();\n        printf(\"\u83b7\u80dc\uff01\\n\u672c\u573a\u5bf9\u5c40\u5171\u6709%d\u6b65\u68cb\u3002\\n\u611f\u8c22\u60a8\u6e38\u73a9\u672c\u6e38\u620f\u3002\u518d\u89c1\u3002\\n\", player::numb);\n    }\n    if (pingju)\n        printf(\"\u6700\u7ec8\u7684\u7ed3\u679c\u662f\u5e73\u5c40\uff01\\n\u672c\u573a\u5bf9\u5c40\u5171\u6709%d\u6b65\u68cb\u3002\\n\u611f\u8c22\u60a8\u6e38\u73a9\u672c\u6e38\u620f\u3002\u518d\u89c1\u3002\\n\", player::numb);\n    return 0;\n}\n</code></pre>"},{"location":"coursework/cpd/3/01/","title":"Python\u8bfe\u7a0b\u4f5c\u4e1a_2023\u5c0f\u5b66\u671f-\u7b2c\u4e00\u6b21\u4f5c\u4e1a","text":""},{"location":"coursework/cpd/3/01/#python\u8bfe\u7a0b\u4f5c\u4e1a_2023\u5c0f\u5b66\u671f-\u7b2c\u4e00\u6b21\u4f5c\u4e1a","title":"Python\u8bfe\u7a0b\u4f5c\u4e1a_2023\u5c0f\u5b66\u671f-\u7b2c\u4e00\u6b21\u4f5c\u4e1a","text":""},{"location":"coursework/cpd/3/01/#\u4e70\u8f66\u95ee\u9898","title":"\u4e70\u8f66\u95ee\u9898","text":"<p>\u5047\u8bbe\u7528\u6237\u8981\u4e70\u4e00\u8f86\u6c7d\u8f66\uff0c\u603b\u4ef730000\u5143\uff0c\u7528\u6237\u5c06\u6309\u71670\u5143\u9996\u4ed8\u53ca\u6bcf\u6708\u7b49\u989d\u5206\u671f\u4ed8\u6b3e\u7684\u65b9\u5f0f\u8fdb\u884c\u8d2d\u4e70\uff0c\u5e74\u8d37\u6b3e\u5229\u7387\u4e3a7%\uff0c\u8ba1\u521260\u4e2a\u6708\u8fd8\u6e05\uff0c\u8bf7\u8ba1\u7b97\u7528\u6237\u6bcf\u4e2a\u6708\u9700\u8981\u8fd8\u94f6\u884c\u8d37\u6b3e\u7684\u6570\u989d\u3002</p> <p>\u5177\u4f53\u8981\u6c42\uff1a \u2460\u4ece\u952e\u76d8\u8f93\u5165\u5404\u9879\u53c2\u6570\uff0c\u4ee5\u56de\u8f66\u952e\u6216\u7a7a\u683c\u952e\u4f5c\u4e3a\u8f93\u5165\u7ed3\u675f\u6807\u5fd7\u3002\u6700\u540e\u4e00\u4e2a\u8f93\u5165\u7ed3\u675f\u540e\uff0c\u7a0b\u5e8f\u81ea\u52a8\u663e\u793a\u8ba1\u7b97\u7ed3\u679c\u3002 \u2461\u8f93\u5165\u548c\u8f93\u51fa\u8981\u6709\u9002\u5f53\u7684\u6587\u5b57\u63d0\u793a\u3002 \u2462\u9644\u52a0\u4efb\u52a1\uff08\u4f9b\u53c2\u8003\u9009\u505a\uff0c\u4e0d\u52a0\u5206\uff09\uff1a\u5904\u7406\u5e26\u6709\u6c49\u5b57\u7684\u8f93\u5165\u5185\u5bb9\uff1b\u4ece\u6587\u4ef6\u5bfc\u5165\u591a\u4e2a\u7528\u6237\u7684\u72b6\u51b5\u8fdb\u884c\u6279\u91cf\u8ba1\u7b97\u5e76\u5c06\u7ed3\u679c\u4fdd\u5b58\u5230\u65b0\u6587\u4ef6\uff1b\u8ba1\u7b97\u7ed3\u679c\u975e\u6574\u5e74\u65f6\uff0c\u5c06\u7ed3\u679c\u7cbe\u5ea6\u8fd1\u4f3c\u5230\u6708\u4efd\u3002</p> <p>\u5168\u90e8\u8981\u6c42\uff08\u5305\u62ec\u9644\u52a0\u4efb\u52a1\uff09\u5df2\u5168\u90e8\u5b9e\u73b0\u3002</p> <pre><code># \u8ba1\u7b97\u6bcf\u6708\u8fd8\u6b3e\u989d\ndef monthly_payment(total_price, annual_rate, months):\n    monthly_rate = annual_rate / 12\n    payment = total_price * monthly_rate * (1 + monthly_rate) ** months / ((1 + monthly_rate) ** months - 1)\n    return payment\n\n# \u5904\u7406\u5e26\u6709\u6c49\u5b57\u7684\u8f93\u5165\u5185\u5bb9\ndef handle_chinese(input_str):\n    output_str = \"\"\n    for char in input_str:\n        if '\\u4e00' &lt;= char &lt;= '\\u9fff':\n            continue\n        else:\n            output_str += char\n    return output_str\n\n# \u4ece\u6587\u4ef6\u5bfc\u5165\u591a\u4e2a\u7528\u6237\u7684\u72b6\u51b5\u8fdb\u884c\u6279\u91cf\u8ba1\u7b97\u5e76\u5c06\u7ed3\u679c\u4fdd\u5b58\u5230\u65b0\u6587\u4ef6\ndef batch_calculation(input_file, output_file):\n    with open(input_file, \"r\") as f_in:\n        with open(output_file, \"w\") as f_out:\n            header = f_in.readline()\n            f_out.write(header)\n            for line in f_in:\n                data = line.strip().split(\",\")\n                total_price = float(data[0])\n                annual_rate = float(data[1])\n                months = int(data[2])\n                payment = round(monthly_payment(total_price, annual_rate, months), 2)\n                data.append(str(payment))\n                result = \",\".join(data)\n                f_out.write(result + \"\\n\")\n\nprint(\"\u4e70\u8f66\u95ee\u9898\")\n\nbatch = input(\"\u662f\u5426\u9700\u8981\u4ece\u6587\u4ef6\u5bfc\u5165\u591a\u4e2a\u7528\u6237\u7684\u72b6\u51b5\u8fdb\u884c\u6279\u91cf\u8ba1\u7b97\u5e76\u5c06\u7ed3\u679c\u4fdd\u5b58\u5230\u65b0\u6587\u4ef6\uff1f[Y/N]\")\nif batch == \"Y\" or batch == \"y\":\n    input_file = input(\"\u8bf7\u8f93\u5165\u8f93\u5165\u6587\u4ef6\u540d\uff1a\")\n    try:\n        f_in = open(input_file, \"r\")\n        f_in.close()\n    except FileNotFoundError:\n        print(\"\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165\uff01\")\n        exit()\n    output_file = input(\"\u8bf7\u8f93\u5165\u8f93\u51fa\u6587\u4ef6\u540d\uff1a\")\n    if output_file == input_file:\n        print(\"\u6587\u4ef6\u540d\u91cd\u590d\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165\uff01\")\n        exit()\n    batch_calculation(input_file, output_file)\n    print(\"\u6279\u91cf\u8ba1\u7b97\u5b8c\u6210\uff0c\u7ed3\u679c\u5df2\u4fdd\u5b58\u5230{}\u6587\u4ef6\u4e2d\u3002\".format(output_file))\nelif batch == \"N\" or batch == \"n\":\n    print(\"\u8bf7\u8f93\u5165\u4ee5\u4e0b\u53c2\u6570\uff0c\u4ee5\u56de\u8f66\u952e\u6216\u7a7a\u683c\u952e\u4f5c\u4e3a\u8f93\u5165\u7ed3\u675f\u6807\u5fd7\u3002\")\n\n    total_price_str = input(\"\u8bf7\u8f93\u5165\u6c7d\u8f66\u603b\u4ef7\uff08\u5143\uff09\uff1a\")\n    total_price_str = handle_chinese(total_price_str)\n    total_price = float(total_price_str)\n    if total_price &lt;= 0:\n        print(\"\u8f93\u5165\u9519\u8bef\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165\uff01\")\n        exit()\n    annual_rate_str = input(\"\u8bf7\u8f93\u5165\u5e74\u8d37\u6b3e\u5229\u7387\uff08%\uff09\uff1a\")\n    annual_rate_str = handle_chinese(annual_rate_str)\n    annual_rate = float(annual_rate_str)\n    if annual_rate &lt;= 0 or annual_rate &gt;= 100:\n        print(\"\u8f93\u5165\u9519\u8bef\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165\uff01\")\n        exit()\n    annual_rate = annual_rate / 100\n    months_str = input(\"\u8bf7\u8f93\u5165\u8ba1\u5212\u8fd8\u6b3e\u6708\u6570\uff1a\")\n    months_str = handle_chinese(months_str)\n    months = int(months_str)\n    if months &lt;= 0:\n        print(\"\u8f93\u5165\u9519\u8bef\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165\uff01\")\n        exit()\n    payment = round(monthly_payment(total_price, annual_rate, months), 2)\n    print(\"\u60a8\u6bcf\u4e2a\u6708\u9700\u8981\u8fd8\u94f6\u884c\u8d37\u6b3e\u7684\u6570\u989d\u4e3a\uff1a{}\u5143\".format(payment))\nelse:\n    print(\"\u8f93\u5165\u9519\u8bef\uff01\")\n</code></pre>"},{"location":"coursework/cpd/3/02/","title":"Python\u8bfe\u7a0b\u4f5c\u4e1a_2023\u5c0f\u5b66\u671f-\u7b2c\u4e8c\u6b21\u4f5c\u4e1a","text":""},{"location":"coursework/cpd/3/02/#python\u8bfe\u7a0b\u4f5c\u4e1a_2023\u5c0f\u5b66\u671f-\u7b2c\u4e8c\u6b21\u4f5c\u4e1a","title":"Python\u8bfe\u7a0b\u4f5c\u4e1a_2023\u5c0f\u5b66\u671f-\u7b2c\u4e8c\u6b21\u4f5c\u4e1a","text":""},{"location":"coursework/cpd/3/02/#\u8bfb\u53d6\u90ae\u7bb1\u6570\u636e","title":"\u8bfb\u53d6\u90ae\u7bb1\u6570\u636e","text":"<p>\u7f16\u5199\u4e00\u4e2a\u8bfb\u53d6\u90ae\u7bb1\u6570\u636e\u7684\u7a0b\u5e8f\uff1a\u5728<code>mbox.txt</code>\u6587\u4ef6\u4e2d\u641c\u7d22\uff0c\u5f53\u627e\u5230\u4ee5\u201c<code>From</code>\u201d\u548c\u201c<code>From:</code>\u201d\u5f00\u5934\u7684\u884c\u65f6\uff0c\u4ece\u8be5\u884c\u4e2d\u63d0\u53d6\u90ae\u7bb1\u5730\u5740\uff0c\u4f7f\u7528\u5b57\u5178<code>dictionary</code>\u6765\u8ba1\u7b97\u6bcf\u4e2a \u90ae\u7bb1\u53d1\u9001\u7684\u6d88\u606f\u6570\u3002\u8bfb\u53d6\u5b8c<code>mbox.txt</code>\u4e2d\u7684\u6240\u6709\u6570\u636e\u540e\uff0c\u8f93\u51fa\u53d1\u9001\u6d88\u606f\u6570\u6700\u591a\u7684\u90ae\u7bb1\u7684\u5730\u5740\u3002</p> <p>\u5177\u4f53\u8981\u6c42\uff1a \u2460\u9644\u52a0\u4efb\u52a1\uff08\u4f9b\u53c2\u8003\u9009\u505a\uff0c\u4e0d\u52a0\u5206\uff09\uff1a\u8f93\u51fa\u6240\u6709\u53d1\u9001\u6d88\u606f\u7684\u90ae\u7bb1\u5730\u5740\uff0c\u5e76\u6309\u9996\u5b57\u6bcd\u8868\u5347\u5e8f\u6392\u5217\uff0c\u4e0d\u8ba1\u5927\u5c0f\u5199\u3002</p> <pre><code>f = open('mbox.txt', 'r')\n\ndictionary = {}\n\nfor line in f:\n    line = line.rstrip()\n    if line.startswith('From') or line.startswith('From:'):\n        email = line.split()[1]\n        if email in dictionary:\n            dictionary[email] += 1\n        else:\n            dictionary[email] = 1\n\nf.close()\n\nemails = []\n\nfor key in dictionary:\n    emails.append(key)\n\nemails.sort(key=lambda x: x.lower())\n\nprint('\u6240\u6709\u53d1\u9001\u6d88\u606f\u7684\u90ae\u7bb1\u5730\u5740\uff1a')\nfor email in emails:\n    print(email)\n\nmax_count = 0\n\nmax_email = ''\n\nfor key, value in dictionary.items():\n    if value &gt; max_count:\n        max_count = value\n        max_email = key\n\nprint('\u53d1\u9001\u6d88\u606f\u6570\u6700\u591a\u7684\u90ae\u7bb1\u5730\u5740\uff1a', max_email)\nprint('\u53d1\u9001\u7684\u6d88\u606f\u6570\uff1a', max_count)\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c\uff1a</p> <pre><code>\u6240\u6709\u53d1\u9001\u6d88\u606f\u7684\u90ae\u7bb1\u5730\u5740\uff1a\na.fish@lancaster.ac.uk\naaronz@vt.edu\najpoland@iupui.edu\nantranig@caret.cam.ac.uk\narwhyte@umich.edu\nbahollad@indiana.edu\nbkirschn@umich.edu\nchmaurer@iupui.edu\ncolin.clark@utoronto.ca\ncsev@umich.edu\ncwen@iupui.edu\ndavid.horwitz@uct.ac.za\ndlhaines@umich.edu\ngbhatnag@umich.edu\nggolden@umich.edu\ngjthomas@iupui.edu\ngopal.ramasammycook@gmail.com\ngsilver@umich.edu\nhu2@iupui.edu\nian@caret.cam.ac.uk\njimeng@umich.edu\njleasia@umich.edu\njlrenfro@ucdavis.edu\njohn.ellis@rsmart.com\njosrodri@iupui.edu\njzaremba@unicon.net\nkimsooil@bu.edu\nknoop@umich.edu\nktsao@stanford.edu\nlance@indiana.edu\nlouis@media.berkeley.edu\nmbreuker@loi.nl\nmmmay@indiana.edu\nnuno@ufp.pt\nostermmg@whitman.edu\nray@media.berkeley.edu\nrjlowe@iupui.edu\nsgithens@caret.cam.ac.uk\nssmail@indiana.edu\nstephen.marquard@uct.ac.za\nstuart.freeman@et.gatech.edu\nthoppaymallika@fhda.edu\ntnguyen@iupui.edu\nwagnermr@iupui.edu\nzach.thomas@txstate.edu\nzqian@umich.edu\n\u53d1\u9001\u6d88\u606f\u6570\u6700\u591a\u7684\u90ae\u7bb1\u5730\u5740\uff1a zqian@umich.edu\n\u53d1\u9001\u7684\u6d88\u606f\u6570\uff1a 390\n</code></pre>"},{"location":"coursework/cpd/3/03/","title":"Python\u8bfe\u7a0b\u4f5c\u4e1a_ 2023\u5c0f\u5b66\u671f-\u7b2c\u4e09\u6b21\u4f5c\u4e1a","text":""},{"location":"coursework/cpd/3/03/#python\u8bfe\u7a0b\u4f5c\u4e1a_-2023\u5c0f\u5b66\u671f-\u7b2c\u4e09\u6b21\u4f5c\u4e1a","title":"Python\u8bfe\u7a0b\u4f5c\u4e1a_ 2023\u5c0f\u5b66\u671f-\u7b2c\u4e09\u6b21\u4f5c\u4e1a","text":""},{"location":"coursework/cpd/3/03/#\u52a0\u5bc6\u89e3\u5bc6","title":"\u52a0\u5bc6\u89e3\u5bc6","text":"<p>\u4f7f\u7528\u9762\u5411\u5bf9\u8c61\u7684\u7f16\u7a0b\u5b9e\u73b0\u52a0\u5bc6\u89e3\u5bc6\uff1a\u5c06\u4e00\u4e2a\u957f\u5ea6\u4e0d\u5c0f\u4e8e10\u7684\u82f1\u6587\u5b57\u7b26\u4e32\u8f93\u5165\uff0c\u7528\u6237\u9009\u62e9\u4efb\u610f\u4e00\u4e2a\u6574\u6570<code>K</code>\uff0c\u5b9e\u73b0\u5c06\u82f1\u6587\u5b57\u7b26\u4e32\u539f\u6587\u4e2d\u7684\u6bcf\u4e2a\u5b57\u6bcd(\u4f8b\u5982<code>A</code>)\u66ff\u6362\u4e3a26\u4e2a\u82f1\u6587\u5b57\u6bcd\u4e2d<code>A</code>\u4e4b\u540e\u7684\u7b2c<code>K</code>\u4e2a\u4f4d\u7f6e\u7684\u5b57\u6bcd(\u4f8b\u5982<code>K=2</code>\u65f6<code>A</code>\u66ff\u6362\u4e3a<code>C</code>)\uff0c\u6807\u70b9\u548c\u7a7a\u683c\u4e0d\u66f4\u6539\uff1b\u968f\u540e\u5bf9\u52a0\u5bc6\u540e\u7684\u4fe1\u606f\u8fdb\u884c\u89e3\u5bc6\u3002</p> <p>\u5177\u4f53\u8981\u6c42\uff1a \u2460\u4ece\u952e\u76d8\u8f93\u5165\u6574\u6570<code>K</code>\u5bf9\u4e0d\u5408\u6cd5\u7684\u8f93\u5165\u8fdb\u884c\u5904\u7406\u3002\u8f93\u5165<code>K</code>\u540e\uff0c\u7a0b\u5e8f\u81ea\u52a8\u663e\u793a\u52a0\u5bc6\u53ca\u89e3\u5bc6\u7ed3\u679c\u3002 \u2461\u8981\u6c42\u80fd\u591f\u5904\u7406\u5b57\u6bcd\u66ff\u6362\u7684\u5faa\u73af\uff08\u5982<code>z+1=a</code>\uff09\uff0c\u4ee5\u53ca\u5927\u5c0f\u5199\u60c5\u51b5\u3002</p> <pre><code># \u52a0\u5bc6\u89e3\u5bc6\u7c7b\nclass Cipher:\n    def __init__(self, text, K):\n        self.text = text # \u539f\u6587\n        self.K = K # \u79fb\u4f4d\u6570\n        self.cipher = \"\" # \u5bc6\u6587\n        self.plain = \"\" # \u89e3\u5bc6\u540e\u7684\u660e\u6587\n\n    # \u52a0\u5bc6\u65b9\u6cd5\n    def encrypt(self):\n        for char in self.text:\n            if char.isalpha():\n                if char.isupper():\n                    new_char = chr((ord(char) - ord('A') + self.K) % 26 + ord('A'))\n                else:\n                    new_char = chr((ord(char) - ord('a') + self.K) % 26 + ord('a'))\n            else:\n                new_char = char\n            self.cipher += new_char\n        return self.cipher\n\n    # \u89e3\u5bc6\u65b9\u6cd5\n    def decrypt(self):\n        for char in self.cipher:\n            if char.isalpha():\n                if char.isupper():\n                    new_char = chr((ord(char) - ord('A') - self.K) % 26 + ord('A'))\n                else:\n                    new_char = chr((ord(char) - ord('a') - self.K) % 26 + ord('a'))\n            else:\n                new_char = char\n            self.plain += new_char\n        return self.plain\n\ntext = input(\"\u8bf7\u8f93\u5165\u4e00\u4e2a\u957f\u5ea6\u4e0d\u5c0f\u4e8e 10 \u7684\u82f1\u6587\u5b57\u7b26\u4e32\uff1a\")\n\nwhile True:\n    try:\n        K = int(input(\"\u8bf7\u8f93\u5165\u4e00\u4e2a\u6574\u6570 K\uff1a\"))\n        break\n    except ValueError:\n        print(\"\u8f93\u5165\u9519\u8bef\uff0c\u8bf7\u8f93\u5165\u4e00\u4e2a\u6574\u6570\uff01\")\n\ncipher = Cipher(text, K)\nprint(\"\u52a0\u5bc6\u540e\u7684\u7ed3\u679c\u662f\uff1a\", cipher.encrypt())\nprint(\"\u89e3\u5bc6\u540e\u7684\u7ed3\u679c\u662f\uff1a\", cipher.decrypt())\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c\uff1a</p> <p>\u8f93\u5165</p> <pre><code>\u8bf7\u8f93\u5165\u4e00\u4e2a\u957f\u5ea6\u4e0d\u5c0f\u4e8e 10 \u7684\u82f1\u6587\u5b57\u7b26\u4e32\uff1aTsinghua Unversity? Peking University!\n\u8bf7\u8f93\u5165\u4e00\u4e2a\u6574\u6570 K\uff1a6\n</code></pre> <p>\u8f93\u51fa</p> <pre><code>\u52a0\u5bc6\u540e\u7684\u7ed3\u679c\u662f\uff1a Zyotmnag Atbkxyoze? Vkqotm Atobkxyoze!\n\u89e3\u5bc6\u540e\u7684\u7ed3\u679c\u662f\uff1a Tsinghua Unversity? Peking University!\n</code></pre>"},{"location":"coursework/cpd/3/ex/","title":"Index","text":"Python\u9644\u52a0\u4f5c\u4e1a\u5b9e\u9a8c\u62a5\u544a"},{"location":"coursework/cpd/3/ex/#\u8c03\u67e5\u95ee\u5377","title":"\u8c03\u67e5\u95ee\u5377","text":"<p>\u4f7f\u7528<code>Python</code>\u8bed\u8a00\u8bbe\u8ba1\u4e00\u4e2a\u8c03\u67e5\u95ee\u5377\uff0c\u8c03\u67e5\u95ee\u5377\u9700\u6709\u7528\u6237\u754c\u9762\uff08\u6837\u5f0f\u4e0d\u9650\uff09\uff0c\u754c\u9762\u4e0a\u663e\u793a\u8c03\u67e5\u95ee\u5377\u95ee\u9898\uff0c\u5982\uff0c\u60a8\u7684\u59d3\u540d\u3001\u60a8\u7684\u5e74\u9f84\u3001\u60a8\u7684\u5b66\u53f7\u7b49\u95ee\u9898\u63d0\u793a\uff1b\u7528\u6237\u80fd\u591f\u4ee5\u586b\u7a7a\u3001\u5355\u9009\u3001\u591a\u9009\u7b49\u5f62\u5f0f\u8f93\u5165\u4e2d\u6587/\u82f1\u6587/\u6570\u5b57\u7b49\u5404\u7c7b\u4fe1\u606f\uff0c\u5e76\u53ef\u4ee5\u4e0a\u4f20\u6587\u4ef6\uff1b\u754c\u9762\u6709\u62a5\u9519\u529f\u80fd\uff0c\u5982\u5355\u9009\u9898\u591a\u9009\u5219\u62a5\u9519\u5e76\u63d0\u793a\u7528\u6237\u3002\u5bf9\u5355\u9009\u9898\u548c\u591a\u9009\u9898\u4ee5\u56fe\u8868\u7684\u5f62\u5f0f\uff08\u6837\u5f0f\u4e0d\u9650\uff09\u663e\u793a\u7edf\u8ba1\u7ed3\u679c\u3002</p> <p>\u5907\u6ce8\uff1a</p> <p>\u2460 \u5b9e\u9a8c\u62a5\u544a\u548c\u4ee3\u7801\u6253\u5305\u4e0a\u4f20info\uff0c\u538b\u7f29\u5305\u6587\u4ef6\u540d\u4e3a\uff1a\u59d3\u540d+\u5b66\u53f7+\u9644\u52a0\u98981\uff1b</p> <p>\u2461 \u5b9e\u9a8c\u62a5\u544a\u542b\u6709\u8c03\u67e5\u95ee\u5377\u5185\u5bb9\u53ca\u754c\u9762\u4f7f\u7528\u65b9\u6cd5\u7684\u8be6\u7ec6\u8bf4\u660e\u3002</p>"},{"location":"coursework/cpd/3/ex/#\u8c03\u67e5\u95ee\u5377\u5185\u5bb9","title":"\u8c03\u67e5\u95ee\u5377\u5185\u5bb9","text":"<p>__\u95ee\u5377\u6807\u9898\uff1a__\u8ba1\u7b97\u673a\u7a0b\u5e8f\u8bbe\u8ba1\u8c03\u67e5\u95ee\u5377</p> <p>\u95ee\u5377\u5185\u5bb9\uff1a</p> <ol> <li>\u60a8\u7684\u59d3\u540d\uff08\u7c7b\u578b\uff1a\u6587\u672c\uff09\uff1b</li> <li>\u60a8\u7684\u5e74\u9f84\uff08\u7c7b\u578b\uff1a\u6570\u5b57\uff09\uff1b</li> <li>\u60a8\u7684\u5b66\u53f7\uff08\u7c7b\u578b\uff1a\u6587\u672c\uff09\uff1b</li> <li>\u60a8\u7684\u6027\u522b\uff08\u7c7b\u578b\uff1a\u5355\u9009\uff1b\u9009\u9879\uff1a\u7537\u6027\u3001\u5973\u6027\u3001\u5176\u4ed6\uff09\uff1b</li> <li>\u60a8\u7684\u5e74\u7ea7\uff08\u7c7b\u578b\uff1a\u5355\u9009\uff1b\u9009\u9879\uff1a\u5927\u4e00\u3001\u5927\u4e8c\u3001\u5927\u4e09\u3001\u5927\u56db\u3001\u5176\u4ed6\uff09\uff1b</li> <li>\u60a8\u4f7f\u7528\u7684\u7f16\u7a0b\u8bed\u8a00\uff08\u7c7b\u578b\uff1a\u591a\u9009\uff1b\u9009\u9879\uff1a<code>Python</code>\u3001<code>Java</code>\u3001<code>C++</code>\u3001<code>JavaScript</code>\u3001<code>C</code>\u3001<code>C#</code>\u3001\u5176\u4ed6\uff09\uff1b</li> <li>\u60a8\u7684\u4ee3\u8868\u4f5c\u54c1\uff08\u7c7b\u578b\uff1a\u6587\u4ef6\uff09</li> </ol>"},{"location":"coursework/cpd/3/ex/#\u754c\u9762\u4f7f\u7528\u65b9\u6cd5","title":"\u754c\u9762\u4f7f\u7528\u65b9\u6cd5","text":"<p>\u8bf7\u5c06\u6e90\u4ee3\u7801\u6587\u4ef6\u6309\u4ee5\u4e0b\u76ee\u5f55\u6392\u5217\uff1a</p> <pre><code>Project\n\u251c\u2500\u2500 extra1.py\n\u2514\u2500\u2500 templates\n    \u2514\u2500\u2500 index.html\n    \u2514\u2500\u2500 result.html\n</code></pre> <p>\u5efa\u8bae\u4f7f\u7528<code>Linux</code>\u73af\u5883\u8fd0\u884c\u672c\u7a0b\u5e8f\uff0c\u5e76\u5b89\u88c5\u3001\u914d\u7f6e\u5b8c\u6210\u201c\u4e2d\u6613\u5b8b\u4f53\u201d\uff08<code>simsun.ttc</code>\uff09\u3002</p> <p>\u5728\u8fd0\u884c\u7a0b\u5e8f\u524d\uff0c\u8bf7\u5148\u5728\u8ba1\u7b97\u673a\u4e2d\u5b89\u88c5<code>matplotlib</code>\u3001<code>pandas</code>\u3001 <code>Flask</code>\u5e93\uff0c\u5e76\u4fdd\u8bc1\u7f51\u7edc\u901a\u7545\uff08\u5426\u5219\u53ef\u80fd\u65e0\u6cd5\u52a0\u8f7d<code>CSS</code>\u3001<code>JS</code>\u3001<code>jQuery</code>\u7b49\u6587\u4ef6\u5bfc\u81f4\u7f51\u9875\u6837\u5f0f\u5f02\u5e38\uff09\u3002</p> <p>\u5728\u8fd0\u884c\u7a0b\u5e8f\u65f6\uff0c\u4ec5\u9700\u8fd0\u884c<code>extra1.py</code>\uff0c\u7136\u540e\u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00<code>http://localhost:5000</code>\uff08\u5efa\u8bae\u4f7f\u7528\u8f83\u65b0\u7684<code>Chromium</code>\u5185\u6838\u7684\u6d4f\u89c8\u5668\u6216<code>Firefox</code>\u6d4f\u89c8\u5668\uff09\u3002</p> <p>\u5728\u8fd0\u884c\u7a0b\u5e8f\u65f6\uff0c\u586b\u5199\u5b8c\u95ee\u5377\u540e\u4f1a\u81ea\u52a8\u8df3\u8f6c\u81f3<code>http://localhost:5000/result</code>\u9875\u9762\u663e\u793a\u95ee\u5377\u7ed3\u679c\u3002\u6b64\u65f6\u53ef\u4ee5\u7ee7\u7eed\u6253\u5f00<code>http://localhost:5000</code>\u586b\u5199\u53e6\u4e00\u4efd\u95ee\u5377\uff0c\u4e5f\u53ef\u4ee5\u968f\u65f6\u6253\u5f00<code>http://localhost:5000/result</code>\u67e5\u770b\u95ee\u5377\u7ed3\u679c\u3002</p> <p>\u4e0a\u4f20\u7684\u6587\u4ef6\u4ee5\u53ca\u751f\u6210\u7684\u56fe\u8868\u4fdd\u5b58\u5728<code>resources</code>\u6587\u4ef6\u5939\u4e2d\u3002</p> <p>\u9700\u8981\u5173\u95ed\u7a0b\u5e8f\u65f6\uff0c\u8bf7\u5728\u8fd0\u884c\u8be5\u7a0b\u5e8f\u7684\u7ec8\u7aef\u4e2d\u6309\u4e0b<code>Ctrl + C</code>\u3002</p> <p>\u4e00\u4e9b\u622a\u56fe\uff1a</p> <p></p> <p></p> <p></p> <p></p> <p>\u4e0a\u56fe\u51fa\u73b0\u7684\u5b57\u4f53\u663e\u793a\u5f02\u5e38\u662f\u672a\u5b89\u88c5\u4e2d\u6587\u5b57\u4f53\u5bfc\u81f4\u7684\u3002</p>"},{"location":"coursework/cpd/3/ex/#\u9644\u5f55\u6e90\u4ee3\u7801\u6e05\u5355","title":"\u9644\u5f55\uff1a\u6e90\u4ee3\u7801\u6e05\u5355","text":""},{"location":"coursework/cpd/3/ex/#extra1py","title":"<code>extra1.py</code>","text":"<pre><code>from flask import Flask, render_template, request, redirect, url_for, make_response\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\napp = Flask(__name__)\n\n# \u95ee\u5377\u7684\u95ee\u9898\u548c\u9009\u9879\nquestions = [\n    {\n        \"id\": 1,\n        \"type\": \"text\",\n        \"text\": \"\u60a8\u7684\u59d3\u540d\",\n        \"required\": True,\n        \"options\": None\n    },\n    {\n        \"id\": 2,\n        \"type\": \"number\",\n        \"text\": \"\u60a8\u7684\u5e74\u9f84\",\n        \"required\": True,\n        \"options\": None\n    },\n    {\n        \"id\": 3,\n        \"type\": \"text\",\n        \"text\": \"\u60a8\u7684\u5b66\u53f7\",\n        \"required\": True,\n        \"options\": None\n    },\n    {\n        \"id\": 4,\n        \"type\": \"radio\",\n        \"text\": \"\u60a8\u7684\u6027\u522b\",\n        \"required\": True,\n        \"options\": [\"\u7537\u6027\", \"\u5973\u6027\", \"\u5176\u4ed6\"]\n    },\n    {\n        \"id\": 5,\n        \"type\": \"radio\",\n        \"text\": \"\u60a8\u7684\u5e74\u7ea7\",\n        \"required\": True,\n        \"options\": [\"\u5927\u4e00\", \"\u5927\u4e8c\", \"\u5927\u4e09\", \"\u5927\u56db\", \"\u7814\u7a76\u751f\"]\n    },\n    {\n        \"id\": 6,\n        \"type\": \"checkbox\",\n        \"text\": \"\u60a8\u4f7f\u7528\u7684\u7f16\u7a0b\u8bed\u8a00\",\n        \"required\": False,\n        \"options\": [\"Python\", \"Java\", \"C++\", \"JavaScript\", \"C\", \"C#\", \"\u5176\u4ed6\"]\n    },\n    {\n        \"id\": 7,\n        \"type\": \"file\",\n        \"text\": \"\u60a8\u7684\u4ee3\u8868\u4f5c\u54c1\",\n        \"required\": False,\n        \"options\": None\n    }\n]\n\nresults = pd.DataFrame()\n\ndef hide_zero(pct):\n    if pct == 0:\n        return \" \"\n    else:\n        return f\"{pct:.1f}%\"\n\n@app.route(\"/\")\ndef index():\n    return render_template(\"index.html\", questions=questions)\n\n@app.route(\"/submit\", methods=[\"POST\"])\ndef submit():\n    global results\n    data = {}\n    for question in questions:\n        qid = question[\"id\"]\n        qtype = question[\"type\"]\n        if qtype == \"text\" or qtype == \"number\":\n            value = request.form.get(str(qid))\n            data[qid] = value\n        elif qtype == \"radio\":\n            # value = request.form.get(str(qid))\n            # data[qid] = value\n            # if not value:\n            #     return f\"Please Check Question {qid}: {question['text']}\"\n            values = request.form.getlist(str(qid))\n            data[qid] = values\n            if values and values[-1] == '\u5176\u4ed6':\n                other_value = request.form.get(str(qid) + \"_other\")\n                # data[qid].append(other_value)  # \u5c06\u5176\u4ed6\u9009\u9879\u7684\u503c\u6dfb\u52a0\u5230\u5217\u8868\u4e2d\n                data[qid][-1] = other_value\n                # \u5982\u679c\u7528\u6237\u6ca1\u6709\u8f93\u5165'\u5176\u4ed6'\u9009\u9879\u7684\u503c\uff0c\u62a5\u9519\u5e76\u63d0\u793a\u7528\u6237\n                if not other_value:\n                    return f\"\u8bf7\u8f93\u5165\u95ee\u9898{qid}\uff1a{question['text']}\u7684\u201c\u5176\u4ed6\u201d\u9009\u9879\u7684\u503c\uff01\"\n        elif qtype == \"checkbox\":\n            values = request.form.getlist(str(qid))\n            data[qid] = values\n            if values and values[-1] == '\u5176\u4ed6':\n                other_value = request.form.get(str(qid) + \"_other\")\n                # data[qid].append(other_value)  # \u5c06\u5176\u4ed6\u9009\u9879\u7684\u503c\u6dfb\u52a0\u5230\u5217\u8868\u4e2d\n                data[qid][-1] = other_value\n                # \u5982\u679c\u7528\u6237\u6ca1\u6709\u8f93\u5165'\u5176\u4ed6'\u9009\u9879\u7684\u503c\uff0c\u62a5\u9519\u5e76\u63d0\u793a\u7528\u6237\n                if not other_value:\n                    return f\"\u8bf7\u8f93\u5165\u95ee\u9898{qid}\uff1a{question['text']}\u7684\u201c\u5176\u4ed6\u201d\u9009\u9879\u7684\u503c\uff01\"\n        elif qtype == \"file\":\n            file = request.files.get(str(qid))  # \u83b7\u53d6\u7528\u6237\u4e0a\u4f20\u7684\u6587\u4ef6\u5bf9\u8c61\n            if file:  # \u5982\u679c\u6587\u4ef6\u5bf9\u8c61\u5b58\u5728\uff0c\u4fdd\u5b58\u6587\u4ef6\u5230\u672c\u5730\uff0c\u5e76\u5c06\u6587\u4ef6\u540d\u6dfb\u52a0\u5230\u5b57\u5178\u4e2d\n                filename = file.filename\n                file.save(f\"./resources/{filename}\")\n                data[qid] = filename\n            else:  # \u5982\u679c\u6587\u4ef6\u5bf9\u8c61\u4e0d\u5b58\u5728\uff0c\u5c06None\u6dfb\u52a0\u5230\u5b57\u5178\u4e2d\n                data[qid] = None\n    series = pd.Series(data)\n    results = results.append(series, ignore_index=True)\n    # \u91cd\u5b9a\u5411\u5230\u7ed3\u679c\u754c\u9762\n    return redirect(url_for('result'))\n\n@app.route(\"/result\")\ndef result():\n    global results\n    # \u7ed3\u679c\u4e3a\u7a7a\n    if results.empty:\n        return \"\u65e0\u6570\u636e\"\n    # \u5426\u5219\uff0c\u751f\u6210\u56fe\u8868\u5e76\u663e\u793a\u7ed3\u679c\n    else:\n        # \u5bf9\u5355\u9009\u9898\u548c\u591a\u9009\u9898\u8fdb\u884c\u7edf\u8ba1\uff0c\u5e76\u751f\u6210\u997c\u56fe\n        for question in questions:\n            qid = question[\"id\"]\n            qtype = question[\"type\"]\n            # \u5982\u679c\u662f\u5355\u9009\u9898\u6216\u591a\u9009\u9898\uff0c\u8fdb\u884c\u7edf\u8ba1\n            if qtype == \"radio\" or qtype == \"checkbox\":\n                # \u83b7\u53d6\u95ee\u9898\u7684\u9009\u9879\n                options = question[\"options\"]\n                # \u521b\u5efa\u4e00\u4e2a\u7a7a\u7684Series\u5bf9\u8c61\uff0c\u7528\u4e8e\u5b58\u50a8\u7edf\u8ba1\u7ed3\u679c\n                counts = pd.Series([0] * len(options), index=options)\n                for i, row in results.iterrows():\n                    values = row[qid]\n                    if values:\n                        for value in values:\n                            if value not in counts.index:\n                                counts[value] = 0\n                            counts[value] += 1\n                # \u751f\u6210\u997c\u56fe\uff0c\u5e76\u4fdd\u5b58\u4e3a\u56fe\u7247\u6587\u4ef6\uff0c\u6587\u4ef6\u540d\u4e3a\u95ee\u9898\u7684id\n                plt.rcParams['font.sans-serif'] = ['SimSun']\n                plt.figure()\n                plt.pie(counts, labels=counts.index, autopct=hide_zero)\n                plt.title(f\"Question {qid}: {question['text']}\")\n                plt.savefig(f\"./resources/{qid}.png\")\n        # \u8fd4\u56de\u6e32\u67d3\u540e\u7684\u7ed3\u679c\u754c\u9762\uff0c\u4f20\u5165\u7ed3\u679c\u548c\u95ee\u9898\u4f5c\u4e3a\u53c2\u6570\n        return render_template(\"result.html\", results=results, questions=questions)\n\n@app.route(\"/resource/&lt;file_name&gt;\")\ndef read_file(file_name):\n    if file_name.find('/') &gt; 0:\n        return\n    image_data = open(f\"./resources/{file_name}\", 'rb').read()\n    res = make_response(image_data)\n    res.headers['Content-Type'] = 'image/png'\n    return res\n\nif __name__ == \"__main__\":\n    app.run(debug=True)\n</code></pre>"},{"location":"coursework/cpd/3/ex/#templatesindexhtml","title":"<code>templates/index.html</code>","text":"<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"zh-CN\"&gt;\n\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;\u8ba1\u7b97\u673a\u7a0b\u5e8f\u8bbe\u8ba1\u8c03\u67e5\u95ee\u5377&lt;/title&gt;\n    &lt;!-- \u5077\u61d2\uff0c\u4f7f\u7528Bootstrap\u7684CSS\u6587\u4ef6 --&gt;\n    &lt;link rel=\"stylesheet\" href=\"https://cdn.staticfile.org/twitter-bootstrap/4.5.2/css/bootstrap.min.css\"&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n    &lt;div class=\"container\"&gt;\n        &lt;h1 class=\"text-center\"&gt;\u8ba1\u7b97\u673a\u7a0b\u5e8f\u8bbe\u8ba1\u8c03\u67e5\u95ee\u5377&lt;/h1&gt;\n        &lt;!-- \u521b\u5efa\u4e00\u4e2a\u8868\u5355 --&gt;\n        &lt;form action=\"/submit\" method=\"post\" enctype=\"multipart/form-data\"&gt;\n            {% for question in questions %}\n            &lt;!-- \u83b7\u53d6\u95ee\u9898\u7684id\u3001\u7c7b\u578b\u3001\u6587\u672c\u3001\u662f\u5426\u5fc5\u586b\u548c\u9009\u9879 --&gt;\n            {% set qid = question[\"id\"] %}\n            {% set qtype = question[\"type\"] %}\n            {% set qtext = question[\"text\"] %}\n            {% set qrequired = question[\"required\"] %}\n            {% set qoptions = question[\"options\"] %}\n            &lt;!-- \u521b\u5efa\u4e00\u4e2a\u8868\u5355\u7ec4 --&gt;\n            &lt;div class=\"form-group\"&gt;\n                &lt;!-- \u5fc5\u586b\u52a0\u4e0a*\u53f7 --&gt;\n                &lt;label for=\"{{ qid }}\"&gt;{{ qtext }}{% if qrequired %}*{% endif %}&lt;/label&gt;\n                {% if qtype == \"text\" %}\n                &lt;!-- \u6587\u672c --&gt;\n                &lt;input type=\"text\" class=\"form-control\" id=\"{{ qid }}\" name=\"{{ qid }}\" required=\"{{ qrequired }}\"&gt;\n                {% elif qtype == \"number\" %}\n                &lt;!-- \u6570\u5b57 --&gt;\n                &lt;input type=\"number\" class=\"form-control\" id=\"{{ qid }}\" name=\"{{ qid }}\" required=\"{{ qrequired }}\"&gt;\n                {% elif qtype == \"radio\" %}\n                &lt;!-- \u5355\u9009 --&gt;\n                {% for option in qoptions %}\n                &lt;div class=\"form-check\"&gt;\n                    &lt;input type=\"radio\" class=\"form-check-input\" id=\"{{ qid }}_{{ option }}\" name=\"{{ qid }}\"\n                        value=\"{{ option }}\" required=\"{{ qrequired }}\"&gt;\n                    &lt;label class=\"form-check-label\" for=\"{{ qid }}_{{ option }}\"&gt;{{ option }}&lt;/label&gt;\n                    {% if option == \"\u5176\u4ed6\" %}\n                    &lt;input type=\"text\" class=\"form-control\" id=\"{{ qid }}_other\" name=\"{{ qid }}_other\"&gt;\n                    {% endif %}\n                &lt;/div&gt;\n                {% endfor %}\n                {% elif qtype == \"checkbox\" %}\n                &lt;!-- \u591a\u9009 --&gt;\n                {% for option in qoptions %}\n                &lt;div class=\"form-check\"&gt;\n                    &lt;input type=\"checkbox\" class=\"form-check-input\" id=\"{{ qid }}_{{ option }}\" name=\"{{ qid }}\"\n                        value=\"{{ option }}\"&gt;\n                    &lt;label class=\"form-check-label\" for=\"{{ qid }}_{{ option }}\"&gt;{{ option }}&lt;/label&gt;\n                    {% if option == \"\u5176\u4ed6\" %}\n                    &lt;input type=\"text\" class=\"form-control\" id=\"{{ qid }}_other\" name=\"{{ qid }}_other\"&gt;\n                    {% endif %}\n                &lt;/div&gt;\n                {% endfor %}\n                {% elif qtype == \"file\" %}\n                &lt;!-- \u6587\u4ef6 --&gt;\n                &lt;input type=\"file\" class=\"form-control-file\" id=\"{{ qid }}\" name=\"{{ qid }}\"&gt;\n                {% endif %}\n            &lt;/div&gt;\n            {% endfor %}\n            &lt;!-- \u63d0\u4ea4\u6309\u94ae --&gt;\n            &lt;button type=\"submit\" class=\"btn btn-primary\"&gt;\u63d0\u4ea4&lt;/button&gt;\n        &lt;/form&gt;\n    &lt;/div&gt;\n    &lt;!-- \u4f7f\u7528Bootstrap\u7684JS\u6587\u4ef6\u548cjQuery\u6587\u4ef6 --&gt;\n    &lt;script src=\"https://cdn.staticfile.org/jquery/3.5.1/jquery.min.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"https://cdn.staticfile.org/twitter-bootstrap/4.5.2/js/bootstrap.min.js\"&gt;&lt;/script&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;\n</code></pre>"},{"location":"coursework/cpd/3/ex/#templatesresulthtml","title":"<code>templates/result.html</code>","text":"<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"zh-CN\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;\u8ba1\u7b97\u673a\u7a0b\u5e8f\u8bbe\u8ba1\u95ee\u5377\u8c03\u67e5\u7ed3\u679c&lt;/title&gt;\n    &lt;link rel=\"stylesheet\" href=\"https://cdn.staticfile.org/twitter-bootstrap/4.5.2/css/bootstrap.min.css\"&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div class=\"container\"&gt;\n        &lt;h1 class=\"text-center\"&gt;\u8ba1\u7b97\u673a\u7a0b\u5e8f\u8bbe\u8ba1\u95ee\u5377\u8c03\u67e5\u7ed3\u679c&lt;/h1&gt;\n        &lt;table class=\"table table-bordered table-striped\"&gt;\n            &lt;thead&gt;\n                &lt;tr&gt;\n                    {% for col in results.columns %}\n                        &lt;th&gt;{{ col }}&lt;/th&gt;\n                    {% endfor %}\n                &lt;/tr&gt;\n            &lt;/thead&gt;\n            &lt;tbody&gt;\n                {% for i, row in results.iterrows() %}\n                    &lt;tr&gt;\n                        {% for col in results.columns %}\n                            {% set value = row[col] %}\n                            {% if value is iterable and value is not string %}\n                                {% set value = \", \".join(value) %}\n                            {% endif %}\n                            &lt;td&gt;{{ value }}&lt;/td&gt;\n                        {% endfor %}\n                    &lt;/tr&gt;\n                {% endfor %}\n            &lt;/tbody&gt;\n        &lt;/table&gt;\n        {% for question in questions %}\n            {% set qid = question[\"id\"] %}\n            {% set qtype = question[\"type\"] %}\n            {% set qtext = question[\"text\"] %}\n            {% set qoptions = question[\"options\"] %}\n            &lt;!-- \u5355\u9009\u9898\u6216\u591a\u9009\u9898\uff0c\u663e\u793a\u997c\u56fe --&gt;\n            {% if qtype == \"radio\" or qtype == \"checkbox\" %}\n                &lt;img src=\"./resource/{{ qid }}.png\" alt=\"{{ qtext }}\" class=\"img-fluid\"&gt;\n            {% endif %}\n        {% endfor %}\n    &lt;/div&gt;\n    &lt;script src=\"https://cdn.staticfile.org/jquery/3.5.1/jquery.min.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"https://cdn.staticfile.org/twitter-bootstrap/4.5.2/js/bootstrap.min.js\"&gt;&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"coursework/cpd/3/project/","title":"\u5b66\u751f\u6210\u7ee9\u7ba1\u7406\u7cfb\u7edf \u8bbe\u8ba1\u62a5\u544a","text":""},{"location":"coursework/cpd/3/project/#\u5b66\u751f\u6210\u7ee9\u7ba1\u7406\u7cfb\u7edf-\u8bbe\u8ba1\u62a5\u544a","title":"\u5b66\u751f\u6210\u7ee9\u7ba1\u7406\u7cfb\u7edf \u8bbe\u8ba1\u62a5\u544a\u76ee\u5f55","text":"<p>\u8be5\u4f5c\u4e1a\u5df2\u6258\u7ba1\u81f3 GitHub\u3002</p> <ul> <li>\u5b66\u751f\u6210\u7ee9\u7ba1\u7406\u7cfb\u7edf \u8bbe\u8ba1\u62a5\u544a<ul> <li>\u4e00\u3001\u8bbe\u8ba1\u5185\u5bb9\u4e0e\u8bbe\u8ba1\u8981\u6c42<ul> <li>1. \u8bfe\u7a0b\u8bbe\u8ba1\u76ee\u7684</li> <li>2. \u8bfe\u9898\u9898\u76ee</li> <li>3. \u6587\u6863\u8bbe\u8ba1\u8981\u6c42</li> <li>4. \u7a0b\u5e8f\u8bbe\u8ba1\u7684\u57fa\u672c\u8981\u6c42</li> <li>5. \u8fdb\u5ea6\u5b89\u6392</li> </ul> </li> <li>\u4e8c\u3001\u7cfb\u7edf\u9700\u6c42\u5206\u6790</li> <li>\u4e09\u3001\u603b\u4f53\u8bbe\u8ba1</li> <li>\u56db\u3001\u8be6\u7ec6\u8bbe\u8ba1<ul> <li>1. \u5b66\u751f\u6210\u7ee9\u7ba1\u7406\u7cfb\u7edf\u4e2d\u7c7b\u7684\u7c7b\u5c42\u6b21\u56fe</li> <li>2. \u5b66\u751f\u6210\u7ee9\u7ba1\u7406\u7cfb\u7edf\u4e2d\u5404\u529f\u80fd\u6a21\u5757\u7684\u5b9e\u73b0</li> <li>3. \u7c7b\u7684UML\u56fe</li> </ul> </li> <li>\u4e94\u3001\u7cfb\u7edf\u8c03\u8bd5</li> <li>\u516d\u3001\u6d4b\u8bd5\u7ed3\u679c\u4e0e\u5206\u6790</li> <li>\u4e03\u3001\u603b\u7ed3</li> <li>\u9644\u5f551\uff1a\u8bc4\u5206\u8868</li> <li>\u9644\u5f552\uff1a\u4f7f\u7528\u8bf4\u660e</li> <li>\u9644\u5f553\uff1a\u6e90\u7a0b\u5e8f\u6e05\u5355<ul> <li>\u5934\u6587\u4ef6<ul> <li>commonheader.h</li> </ul> </li> <li>\u6e90\u6587\u4ef6<ul> <li>account.cpp</li> <li>database.cpp</li> <li>info.cpp</li> <li>lecture.cpp</li> <li>lecture_limited.cpp</li> <li>limited_optional.cpp</li> <li>lecture_required.cpp</li> <li>main.cpp</li> <li>student.cpp</li> <li>userinterface.cpp</li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"coursework/cpd/3/project/#\u4e00\u8bbe\u8ba1\u5185\u5bb9\u4e0e\u8bbe\u8ba1\u8981\u6c42","title":"\u4e00\u3001\u8bbe\u8ba1\u5185\u5bb9\u4e0e\u8bbe\u8ba1\u8981\u6c42","text":""},{"location":"coursework/cpd/3/project/#1-\u8bfe\u7a0b\u8bbe\u8ba1\u76ee\u7684","title":"1. \u8bfe\u7a0b\u8bbe\u8ba1\u76ee\u7684","text":"<p>\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\u8bfe\u7a0b\u8bbe\u8ba1\u662f\u96c6\u4e2d\u5b9e\u8df5\u6027\u73af\u8282\u4e4b\u4e00\uff0c\u662f\u5b66\u4e60\u5b8c\u300a\u8ba1\u7b97\u673a\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u78402\u300bC++\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\u8bfe\u7a0b\u540e\u8fdb\u884c\u7684\u4e00\u6b21\u5168\u9762\u7684\u7efc\u5408\u7ec3\u4e60\u3002\u8981\u6c42\u5b66\u751f\u8fbe\u5230\u719f\u7ec3\u638c\u63e1C++\u8bed\u8a00\u7684\u57fa\u672c\u77e5\u8bc6\u548c\u6280\u80fd\uff1b\u57fa\u672c\u638c\u63e1\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u601d\u60f3\u548c\u65b9\u6cd5\uff1b\u80fd\u591f\u5229\u7528\u6240\u5b66\u7684\u57fa\u672c\u77e5\u8bc6\u548c\u6280\u80fd\uff0c\u89e3\u51b3\u7b80\u5355\u7684\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\u95ee\u9898\uff0c\u4ece\u800c\u63d0\u9ad8\u52a8\u624b\u7f16\u7a0b\u89e3\u51b3\u5b9e\u9645\u95ee\u9898\u7684\u80fd\u529b\u3002\u5c24\u5176\u91cd\u89c6\u521b\u65b0\u601d\u7ef4\u57f9\u517b\u3002</p>"},{"location":"coursework/cpd/3/project/#2-\u8bfe\u9898\u9898\u76ee","title":"2. \u8bfe\u9898\u9898\u76ee","text":"<p>1\uff09\u5b66\u751f\u6210\u7ee9\u7ba1\u7406\u7cfb\u7edf\uff08\u6216\u516c\u53f8\u4eba\u4e8b\u7ba1\u7406\u7cfb\u7edf\uff09</p>"},{"location":"coursework/cpd/3/project/#3-\u6587\u6863\u8bbe\u8ba1\u8981\u6c42","title":"3. \u6587\u6863\u8bbe\u8ba1\u8981\u6c42","text":"<p>3.1 \u8bbe\u8ba1\u8bfe\u9898\u9898\u76ee\uff1a\u6bcf\u4e2a\u540c\u5b66\u90fd\u5355\u72ec\u5b8c\u62101\u9053\u8bfe\u9898\u3002\u540e\u9762\u6709\u8303\u9898\uff0c\u4ec5\u4f9b\u540c\u5b66\u4eec\u53c2\u8003\uff0c\u4e0d\u5217\u5165\u672c\u6b21\u8bfe\u7a0b\u8bbe\u8ba1\u7684\u8bfe\u9898\u3002 \u3000\u30003.2 \u5bf9\u4e8e\u7a0b\u8bbe\u9898\u76ee\uff0c\u6309\u7167\u8303\u9898\u7684\u683c\u5f0f\u3002\u81ea\u884c\u865a\u6784\u8f6f\u4ef6\u9700\u6c42\u3002\u5e76\u6309\u7167\u7b2c4\u70b9\u8981\u6c42\uff0c\u7f16\u5199\u8bbe\u8ba1\u6587\u6863\u3002\u57fa\u672c\u8981\u6c42\u7cfb\u7edf\u4e2d\u8bbe\u8ba1\u7684\u7c7b\u7684\u6570\u76ee\u4e0d\u5c11\u4e8e4\u4e2a\uff0c\u6bcf\u4e2a\u7c7b\u4e2d\u8981\u6709\u5404\u81ea\u7684\u5c5e\u6027\uff08\u591a\u4e8e3\u4e2a\uff09\u548c\u65b9\u6cd5\uff08\u591a\u4e8e3\u4e2a\uff09\uff1b\u9700\u8981\u5b9a\u4e49\u4e00\u4e2a\u62bd\u8c61\u7c7b\uff0c\u91c7\u7528\u7ee7\u627f\u65b9\u5f0f\u6d3e\u751f\u8fd9\u4e9b\u7c7b\u3002\u5e76\u8bbe\u8ba1\u4e00\u4e2a\u591a\u91cd\u7ee7\u627f\u7684\u6d3e\u751f\u7c7b\u3002\u5728\u7a0b\u5e8f\u8bbe\u8ba1\u4e2d\uff0c\u5f15\u5165\u865a\u51fd\u6570\u7684\u591a\u6001\u6027\u3001\u8fd0\u7b97\u7b26\u91cd\u8f7d\u7b49\u673a\u5236\u3002</p>"},{"location":"coursework/cpd/3/project/#4-\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u57fa\u672c\u8981\u6c42","title":"4. \u7a0b\u5e8f\u8bbe\u8ba1\u7684\u57fa\u672c\u8981\u6c42","text":"<p>\uff081\uff09\u8981\u6c42\u5229\u7528\u9762\u5411\u5bf9\u8c61\u7684\u65b9\u6cd5\u4ee5\u53caC++\u7684\u7f16\u7a0b\u601d\u60f3\u6765\u5b8c\u6210\u7cfb\u7edf\u7684\u8bbe\u8ba1\uff1b \u3000\u3000\uff082\uff09\u8981\u6c42\u5728\u8bbe\u8ba1\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5efa\u7acb\u6e05\u6670\u7684\u7c7b\u5c42\u6b21\uff1b \u3000\u3000\uff083\uff09\u6839\u636e\u8bfe\u9898\u5b8c\u6210\u4ee5\u4e0b\u4e3b\u8981\u5de5\u4f5c\uff1a\u2460\u5b8c\u6210\u7cfb\u7edf\u9700\u6c42\u5206\u6790\uff1a\u5305\u62ec\u7cfb\u7edf\u8bbe\u8ba1\u76ee\u7684\u4e0e\u610f\u4e49\uff1b\u7cfb\u7edf\u529f\u80fd\u9700\u6c42\uff08\u7cfb\u7edf\u6d41\u7a0b\u56fe\uff09\uff1b\u8f93\u5165\u8f93\u51fa\u7684\u8981\u6c42\u3002\u2461\u5b8c\u6210\u7cfb\u7edf\u603b\u4f53\u8bbe\u8ba1\uff1a\u5305\u62ec\u7cfb\u7edf\u529f\u80fd\u5206\u6790\uff1b\u7cfb\u7edf\u529f\u80fd\u6a21\u5757\u5212\u5206\u4e0e\u8bbe\u8ba1\uff08\u7cfb\u7edf\u529f\u80fd\u6a21\u5757\u56fe\uff09\u3002\u2462\u5b8c\u6210\u7cfb\u7edf\u8be6\u7ec6\u8bbe\u8ba1\uff1a\u6570\u636e\u6587\u4ef6\uff1b\u7c7b\u5c42\u6b21\u56fe\uff1b\u754c\u9762\u8bbe\u8ba1\u4e0e\u5404\u529f\u80fd\u6a21\u5757\u5b9e\u73b0\u3002\u2463\u7cfb\u7edf\u8c03\u8bd5\uff1a\u8c03\u8bd5\u51fa\u73b0\u7684\u4e3b\u8981\u95ee\u9898\uff0c\u7f16\u8bd1\u8bed\u6cd5\u9519\u8bef\u53ca\u4fee\u6539\uff0c\u91cd\u70b9\u662f\u8fd0\u884c\u903b\u8f91\u95ee\u9898\u4fee\u6539\u548c\u8c03\u6574\u3002\u2464\u4f7f\u7528\u8bf4\u660e\u4e66\u53ca\u7f16\u7a0b\u4f53\u4f1a\uff1a\u8bf4\u660e\u5982\u4f55\u4f7f\u7528\u4f60\u7f16\u5199\u7684\u7a0b\u5e8f\uff0c\u8be6\u7ec6\u5217\u51fa\u6bcf\u4e00\u6b65\u7684\u64cd\u4f5c\u6b65\u9aa4\u3002\u2465\u5173\u952e\u6e90\u7a0b\u5e8f\uff08\u5e26\u6ce8\u91ca\uff09\u3002 \u3000\u3000\uff084\uff09\u81ea\u5df1\u8bbe\u8ba1\u6d4b\u8bd5\u6570\u636e\uff0c\u5c06\u6d4b\u8bd5\u6570\u636e\u5b58\u5728\u6587\u4ef6\u4e2d\uff0c\u901a\u8fc7\u6587\u4ef6\u8fdb\u884c\u6570\u636e\u8bfb\u5199\u6765\u83b7\u5f97\u6d4b\u8bd5\u7ed3\u679c\u3002 \u3000\u3000\uff085\uff09\u6309\u89c4\u5b9a\u683c\u5f0f\u5b8c\u6210\u8bfe\u7a0b\u8bbe\u8ba1\u62a5\u544a\uff0c\u5e76\u5728\u7f51\u7edc\u5b66\u5802\u4e0a\u6309\u65f6\u63d0\u4ea4\u3002 \u3000\u3000\uff086\uff09\u4e0d\u5f97\u6284\u88ad\u4ed6\u4eba\u7a0b\u5e8f\u3001\u8bfe\u7a0b\u8bbe\u8ba1\u62a5\u544a\uff0c\u6bcf\u4e2a\u4eba\u5e94\u72ec\u7acb\u5b8c\u6210\uff0c\u5728\u7a0b\u5e8f\u548c\u8bbe\u8ba1\u62a5\u544a\u4e2d\u4f53\u73b0\u81ea\u5df1\u7684\u4e2a\u6027\u8bbe\u8ba1\u3002</p>"},{"location":"coursework/cpd/3/project/#5-\u8fdb\u5ea6\u5b89\u6392","title":"5. \u8fdb\u5ea6\u5b89\u6392","text":"\u5c0f\u5b66\u671f\u7b2c2\u5468\u5bf9\u5b66\u751f\u6210\u7ee9\u7ba1\u7406\u7cfb\u7edf\u7684\u603b\u4f53\u67b6\u6784\u8fdb\u884c\u89c4\u5212\u8bbe\u8ba1\u5b66\u751f\u6210\u7ee9\u7ba1\u7406\u7cfb\u7edf\u7684\u6838\u5fc3\u7c7b\u5b8c\u6210\u94fe\u8868\u3001\u5b66\u751f\u7c7b\u3001\u8bfe\u7a0b\u7c7b\u7684\u7f16\u5199 \u8bbe\u8ba1\u6570\u636e\u5e93\u7c7b\u53ca\u5404\u9879\u529f\u80fd\u5b8c\u6210\u6dfb\u52a0\u3001\u4fdd\u5b58\u3001\u8bfb\u53d6\u5b66\u751f\u6210\u7ee9\u4fe1\u606f\u529f\u80fd\u7684\u7f16\u5199\u5b8c\u6210\u4fee\u6539\u3001\u5220\u9664\u5b66\u751f\u6210\u7ee9\u4fe1\u606f\u529f\u80fd\u7684\u7f16\u5199 \u8bbe\u8ba1\u7528\u6237\u754c\u9762\u7c7b\u53ca\u5404\u9879\u529f\u80fd\u5b8c\u6210\u67e5\u8be2\u5b66\u751f\u6210\u7ee9\u4fe1\u606f\u529f\u80fd\u7684\u7f16\u5199\u3001\u8c03\u6574\u8f93\u51fa\u683c\u5f0f\u5b8c\u6210\u8f93\u51fa\u3001\u6253\u5370\u5b66\u751f\u6210\u7ee9\u4fe1\u606f\u529f\u80fd\u7684\u7f16\u5199 \u8bbe\u8ba1\u8d26\u53f7\u7c7b\u53ca\u5404\u9879\u529f\u80fd\u5b8c\u6210\u8d26\u53f7\u7b49\u5404\u9879\u529f\u80fd\u7684\u7f16\u5199\u4e3a\u8d26\u53f7\u8fdb\u4e00\u6b65\u8bbe\u8ba1\u3001\u4f18\u5316\u7528\u6237\u754c\u9762 \u5728\u4e0d\u540c\u7f16\u7a0b\u73af\u5883\u914d\u7f6e\u4e2d\u6d4b\u8bd5\u7a0b\u5e8f\u7684\u517c\u5bb9\u6027\u8fdb\u884c\u8fd0\u884c\u6d4b\u8bd5\uff0c\u89c2\u5bdf\u7a0b\u5e8f\u5728\u6781\u7aef\u6761\u4ef6\u4e0b\u7684\u8fd0\u884c\u60c5\u51b5\u8c03\u8bd5\u7a0b\u5e8f\uff0c\u5bfb\u627e\u6f0f\u6d1e\u4e0e\u9519\u8bef"},{"location":"coursework/cpd/3/project/#\u4e8c\u7cfb\u7edf\u9700\u6c42\u5206\u6790","title":"\u4e8c\u3001\u7cfb\u7edf\u9700\u6c42\u5206\u6790","text":"<p>\u5b66\u751f\u6210\u7ee9\u7ba1\u7406\u7cfb\u7edf\u8bb0\u5f55\u4e86\u5b66\u751f\u7684\u6210\u7ee9\u60c5\u51b5\uff0c\u5b83\u5305\u62ec\uff1a\u5b66\u751f\u5b66\u53f7\u3001\u5b66\u751f\u59d3\u540d\u3001\u8bfe\u7a0b\u540d\u79f0\u3001\u8bfe\u7a0b\u7c7b\u578b\uff08\u5fc5\u9009\u3001\u9650\u9009\u53ca\u4efb\u9009\uff09\u3001\u8bfe\u7a0b\u5b66\u5206\u3001\u8bfe\u7a0b\u6210\u7ee9\u3001\u8bfe\u7a0b\u7ee9\u70b9\u7b49\u3002\u8bd5\u8bbe\u8ba1\u5b66\u751f\u6210\u7ee9\u7ba1\u7406\u7cfb\u7edf\uff0c\u4f7f\u4e4b\u80fd\u63d0\u4f9b\u4ee5\u4e0b\u529f\u80fd\uff1a</p> <ul> <li>\u5f55\u5165\u5b66\u751f\u7684\u4fe1\u606f\u53ca\u6210\u7ee9\u3002\u901a\u8fc7\u7a0b\u5e8f\u4e2d\u7684\u63d0\u793a\u4ece\u952e\u76d8\u8f93\u5165\u6570\u636e\u3002</li> <li>\u4fee\u6539\u5b66\u751f\u7684\u4fe1\u606f\u53ca\u6210\u7ee9\u3002\u53ef\u4ee5\u5bf9\u5b66\u751f\u7684\u5b66\u53f7\u3001\u59d3\u540d\u4ee5\u53ca\u6240\u9009\u79d1\u76ee\u7684\u4efb\u4f55\u4fe1\u606f\u8fdb\u884c\u4fee\u6539\uff0c\u5e76\u5b9e\u73b0\u5bf9\u5e94\u8bfe\u7a0b\u4fe1\u606f\u7684\u81ea\u52a8\u66f4\u65b0\u3002</li> <li>\u5220\u9664\u5b66\u751f\u7684\u4fe1\u606f\u53ca\u6210\u7ee9\u3002\u53ef\u4ee5\u5bf9\u4efb\u4f55\u5b66\u751f\u548c\u8bfe\u7a0b\u8fdb\u884c\u5220\u9664\u3002</li> <li>\u67e5\u8be2\u5b66\u751f\u7684\u4fe1\u606f\u53ca\u6210\u7ee9\u3002\u53ef\u4ee5\u901a\u8fc7\u5b66\u53f7\u548c\u59d3\u540d\u67e5\u8be2\u5b66\u751f\u4fe1\u606f\uff0c\u901a\u8fc7\u8bfe\u7a0b\u540d\u79f0\u67e5\u8be2\u8bfe\u7a0b\u4fe1\u606f\u3002</li> <li>\u6392\u5e8f\u5b66\u751f\u7684\u4fe1\u606f\u53ca\u6210\u7ee9\u3002\u53ef\u4ee5\u4ee5\u5b66\u53f7\u3001\u59d3\u540d\u3001\u603b\u6210\u7ee9\u3001\u603b\u5b66\u5206\u3001\u603b\u7ee9\u70b9\u3001\u5e73\u5747\u6210\u7ee9\u3001\u5e73\u5747\u7ee9\u70b9\u7b49\u6392\u5e8f\u5b66\u751f\uff0c\u4ee5\u8bfe\u7a0b\u540d\u79f0\u3001\u8bfe\u7a0b\u5b66\u5206\u3001\u5b66\u751f\u6570\u91cf\u3001\u5e73\u5747\u6210\u7ee9\u3001\u5e73\u5747\u7ee9\u70b9\u7b49\u6392\u5e8f\u8bfe\u7a0b\u3002</li> <li>\u6253\u5370\u5b66\u751f\u7684\u4fe1\u606f\u53ca\u6210\u7ee9\u3002\u53ef\u4ee5\u5c06\u5b66\u751f\u4fe1\u606f\u53ca\u8bfe\u7a0b\u4fe1\u606f\u8f93\u51fa\u5230<code>Markdown</code>\u6587\u4ef6\u3002</li> <li>\u4fdd\u5b58\u4e0e\u8f7d\u5165\u5b66\u751f\u7684\u4fe1\u606f\u53ca\u6210\u7ee9\u3002\u53ef\u4ee5\u8bfb\u53d6\u548c\u8f7d\u5165\u5b66\u751f\u53ca\u8bfe\u7a0b\u4fe1\u606f\u3002</li> <li>\u4ee5\u83dc\u5355\u65b9\u5f0f\u5de5\u4f5c\uff0c\u4fbf\u4e8e\u7528\u6237\u9009\u62e9\u3002</li> </ul>"},{"location":"coursework/cpd/3/project/#\u4e09\u603b\u4f53\u8bbe\u8ba1","title":"\u4e09\u3001\u603b\u4f53\u8bbe\u8ba1","text":"<p>\u5b66\u751f\u6210\u7ee9\u7ba1\u7406\u7cfb\u7edf\u5305\u542b\u4e03\u4e2a\u5927\u7684\u529f\u80fd\uff0c\u5206\u522b\u662f\uff1a\u5f55\u5165\u5b66\u751f\u6210\u7ee9\u4fe1\u606f\u3001\u4fee\u6539\u5b66\u751f\u6210\u7ee9\u4fe1\u606f\u3001\u5220\u9664\u5b66\u751f\u6210\u7ee9\u4fe1\u606f\u3001\u67e5\u8be2\u5b66\u751f\u6210\u7ee9\u4fe1\u606f\u3001\u6392\u5e8f\u5b66\u751f\u6210\u7ee9\u4fe1\u606f\u3001\u6253\u5370\u5b66\u751f\u6210\u7ee9\u4fe1\u606f\u3001\u4fdd\u5b58\u4e0e\u8f7d\u5165\u5b66\u751f\u4fe1\u606f\u3002\u5b66\u751f\u7684\u4fe1\u606f\u4e3b\u8981\u5305\u542b\u5b66\u53f7\u3001\u59d3\u540d\u3001\u9009\u8bfe\u4fe1\u606f\u3001\u603b\u5b66\u5206\u3001\u5e73\u5747\u6210\u7ee9\u3001\u5e73\u5747\u7ee9\u70b9\u7b49\u3002\u8bfe\u7a0b\u7684\u4fe1\u606f\u4e3b\u8981\u5305\u542b\u8bfe\u7a0b\u540d\u79f0\u3001\u8bfe\u7a0b\u5b66\u5206\u3001\u8bfe\u7a0b\u7c7b\u578b\u3001\u9009\u8bfe\u5b66\u751f\u4fe1\u606f\u3001\u5e73\u5747\u6210\u7ee9\u3001\u5e73\u5747\u7ee9\u70b9\u7b49\u3002</p> <ul> <li>\u5728\u5f55\u5165\u5b66\u751f\u6210\u7ee9\u4fe1\u606f\u65f6\u6839\u636e\u7cfb\u7edf\u63d0\u793a\u9010\u4e00\u8f93\u5165\u3002\u6bcf\u8f93\u5165\u5b8c\u4e00\u6761\u4fe1\u606f\uff0c\u7cfb\u7edf\u4f1a\u63d0\u793a\u662f\u5426\u7ee7\u7eed\u8f93\u5165\uff0c\u7528\u6237\u53ef\u4ee5\u9009\u62e9\u7ee7\u7eed\u8f93\u5165\u6216\u8fd4\u56de\u4e0a\u4e00\u7ea7\u3002</li> <li>\u5728\u4fee\u6539\u5b66\u751f\u6210\u7ee9\u4fe1\u606f\u65f6\uff0c\u7528\u6237\u9996\u5148\u8f93\u5165\u8981\u4fee\u6539\u7684\u5b66\u751f\u59d3\u540d\u6216\u5b66\u53f7\uff0c\u7cfb\u7edf\u4f1a\u8fdb\u884c\u68c0\u7d22\u3002\u5982\u679c\u7cfb\u7edf\u4e2d\u6709\u8be5\u5b66\u751f\u7684\u76f8\u5173\u4fe1\u606f\uff0c\u5219\u7cfb\u7edf\u5219\u4f1a\u63d0\u793a\u7528\u6237\u8fdb\u884c\u4fee\u6539\u3002\u5982\u679c\u7cfb\u7edf\u4e2d\u6ca1\u6709\u8be5\u5b66\u751f\u7684\u76f8\u5173\u4fe1\u606f\uff0c\u5219\u7cfb\u7edf\u4f1a\u7ed9\u76f8\u5173\u63d0\u793a\uff0c\u5e76\u8ba9\u7528\u6237\u8fd4\u56de\u4e3b\u83dc\u5355\u3002\u540c\u65f6\uff0c\u7528\u6237\u53ef\u4ee5\u8f93\u5165\u8981\u4fee\u6539\u7684\u8bfe\u7a0b\u540d\u79f0\uff0c\u4fee\u6539\u8bfe\u7a0b\u4fe1\u606f\u3002</li> <li>\u5728\u5220\u9664\u5b66\u751f\u6210\u7ee9\u4fe1\u606f\u65f6\uff0c\u7528\u6237\u9996\u5148\u8f93\u5165\u8981\u4fee\u6539\u7684\u5b66\u751f\u59d3\u540d\u6216\u5b66\u53f7\uff0c\u7cfb\u7edf\u4f1a\u8fdb\u884c\u68c0\u7d22\u3002\u5982\u679c\u7cfb\u7edf\u4e2d\u6709\u8be5\u5b66\u751f\u7684\u76f8\u5173\u4fe1\u606f\uff0c\u5219\u7cfb\u7edf\u5219\u4f1a\u63d0\u793a\u7528\u6237\u8fdb\u884c\u5220\u9664\u3002\u5982\u679c\u7cfb\u7edf\u4e2d\u6ca1\u6709\u8be5\u5b66\u751f\u7684\u76f8\u5173\u4fe1\u606f\uff0c\u5219\u7cfb\u7edf\u4f1a\u7ed9\u76f8\u5173\u63d0\u793a\uff0c\u5e76\u8ba9\u7528\u6237\u8fd4\u56de\u4e3b\u83dc\u5355\u3002\u540c\u65f6\uff0c\u7528\u6237\u53ef\u4ee5\u8f93\u5165\u8981\u5220\u9664\u7684\u8bfe\u7a0b\u540d\u79f0\uff0c\u5220\u9664\u8bfe\u7a0b\u4fe1\u606f\u3002</li> <li>\u5728\u67e5\u8be2\u5b66\u751f\u6210\u7ee9\u4fe1\u606f\u65f6\uff0c\u7528\u6237\u9996\u5148\u8f93\u5165\u8981\u67e5\u8be2\u7684\u5b66\u751f\u59d3\u540d\u6216\u5b66\u53f7\uff0c\u7cfb\u7edf\u4f1a\u8fdb\u884c\u68c0\u7d22\u3002\u5982\u679c\u7cfb\u7edf\u4e2d\u6709\u8be5\u5b66\u751f\u7684\u76f8\u5173\u4fe1\u606f\uff0c\u5219\u7cfb\u7edf\u5219\u4f1a\u5c55\u793a\u7528\u6237\u67e5\u8be2\u7684\u5b66\u751f\u4fe1\u606f\u3002\u5982\u679c\u7cfb\u7edf\u4e2d\u6ca1\u6709\u8be5\u5b66\u751f\u7684\u76f8\u5173\u4fe1\u606f\uff0c\u5219\u7cfb\u7edf\u4f1a\u7ed9\u76f8\u5173\u63d0\u793a\uff0c\u5e76\u8ba9\u7528\u6237\u8fd4\u56de\u4e3b\u83dc\u5355\u3002\u540c\u65f6\uff0c\u7528\u6237\u53ef\u4ee5\u8f93\u5165\u8981\u67e5\u8be2\u7684\u8bfe\u7a0b\u540d\u79f0\uff0c\u67e5\u8be2\u8bfe\u7a0b\u4fe1\u606f\u3002</li> <li>\u5728\u6392\u5e8f\u5b66\u751f\u8bfe\u7a0b\u4fe1\u606f\u65f6\uff0c\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u9009\u62e9\u83dc\u5355\u9009\u62e9\u8fdb\u884c\u6392\u5e8f\u7684\u5173\u952e\u5217\uff0c\u5e76\u4e14\u9009\u62e9\u5347\u5e8f\u548c\u964d\u5e8f\u3002\u5b66\u751f\u7684\u5173\u952e\u5217\u6709\uff1a\u5b66\u53f7\u3001\u59d3\u540d\u3001\u603b\u6210\u7ee9\u3001\u603b\u5b66\u5206\u3001\u603b\u7ee9\u70b9\u3001\u5e73\u5747\u6210\u7ee9\u3001\u5e73\u5747\u7ee9\u70b9\uff1b\u8bfe\u7a0b\u7684\u5173\u952e\u5217\u6709\uff1a\u8bfe\u7a0b\u540d\u79f0\u3001\u8bfe\u7a0b\u5b66\u5206\u3001\u5b66\u751f\u6570\u91cf\u3001\u5e73\u5747\u6210\u7ee9\u3001\u5e73\u5747\u7ee9\u70b9\u3002</li> <li>\u5728\u6253\u5370\u5b66\u751f\u6210\u7ee9\u4fe1\u606f\u65f6\uff0c\u7528\u6237\u9996\u5148\u8f93\u5165\u8981\u6253\u5370\u7684\u5b66\u751f\u59d3\u540d\u6216\u5b66\u53f7\uff0c\u7cfb\u7edf\u4f1a\u8fdb\u884c\u68c0\u7d22\u3002\u5982\u679c\u7cfb\u7edf\u4e2d\u6709\u8be5\u5b66\u751f\u7684\u76f8\u5173\u4fe1\u606f\uff0c\u5219\u7cfb\u7edf\u5219\u4f1a\u4ee5\u8f93\u51fa\u5230<code>output_student_\u5b66\u53f7_\u59d3\u540d.md</code>\u7684\u65b9\u5f0f\u6253\u5370\u5b66\u751f\u6210\u7ee9\u5355\u3002\u7528\u6237\u4e5f\u53ef\u4ee5\u9009\u62e9\u6253\u5370\u5168\u90e8\u5b66\u751f\u4fe1\u606f\uff08\u8f93\u51fa\u5230<code>output_student_all.md</code>\uff09\u3001\u6253\u5370\u8bfe\u7a0b\u4fe1\u606f\uff08\u8f93\u51fa\u5230<code>output_lecture_\u8bfe\u7a0b\u540d\u79f0.md</code>\uff09\u3001\u6253\u5370\u5168\u90e8\u8bfe\u7a0b\u4fe1\u606f\uff08\u8f93\u51fa\u5230<code>output_lecture_all.md</code>\uff09\u3002</li> </ul> <p>\u5b66\u751f\u8003\u52e4\u7ba1\u7406\u7cfb\u7edf\u4e2d\u529f\u80fd\u6a21\u5757\u56fe\uff1a </p>"},{"location":"coursework/cpd/3/project/#\u56db\u8be6\u7ec6\u8bbe\u8ba1","title":"\u56db\u3001\u8be6\u7ec6\u8bbe\u8ba1","text":""},{"location":"coursework/cpd/3/project/#1-\u5b66\u751f\u6210\u7ee9\u7ba1\u7406\u7cfb\u7edf\u4e2d\u7c7b\u7684\u7c7b\u5c42\u6b21\u56fe","title":"1. \u5b66\u751f\u6210\u7ee9\u7ba1\u7406\u7cfb\u7edf\u4e2d\u7c7b\u7684\u7c7b\u5c42\u6b21\u56fe","text":""},{"location":"coursework/cpd/3/project/#2-\u5b66\u751f\u6210\u7ee9\u7ba1\u7406\u7cfb\u7edf\u4e2d\u5404\u529f\u80fd\u6a21\u5757\u7684\u5b9e\u73b0","title":"2. \u5b66\u751f\u6210\u7ee9\u7ba1\u7406\u7cfb\u7edf\u4e2d\u5404\u529f\u80fd\u6a21\u5757\u7684\u5b9e\u73b0","text":""},{"location":"coursework/cpd/3/project/#3-\u7c7b\u7684uml\u56fe","title":"3. \u7c7b\u7684UML\u56fe","text":"<p>\u82e5\u4e0d\u6e05\u6670\u53ef\u53c2\u89c1PDF(\u7eb5\u5411)\u6216PDF(\u6a2a\u5411)\u3002</p> <p></p>"},{"location":"coursework/cpd/3/project/#\u4e94\u7cfb\u7edf\u8c03\u8bd5","title":"\u4e94\u3001\u7cfb\u7edf\u8c03\u8bd5","text":"<p>\u5728\u201c\u5b66\u751f\u6210\u7ee9\u7ba1\u7406\u7cfb\u7edf\u201d\u7f16\u5199\u5b8c\u6210\u540e\uff0c\u6211\u5bf9\u7a0b\u5e8f\u8fdb\u884c\u4e86\u7cfb\u7edf\u8c03\u8bd5\u3002\u5728\u8c03\u8bd5\u8fc7\u7a0b\u4e2d\uff0c\u6211\u9047\u5230\u4e86\u4e00\u4e9b\u95ee\u9898\u3002</p> <p>\u9996\u5148\u662f\u952e\u76d8\u8f93\u5165\u95ee\u9898\u3002\u8d77\u521d\uff0c\u6211\u4f7f\u7528<code>cin</code>\u6765\u5904\u7406\u8f93\u5165\u9009\u9879\u3002\u4f46\u662f\u5f53\u8f93\u5165\u683c\u5f0f\u4e0e\u8bbe\u60f3\u7684\u683c\u5f0f\u4e0d\u7b26\u65f6\uff0c\u7a0b\u5e8f\u53ef\u80fd\u4f1a\u51fa\u73b0\u4f17\u591a\u5f02\u5e38\u60c5\u51b5\u3002\u4e8e\u662f\uff0c\u6211\u9009\u62e9\u4f7f\u7528<code>_getch()</code>\u6765\u76f4\u63a5\u8bfb\u53d6\u952e\u76d8\u8f93\u5165\u503c\uff0c\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u907f\u514d\u4e86\u9ebb\u70e6\u3002</p> <p>\u6587\u4ef6\u4fdd\u5b58\u4e0a\u4e5f\u9047\u5230\u4e86\u4e00\u4e9b\u95ee\u9898\u3002\u6211\u4e3a\u4fdd\u5b58\u8bbe\u8ba1\u4e86\u52a0\u5bc6\u7b97\u6cd5\uff0c\u539f\u7406\u662f\u5bf9\u6bcf\u4e2a\u5b57\u7b26\u76f4\u63a5\u53d6\u53cd\u3002\u4f46\u662f\u5728\u5b9e\u9645\u4f7f\u7528\u4e2d\uff0c\u90e8\u5206\u5b57\u7b26\u53d6\u53cd\u4e3a\u6587\u4ef6\u7ec8\u6b62\u7b26\uff0c\u5bfc\u81f4\u8bfb\u53d6\u5931\u8d25\u3002\u540e\u6765\uff0c\u6211\u5bf9\u7b97\u6cd5\u8fdb\u884c\u4e86\u6539\u8fdb\uff0c\u73b0\u5728\u5df2\u7ecf\u53ef\u4ee5\u6b63\u5e38\u5728\u4fdd\u5b58\u8bfb\u53d6\u65f6\u52a0\u5bc6\u3001\u89e3\u5bc6\u4e86\u3002\u53e6\u5916\uff0c\u6211\u8bbe\u60f3\u8fc7\u901a\u8fc7\u5bc6\u94a5\u7684\u65b9\u5f0f\u8fdb\u884c\u52a0\u5bc6\uff0c\u4e0d\u8fc7\u56e0\u4e3a\u6548\u679c\u4e0d\u662f\u5f88\u7406\u60f3\uff0c\u6700\u7ec8\u653e\u5f03\u4e86\u3002</p> <p>\u5728\u6570\u636e\u5b58\u50a8\u5f62\u5f0f\u4e0a\uff0c\u6211\u4f7f\u7528\u4e86\u6bd4\u8f83\u4f20\u7edf\u7684\u94fe\u8868\u6765\u5b58\u50a8\u6570\u636e\u3002\u540c\u65f6\uff0c\u6211\u5c06\u5b66\u751f\u6210\u7ee9\u5206\u4e3a\u4e24\u4efd\uff0c\u540c\u65f6\u5b58\u50a8\u5728\u5b66\u751f\u7c7b\u548c\u8bfe\u7a0b\u7c7b\u4e2d\u3002\u8fd9\u6837\u505a\u5076\u5c14\u4f1a\u51fa\u73b0\u5220\u9664\u4e0d\u5e72\u51c0\u7684\u60c5\u51b5\uff0c\u540c\u65f6\u7531\u4e8e\u67d0\u4e00\u8bed\u53e5\u4e2d\u62ec\u53f7\u653e\u5728\u4e86\u9519\u8bef\u7684\u4f4d\u7f6e\uff0c\u5bfc\u81f4\u5220\u9664\u5931\u8d25\u3002\u540e\u6765\u6211\u91cd\u65b0\u8bbe\u8ba1\u4e86\u5c06\u4e24\u8fb9\u6570\u636e\u8fdb\u884c\u540c\u6b65\u7684\u7b97\u6cd5\uff0c\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002</p> <p>\u603b\u4f53\u800c\u8a00\uff0c\u6211\u7684\u201c\u5b66\u751f\u6210\u7ee9\u7ba1\u7406\u7cfb\u7edf\u201d\u7684\u8c03\u8bd5\u8f83\u4e3a\u6210\u529f\u3002\u867d\u7136\u51fa\u73b0\u4e86\u4e00\u4e9b\u5c0f\u95ee\u9898\uff0c\u4f46\u662f\u57fa\u672c\u90fd\u662f\u56e0\u4e3a\u6211\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u7684\u7c97\u5fc3\u548c\u758f\u5ffd\u5bfc\u81f4\u7684\uff0c\u5e76\u4e0d\u5b58\u5728\u529f\u80fd\u4e0a\u9762\u7684\u7f3a\u9677\u3002\u540c\u65f6\uff0c\u7531\u4e8e\u6211\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u8fd0\u7528\u4e86\u6a21\u5757\u5316\u7684\u7f16\u7a0b\u601d\u60f3\uff0c\u603b\u4f53\u4e0a\u89e3\u51b3\u95ee\u9898\u4e5f\u8f83\u4e3a\u5bb9\u6613\u3002</p>"},{"location":"coursework/cpd/3/project/#\u516d\u6d4b\u8bd5\u7ed3\u679c\u4e0e\u5206\u6790","title":"\u516d\u3001\u6d4b\u8bd5\u7ed3\u679c\u4e0e\u5206\u6790","text":"<p>\u7531\u4e8e\u672c\u7a0b\u5e8f\u5728<code>UTF-8</code>(<code>Codepage 65001</code>)\u7f16\u7801\u73af\u5883\u4e0b\u5728\u8f93\u51fa\u4e00\u4e9b\u542b\u6709\u6c49\u5b57\u7684\u8868\u683c\u65f6\u53ef\u80fd\u51fa\u73b0\u4e0d\u5bf9\u9f50\u7684\u60c5\u51b5\uff0c\u800c\u6211\u7684\u7535\u8111\u4f7f\u7528<code>UTF-8</code>\u7f16\u7801\u73af\u5883\uff0c\u6545\u4ee5\u4e0b\u622a\u56fe\u662f\u672c\u7a0b\u5e8f\u8fd0\u884c\u5728\u4e00\u53f0Windows 7\u865a\u62df\u673a\uff08\u4f7f\u7528<code>GBK</code> (<code>Codepage 936</code>)\u7f16\u7801\u73af\u5883\uff09\u4e0a\u65f6\u7684\u622a\u56fe\u3002</p> <p>\u9996\u5148\u6ce8\u518c\u6559\u5e08\u8d26\u6237\u3002</p> <p></p> <p>\u6dfb\u52a0\u4e00\u540d\u5b66\u751f\u3002</p> <p></p> <p></p> <p></p> <p>\u6dfb\u52a0\u5b8c\u6210\u540e\u67e5\u8be2\u5230\u8be5\u5b66\u751f\uff0c\u8bf4\u660e\u6dfb\u52a0\u6210\u529f\u3002</p> <p></p> <p>\u7ee7\u7eed\u6dfb\u52a0\u4e00\u4e9b\u5b66\u751f\u3002</p> <p></p> <p></p> <p></p> <p>\u5c06\u5b66\u751f\u6210\u7ee9\u6309\u5e73\u5747\u7ee9\u70b9\u5347\u5e8f\u6392\u5e8f\u3002</p> <p></p> <p>\u6253\u5370\u5b66\u751f\u6210\u7ee9\u3002</p> <p></p> <p></p> <p>\u4fdd\u5b58\u5b66\u751f\u6210\u7ee9\uff0c\u5f97\u5230\u52a0\u5bc6\u6587\u4ef6\u3002</p> <p></p> <p></p> <p>\u767b\u5f55\u5b66\u751f\u8d26\u6237\u3002</p> <p></p> <p>\u5b66\u751f\u53ea\u53ef\u5bf9\u81ea\u5df1\u7684\u4fe1\u606f\u8fdb\u884c\u67e5\u770b\u3002</p> <p></p> <p>\u8fd4\u56de\u6559\u5e08\u8d26\u53f7\uff0c\u4fee\u6539\u5b66\u751f\u4fe1\u606f\u3002</p> <p></p> <p>\u6210\u529f\u4fee\u6539\u3002</p> <p></p>"},{"location":"coursework/cpd/3/project/#\u4e03\u603b\u7ed3","title":"\u4e03\u3001\u603b\u7ed3","text":"<p>\u901a\u8fc7\u5b8c\u6210\u672c\u6b21\u300a\u8ba1\u7b97\u673a\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u78402\u300b\u5927\u4f5c\u4e1a\uff0c\u6211\u5bf9\u9762\u5411\u5bf9\u8c61\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u3001C++\u8bed\u8a00\u4ee5\u53ca\u8ba1\u7b97\u673a\u4e0e\u64cd\u4f5c\u7cfb\u7edf\u7b49\u591a\u65b9\u9762\u6709\u4e86\u66f4\u52a0\u6df1\u5165\u7684\u8ba4\u8bc6\u3002</p> <p>\u5728\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4f7f\u7528\u4e86\u5927\u91cf\u7684\u7c7b\u548c\u5bf9\u8c61\uff0c\u5728\u7f16\u5199\u8fc7\u7a0b\u4e2d\u6bd4\u4ece\u6625\u5b63\u5b66\u671f\u7684\u4f5c\u4e1a\u4e2d\u66f4\u52a0\u6df1\u523b\u5730\u4f53\u4f1a\u5230\u9762\u5411\u5bf9\u8c61\u7684\u7f16\u7a0b\u601d\u60f3\u3002\u5728\u8bbe\u8ba1\u7c7b\u7684\u65f6\u5019\uff0c\u6211\u5c3d\u53ef\u80fd\u4f7f\u5404\u4e2a\u7c7b\u7684\u529f\u80fd\u5206\u5f00\uff0c\u5c06\u4e00\u4e9b\u5168\u5c40\u7684\u65b9\u6cd5\u8bbe\u7f6e\u5728\u6570\u636e\u5e93\u7c7b\uff08<code>Database</code>\uff09\u4e2d\uff0c\u5c06\u4e0d\u540c\u7684\u7c7b\u7684\u65b9\u6cd5\u8bbe\u7f6e\u5728\u76f8\u5e94\u7684\u7c7b\u4e2d\uff0c\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u5b9e\u73b0\u4e86\u201c\u9ad8\u5185\u805a\u4f4e\u8026\u5408\u201d\u7684\u8bbe\u8ba1\u539f\u5219\u3002\u5728\u7a0b\u5e8f\u8fd0\u884c\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u5145\u5206\u4f7f\u7528\u4e86\u5815\u80ce\u548c\u865a\u51fd\u6570\u7684\u7279\u6027\uff0c\u8d4b\u4e88\u4e0d\u540c\u5bf9\u8c61\u4e0d\u540c\u7279\u6027\uff0c\u63d0\u9ad8\u4e86\u7a0b\u5e8f\u7684\u7075\u6d3b\u6027\u548c\u53ef\u6269\u5c55\u6027\u3002\u5728\u6d4b\u8bd5\u8fc7\u7a0b\u4e2d\uff0c\u6211\u5c1d\u8bd5\u4f7f\u7528\u4e86\u5f02\u5e38\u5904\u7406\u673a\u5236\uff0c\u589e\u5f3a\u7a0b\u5e8f\u5b89\u5168\u6027\u3002</p> <p>\u5728\u5177\u4f53\u65b9\u6cd5\u4e0a\uff0c\u6211\u5b66\u4e60\u4e86\u4e00\u4e9bC++\u8bed\u8a00\u7684\u8bed\u6cd5\u548c\u7279\u6027\uff0c\u5982\u6a21\u677f\u3001\u5bb9\u5668\u3001\u8fed\u4ee3\u5668\u3001\u667a\u80fd\u6307\u9488\u7b49\uff0c\u8fd9\u4e9b\u90fd\u662fC++\u8bed\u8a00\u76f8\u6bd4\u4e8eC\u8bed\u8a00\u7684\u4f18\u52bf\u6240\u5728\u3002\u6211\u5c1d\u8bd5\u4f7f\u7528\u4e86\u4e00\u4e9bSTL\u6807\u51c6\u5e93\u4e2d\u7684\u5185\u5bb9\uff08\u5982<code>string</code>\u3001<code>vector</code>\u7b49\uff09\uff0c\u6765\u5bf9\u6570\u636e\u8fdb\u884c\u66f4\u597d\u5730\u7ba1\u7406\uff0c\u4f7f\u5f97\u4ee3\u7801\u66f4\u52a0\u7b80\u6d01\u9ad8\u6548\u3001\u6613\u4e8e\u7ef4\u62a4\u3002</p> <p>\u5728\u8ba1\u7b97\u673a\u5c42\u9762\uff0c\u6211\u5bf9\u6587\u4ef6\u64cd\u4f5c\u6709\u4e86\u66f4\u52a0\u6df1\u5165\u7684\u7406\u89e3\u3002\u6211\u4f7f\u7528\u4e86\u6587\u4ef6\u6d41\u6765\u8bfb\u53d6\u548c\u5199\u5165\u6570\u636e\u6587\u4ef6\uff0c\u5b9e\u73b0\u4e86\u6570\u636e\u7684\u6301\u4e45\u5316\u5b58\u50a8\u3002\u540c\u65f6\uff0c\u6211\u91c7\u7528\u4e86\u4e00\u79cd\u52a0\u5bc6\u7b97\u6cd5\uff0c\u5e76\u901a\u8fc7\u5b9e\u8df5\u6392\u9664\u4e86\u5176\u4e2d\u7684\u6f0f\u6d1e\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u6211\u8fd8\u5b66\u4e60\u4e86\u4f7f\u7528<code>Git</code>\u3001 \\(\\LaTeX\\)\u7b49\u5de5\u5177\u5e2e\u52a9\u6211\u8fdb\u884c\u7a0b\u5e8f\u7f16\u5199\u4e0e\u62a5\u544a\u5199\u4f5c\u3002\u8fd9\u4f7f\u6211\u5bf9\u8ba1\u7b97\u673a\u548c\u7a0b\u5e8f\u8bbe\u8ba1\u7406\u89e3\u66f4\u52a0\u6df1\u5165\u3002</p> <p>\u603b\u800c\u8a00\u4e4b\uff0c\u672c\u6b21\u5927\u4f5c\u4e1a\u4f7f\u6211\u5bf9C++\u548c\u8ba1\u7b97\u673a\u8ba4\u8bc6\u66f4\u52a0\u6df1\u5165\uff0c\u7a0b\u5e8f\u8bbe\u8ba1\u6c34\u5e73\u5f97\u5230\u4e00\u5b9a\u7a0b\u5ea6\u63d0\u5347\u3002</p> <p>\u5f53\u7136\uff0c\u8fd9\u6b21\u5927\u4f5c\u4e1a\u4e5f\u5b58\u5728\u4e00\u4e9b\u7f3a\u61be\u548c\u4e0d\u8db3\u3002\u5404\u4e2a\u7c7b\u4e4b\u95f4\u4ecd\u7136\u5b58\u5728\u4e00\u5b9a\u4f9d\u8d56\u6027\uff0c\u6ca1\u6709\u5b8c\u5168\u8fbe\u5230\u5c01\u88c5\u7684\u6548\u679c\u3002\u53e6\u5916\uff0c\u4e00\u4e9b\u529f\u80fd\u8bbe\u8ba1\uff08\u5982\u76ee\u524d\u4fee\u6539\u5bf9\u8c61\u4e0d\u80fd\u53ea\u9488\u5bf9\u4e00\u4e2a\u7279\u5b9a\u7684\u5c5e\u6027\u8fdb\u884c\u4fee\u6539\uff09\u4ecd\u7136\u5b58\u5728\u53ef\u6539\u8fdb\u7684\u5730\u65b9\uff0c\u5982\u73b0\u5728\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\u5e38\u5e38\u9700\u8981\u904d\u5386\u6240\u6709\u5b66\u751f\u548c\u8bfe\u7a0b\uff0c\u9020\u6210\u8d44\u6e90\u6d6a\u8d39\uff1b\u540c\u65f6\uff0c\u8be5\u7a0b\u5e8f\u53ea\u652f\u6301\u4e00\u4e2a\u6570\u636e\u5e93\uff0c\u4e14\u6ca1\u6709\u4e3a\u7528\u6237\u624b\u52a8\u4fee\u6539\u6570\u636e\u6587\u4ef6\u505a\u597d\u5341\u5206\u5145\u5206\u7684\u51c6\u5907\u3002\u8fd9\u53ef\u80fd\u4e3b\u8981\u662f\u56e0\u4e3a\u6211\u6700\u521d\u62df\u5b9a\u7684\u8ba1\u5212\u4e0d\u660e\u786e\u5bfc\u81f4\u7684\u3002\u540c\u65f6\uff0c\u5982\u679c\u672c\u7a0b\u5e8f\u80fd\u591f\u62e5\u6709\u56fe\u5f62\u5316\u754c\u9762\u5c31\u66f4\u597d\u4e86\uff0c\u7136\u800c\u6211\u5bf9<code>Qt</code>\u7b49\u4e0d\u662f\u5f88\u719f\u7ec3\uff0c\u53ea\u597d\u6682\u65f6\u6401\u7f6e\u3002</p>"},{"location":"coursework/cpd/3/project/#\u9644\u5f551\u8bc4\u5206\u8868","title":"\u9644\u5f551\uff1a\u8bc4\u5206\u8868","text":"\u9879 \u76ee\u8bc4 \u4ef7 \u8bbe\u8ba1\u65b9\u6848\u7684\u5408\u7406\u6027\u4e0e\u521b\u65b0\u60276\u3000 \u8bbe\u8ba1\u4e0e\u8c03\u8bd5\u7ed3\u679c8\u3000 \u8bbe\u8ba1\u8bf4\u660e\u4e66\u7684\u8d28\u91cf2\u3000 \u7a0b\u5e8f\u57fa\u672c\u8981\u6c42\u6db5\u76d6\u60c5\u51b58\u3000 \u7a0b\u5e8f\u4ee3\u7801\u7f16\u5199\u7d20\u517b\u60c5\u51b54\u3000 \u8bfe\u7a0b\u8bbe\u8ba1\u5468\u8868\u73b0\u60c5\u51b52\u3000 \u7efc\u5408\u6210\u7ee930"},{"location":"coursework/cpd/3/project/#\u9644\u5f552\u4f7f\u7528\u8bf4\u660e","title":"\u9644\u5f552\uff1a\u4f7f\u7528\u8bf4\u660e","text":"<p>\u82e5\u8981\u8f93\u5165\u542b\u6709\u6c49\u5b57\u7684\u540d\u79f0\uff0c\u63a8\u8350\u4f7f\u7528<code>GBK</code> (<code>Codepage 936</code>)\u7f16\u7801\u73af\u5883\u8fd0\u884c\u672c\u7a0b\u5e8f\u3002\u672c\u7a0b\u5e8f\u5728<code>UTF-8</code>(<code>Codepage 65001</code>)\u7f16\u7801\u73af\u5883\u4e0b\u5728\u8f93\u51fa\u4e00\u4e9b\u542b\u6709\u6c49\u5b57\u7684\u8868\u683c\u65f6\u53ef\u80fd\u51fa\u73b0\u4e0d\u5bf9\u9f50\u7684\u60c5\u51b5\uff0c\u4e0d\u8fc7\u529f\u80fd\u4e00\u5207\u6b63\u5e38\u3002</p> <p>\u6b64\u7a0b\u5e8f\u867d\u7136\u7ecf\u8fc7\u5927\u91cf\u8c03\u8bd5\uff0c\u4f46\u662f\u4ecd\u7136\u53ef\u80fd\u51fa\u73b0\u65e0\u6cd5\u5e94\u5bf9\u7528\u6237\u975e\u6b63\u5e38\u8f93\u5165\u7684\u60c5\u51b5\uff0c\u8fd0\u884c\u672c\u7a0b\u5e8f\u8bf7\u9075\u7167\u4f7f\u7528\u8bf4\u660e\u3002</p> <p>\u6b64\u7a0b\u5e8f\u5f00\u59cb\u8fd0\u884c\u65f6\u4f1a\u81ea\u52a8\u8bfb\u53d6\u5b58\u50a8\u5728<code>savedata_user.dat</code>\u4e2d\u7684\u7528\u6237\u6570\u636e\uff08\u5305\u62ec\u7528\u6237\u540d\u548c\u5bc6\u7801\uff09\u3002\u8be5\u6587\u4ef6\u7531\u7a0b\u5e8f\u81ea\u52a8\u751f\u6210\u5e76\u52a0\u5bc6\uff0c\u5e94\u8be5\u5c3d\u91cf\u907f\u514d\u4fee\u6539\u3002</p> <p>\u6ce8\u518c\u6216\u767b\u5f55\u8d26\u53f7\u540e\u8fdb\u5165\u4e3b\u83dc\u5355\u3002\u82e5\u8be5\u7528\u6237\u4e3a\u5b66\u751f\uff0c\u5219\u529f\u80fd\u8f83\u5c11\uff0c\u4e14\u4ec5\u80fd\u67e5\u770b\u4e0e\u81ea\u5df1\u6709\u5173\u7684\u4fe1\u606f\uff0c\u4e0d\u80fd\u5199\u5165\u4fe1\u606f\uff1b\u82e5\u8be5\u7528\u6237\u4e3a\u6559\u5e08\uff08\u7ba1\u7406\u5458\uff09\uff0c\u5219\u53ef\u6dfb\u52a0\u4fe1\u606f\u3001\u5220\u9664\u4fe1\u606f\u3001\u4fee\u6539\u4fe1\u606f\uff0c\u5e76\u53ef\u67e5\u770b\u4efb\u610f\u5b66\u751f\u548c\u8bfe\u7a0b\u4fe1\u606f\u3002</p> <p>\u8fdb\u5165\u4e3b\u83dc\u5355\u540e\uff0c\u5b66\u751f\u4e0e\u8bfe\u7a0b\u4fe1\u606f\u9ed8\u8ba4\u4e3a\u7a7a\u3002\u6545\u5148\u9700\u8981\u8bfb\u53d6\u5b58\u50a8\u5728\u6587\u4ef6\u4e2d\u7684\u5b66\u751f\u4fe1\u606f\u548c\u8bfe\u7a0b\u4fe1\u606f\u3002\u82e5\u8bfb\u53d6\u6210\u529f\uff0c\u5219\u6570\u636e\u5e93\u4e2d\u6709\u76f8\u5173\u4fe1\u606f\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u82e5\u8bfb\u53d6\u65f6\u6570\u636e\u5e93\u4e2d\u5df2\u5b58\u5728\u5b66\u751f\u6216\u8bfe\u7a0b\u4fe1\u606f\uff0c\u5219\u5b66\u751f\u548c\u8bfe\u7a0b\u4fe1\u606f\u4f1a\u88ab\u6e05\u7a7a\u3002</p> <p>\u6570\u636e\u5e93\u4e2d\u5b58\u5728\u76f8\u5173\u4fe1\u606f\u540e\uff0c\u5373\u53ef\u5bf9\u8fd9\u4e9b\u4fe1\u606f\u8fdb\u884c\u76f8\u5e94\u67e5\u8be2\u3001\u6253\u5370\u7b49\u64cd\u4f5c\u3002\u5b66\u751f\u7684\u4fe1\u606f\u4e3b\u8981\u5305\u542b\u5b66\u53f7\u3001\u59d3\u540d\u3001\u9009\u8bfe\u4fe1\u606f\u3001\u603b\u5b66\u5206\u3001\u5e73\u5747\u6210\u7ee9\u3001\u5e73\u5747\u7ee9\u70b9\u7b49\u3002\u8bfe\u7a0b\u7684\u4fe1\u606f\u4e3b\u8981\u5305\u542b\u8bfe\u7a0b\u540d\u79f0\u3001\u8bfe\u7a0b\u5b66\u5206\u3001\u8bfe\u7a0b\u7c7b\u578b\u3001\u9009\u8bfe\u5b66\u751f\u4fe1\u606f\u3001\u5e73\u5747\u6210\u7ee9\u3001\u5e73\u5747\u7ee9\u70b9\u7b49\u3002\u5176\u4e2d\uff0c\u5bf9\u4e8e\u4efb\u9009\u8bfe\uff0c\u5b66\u751f\u53ef\u4ee5\u9009\u62e9\u5bf9\u8be5\u79d1\u6210\u7ee9\u8ba1\u201cP/F\u201d\uff0c\u4ece\u800c\u4e0d\u53c2\u52a0GPA\u7684\u8ba1\u7b97\u3002</p> <p>\u5b8c\u6210\u64cd\u4f5c\u540e\uff0c\u5e94\u53ca\u65f6\u4fdd\u5b58\u4fe1\u606f\u3002\u5728\u9000\u51fa\u7a0b\u5e8f\u65f6\u4e5f\u4f1a\u63d0\u793a\u662f\u5426\u4fdd\u5b58\u4fe1\u606f\u3002</p>"},{"location":"coursework/cpd/3/project/#\u9644\u5f553\u6e90\u7a0b\u5e8f\u6e05\u5355","title":"\u9644\u5f553\uff1a\u6e90\u7a0b\u5e8f\u6e05\u5355","text":""},{"location":"coursework/cpd/3/project/#\u5934\u6587\u4ef6","title":"\u5934\u6587\u4ef6","text":""},{"location":"coursework/cpd/3/project/#commonheaderh","title":"<code>commonheader.h</code>","text":"<pre><code>#pragma once\n#define _CRT_SECURE_NO_WARNINGS\n#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n#include &lt;iomanip&gt;\n#include &lt;string&gt;\n#include &lt;vector&gt;\n#include &lt;string.h&gt;\n#include &lt;conio.h&gt;\n#include &lt;time.h&gt;\n\nclass Database;\n\nenum LectureType\n{\n    DEFAULT,\n    REQUIRED,\n    LIMITED,\n    OPTIONAL\n};\n\nclass Info\n{\nprotected:\n    // \u540d\u79f0\uff08name\uff09\u3001\u552f\u4e00\u6807\u8bc6\u7b26\uff08uid\uff09\u3001\u8c03\u8bd5\u6a21\u5f0f\uff08DebugMode\uff09\n    std::string name;\n    int uid;\n    static int currentUid;\n    static bool DebugMode;\n\npublic:\n    Info();\n    Info(std::string inputName);\n    virtual ~Info() = 0;\n\n    virtual std::string getName();\n    int getUid();\n    static bool isDebugMode();\n\n    // virtual void updateInfo(Database&amp; database) = 0;\n    virtual void setName(std::string inputName) = 0;\n    static void setDebug(bool inputDebugMode)\n    {\n        DebugMode = inputDebugMode;\n    }\n\n    virtual void printInfo(int) = 0;\n    virtual void printInfo(int, int) = 0;\n};\n\nclass Account : virtual public Info\n{\nprotected:\n    std::string password;\n\npublic:\n    Account();\n    Account(std::string inputName, std::string inputPassword);\n    ~Account();\n    virtual std::string getPassword();\n    virtual void setName(std::string inputName);\n    virtual void setPassword(std::string inputPassword);\n    virtual int getPermission() { return 0; }\n    virtual void printInfo(int) {}\n    virtual void printInfo(int, int) {}\n    friend std::istream&amp; operator&gt;&gt;(std::istream&amp;, Account&amp;);\n    friend std::ostream&amp; operator&lt;&lt;(std::ostream&amp;, Account&amp;);\n};\n\nclass User : virtual public Account\n{\npublic:\n    int getPermission() { return 1; }\n};\n\nclass Admin : virtual public Account\n{\npublic:\n    int getPermission() { return 2; }\n};\n\n// Student\u7c7b\uff0c\u5bf9\u5b66\u751f\u4fe1\u606f\u8fdb\u884c\u5c01\u88c5\nclass Student : virtual public Info, User\n{\nprotected:\n    // \u5b66\u53f7\uff08studentNo\uff09\u3001\u59d3\u540d\uff08name\uff09\u3001\u5404\u79d1\u540d\u79f0\uff08lectureName\uff09\u3001\u5404\u79d1\u7c7b\u578b\uff08lectureType\uff09\u3001\u5404\u79d1\u6210\u7ee9\uff08lectureScore\uff09\u3001\u5404\u79d1\u5b66\u5206\uff08lectureCredit\uff09\u3001\u5b66\u5206\u7ee9\u70b9\uff08lectureGPA\uff09\u3001\u5e73\u5747\u5b66\u5206\u7ee9\u70b9\uff08averageGPA\uff09\n    int studentNo;\n    std::vector&lt;std::string&gt; lectureName;\n    std::vector&lt;LectureType&gt; lectureType;\n    std::vector&lt;int&gt; lectureScore;\n    std::vector&lt;int&gt; lectureCredit;\n    std::vector&lt;double&gt; lectureGPA;\n    std::vector&lt;int&gt; lecturePF;\n    int lectureNum;\n    int lecturePFNum;\n    int totalScore;\n    int totalCredit;\n    int totalPFCredit;\n    double totalGPA;\n    double averageScore;\n    double averageGPA;\n\npublic:\n    // \u6784\u9020\u51fd\u6570\n    Student();\n\n    // \u6790\u6784\u51fd\u6570\n    ~Student();\n\n    // \u8bbf\u95ee\u6570\u636e\u6210\u5458\u7684\u63a5\u53e3\u51fd\u6570\n    int getStudentNo();\n    std::string getName();\n    std::vector&lt;std::string&gt; getLectureName();\n    std::vector&lt;LectureType&gt; getLectureType();\n    std::vector&lt;int&gt; getLectureScore();\n    std::vector&lt;int&gt; getLectureCredit();\n    std::vector&lt;double&gt; getLectureGPA();\n    std::vector&lt;int&gt; getLecturePF();\n    int getLectureNum();\n    int getLecturePFNum();\n    int getTotalScore();\n    int getTotalCredit();\n    int getTotalPFCredit();\n    double getTotalGPA();\n    double getAverageScore();\n    double getAverageGPA();\n\n    // \u4fee\u6539\u6570\u636e\u6210\u5458\u7684\u63a5\u53e3\u51fd\u6570\n    void updateInfo(Database &amp;database);\n    void setStudentNo(int inputStudentNo);\n    void setName(std::string inputName);\n    void setLectureName(std::vector&lt;std::string&gt; inputLectureName);\n    void setLectureType(std::vector&lt;LectureType&gt; inputLectureType);\n    void setLectureScore(std::vector&lt;int&gt; inputLectureScore);\n    void setLectureCredit(std::vector&lt;int&gt; inputLectureCredit);\n    void setLectureGPA(std::vector&lt;double&gt; inputLectureGPA);\n    void setLecturePF(std::vector&lt;int&gt; inputLecturePF);\n    void setLectureNum(int inputLectureNum);\n    void setLecturePFNum(int inputLecturePFNum);\n    void setTotalScore(int inputTotalScore);\n    void setTotalCredit(int inputTotalCredit);\n    void setTotalPFCredit(int inputTotalPFCredit);\n    void setTotalGPA(double inputTotalGPA);\n    void setAverageScore(double inputAverageScore);\n    void setAverageGPA(double inputAverageGPA);\n\n    // \u6253\u5370\u5b66\u751f\u4fe1\u606f\n    void printInfo(int) {}\n    void printInfo(int widthStudentNo, int widthName);\n    void printStudentInfo();\n\n    // \u8fd0\u7b97\u7b26\u91cd\u8f7d\n    friend std::istream &amp;operator&gt;&gt;(std::istream &amp;, Student &amp;);\n    friend std::ostream &amp;operator&lt;&lt;(std::ostream &amp;, Student &amp;);\n};\n\nclass Lecture : virtual public Info\n{\nprotected:\n    // \u8bfe\u7a0b\u540d\u79f0\uff08name\uff09\u3001\u8bfe\u7a0b\u5b66\u5206\uff08credit\uff09\n    int credit;\n    std::vector&lt;int&gt; studentNo;\n    std::vector&lt;std::string&gt; studentName;\n    std::vector&lt;int&gt; studentScore;\n    std::vector&lt;double&gt; studentGPA;\n    int studentNum;\n    int totalScore;\n    double totalGPA;\n    int averageScore;\n    double averageGPA;\n\npublic:\n    // \u6784\u9020\u51fd\u6570\n    Lecture();\n\n    // \u6790\u6784\u51fd\u6570\n    virtual ~Lecture();\n\n    // \u8bbf\u95ee\u6570\u636e\u6210\u5458\u7684\u63a5\u53e3\u51fd\u6570\n    virtual LectureType getLectureType() { return DEFAULT; }\n    virtual int getCredit();\n    virtual std::vector&lt;int&gt; getStudentNo();\n    virtual std::vector&lt;std::string&gt; getStudentName();\n    virtual std::vector&lt;int&gt; getStudentScore();\n    virtual std::vector&lt;double&gt; getStudentGPA();\n    virtual int getStudentNum();\n    virtual int getTotalScore();\n    virtual double getTotalGPA();\n    virtual int getAverageScore();\n    virtual double getAverageGPA();\n\n    // \u8bbe\u7f6e\u6570\u636e\u6210\u5458\u7684\u63a5\u53e3\u51fd\u6570\n    virtual void updateInfo(Database &amp;database);\n    virtual void setName(std::string inputName);\n    virtual void setCredit(int inputCredit);\n    virtual void setStudentNo(std::vector&lt;int&gt; inputStudentNo);\n    virtual void setStudentName(std::vector&lt;std::string&gt; inputStudentName);\n    virtual void setStudentScore(std::vector&lt;int&gt; inputStudentScore);\n    virtual void setStudentGPA(std::vector&lt;double&gt; inputStudentGPA);\n    virtual void setStudentNum(int inputStudentNum);\n    virtual void setTotalScore(int inputTotalScore);\n    virtual void setTotalGPA(double inputTotalGPA);\n    virtual void setAverageScore(int inputAverageScore);\n    virtual void setAverageGPA(double inputAverageGPA);\n    virtual void addStudent(int inputStudentNo, std::string inputStudentName, int inputStudentScore, double inputStudentGPA);\n\n    // \u6253\u5370\u8bfe\u7a0b\u4fe1\u606f\n    virtual void printInfo(int widthName);\n    virtual void printInfo(int, int) {}\n    virtual void printLectureInfo();\n\n    // \u8fd0\u7b97\u7b26\u91cd\u8f7d\n    friend std::istream &amp;operator&gt;&gt;(std::istream &amp;, Lecture &amp;);\n    friend std::ostream &amp;operator&lt;&lt;(std::ostream &amp;, Lecture &amp;);\n};\n\nclass LectureRequired : virtual public Lecture\n{\nprotected:\npublic:\n    // \u6784\u9020\u51fd\u6570\n    LectureRequired();\n\n    // \u6790\u6784\u51fd\u6570\n    ~LectureRequired();\n\n    // \u8bbf\u95ee\u6570\u636e\u6210\u5458\u7684\u63a5\u53e3\u51fd\u6570\n    virtual LectureType getLectureType() { return REQUIRED; }\n\n    // \u8bbe\u7f6e\u6570\u636e\u6210\u5458\u7684\u63a5\u53e3\u51fd\u6570\n    void updateInfo(Database &amp;database);\n\n    // \u6253\u5370\u8bfe\u7a0b\u4fe1\u606f\n    void printInfo(int widthName);\n    void printInfo(int, int) {}\n    void printLectureInfo();\n\n    // \u8fd0\u7b97\u7b26\u91cd\u8f7d\n    friend std::istream &amp;operator&gt;&gt;(std::istream &amp;, LectureRequired &amp;);\n    friend std::ostream &amp;operator&lt;&lt;(std::ostream &amp;, LectureRequired &amp;);\n};\n\nclass LectureLimited : virtual public Lecture\n{\nprotected:\npublic:\n    // \u6784\u9020\u51fd\u6570\n    LectureLimited();\n\n    // \u6790\u6784\u51fd\u6570\n    ~LectureLimited();\n\n    // \u8bbf\u95ee\u6570\u636e\u6210\u5458\u7684\u63a5\u53e3\u51fd\u6570\n    virtual LectureType getLectureType() { return LIMITED; }\n\n    // \u8bbe\u7f6e\u6570\u636e\u6210\u5458\u7684\u63a5\u53e3\u51fd\u6570\n    void updateInfo(Database &amp;database);\n\n    // \u6253\u5370\u8bfe\u7a0b\u4fe1\u606f\n    void printInfo(int widthName);\n    void printInfo(int, int) {}\n    void printLectureInfo();\n\n    // \u8fd0\u7b97\u7b26\u91cd\u8f7d\n    friend std::istream &amp;operator&gt;&gt;(std::istream &amp;, LectureLimited &amp;);\n    friend std::ostream &amp;operator&lt;&lt;(std::ostream &amp;, LectureLimited &amp;);\n};\n\nclass LectureOptional : virtual public Lecture\n{\nprotected:\n    std::vector&lt;int&gt; studentPF;\n    int studentPFNum;\n\npublic:\n    // \u6784\u9020\u51fd\u6570\n    LectureOptional();\n\n    // \u6790\u6784\u51fd\u6570\n    ~LectureOptional();\n\n    // \u8bbf\u95ee\u6570\u636e\u6210\u5458\u7684\u63a5\u53e3\u51fd\u6570\n    virtual LectureType getLectureType() { return OPTIONAL; }\n    std::vector&lt;int&gt; getStudentPF();\n    int getStudentPFNum();\n\n    // \u8bbe\u7f6e\u6570\u636e\u6210\u5458\u7684\u63a5\u53e3\u51fd\u6570\n    void setStudentPF(std::vector&lt;int&gt; inputStudentPF);\n    void setStudentPFNum(int inputStudentPFNum);\n    void updateInfo(Database &amp;database);\n    virtual void addStudent(int inputStudentNo, std::string inputStudentName, int inputStudentScore, double inputStudentGPA, bool inputStudentPF);\n\n    // \u6253\u5370\u8bfe\u7a0b\u4fe1\u606f\n    void printInfo(int widthName);\n    void printInfo(int, int) {}\n    void printLectureInfo();\n\n    // \u8fd0\u7b97\u7b26\u91cd\u8f7d\n    friend std::istream &amp;operator&gt;&gt;(std::istream &amp;, LectureOptional &amp;);\n    friend std::ostream &amp;operator&lt;&lt;(std::ostream &amp;, LectureOptional &amp;);\n};\n\n// \u57fa\u4e8e\u6a21\u677f\u7684\u94fe\u8868\u7ed3\u70b9\u5b9a\u4e49\ntemplate &lt;class T&gt;\nstruct Node\n{\n    T data;\n    Node&lt;T&gt; *next;\n};\n\n// \u57fa\u4e8e\u6a21\u677f\u7684\u94fe\u8868\u7c7b\u58f0\u660e\ntemplate &lt;class T&gt;\nclass LinkedList\n{\nprivate:\n    Node&lt;T&gt; *head;                                       // \u5934\u7ed3\u70b9\n    Node&lt;T&gt; *current;                                    // \u5f53\u524d\u7ed3\u70b9\n    inline void deepCopy(const LinkedList&lt;T&gt; &amp;original); // \u5185\u8054\u51fd\u6570\uff0c\u7528\u4e8e\u6df1\u62f7\u8d1d\npublic:\n    // \u6784\u9020\u51fd\u6570\u3001\u590d\u5236\u6784\u9020\u51fd\u6570\u3001\u6790\u6784\u51fd\u6570\n    LinkedList();\n    LinkedList(const LinkedList&lt;T&gt; &amp;aplist);\n    ~LinkedList();\n\n    void insert(Node&lt;T&gt; *newNode);     // \u5728\u5934\u90e8\u4e4b\u524d\u63d2\u5165\u5143\u7d20\n    void insert_end(Node&lt;T&gt; *newNode); // \u5728\u5c3e\u90e8\u63d2\u5165\n    Node&lt;T&gt; *getFirst();               // \u83b7\u5f97\u94fe\u8868\u5934\u7684\u6570\u636e\n    inline Node&lt;T&gt; *getNext();         // \u83b7\u5f97\u5f53\u524d\u7ed3\u70b9\u7684\u4e0b\u4e00\u4e2a\u6570\u636e\n    bool find(const T &amp;element);       // \u67e5\u627e\u4e00\u4e2a\u6570\u636e\n    bool retrieve(T &amp;element);         // \u68c0\u7d22\u4e00\u4e2a\u6570\u636e\n    bool replace(const T &amp;newElement); // \u66ff\u6362\u4e00\u4e2a\u6570\u636e\n    bool remove(Node&lt;T&gt; *node);        // \u79fb\u9664\u4e00\u4e2a\u6570\u636e\n    bool isEmpty() const;              // \u5224\u65ad\u94fe\u8868\u662f\u5426\u4e3a\u7a7a\n    void makeEmpty();                  // \u6e05\u7a7a\u94fe\u8868\n    int size();                        // \u83b7\u5f97\u94fe\u8868\u7684\u5927\u5c0f\n\n    // \u91cd\u8f7d\"=\"\u8fd0\u7b97\u7b26\n    LinkedList&lt;T&gt; &amp;operator=(const LinkedList&lt;T&gt; &amp;rlist);\n};\n\n// \u65e0\u53c2\u6784\u9020\u51fd\u6570\ntemplate &lt;class T&gt;\nLinkedList&lt;T&gt;::LinkedList()\n{\n    head = current = nullptr;\n}\n\n// \u590d\u5236\u6784\u9020\u51fd\u6570\ntemplate &lt;class T&gt;\nLinkedList&lt;T&gt;::LinkedList(const LinkedList&lt;T&gt; &amp;aplist)\n{\n    deepCopy(aplist);\n}\n\n// \u6790\u6784\u51fd\u6570\ntemplate &lt;class T&gt;\nLinkedList&lt;T&gt;::~LinkedList()\n{\n    makeEmpty();\n}\n\n// \u5728\u5934\u90e8\u4e4b\u524d\u63d2\u5165\u51fd\u6570\ntemplate &lt;class T&gt;\nvoid LinkedList&lt;T&gt;::insert(Node&lt;T&gt; *newNode)\n{\n    current = nullptr;\n    newNode-&gt;next = head;\n    head = newNode;\n}\n\n// \u5728\u5c3e\u90e8\u4e4b\u540e\u63d2\u5165\u51fd\u6570\ntemplate &lt;class T&gt;\nvoid LinkedList&lt;T&gt;::insert_end(Node&lt;T&gt; *newNode)\n{\n    current = nullptr;\n    Node&lt;T&gt; *tail = head;\n    newNode-&gt;next = nullptr;\n    if (tail == nullptr)\n    {\n        head = newNode;\n    }\n    else\n    {\n        while (tail-&gt;next != nullptr)\n        {\n            tail = tail-&gt;next;\n        }\n        tail-&gt;next = newNode;\n    }\n}\n\n// \u83b7\u5f97\u94fe\u8868\u5934\u7684\u51fd\u6570\ntemplate &lt;class T&gt;\nNode&lt;T&gt; *LinkedList&lt;T&gt;::getFirst()\n{\n    if (head == nullptr)\n    {\n        return nullptr;\n    }\n    current = head;\n    return head;\n}\n\n// \u83b7\u5f97\u4e0b\u4e00\u4e2a\u6570\u636e\ntemplate &lt;class T&gt;\nNode&lt;T&gt; *LinkedList&lt;T&gt;::getNext()\n{\n    if (current == nullptr)\n    {\n        return nullptr;\n    }\n    if (current-&gt;next == nullptr)\n    {\n        current = nullptr;\n        return nullptr;\n    }\n    current = current-&gt;next;\n    return current;\n}\n\n// \u67e5\u627e\u4e00\u4e2a\u6570\u636e\ntemplate &lt;class T&gt;\nbool LinkedList&lt;T&gt;::find(const T &amp;element)\n{\n    Node&lt;T&gt; *n;\n    n = getFirst();\n    if (n == nullptr)\n    {\n        return false;\n    }\n    do\n    {\n        if (n-&gt;data == element)\n        {\n            return true;\n        }\n        n = getNext();\n    } while (n != nullptr);\n    return false;\n}\n\n// \u68c0\u7d22\u4e00\u4e2a\u6570\u636e\ntemplate &lt;class T&gt;\nbool LinkedList&lt;T&gt;::retrieve(T &amp;element)\n{\n    if (!find(element))\n    {\n        return false;\n    }\n    element = current-&gt;data;\n    return true;\n}\n\n// \u66ff\u6362\u4e00\u4e2a\u6570\u636e\ntemplate &lt;class T&gt;\nbool LinkedList&lt;T&gt;::replace(const T &amp;newElement)\n{\n    if (current == nullptr)\n    {\n        return false;\n    }\n    current-&gt;data = newElement;\n    return true;\n}\n\n// \u79fb\u9664\u4e00\u4e2a\u6570\u636e\ntemplate &lt;class T&gt;\nbool LinkedList&lt;T&gt;::remove(Node&lt;T&gt; *n)\n{\n    current = nullptr;\n    if (head == nullptr)\n    {\n        return false;\n    }\n    Node&lt;T&gt; *tmp = head;\n    if (tmp == n)\n    {\n        head = tmp-&gt;next;\n        delete tmp;\n        return true;\n    }\n    while (tmp-&gt;next != nullptr)\n    {\n        if (tmp-&gt;next == n)\n        {\n            Node&lt;T&gt; *ptr = tmp-&gt;next;\n            tmp-&gt;next = ptr-&gt;next;\n            delete ptr;\n            return true;\n        }\n        tmp = tmp-&gt;next;\n    }\n    return false;\n}\n\n// \u5224\u65ad\u662f\u5426\u4e3a\u7a7a\ntemplate &lt;class T&gt;\nbool LinkedList&lt;T&gt;::isEmpty() const\n{\n    return head == nullptr;\n}\n\n// \u5c06\u94fe\u8868\u6e05\u7a7a\ntemplate &lt;class T&gt;\nvoid LinkedList&lt;T&gt;::makeEmpty()\n{\n    while (head != nullptr)\n    {\n        current = head;\n        head = head-&gt;next;\n        delete current;\n    }\n    current = nullptr;\n}\n\n// \u83b7\u5f97\u94fe\u8868\u5927\u5c0f\ntemplate &lt;class T&gt;\nint LinkedList&lt;T&gt;::size()\n{\n    int size = 0;\n    Node&lt;T&gt; *tmp = head;\n    while (tmp != nullptr)\n    {\n        size++;\n        tmp = tmp-&gt;next;\n    }\n    return size;\n}\n\n//\"=\"\u8fd0\u7b97\u7b26\u91cd\u8f7d\ntemplate &lt;class T&gt;\nLinkedList&lt;T&gt; &amp;LinkedList&lt;T&gt;::operator=(const LinkedList&lt;T&gt; &amp;rlist)\n{\n    if (this == &amp;rlist)\n    {\n        return *this;\n    }\n    makeEmpty();\n    deepCopy(rlist);\n    return *this;\n}\n\n// \u6df1\u62f7\u8d1d\u51fd\u6570\ntemplate &lt;class T&gt;\nvoid LinkedList&lt;T&gt;::deepCopy(const LinkedList&lt;T&gt; &amp;original)\n{\n    head = current = nullptr;\n    if (original.head == nullptr)\n    {\n        return;\n    }\n    Node&lt;T&gt; *copy = head = new Node&lt;T&gt;;\n    Node&lt;T&gt; *origin = original.head;\n    copy-&gt;data = origin-&gt;data;\n    if (origin == original.current)\n    {\n        current = copy;\n    }\n    while (origin-&gt;next != nullptr)\n    {\n        copy-&gt;next = new Node&lt;T&gt;;\n        origin = origin-&gt;next;\n        copy = copy-&gt;next;\n        copy-&gt;data = origin-&gt;data;\n        if (origin == original.current)\n        {\n            current = copy;\n        }\n    }\n    copy-&gt;next = nullptr;\n}\n\nclass FileException\n{\npublic:\n    std::string filename;\n    std::string mode;\n    std::string type;\n\n    FileException(std::string inputFilename, std::string inputMode, std::string inputType)\n    {\n        filename = inputFilename;\n        mode = inputMode;\n        type = inputType;\n    };\n\n    ~FileException(){};\n};\n\n// \u6570\u636e\u5e93\u7c7b\uff0c\u5bf9\u7a0b\u5e8f\u4f7f\u7528\u7684\u6570\u636e\u7ed3\u6784\u8fdb\u884c\u5c01\u88c5\nclass Database\n{\nprivate:\n    LinkedList&lt;Student&gt; studentList;\n    LinkedList&lt;LectureRequired&gt; requiredList;\n    LinkedList&lt;LectureLimited&gt; limitedList;\n    LinkedList&lt;LectureOptional&gt; optionalList;\n    LinkedList&lt;User&gt; userList;\n    LinkedList&lt;Admin&gt; adminList;\n\npublic:\n    // \u6784\u9020\u51fd\u6570\u4e0e\u6790\u6784\u51fd\u6570\n    Database();\n    ~Database();\n\n    // \u5217\u8868\u76f8\u5173\u51fd\u6570\n    int getStudentListSize();\n    int getRequiredListSize();\n    int getLimitedListSize();\n    int getOptionalListSize();\n\n    // \u6587\u4ef6\u8bfb\u5199\u51fd\u6570\n    void load();\n    void save();\n\n    void loadStudent(const std::string &amp;filename);\n    void loadRequired(const std::string &amp;filename);\n    void loadLimited(const std::string &amp;filename);\n    void loadOptional(const std::string &amp;filename);\n\n    void saveStudent(const std::string &amp;filename);\n    void saveRequired(const std::string &amp;filename);\n    void saveLimited(const std::string &amp;filename);\n    void saveOptional(const std::string &amp;filename);\n\n    void encrypt(const std::string &amp;filename);\n    void encrypt_key(const std::string &amp;filename, const std::string &amp;keyFilename);\n    void key_gen(const std::string &amp;filename);\n    std::string timeStampToString(const time_t &amp;timeStamp);\n\n    // \u5220\u9664\u5b66\u751f\u4e0e\u8bfe\u7a0b\u51fd\u6570\n    bool deleteStudent(const std::string &amp;name);\n    bool deleteStudent(int studentNo);\n    bool deleteRequired(const std::string &amp;name);\n    bool deleteLimited(const std::string &amp;name);\n    bool deleteOptional(const std::string &amp;name);\n\n    // \u6dfb\u52a0\u5b66\u751f\u4e0e\u8bfe\u7a0b\u51fd\u6570\n    void addStudent();\n    void addRequired(const std::string &amp;name, int credit);\n    void addLimited(const std::string &amp;name, int credit);\n    void addOptional(const std::string &amp;name, int credit);\n    void addStudentToLecture(const std::string &amp;name, LectureType type, Student &amp;stu);\n\n    //// \u663e\u793a\u5b66\u751f\u4e0e\u8bfe\u7a0b\u51fd\u6570\n    // void displayStudent(const std::string&amp; name);\n    // void displayStudent(int studentNo);\n    // void displayLecture(const std::string&amp; name);\n    // void displayRequired(const std::string&amp; name);\n    // void displayLimited(const std::string&amp; name);\n    // void displayOptional(const std::string&amp; name);\n    // int displayAllStudent();\n    // int displayAllLecture(LectureType type);\n\n    // \u4fee\u6539\u5b66\u751f\u4e0e\u8bfe\u7a0b\u51fd\u6570\n    bool modifyStudent(const std::string &amp;name);\n    bool modifyStudent(int studentNo);\n    bool modifyLecture(const std::string &amp;name);\n    bool modifyRequired(const std::string &amp;name);\n    bool modifyLimited(const std::string &amp;name);\n    bool modifyOptional(const std::string &amp;name);\n\n    // \u67e5\u8be2\u5b66\u751f\u4e0e\u8bfe\u7a0b\u51fd\u6570\n    int queryStudent(const std::string &amp;name, bool display = true);\n    int queryStudent(int studentNo, bool display = true);\n    int queryLecture(const std::string &amp;name, bool display = true);\n    int queryRequired(const std::string &amp;name, bool display = true);\n    int queryLimited(const std::string &amp;name, bool display = true);\n    int queryOptional(const std::string &amp;name, bool display = true);\n    Student *findStudent(const std::string &amp;name);\n    Student *findStudent(int studentNo);\n    Lecture *findLecture(const std::string &amp;name);\n    LectureRequired *findRequired(const std::string &amp;name);\n    LectureLimited *findLimited(const std::string &amp;name);\n    LectureOptional *findOptional(const std::string &amp;name);\n\n    // \u6392\u5e8f\u51fd\u6570\n    void sortStudent(int direction, int keycol);\n    void sortLecture(LectureType type, int direction, int keycol);\n    void sortStudentCustom(Student **head, int length, int direction, int keycol);\n    void sortLectureCustom(Lecture **head, int length, int direction, int keycol);\n    double compareStudent(Student *a, Student *b, int direction, int keycol);\n    double compareLecture(Lecture *a, Lecture *b, int direction, int keycol);\n\n    // \u6253\u5370\u51fd\u6570\n    void printStudent();\n    void printStudent(int studentNo);\n    void printStudent(const std::string &amp;name);\n    void printLecture();\n    void printLecture(LectureType type);\n    void printLecture(const std::string &amp;name);\n\n    // \u767e\u5206\u5236\u6210\u7ee9\u8f6c\u5316\u4e3a\u7ee9\u70b9\n    double calculateGPA(int score);\n\n    // \u5728\u4fee\u6539\u540e\u66f4\u65b0\u5b66\u751f\u4e0e\u8bfe\u7a0b\n    void updateStudent();\n    void updateLecture();\n\n    // \u767b\u5f55\u4e0e\u6ce8\u518c\u51fd\u6570\n    Account *login(std::string username, std::string password);\n    Account *registerUser(std::string username, std::string password, int permission);\n    void loadAccount(const std::string &amp;userFilename, const std::string &amp;adminFilename);\n    void saveAccount(const std::string &amp;userFilename, const std::string &amp;adminFilename);\n    int queryAccount(const std::string &amp;username);\n};\n\n// \u7528\u6237\u754c\u9762\u7c7b\nclass UserInterface\n{\nprivate:\n    Database *database;          // \u6570\u636e\u5e93\u6307\u9488\n    static Account *currentUser; // \u5f53\u524d\u7528\u6237\u6307\u9488\n\npublic:\n    // \u6784\u9020\u51fd\u6570\n    UserInterface();\n\n    // \u6790\u6784\u51fd\u6570\n    ~UserInterface();\n\n    // \u8fd0\u884c\u4e0e\u4ea4\u4e92\u4e3b\u51fd\u6570\n    bool run();\n\n    // \u529f\u80fd\u51fd\u6570\n    Account *login(); // \u767b\u5f55\u754c\u9762\n    void welcome();   // \u6b22\u8fce\u754c\u9762\n    bool searchInfo();\n    bool searchStudent(); // \u67e5\u8be2\u5b66\u751f\u4fe1\u606f\n    bool searchLecture(); // \u67e5\u8be2\u8bfe\u7a0b\u4fe1\u606f\n    bool sortInfo();\n    bool sortStudent(); // \u6392\u5e8f\u5b66\u751f\u4fe1\u606f\n    bool sortLecture(); // \u6392\u5e8f\u8bfe\u7a0b\u4fe1\u606f\n    bool addInfo();\n    bool addStudent(); // \u6dfb\u52a0\u5b66\u751f\u4fe1\u606f\n    bool addLecture(); // \u6dfb\u52a0\u8bfe\u7a0b\u4fe1\u606f\n    bool deleteInfo();\n    bool deleteStudent(); // \u5220\u9664\u5b66\u751f\u4fe1\u606f\n    bool deleteLecture(); // \u5220\u9664\u8bfe\u7a0b\u4fe1\u606f\n    bool modifyInfo();\n    bool modifyStudent(); // \u4fee\u6539\u5b66\u751f\u4fe1\u606f\n    bool modifyLecture(); // \u4fee\u6539\u8bfe\u7a0b\u4fe1\u606f\n    bool load();          // \u8bfb\u53d6\u6587\u4ef6\u4fe1\u606f\n    bool save();          // \u4fdd\u5b58\u6587\u4ef6\u4fe1\u606f\n    bool print();         // \u6253\u5370\u4fe1\u606f\n    bool printStudent();  // \u6253\u5370\u5b66\u751f\u4fe1\u606f\n    bool printLecture();  // \u6253\u5370\u8bfe\u7a0b\u4fe1\u606f\n    bool debug();         // \u8c03\u8bd5\u6a21\u5f0f\n    bool about();         // \u5173\u4e8e\u7a0b\u5e8f\n    void quit();          // \u9000\u51fa\u7a0b\u5e8f\n    void pause();         // \u6682\u505c\u7a0b\u5e8f\n};\n</code></pre>"},{"location":"coursework/cpd/3/project/#\u6e90\u6587\u4ef6","title":"\u6e90\u6587\u4ef6","text":""},{"location":"coursework/cpd/3/project/#accountcpp","title":"<code>account.cpp</code>","text":"<pre><code>#include \"commonheader.h\"\n\n// \u6784\u9020\u51fd\u6570\nAccount::Account()\n{\n    name = \"DefaultName\";\n    uid = currentUid++;\n}\n\n// \u6784\u9020\u51fd\u6570\nAccount::Account(std::string inputName, std::string inputPassword)\n{\n    name = inputName;\n    password = inputPassword;\n    uid = currentUid++;\n}\n\n// \u6790\u6784\u51fd\u6570\nAccount::~Account() {}\n\n// \u83b7\u53d6\u5bc6\u7801\nstd::string Account::getPassword()\n{\n    return password;\n}\n\n// \u8bbe\u7f6e\u7528\u6237\u540d\nvoid Account::setName(std::string inputName)\n{\n    name = inputName;\n}\n\n// \u8bbe\u7f6e\u5bc6\u7801\nvoid Account::setPassword(std::string inputPassword)\n{\n    password = inputPassword;\n}\n\n// \u91cd\u8f7d\"&gt;&gt;\"\u8fd0\u7b97\u7b26\nstd::istream &amp;operator&gt;&gt;(std::istream &amp;is, Account &amp;account)\n{\n    is &gt;&gt; account.name &gt;&gt; account.password;\n    return is;\n}\n\n// \u91cd\u8f7d\"&lt;&lt;\"\u8fd0\u7b97\u7b26\nstd::ostream &amp;operator&lt;&lt;(std::ostream &amp;os, Account &amp;account)\n{\n    os &lt;&lt; account.name &lt;&lt; \"\\t\"\n       &lt;&lt; account.password &lt;&lt; std::endl;\n    return os;\n}\n</code></pre>"},{"location":"coursework/cpd/3/project/#databasecpp","title":"<code>database.cpp</code>","text":"<pre><code>#include \"commonheader.h\"\n\n// \u6784\u9020\u51fd\u6570\nDatabase::Database()\n{\n    studentList.makeEmpty();\n    requiredList.makeEmpty();\n    limitedList.makeEmpty();\n    optionalList.makeEmpty();\n    userList.makeEmpty();\n    adminList.makeEmpty();\n}\n\n// \u6790\u6784\u51fd\u6570\nDatabase::~Database()\n{\n    studentList.makeEmpty();\n    requiredList.makeEmpty();\n    limitedList.makeEmpty();\n    optionalList.makeEmpty();\n    userList.makeEmpty();\n    adminList.makeEmpty();\n}\n\n// \u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\nvoid Database::load()\n{\n    studentList.makeEmpty();\n    requiredList.makeEmpty();\n    limitedList.makeEmpty();\n    optionalList.makeEmpty();\n    try\n    {\n        loadStudent(\"savedata_student.dat\");\n        loadRequired(\"savedata_required.dat\");\n        loadLimited(\"savedata_limited.dat\");\n        loadOptional(\"savedata_optional.dat\");\n    }\n    catch (FileException e)\n    {\n        throw e;\n    }\n}\n\n// \u5411\u6587\u4ef6\u4e2d\u4fdd\u5b58\nvoid Database::save()\n{\n    try\n    {\n        saveStudent(\"savedata_student.dat\");\n        saveRequired(\"savedata_required.dat\");\n        saveLimited(\"savedata_limited.dat\");\n        saveOptional(\"savedata_optional.dat\");\n    }\n    catch (FileException e)\n    {\n        throw e;\n    }\n}\n\n// \u83b7\u53d6\u5b66\u751f\u5217\u8868\u957f\u5ea6\nint Database::getStudentListSize()\n{\n    return studentList.size();\n}\n\n// \u83b7\u53d6\u5fc5\u9009\u8bfe\u5217\u8868\u957f\u5ea6\nint Database::getRequiredListSize()\n{\n    return requiredList.size();\n}\n\n// \u83b7\u53d6\u9650\u9009\u8bfe\u5217\u8868\u957f\u5ea6\nint Database::getLimitedListSize()\n{\n    return limitedList.size();\n}\n\n// \u83b7\u53d6\u4efb\u9009\u8bfe\u5217\u8868\u957f\u5ea6\nint Database::getOptionalListSize()\n{\n    return optionalList.size();\n}\n\n// \u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\u5b66\u751f\u4fe1\u606f\nvoid Database::loadStudent(const std::string &amp;filename)\n{\n    encrypt(filename);\n    std::ifstream in(filename.c_str(), std::ios::in);\n    Node&lt;Student&gt; *stu;\n    // \u6253\u5f00\u6587\u4ef6\u6210\u529f\n    if (in)\n    {\n        in.seekg(0, std::ios::end);\n        int fileSize = in.tellg();\n        in.seekg(std::ios::beg);\n        while (fileSize - in.tellg() &gt; 2)\n        {\n            stu = new Node&lt;Student&gt;;\n            if (in &gt;&gt; stu-&gt;data)\n            {\n                studentList.insert_end(stu);\n            }\n            else\n            {\n                FileException e(filename, \"operate\", \"read\");\n                throw e;\n            }\n        }\n    }\n    else\n    {\n        FileException e(filename, \"open\", \"read\");\n        throw e;\n    }\n    in.close();\n    encrypt(filename);\n}\n\n// \u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\u5fc5\u9009\u8bfe\u4fe1\u606f\nvoid Database::loadRequired(const std::string &amp;filename)\n{\n    encrypt(filename);\n    std::ifstream in(filename.c_str(), std::ios::in);\n    Node&lt;LectureRequired&gt; *req;\n    // \u6253\u5f00\u6587\u4ef6\u6210\u529f\n    if (in)\n    {\n        in.seekg(0, std::ios::end);\n        int fileSize = in.tellg();\n        in.seekg(std::ios::beg);\n        while (fileSize - in.tellg() &gt; 2)\n        {\n            req = new Node&lt;LectureRequired&gt;;\n            if (in &gt;&gt; req-&gt;data)\n            {\n                requiredList.insert_end(req);\n            }\n            else\n            {\n                FileException e(filename, \"operate\", \"read\");\n                throw e;\n            }\n        }\n    }\n    else\n    {\n        FileException e(filename, \"open\", \"read\");\n        throw e;\n    }\n    in.close();\n    encrypt(filename);\n}\n\n// \u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\u9650\u9009\u8bfe\u4fe1\u606f\nvoid Database::loadLimited(const std::string &amp;filename)\n{\n    encrypt(filename);\n    std::ifstream in(filename.c_str(), std::ios::in);\n    Node&lt;LectureLimited&gt; *lim;\n    // \u6253\u5f00\u6587\u4ef6\u6210\u529f\n    if (in)\n    {\n        in.seekg(0, std::ios::end);\n        int fileSize = in.tellg();\n        in.seekg(std::ios::beg);\n        while (fileSize - in.tellg() &gt; 2)\n        {\n            lim = new Node&lt;LectureLimited&gt;;\n            if (in &gt;&gt; lim-&gt;data)\n            {\n                limitedList.insert_end(lim);\n            }\n            else\n            {\n                FileException e(filename, \"operate\", \"read\");\n                throw e;\n            }\n        }\n    }\n    else\n    {\n        FileException e(filename, \"open\", \"read\");\n        throw e;\n    }\n    in.close();\n    encrypt(filename);\n}\n\n// \u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\u4efb\u9009\u8bfe\u4fe1\u606f\nvoid Database::loadOptional(const std::string &amp;filename)\n{\n    encrypt(filename);\n    std::ifstream in(filename.c_str(), std::ios::in);\n    Node&lt;LectureOptional&gt; *opt;\n    // \u6253\u5f00\u6587\u4ef6\u6210\u529f\n    if (in)\n    {\n        in.seekg(0, std::ios::end);\n        int fileSize = in.tellg();\n        in.seekg(std::ios::beg);\n        while (fileSize - in.tellg() &gt; 2)\n        {\n            opt = new Node&lt;LectureOptional&gt;;\n            if (in &gt;&gt; opt-&gt;data)\n            {\n                optionalList.insert_end(opt);\n            }\n            else\n            {\n                FileException e(filename, \"operate\", \"read\");\n                throw e;\n            }\n        }\n    }\n    else\n    {\n        FileException e(filename, \"open\", \"read\");\n        throw e;\n    }\n    in.close();\n    encrypt(filename);\n}\n\n// \u5411\u6587\u4ef6\u4e2d\u4fdd\u5b58\u5b66\u751f\u4fe1\u606f\nvoid Database::saveStudent(const std::string &amp;filename)\n{\n    encrypt(filename);\n    std::ofstream out(filename.c_str(), std::ios::out | std::ios::trunc);\n    Node&lt;Student&gt; *stu;\n    // \u6253\u5f00\u6587\u4ef6\u6210\u529f\n    if (out)\n    {\n        stu = studentList.getFirst();\n        while (stu != nullptr)\n        {\n            if (!(out &lt;&lt; stu-&gt;data))\n            {\n                FileException e(filename, \"operate\", \"write\");\n                throw e;\n            }\n            stu = stu-&gt;next;\n        }\n    }\n    else\n    {\n        FileException e(filename, \"open\", \"write\");\n        throw e;\n    }\n    out.close();\n    encrypt(filename);\n}\n\n// \u5411\u6587\u4ef6\u4e2d\u4fdd\u5b58\u5fc5\u9009\u8bfe\u4fe1\u606f\nvoid Database::saveRequired(const std::string &amp;filename)\n{\n    encrypt(filename);\n    std::ofstream out(filename.c_str(), std::ios::out | std::ios::trunc);\n    Node&lt;LectureRequired&gt; *req;\n    // \u6253\u5f00\u6587\u4ef6\u6210\u529f\n    if (out)\n    {\n        req = requiredList.getFirst();\n        while (req != nullptr)\n        {\n            if (!(out &lt;&lt; req-&gt;data))\n            {\n                FileException e(filename, \"operate\", \"write\");\n                throw e;\n            }\n            req = req-&gt;next;\n        }\n    }\n    else\n    {\n        FileException e(filename, \"open\", \"write\");\n        throw e;\n    }\n    out.close();\n    encrypt(filename);\n}\n\n// \u5411\u6587\u4ef6\u4e2d\u4fdd\u5b58\u9650\u9009\u8bfe\u4fe1\u606f\nvoid Database::saveLimited(const std::string &amp;filename)\n{\n    encrypt(filename);\n    std::ofstream out(filename.c_str(), std::ios::out | std::ios::trunc);\n    Node&lt;LectureLimited&gt; *lim;\n    // \u6253\u5f00\u6587\u4ef6\u6210\u529f\n    if (out)\n    {\n        lim = limitedList.getFirst();\n        while (lim != nullptr)\n        {\n            if (!(out &lt;&lt; lim-&gt;data))\n            {\n                FileException e(filename, \"operate\", \"write\");\n                throw e;\n            }\n            lim = lim-&gt;next;\n        }\n    }\n    else\n    {\n        FileException e(filename, \"open\", \"write\");\n        throw e;\n    }\n    out.close();\n    encrypt(filename);\n}\n\n// \u5411\u6587\u4ef6\u4e2d\u4fdd\u5b58\u4efb\u9009\u8bfe\u4fe1\u606f\nvoid Database::saveOptional(const std::string &amp;filename)\n{\n    encrypt(filename);\n    std::ofstream out(filename.c_str(), std::ios::out | std::ios::trunc);\n    Node&lt;LectureOptional&gt; *opt;\n    // \u6253\u5f00\u6587\u4ef6\u6210\u529f\n    if (out)\n    {\n        opt = optionalList.getFirst();\n        while (opt != nullptr)\n        {\n            if (!(out &lt;&lt; opt-&gt;data))\n            {\n                FileException e(filename, \"operate\", \"write\");\n                throw e;\n            }\n            opt = opt-&gt;next;\n        }\n    }\n    else\n    {\n        FileException e(filename, \"open\", \"write\");\n        throw e;\n    }\n    out.close();\n    encrypt(filename);\n}\n\n// \u52a0\u5bc6\u6587\u4ef6\nvoid Database::encrypt(const std::string &amp;filename)\n{\n    std::vector&lt;std::string&gt; codestr;\n    std::ifstream in(filename.c_str(), std::ios::in);\n    std::string tmp;\n    while (std::getline(in, tmp))\n    {\n        codestr.push_back(tmp);\n    }\n    in.close();\n    std::ofstream out(filename.c_str(), std::ios::out | std::ios::trunc);\n    for (int i = 0; i &lt; codestr.size(); i++)\n    {\n        for (int j = 0; j &lt; codestr[i].size(); j++)\n        {\n            if ((char)~codestr[i][j] != 0x1a)\n            {\n                out &lt;&lt; (char)~codestr[i][j];\n            }\n            else\n            {\n                out &lt;&lt; (char)codestr[i][j];\n            }\n        }\n        out &lt;&lt; std::endl;\n    }\n    out.close();\n}\n\n// \u66f4\u5b89\u5168\u7684\u52a0\u5bc6\u6587\u4ef6\nvoid Database::encrypt_key(const std::string &amp;filename, const std::string &amp;keyFilename)\n{\n    std::string key;\n    std::ifstream key_in(keyFilename.c_str(), std::ios::in);\n    std::getline(key_in, key);\n    key_in.close();\n    std::vector&lt;std::string&gt; codestr;\n    std::ifstream in(filename.c_str(), std::ios::in);\n    std::string tmp;\n    while (std::getline(in, tmp))\n    {\n        codestr.push_back(tmp);\n    }\n    in.close();\n    std::ofstream out(filename.c_str(), std::ios::out | std::ios::trunc);\n    for (int i = 0; i &lt; codestr.size(); i++)\n    {\n        for (int j = 0; j &lt; codestr[i].size(); j++)\n        {\n            out &lt;&lt; (codestr[i][j] ^ key[(i + j) % key.length()]);\n        }\n        out &lt;&lt; std::endl;\n    }\n    out.close();\n}\n\n// \u751f\u6210\u5bc6\u94a5\nvoid Database::key_gen(const std::string &amp;filename)\n{\n    std::string key = std::to_string(time(0));\n    std::ofstream out(filename.c_str(), std::ios::out | std::ios::trunc);\n    out &lt;&lt; key;\n    out.close();\n}\n\n// \u65f6\u95f4\u6233\u8f6c\u6362\nstd::string Database::timeStampToString(const time_t &amp;timeStamp)\n{\n    struct tm *timeinfo;\n    char buffer[80];\n    timeinfo = localtime(&amp;timeStamp);\n    strftime(buffer, 80, \"%Y-%m-%d %H:%M:%S\", timeinfo);\n    return std::string(buffer);\n}\n\n// \u4ee5\u59d3\u540d\u4e3a\u51c6\u5220\u9664\u5b66\u751f\nbool Database::deleteStudent(const std::string &amp;name)\n{\n    Node&lt;Student&gt; *stu = studentList.getFirst();\n    bool flag = false;\n    if (stu != nullptr)\n    {\n        do\n        {\n            if (stu-&gt;data.getName() == name)\n            {\n                stu-&gt;data.printStudentInfo();\n                std::cout &lt;&lt; \"\u662f\u5426\u786e\u8ba4\u5220\u9664\uff1f[Y/N]\" &lt;&lt; std::endl;\n                char input;\n                std::cin &gt;&gt; input;\n                if (input == 'Y' || input == 'y')\n                {\n                    studentList.remove(stu);\n                    flag = true;\n                    std::cout &lt;&lt; \"\u5220\u9664\u6210\u529f\uff01\" &lt;&lt; std::endl;\n                }\n                else\n                {\n                    std::cout &lt;&lt; \"\u53d6\u6d88\u5220\u9664\uff01\" &lt;&lt; std::endl;\n                }\n            }\n            stu = studentList.getNext();\n        } while (stu != nullptr);\n    }\n    return flag;\n}\n\n// \u4ee5\u5b66\u53f7\u4e3a\u51c6\u5220\u9664\u5b66\u751f\nbool Database::deleteStudent(int studentNo)\n{\n    Node&lt;Student&gt; *stu = studentList.getFirst();\n    bool flag = false;\n    if (stu != nullptr)\n    {\n        do\n        {\n            if (stu-&gt;data.getStudentNo() == studentNo)\n            {\n                stu-&gt;data.printStudentInfo();\n                std::cout &lt;&lt; \"\u662f\u5426\u786e\u8ba4\u5220\u9664\uff1f[Y/N]\" &lt;&lt; std::endl;\n                char input;\n                input = _getch();\n                if (input == 'Y' || input == 'y')\n                {\n                    studentList.remove(stu);\n                    flag = true;\n                    std::cout &lt;&lt; \"\u5220\u9664\u6210\u529f\uff01\" &lt;&lt; std::endl;\n                }\n                else\n                {\n                    std::cout &lt;&lt; \"\u53d6\u6d88\u5220\u9664\uff01\" &lt;&lt; std::endl;\n                }\n            }\n            stu = studentList.getNext();\n        } while (stu != nullptr);\n    }\n    return flag;\n}\n\n// \u4ee5\u8bfe\u7a0b\u540d\u79f0\u4e3a\u51c6\u5220\u9664\u5fc5\u9009\u8bfe\nbool Database::deleteRequired(const std::string &amp;name)\n{\n    Node&lt;LectureRequired&gt; *req = requiredList.getFirst();\n    bool flag = false;\n    if (req != nullptr)\n    {\n        do\n        {\n            if (req-&gt;data.getName() == name)\n            {\n                req-&gt;data.printLectureInfo();\n                std::cout &lt;&lt; \"\u662f\u5426\u786e\u8ba4\u5220\u9664\uff1f[Y/N]\" &lt;&lt; std::endl;\n                char input;\n                std::cin &gt;&gt; input;\n                if (input == 'Y' || input == 'y')\n                {\n                    requiredList.remove(req);\n                    flag = true;\n                    std::cout &lt;&lt; \"\u5220\u9664\u6210\u529f\uff01\" &lt;&lt; std::endl;\n                }\n                else\n                {\n                    std::cout &lt;&lt; \"\u53d6\u6d88\u5220\u9664\uff01\" &lt;&lt; std::endl;\n                }\n            }\n            req = requiredList.getNext();\n        } while (req != nullptr);\n    }\n    return flag;\n}\n\n// \u4ee5\u8bfe\u7a0b\u540d\u79f0\u4e3a\u51c6\u5220\u9664\u9650\u9009\u8bfe\nbool Database::deleteLimited(const std::string &amp;name)\n{\n    Node&lt;LectureLimited&gt; *lim = limitedList.getFirst();\n    bool flag = false;\n    if (lim != nullptr)\n    {\n        do\n        {\n            if (lim-&gt;data.getName() == name)\n            {\n                lim-&gt;data.printLectureInfo();\n                std::cout &lt;&lt; \"\u662f\u5426\u786e\u8ba4\u5220\u9664\uff1f[Y/N]\" &lt;&lt; std::endl;\n                char input;\n                std::cin &gt;&gt; input;\n                if (input == 'Y' || input == 'y')\n                {\n                    limitedList.remove(lim);\n                    flag = true;\n                    std::cout &lt;&lt; \"\u5220\u9664\u6210\u529f\uff01\" &lt;&lt; std::endl;\n                }\n                else\n                {\n                    std::cout &lt;&lt; \"\u53d6\u6d88\u5220\u9664\uff01\" &lt;&lt; std::endl;\n                }\n            }\n            lim = limitedList.getNext();\n        } while (lim != nullptr);\n    }\n    return flag;\n}\n\n// \u4ee5\u8bfe\u7a0b\u540d\u79f0\u4e3a\u51c6\u5220\u9664\u4efb\u9009\u8bfe\nbool Database::deleteOptional(const std::string &amp;name)\n{\n    Node&lt;LectureOptional&gt; *opt = optionalList.getFirst();\n    bool flag = false;\n    if (opt != nullptr)\n    {\n        do\n        {\n            if (opt-&gt;data.getName() == name)\n            {\n                opt-&gt;data.printLectureInfo();\n                std::cout &lt;&lt; \"\u662f\u5426\u786e\u8ba4\u5220\u9664\uff1f[Y/N]\" &lt;&lt; std::endl;\n                char input;\n                std::cin &gt;&gt; input;\n                if (input == 'Y' || input == 'y')\n                {\n                    optionalList.remove(opt);\n                    flag = true;\n                    std::cout &lt;&lt; \"\u5220\u9664\u6210\u529f\uff01\" &lt;&lt; std::endl;\n                }\n                else\n                {\n                    std::cout &lt;&lt; \"\u53d6\u6d88\u5220\u9664\uff01\" &lt;&lt; std::endl;\n                }\n            }\n            opt = optionalList.getNext();\n        } while (opt != nullptr);\n    }\n    return flag;\n}\n\n// \u65b0\u589e\u5b66\u751f\nvoid Database::addStudent()\n{\n    Node&lt;Student&gt; *stu = new Node&lt;Student&gt;;\n    stu-&gt;data.updateInfo(*this);\n    studentList.insert_end(stu);\n}\n\n// \u65b0\u589e\u5fc5\u9009\u8bfe\nvoid Database::addRequired(const std::string &amp;name, int credit)\n{\n    Node&lt;LectureRequired&gt; *req = new Node&lt;LectureRequired&gt;;\n    req-&gt;data.setName(name);\n    req-&gt;data.setCredit(credit);\n    requiredList.insert_end(req);\n}\n\n// \u65b0\u589e\u9650\u9009\u8bfe\nvoid Database::addLimited(const std::string &amp;name, int credit)\n{\n    Node&lt;LectureLimited&gt; *lim = new Node&lt;LectureLimited&gt;;\n    lim-&gt;data.setName(name);\n    lim-&gt;data.setCredit(credit);\n    limitedList.insert_end(lim);\n}\n\n// \u65b0\u589e\u4efb\u9009\u8bfe\nvoid Database::addOptional(const std::string &amp;name, int credit)\n{\n    Node&lt;LectureOptional&gt; *opt = new Node&lt;LectureOptional&gt;;\n    opt-&gt;data.setName(name);\n    opt-&gt;data.setCredit(credit);\n    optionalList.insert_end(opt);\n}\n\n// \u5c06\u5b66\u751f\u4fe1\u606f\u6dfb\u52a0\u5230\u8bfe\u7a0b\nvoid Database::addStudentToLecture(const std::string &amp;name, LectureType type, Student &amp;stu)\n{\n    int dest = 0;\n    for (int i = 0; i &lt; stu.getLectureName().size(); i++)\n    {\n        if (stu.getLectureName()[i] == name)\n        {\n            dest = i;\n            break;\n        }\n    }\n    switch (type)\n    {\n    case REQUIRED:\n    {\n        Node&lt;LectureRequired&gt; *req = requiredList.getFirst();\n        if (req != nullptr)\n        {\n            do\n            {\n                if (req-&gt;data.getName() == name)\n                {\n                    req-&gt;data.addStudent(stu.getStudentNo(), stu.getName(), stu.getLectureScore()[dest], stu.getLectureGPA()[dest]);\n                }\n                req = requiredList.getNext();\n            } while (req != nullptr);\n        }\n        break;\n    }\n    case LIMITED:\n    {\n        Node&lt;LectureLimited&gt; *lim = limitedList.getFirst();\n        if (lim != nullptr)\n        {\n            do\n            {\n                if (lim-&gt;data.getName() == name)\n                {\n                    lim-&gt;data.addStudent(stu.getStudentNo(), stu.getName(), stu.getLectureScore()[dest], stu.getLectureGPA()[dest]);\n                }\n                lim = limitedList.getNext();\n            } while (lim != nullptr);\n        }\n        break;\n    }\n    case OPTIONAL:\n    {\n        Node&lt;LectureOptional&gt; *opt = optionalList.getFirst();\n        if (opt != nullptr)\n        {\n            do\n            {\n                if (opt-&gt;data.getName() == name)\n                {\n                    opt-&gt;data.addStudent(stu.getStudentNo(), stu.getName(), stu.getLectureScore()[dest], stu.getLectureGPA()[dest], stu.getLecturePF()[dest]);\n                }\n                opt = optionalList.getNext();\n            } while (opt != nullptr);\n        }\n        break;\n    }\n    default:\n        break;\n    }\n}\n\n////\u8f93\u51fa\u5b66\u751f\u4fe1\u606f\n// void Database::displayStudent(const std::string&amp; name)\n//{\n//  Node&lt;Student&gt;* stu = studentList.getFirst();\n//  if (stu != nullptr)\n//  {\n//      do\n//      {\n//          if (stu-&gt;data.getName() == name)\n//          {\n//              stu-&gt;data.printStudentInfo();\n//          }\n//          stu = studentList.getNext();\n//      } while (stu != nullptr);\n//  }\n// }\n//\n////\u8f93\u51fa\u5b66\u751f\u4fe1\u606f\n// void Database::displayStudent(int studentNo)\n//{\n//  Node&lt;Student&gt;* stu = studentList.getFirst();\n//  if (stu != nullptr)\n//  {\n//      do\n//      {\n//          if (stu-&gt;data.getStudentNo() == studentNo)\n//          {\n//              stu-&gt;data.printStudentInfo();\n//          }\n//          stu = studentList.getNext();\n//      } while (stu != nullptr);\n//  }\n// }\n//\n////\u8f93\u51fa\u8bfe\u7a0b\u4fe1\u606f\n// void Database::displayLecture(const std::string&amp; name)\n//{\n//  displayRequired(name);\n//  displayLimited(name);\n//  displayOptional(name);\n// }\n//\n////\u8f93\u51fa\u5fc5\u9009\u8bfe\u4fe1\u606f\n// void Database::displayRequired(const std::string&amp; name)\n//{\n//  Node&lt;LectureRequired&gt;* req = requiredList.getFirst();\n//  if (req != nullptr)\n//  {\n//      do\n//      {\n//          if (req-&gt;data.getName() == name)\n//          {\n//              req-&gt;data.printLectureInfo();\n//          }\n//          req = requiredList.getNext();\n//      } while (req != nullptr);\n//  }\n// }\n//\n////\u8f93\u51fa\u9650\u9009\u8bfe\u4fe1\u606f\n// void Database::displayLimited(const std::string&amp; name)\n//{\n//  Node&lt;LectureLimited&gt;* lim = limitedList.getFirst();\n//  if (lim != nullptr)\n//  {\n//      do\n//      {\n//          if (lim-&gt;data.getName() == name)\n//          {\n//              lim-&gt;data.printLectureInfo();\n//          }\n//          lim = limitedList.getNext();\n//      } while (lim != nullptr);\n//  }\n// }\n//\n////\u8f93\u51fa\u4efb\u9009\u8bfe\u4fe1\u606f\n// void Database::displayOptional(const std::string&amp; name)\n//{\n//  Node&lt;LectureOptional&gt;* opt = optionalList.getFirst();\n//  if (opt != nullptr)\n//  {\n//      do\n//      {\n//          if (opt-&gt;data.getName() == name)\n//          {\n//              opt-&gt;data.printLectureInfo();\n//          }\n//          opt = optionalList.getNext();\n//      } while (opt != nullptr);\n//  }\n// }\n//\n////\u8f93\u51fa\u6240\u6709\u5b66\u751f\n// int Database::displayAllStudent()\n//{\n//  Node&lt;Student&gt;* stu = studentList.getFirst();\n//  int count = 0;\n//  if (stu != nullptr)\n//  {\n//      do\n//      {\n//          stu-&gt;data.printStudentInfo();\n//          count++;\n//          stu = studentList.getNext();\n//      } while (stu != nullptr);\n//  }\n//  return count;\n// }\n//\n////\u8f93\u51fa\u6240\u6709\u8bfe\u7a0b\n// int Database::displayAllLecture(LectureType type)\n//{\n//  Node&lt;LectureRequired&gt;* req = requiredList.getFirst();\n//  Node&lt;LectureLimited&gt;* lim = limitedList.getFirst();\n//  Node&lt;LectureOptional&gt;* opt = optionalList.getFirst();\n//  int count = 0;\n//  switch (type)\n//  {\n//  case DEFAULT:\n//      if (req != nullptr)\n//      {\n//          do\n//          {\n//              req-&gt;data.printLectureInfo();\n//              count++;\n//              req = requiredList.getNext();\n//          } while (req != nullptr);\n//      }\n//      if (lim != nullptr)\n//      {\n//          do\n//          {\n//              lim-&gt;data.printLectureInfo();\n//              count++;\n//              lim = limitedList.getNext();\n//          } while (lim != nullptr);\n//      }\n//      if (opt != nullptr)\n//      {\n//          do\n//          {\n//              opt-&gt;data.printLectureInfo();\n//              count++;\n//              opt = optionalList.getNext();\n//          } while (opt != nullptr);\n//      }\n//      break;\n//  case REQUIRED:\n//      if (req != nullptr)\n//      {\n//          do\n//          {\n//              req-&gt;data.printLectureInfo();\n//              count++;\n//              req = requiredList.getNext();\n//          } while (req != nullptr);\n//      }\n//      break;\n//  case LIMITED:\n//      if (lim != nullptr)\n//      {\n//          do\n//          {\n//              lim-&gt;data.printLectureInfo();\n//              count++;\n//              lim = limitedList.getNext();\n//          } while (lim != nullptr);\n//      }\n//      break;\n//  case OPTIONAL:\n//      if (opt != nullptr)\n//      {\n//          do\n//          {\n//              opt-&gt;data.printLectureInfo();\n//              count++;\n//              opt = optionalList.getNext();\n//          } while (opt != nullptr);\n//      }\n//      break;\n//  default:\n//      break;\n//  }\n//  return count;\n// }\n\n// \u6309\u540d\u79f0\u4fee\u6539\u5b66\u751f\u4fe1\u606f\nbool Database::modifyStudent(const std::string &amp;name)\n{\n    Node&lt;Student&gt; *stu = studentList.getFirst();\n    bool flag = false;\n    if (stu != nullptr)\n    {\n        do\n        {\n            if (stu-&gt;data.getName() == name)\n            {\n                flag = true;\n                stu-&gt;data.printStudentInfo();\n                std::cout &lt;&lt; \"\u662f\u5426\u786e\u8ba4\u4fee\u6539\uff1f[Y/N]\" &lt;&lt; std::endl;\n                char input;\n                std::cin &gt;&gt; input;\n                if (input == 'Y' || input == 'y')\n                {\n                    stu-&gt;data.updateInfo(*this);\n                    std::cout &lt;&lt; \"\u4fee\u6539\u6210\u529f\uff01\" &lt;&lt; std::endl;\n                }\n                else\n                {\n                    std::cout &lt;&lt; \"\u53d6\u6d88\u4fee\u6539\uff01\" &lt;&lt; std::endl;\n                }\n            }\n            stu = studentList.getNext();\n        } while (stu != nullptr);\n    }\n    return flag;\n}\n\n// \u6309\u5b66\u53f7\u4fee\u6539\u5b66\u751f\u4fe1\u606f\nbool Database::modifyStudent(int studentNo)\n{\n    Node&lt;Student&gt; *stu = studentList.getFirst();\n    bool flag = false;\n    if (stu != nullptr)\n    {\n        do\n        {\n            if (stu-&gt;data.getStudentNo() == studentNo)\n            {\n                flag = true;\n                stu-&gt;data.printStudentInfo();\n                std::cout &lt;&lt; \"\u662f\u5426\u786e\u8ba4\u4fee\u6539\uff1f[Y/N]\" &lt;&lt; std::endl;\n                char input;\n                std::cin &gt;&gt; input;\n                if (input == 'Y' || input == 'y')\n                {\n                    stu-&gt;data.updateInfo(*this);\n                    std::cout &lt;&lt; \"\u4fee\u6539\u6210\u529f\uff01\" &lt;&lt; std::endl;\n                }\n                else\n                {\n                    std::cout &lt;&lt; \"\u53d6\u6d88\u4fee\u6539\uff01\" &lt;&lt; std::endl;\n                }\n            }\n            stu = studentList.getNext();\n        } while (stu != nullptr);\n    }\n    return flag;\n}\n\n// \u6309\u540d\u79f0\u4fee\u6539\u8bfe\u7a0b\u4fe1\u606f\nbool Database::modifyLecture(const std::string &amp;name)\n{\n    bool flag = false;\n    flag = modifyRequired(name) + modifyLimited(name) + modifyOptional(name);\n    return flag;\n}\n\n// \u6309\u540d\u79f0\u4fee\u6539\u5fc5\u9009\u8bfe\u4fe1\u606f\nbool Database::modifyRequired(const std::string &amp;name)\n{\n    Node&lt;LectureRequired&gt; *req = requiredList.getFirst();\n    bool flag = false;\n    if (req != nullptr)\n    {\n        do\n        {\n            if (req-&gt;data.getName() == name)\n            {\n                flag = true;\n                req-&gt;data.printLectureInfo();\n                std::cout &lt;&lt; \"\u662f\u5426\u786e\u8ba4\u4fee\u6539\uff1f[Y/N]\" &lt;&lt; std::endl;\n                char input;\n                input = _getch();\n                if (input == 'Y' || input == 'y')\n                {\n                    req-&gt;data.updateInfo(*this);\n                    std::cout &lt;&lt; \"\u4fee\u6539\u6210\u529f\uff01\" &lt;&lt; std::endl;\n                }\n                else\n                {\n                    std::cout &lt;&lt; \"\u53d6\u6d88\u4fee\u6539\uff01\" &lt;&lt; std::endl;\n                }\n            }\n            req = requiredList.getNext();\n        } while (req != nullptr);\n    }\n    return flag;\n}\n\n// \u6309\u540d\u79f0\u4fee\u6539\u9650\u9009\u8bfe\u4fe1\u606f\nbool Database::modifyLimited(const std::string &amp;name)\n{\n    Node&lt;LectureLimited&gt; *lim = limitedList.getFirst();\n    bool flag = false;\n    if (lim != nullptr)\n    {\n        do\n        {\n            if (lim-&gt;data.getName() == name)\n            {\n                flag = true;\n                lim-&gt;data.printLectureInfo();\n                std::cout &lt;&lt; \"\u662f\u5426\u786e\u8ba4\u4fee\u6539\uff1f[Y/N]\" &lt;&lt; std::endl;\n                char input;\n                input = _getch();\n                if (input == 'Y' || input == 'y')\n                {\n                    lim-&gt;data.updateInfo(*this);\n                    std::cout &lt;&lt; \"\u4fee\u6539\u6210\u529f\uff01\" &lt;&lt; std::endl;\n                }\n                else\n                {\n                    std::cout &lt;&lt; \"\u53d6\u6d88\u4fee\u6539\uff01\" &lt;&lt; std::endl;\n                }\n            }\n            lim = limitedList.getNext();\n        } while (lim != nullptr);\n    }\n    return flag;\n}\n\n// \u6309\u540d\u79f0\u4fee\u6539\u4efb\u9009\u8bfe\u4fe1\u606f\nbool Database::modifyOptional(const std::string &amp;name)\n{\n    Node&lt;LectureOptional&gt; *opt = optionalList.getFirst();\n    bool flag = false;\n    if (opt != nullptr)\n    {\n        do\n        {\n            if (opt-&gt;data.getName() == name)\n            {\n                flag = true;\n                opt-&gt;data.printLectureInfo();\n                std::cout &lt;&lt; \"\u662f\u5426\u786e\u8ba4\u4fee\u6539\uff1f[Y/N]\" &lt;&lt; std::endl;\n                char input;\n                input = _getch();\n                if (input == 'Y' || input == 'y')\n                {\n                    opt-&gt;data.updateInfo(*this);\n                    std::cout &lt;&lt; \"\u4fee\u6539\u6210\u529f\uff01\" &lt;&lt; std::endl;\n                }\n                else\n                {\n                    std::cout &lt;&lt; \"\u53d6\u6d88\u4fee\u6539\uff01\" &lt;&lt; std::endl;\n                }\n            }\n            opt = optionalList.getNext();\n        } while (opt != nullptr);\n    }\n    return flag;\n}\n\n// \u6309\u540d\u79f0\u67e5\u8be2\u5b66\u751f\u4fe1\u606f\nint Database::queryStudent(const std::string &amp;name, bool display)\n{\n    Node&lt;Student&gt; *stu = studentList.getFirst();\n    int count = 0;\n    if (stu != nullptr)\n    {\n        do\n        {\n            if (stu-&gt;data.getName() == name)\n            {\n                if (display)\n                    stu-&gt;data.printStudentInfo();\n                count++;\n            }\n            stu = studentList.getNext();\n        } while (stu != nullptr);\n    }\n    return count;\n}\n\n// \u6309\u5b66\u53f7\u67e5\u8be2\u5b66\u751f\u4fe1\u606f\nint Database::queryStudent(int studentNo, bool display)\n{\n    Node&lt;Student&gt; *stu = studentList.getFirst();\n    int count = 0;\n    if (stu != nullptr)\n    {\n        do\n        {\n            if (stu-&gt;data.getStudentNo() == studentNo)\n            {\n                if (display)\n                    stu-&gt;data.printStudentInfo();\n                count++;\n            }\n            stu = studentList.getNext();\n        } while (stu != nullptr);\n    }\n    return count;\n}\n\n// \u6309\u540d\u79f0\u67e5\u8be2\u8bfe\u7a0b\u4fe1\u606f\nint Database::queryLecture(const std::string &amp;name, bool display)\n{\n    int count = 0;\n    count = queryRequired(name, display) + queryLimited(name, display) + queryOptional(name, display);\n    return count;\n}\n\n// \u6309\u540d\u79f0\u67e5\u8be2\u5fc5\u9009\u8bfe\u4fe1\u606f\nint Database::queryRequired(const std::string &amp;name, bool display)\n{\n    Node&lt;LectureRequired&gt; *req = requiredList.getFirst();\n    int count = 0;\n    if (req != nullptr)\n    {\n        do\n        {\n            if (req-&gt;data.getName() == name)\n            {\n                if (display)\n                    req-&gt;data.printLectureInfo();\n                count++;\n            }\n            req = requiredList.getNext();\n        } while (req != nullptr);\n    }\n    return count;\n}\n\n// \u6309\u540d\u79f0\u67e5\u8be2\u9650\u9009\u8bfe\u4fe1\u606f\nint Database::queryLimited(const std::string &amp;name, bool display)\n{\n    Node&lt;LectureLimited&gt; *lim = limitedList.getFirst();\n    int count = 0;\n    if (lim != nullptr)\n    {\n        do\n        {\n            if (lim-&gt;data.getName() == name)\n            {\n                if (display)\n                    lim-&gt;data.printLectureInfo();\n                count++;\n            }\n            lim = limitedList.getNext();\n        } while (lim != nullptr);\n    }\n    return count;\n}\n\n// \u6309\u540d\u79f0\u67e5\u8be2\u4efb\u9009\u8bfe\u4fe1\u606f\nint Database::queryOptional(const std::string &amp;name, bool display)\n{\n    Node&lt;LectureOptional&gt; *opt = optionalList.getFirst();\n    int count = 0;\n    if (opt != nullptr)\n    {\n        do\n        {\n            if (opt-&gt;data.getName() == name)\n            {\n                if (display)\n                    opt-&gt;data.printLectureInfo();\n                count++;\n            }\n            opt = optionalList.getNext();\n        } while (opt != nullptr);\n    }\n    return count;\n}\n\n// \u6309\u540d\u79f0\u627e\u5230\u5b66\u751f\u4fe1\u606f\nStudent *Database::findStudent(const std::string &amp;name)\n{\n    Node&lt;Student&gt; *stu = studentList.getFirst();\n    if (stu != nullptr)\n    {\n        do\n        {\n            if (stu-&gt;data.getName() == name)\n            {\n                return &amp;stu-&gt;data;\n            }\n            stu = studentList.getNext();\n        } while (stu != nullptr);\n    }\n    return nullptr;\n}\n\n// \u6309\u5b66\u53f7\u627e\u5230\u5b66\u751f\u4fe1\u606f\nStudent *Database::findStudent(int studentNo)\n{\n    Node&lt;Student&gt; *stu = studentList.getFirst();\n    if (stu != nullptr)\n    {\n        do\n        {\n            if (stu-&gt;data.getStudentNo() == studentNo)\n            {\n                return &amp;stu-&gt;data;\n            }\n            stu = studentList.getNext();\n        } while (stu != nullptr);\n    }\n    return nullptr;\n}\n\n// \u6309\u540d\u79f0\u627e\u5230\u8bfe\u7a0b\u4fe1\u606f\nLecture *Database::findLecture(const std::string &amp;name)\n{\n    Lecture *lec = findRequired(name);\n    if (lec != nullptr)\n        return lec;\n    lec = findLimited(name);\n    if (lec != nullptr)\n        return lec;\n    lec = findOptional(name);\n    if (lec != nullptr)\n        return lec;\n    return nullptr;\n}\n\n// \u6309\u540d\u79f0\u627e\u5230\u5fc5\u9009\u8bfe\u4fe1\u606f\nLectureRequired *Database::findRequired(const std::string &amp;name)\n{\n    Node&lt;LectureRequired&gt; *req = requiredList.getFirst();\n    if (req != nullptr)\n    {\n        do\n        {\n            if (req-&gt;data.getName() == name)\n            {\n                return &amp;req-&gt;data;\n            }\n            req = requiredList.getNext();\n        } while (req != nullptr);\n    }\n    return nullptr;\n}\n\n// \u6309\u540d\u79f0\u627e\u5230\u9650\u9009\u8bfe\u4fe1\u606f\nLectureLimited *Database::findLimited(const std::string &amp;name)\n{\n    Node&lt;LectureLimited&gt; *lim = limitedList.getFirst();\n    if (lim != nullptr)\n    {\n        do\n        {\n            if (lim-&gt;data.getName() == name)\n            {\n                return &amp;lim-&gt;data;\n            }\n            lim = limitedList.getNext();\n        } while (lim != nullptr);\n    }\n    return nullptr;\n}\n\n// \u6309\u540d\u79f0\u627e\u5230\u4efb\u9009\u8bfe\u4fe1\u606f\nLectureOptional *Database::findOptional(const std::string &amp;name)\n{\n    Node&lt;LectureOptional&gt; *opt = optionalList.getFirst();\n    if (opt != nullptr)\n    {\n        do\n        {\n            if (opt-&gt;data.getName() == name)\n            {\n                return &amp;opt-&gt;data;\n            }\n            opt = optionalList.getNext();\n        } while (opt != nullptr);\n    }\n    return nullptr;\n}\n\n// \u6309\u5173\u952e\u5217\u6392\u5e8f\u5b66\u751f\uff0cdirection\u4e3a1\u8868\u793a\u5347\u5e8f\uff0c\u4e3a-1\u8868\u793a\u964d\u5e8f\uff0ckeycol\u4e3a\u5173\u952e\u5217\n// \u5173\u952e\u5217\uff1a0-studentNo\uff0c1-name\uff0c2-totalScore\uff0c3-totalCredit\uff0c4-totalGPA\uff0c5-averageScore\uff0c6-averageGPA\nvoid Database::sortStudent(int direction, int keycol)\n{\n    Student **head;\n    int length = studentList.size();\n    if (length &gt; 0)\n    {\n        head = new Student *[length];\n        Node&lt;Student&gt; *tmp = studentList.getFirst();\n        int cnt = 0;\n        do\n        {\n            head[cnt] = &amp;tmp-&gt;data;\n            tmp = studentList.getNext();\n            cnt++;\n        } while (tmp != nullptr);\n        sortStudentCustom(head, length, direction, keycol);\n        int widthStudentNo = 5, widthName = 5;\n        for (cnt = 0; cnt &lt; length; cnt++)\n        {\n            if (std::to_string(head[cnt]-&gt;getStudentNo()).length() &gt; widthStudentNo)\n                widthStudentNo = std::to_string(head[cnt]-&gt;getStudentNo()).length() + 1;\n            if (head[cnt]-&gt;getName().length() &gt; widthName)\n                widthName = head[cnt]-&gt;getName().length() + 1;\n        }\n        std::cout.width(widthStudentNo);\n        std::cout &lt;&lt; \"\u5b66\u53f7\";\n        std::cout.width(widthName);\n        std::cout &lt;&lt; \"\u59d3\u540d\";\n        std::cout.width(5);\n        std::cout &lt;&lt; \"\u8bfe\u6570\";\n        std::cout.width(5);\n        std::cout &lt;&lt; \"\u5b66\u5206\";\n        std::cout.width(5);\n        std::cout &lt;&lt; \"\u5747\u5206\";\n        std::cout.width(5);\n        std::cout &lt;&lt; \"\u5747\u7ee9\" &lt;&lt; std::endl;\n        for (cnt = 0; cnt &lt; length; cnt++)\n            head[cnt]-&gt;printInfo(widthStudentNo, widthName);\n        delete[] head;\n    }\n    else\n    {\n        std::cout &lt;&lt; \"\u5b66\u751f\u4fe1\u606f\u4e3a\u7a7a\uff01\" &lt;&lt; std::endl;\n    }\n}\n\n// \u6309\u5173\u952e\u5217\u6392\u5e8f\u8bfe\u7a0b\uff0cdirection\u4e3a1\u8868\u793a\u5347\u5e8f\uff0c\u4e3a-1\u8868\u793a\u964d\u5e8f\uff0ckeycol\u4e3a\u5173\u952e\u5217\n// \u5173\u952e\u5217\uff1a0-name\uff0c1-credit\uff0c2-studentNum\uff0c3-averageScore\uff0c4-averageGPA\nvoid Database::sortLecture(LectureType type, int direction, int keycol)\n{\n    Lecture **head;\n    int length = 0;\n    switch (type)\n    {\n    case DEFAULT:\n        length = requiredList.size() + limitedList.size() + optionalList.size();\n        if (length &gt; 0)\n        {\n            head = new Lecture *[length];\n            int cnt = 0;\n            Node&lt;LectureRequired&gt; *req = requiredList.getFirst();\n            if (req != nullptr)\n            {\n                do\n                {\n                    head[cnt] = &amp;req-&gt;data;\n                    req = requiredList.getNext();\n                    cnt++;\n                } while (req != nullptr);\n            }\n            Node&lt;LectureLimited&gt; *lim = limitedList.getFirst();\n            if (lim != nullptr)\n            {\n                do\n                {\n                    head[cnt] = &amp;lim-&gt;data;\n                    lim = limitedList.getNext();\n                    cnt++;\n                } while (lim != nullptr);\n            }\n            Node&lt;LectureOptional&gt; *opt = optionalList.getFirst();\n            if (opt != nullptr)\n            {\n                do\n                {\n                    head[cnt] = &amp;opt-&gt;data;\n                    opt = optionalList.getNext();\n                    cnt++;\n                } while (opt != nullptr);\n            }\n            sortLectureCustom(head, length, direction, keycol);\n            int widthName = 5;\n            for (cnt = 0; cnt &lt; length; cnt++)\n            {\n                if (head[cnt]-&gt;getName().length() &gt; widthName)\n                    widthName = head[cnt]-&gt;getName().length() + 1;\n            }\n            std::cout.width(widthName);\n            std::cout &lt;&lt; \"\u540d\u79f0\";\n            std::cout.width(5);\n            std::cout &lt;&lt; \"\u7c7b\u578b\";\n            std::cout.width(5);\n            std::cout &lt;&lt; \"\u5b66\u5206\";\n            std::cout.width(5);\n            std::cout &lt;&lt; \"\u4eba\u6570\";\n            std::cout.width(5);\n            std::cout &lt;&lt; \"\u5747\u5206\";\n            std::cout.width(5);\n            std::cout &lt;&lt; \"\u5747\u7ee9\" &lt;&lt; std::endl;\n            for (cnt = 0; cnt &lt; length; cnt++)\n                head[cnt]-&gt;printInfo(widthName);\n            delete[] head;\n        }\n        else\n        {\n            std::cout &lt;&lt; \"\u8bfe\u7a0b\u4fe1\u606f\u4e3a\u7a7a\uff01\" &lt;&lt; std::endl;\n        }\n        break;\n    case REQUIRED:\n        length = requiredList.size();\n        if (length &gt; 0)\n        {\n            head = new Lecture *[length];\n            int cnt = 0;\n            Node&lt;LectureRequired&gt; *req = requiredList.getFirst();\n            if (req != nullptr)\n            {\n                do\n                {\n                    head[cnt] = &amp;req-&gt;data;\n                    req = requiredList.getNext();\n                    cnt++;\n                } while (req != nullptr);\n            }\n            sortLectureCustom(head, length, direction, keycol);\n            int widthName = 5;\n            for (cnt = 0; cnt &lt; length; cnt++)\n            {\n                if (head[cnt]-&gt;getName().length() &gt; widthName)\n                    widthName = head[cnt]-&gt;getName().length() + 1;\n            }\n            std::cout.width(widthName);\n            std::cout &lt;&lt; \"\u540d\u79f0\";\n            std::cout.width(5);\n            std::cout &lt;&lt; \"\u7c7b\u578b\";\n            std::cout.width(5);\n            std::cout &lt;&lt; \"\u5b66\u5206\";\n            std::cout.width(5);\n            std::cout &lt;&lt; \"\u4eba\u6570\";\n            std::cout.width(5);\n            std::cout &lt;&lt; \"\u5747\u5206\";\n            std::cout.width(5);\n            std::cout &lt;&lt; \"\u5747\u7ee9\" &lt;&lt; std::endl;\n            for (cnt = 0; cnt &lt; length; cnt++)\n                head[cnt]-&gt;printInfo(widthName);\n            delete[] head;\n        }\n        else\n        {\n            std::cout &lt;&lt; \"\u5fc5\u9009\u8bfe\u4fe1\u606f\u4e3a\u7a7a\uff01\" &lt;&lt; std::endl;\n        }\n        break;\n    case LIMITED:\n        length = limitedList.size();\n        if (length &gt; 0)\n        {\n            head = new Lecture *[length];\n            int cnt = 0;\n            Node&lt;LectureLimited&gt; *lim = limitedList.getFirst();\n            if (lim != nullptr)\n            {\n                do\n                {\n                    head[cnt] = &amp;lim-&gt;data;\n                    lim = limitedList.getNext();\n                    cnt++;\n                } while (lim != nullptr);\n            }\n            sortLectureCustom(head, length, direction, keycol);\n            int widthName = 5;\n            for (cnt = 0; cnt &lt; length; cnt++)\n            {\n                if (head[cnt]-&gt;getName().length() &gt; widthName)\n                    widthName = head[cnt]-&gt;getName().length() + 1;\n            }\n            std::cout.width(widthName);\n            std::cout &lt;&lt; \"\u540d\u79f0\";\n            std::cout.width(5);\n            std::cout &lt;&lt; \"\u7c7b\u578b\";\n            std::cout.width(5);\n            std::cout &lt;&lt; \"\u5b66\u5206\";\n            std::cout.width(5);\n            std::cout &lt;&lt; \"\u4eba\u6570\";\n            std::cout.width(5);\n            std::cout &lt;&lt; \"\u5747\u5206\";\n            std::cout.width(5);\n            std::cout &lt;&lt; \"\u5747\u7ee9\" &lt;&lt; std::endl;\n            for (cnt = 0; cnt &lt; length; cnt++)\n                head[cnt]-&gt;printInfo(widthName);\n            delete[] head;\n        }\n        else\n        {\n            std::cout &lt;&lt; \"\u9650\u9009\u8bfe\u4fe1\u606f\u4e3a\u7a7a\uff01\" &lt;&lt; std::endl;\n        }\n        break;\n    case OPTIONAL:\n        length = optionalList.size();\n        if (length &gt; 0)\n        {\n            head = new Lecture *[length];\n            int cnt = 0;\n            Node&lt;LectureOptional&gt; *opt = optionalList.getFirst();\n            if (opt != nullptr)\n            {\n                do\n                {\n                    head[cnt] = &amp;opt-&gt;data;\n                    opt = optionalList.getNext();\n                    cnt++;\n                } while (opt != nullptr);\n            }\n            sortLectureCustom(head, length, direction, keycol);\n            int widthName = 5;\n            for (cnt = 0; cnt &lt; length; cnt++)\n            {\n                if (head[cnt]-&gt;getName().length() &gt; widthName)\n                    widthName = head[cnt]-&gt;getName().length() + 1;\n            }\n            std::cout.width(widthName);\n            std::cout &lt;&lt; \"\u540d\u79f0\";\n            std::cout.width(5);\n            std::cout &lt;&lt; \"\u7c7b\u578b\";\n            std::cout.width(5);\n            std::cout &lt;&lt; \"\u5b66\u5206\";\n            std::cout.width(5);\n            std::cout &lt;&lt; \"\u4eba\u6570\";\n            std::cout.width(5);\n            std::cout &lt;&lt; \"\u5747\u5206\";\n            std::cout.width(5);\n            std::cout &lt;&lt; \"\u5747\u7ee9\" &lt;&lt; std::endl;\n            for (cnt = 0; cnt &lt; length; cnt++)\n                head[cnt]-&gt;printInfo(widthName);\n            delete[] head;\n        }\n        else\n        {\n            std::cout &lt;&lt; \"\u4efb\u9009\u8bfe\u4fe1\u606f\u4e3a\u7a7a\uff01\" &lt;&lt; std::endl;\n        }\n        break;\n    default:\n        std::cout &lt;&lt; \"\u8bfe\u7a0b\u7c7b\u578b\u9519\u8bef\uff01\" &lt;&lt; std::endl;\n        break;\n    }\n}\n\n// \u5b66\u751f\u6392\u5e8f\u51fd\u6570\uff0cdirection\u4e3a1\u8868\u793a\u5347\u5e8f\uff0c\u4e3a-1\u8868\u793a\u964d\u5e8f\uff0ckeycol\u4e3a\u5173\u952e\u5217\n// \u5173\u952e\u5217\uff1a0-studentNo\uff0c1-name\uff0c2-totalScore\uff0c3-totalCredit\uff0c4-totalGPA\uff0c5-averageScore\uff0c6-averageGPA\nvoid Database::sortStudentCustom(Student **head, int length, int direction, int keycol)\n{\n    Student *tmp;\n    bool flag;\n    do\n    {\n        flag = false;\n        for (int i = 0; i &lt; length - 1; i++)\n        {\n            if (compareStudent(head[i], head[i + 1], direction, keycol) &lt; 0)\n            {\n                tmp = head[i];\n                head[i] = head[i + 1];\n                head[i + 1] = tmp;\n                flag = true;\n            }\n        }\n    } while (flag);\n}\n\n// \u8bfe\u7a0b\u6392\u5e8f\u51fd\u6570\uff0cdirection\u4e3a1\u8868\u793a\u5347\u5e8f\uff0c\u4e3a-1\u8868\u793a\u964d\u5e8f\uff0ckeycol\u4e3a\u5173\u952e\u5217\n// \u5173\u952e\u5217\uff1a0-name\uff0c1-credit\uff0c2-studentNum\uff0c3-averageScore\uff0c4-averageGPA\nvoid Database::sortLectureCustom(Lecture **head, int length, int direction, int keycol)\n{\n    Lecture *tmp;\n    bool flag;\n    do\n    {\n        flag = false;\n        for (int i = 0; i &lt; length - 1; i++)\n        {\n            if (compareLecture(head[i], head[i + 1], direction, keycol) &lt; 0)\n            {\n                tmp = head[i];\n                head[i] = head[i + 1];\n                head[i + 1] = tmp;\n                flag = true;\n            }\n        }\n    } while (flag);\n}\n\n// \u5b66\u751f\u6bd4\u8f83\u51fd\u6570\uff0cdirection\u4e3a1\u8868\u793a\u5347\u5e8f\uff0c\u4e3a-1\u8868\u793a\u964d\u5e8f\uff0ckeycol\u4e3a\u5173\u952e\u5217\n// \u5173\u952e\u5217\uff1a0-studentNo\uff0c1-name\uff0c2-totalScore\uff0c3-totalCredit\uff0c4-totalGPA\uff0c5-averageScore\uff0c6-averageGPA\ndouble Database::compareStudent(Student *a, Student *b, int direction, int keycol)\n{\n    double compare = 0;\n    switch (keycol)\n    {\n    case 0:\n        compare = a-&gt;getStudentNo() - b-&gt;getStudentNo();\n        break;\n    case 1:\n        compare = (a-&gt;getName() &gt; b-&gt;getName());\n        break;\n    case 2:\n        compare = a-&gt;getTotalScore() - b-&gt;getTotalScore();\n        break;\n    case 3:\n        compare = a-&gt;getTotalCredit() - b-&gt;getTotalCredit();\n        break;\n    case 4:\n        compare = a-&gt;getTotalGPA() - b-&gt;getTotalGPA();\n        break;\n    case 5:\n        compare = a-&gt;getAverageScore() - b-&gt;getAverageScore();\n        break;\n    case 6:\n        compare = a-&gt;getAverageGPA() - b-&gt;getAverageGPA();\n        break;\n    default:\n        compare = 0;\n        break;\n    }\n    return compare * direction;\n}\n\n// \u8bfe\u7a0b\u6bd4\u8f83\u51fd\u6570\uff0cdirection\u4e3a1\u8868\u793a\u5347\u5e8f\uff0c\u4e3a-1\u8868\u793a\u964d\u5e8f\uff0ckeycol\u4e3a\u5173\u952e\u5217\n// \u5173\u952e\u5217\uff1a0-name\uff0c1-credit\uff0c2-studentNum\uff0c3-averageScore\uff0c4-averageGPA\ndouble Database::compareLecture(Lecture *a, Lecture *b, int direction, int keycol)\n{\n    double compare = 0;\n    switch (keycol)\n    {\n    case 0:\n        compare = (a-&gt;getName() &gt; b-&gt;getName());\n        break;\n    case 1:\n        compare = a-&gt;getCredit() - b-&gt;getCredit();\n        break;\n    case 2:\n        compare = a-&gt;getStudentNum() - b-&gt;getStudentNum();\n        break;\n    case 3:\n        compare = a-&gt;getAverageScore() - b-&gt;getAverageScore();\n        break;\n    case 4:\n        compare = a-&gt;getAverageGPA() - b-&gt;getAverageGPA();\n        break;\n    default:\n        compare = 0;\n        break;\n    }\n    return compare * direction;\n}\n\n// \u6253\u5370\u5168\u90e8\u5b66\u751f\u4fe1\u606f\nvoid Database::printStudent()\n{\n    std::ofstream out(\"output_student_all.md\", std::ios::out | std::ios::trunc);\n    if (!out.is_open())\n    {\n        std::cerr &lt;&lt; \"Error: cannot open file \\\"\"\n                  &lt;&lt; \"output_student_all.md\"\n                  &lt;&lt; \"\\\".\" &lt;&lt; std::endl;\n        return;\n    }\n    out &lt;&lt; \"&lt;h1&gt;&lt;center&gt;\u00d7\u00d7\u5927\u5b66\u5b66\u751f\u6210\u7ee9\u5355&lt;/center&gt;&lt;/h1&gt;\" &lt;&lt; std::endl\n        &lt;&lt; std::endl\n        &lt;&lt; \"&lt;h2&gt;&lt;center&gt;\u5168\u90e8\u5b66\u751f\u6210\u7ee9&lt;/center&gt;&lt;/h2&gt;\" &lt;&lt; std::endl\n        &lt;&lt; std::endl\n        &lt;&lt; \"&lt;table border=\\\"1\\\" align=\\\"center\\\"&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;th&gt;\u5b66\u53f7&lt;/th&gt;&lt;th&gt;\u59d3\u540d&lt;/th&gt;&lt;th&gt;\u603b\u5b66\u5206&lt;/th&gt;&lt;th&gt;\u5e73\u5747\u6210\u7ee9&lt;/th&gt;&lt;th&gt;\u5e73\u5747\u7ee9\u70b9&lt;/th&gt;&lt;/tr&gt;\" &lt;&lt; std::endl;\n    Student **head;\n    int length = studentList.size();\n    if (length &gt; 0)\n    {\n        head = new Student *[length];\n        Node&lt;Student&gt; *tmp = studentList.getFirst();\n        int cnt = 0;\n        do\n        {\n            head[cnt] = &amp;tmp-&gt;data;\n            tmp = studentList.getNext();\n            cnt++;\n        } while (tmp != nullptr);\n        sortStudentCustom(head, length, -1, 0);\n        for (cnt = 0; cnt &lt; length; cnt++)\n        {\n            out &lt;&lt; \"&lt;tr&gt;&lt;td&gt;\" &lt;&lt; head[cnt]-&gt;getStudentNo()\n                &lt;&lt; \"&lt;/td&gt;&lt;td&gt;\" &lt;&lt; head[cnt]-&gt;getName()\n                &lt;&lt; \"&lt;/td&gt;&lt;td&gt;\" &lt;&lt; head[cnt]-&gt;getTotalCredit()\n                &lt;&lt; \"&lt;/td&gt;&lt;td&gt;\" &lt;&lt; head[cnt]-&gt;getAverageScore()\n                &lt;&lt; \"&lt;/td&gt;&lt;td&gt;\" &lt;&lt; head[cnt]-&gt;getAverageGPA() &lt;&lt; \"&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl;\n        }\n        delete[] head;\n    }\n    else\n    {\n        out &lt;&lt; \"&lt;tr&gt;&lt;td colspan=\\\"5\\\"&gt;\u65e0\u5b66\u751f\u4fe1\u606f&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl;\n    }\n    out &lt;&lt; \"&lt;/table&gt;\" &lt;&lt; std::endl\n        &lt;&lt; std::endl\n        &lt;&lt; \"\u6253\u5370\u65f6\u95f4\uff1a\" &lt;&lt; timeStampToString(time(0)) &lt;&lt; std::endl\n        &lt;&lt; std::endl\n        &lt;&lt; \"***\" &lt;&lt; std::endl\n        &lt;&lt; std::endl\n        &lt;&lt; \"&lt;h1&gt;&lt;center&gt;\u6210\u7ee9\u5355\u8bf4\u660e&lt;/center&gt;&lt;/h1&gt;\" &lt;&lt; std::endl\n        &lt;&lt; std::endl\n        &lt;&lt; \"1. \u672c\u6210\u7ee9\u5355\u6309\u7167\u5b66\u53f7\u5347\u5e8f\u6392\u5217\" &lt;&lt; std::endl\n        &lt;&lt; \"2. \u672c\u6210\u7ee9\u5355\u4ec5\u5305\u542b\u5168\u90e8\u5b66\u751f\u7684\u603b\u6210\u7ee9\u4fe1\u606f\" &lt;&lt; std::endl\n        &lt;&lt; \"3. \u672c\u6210\u7ee9\u5355\u4ec5\u4f9b\u53c2\u8003\uff0c\u4e0d\u4f5c\u4e3a\u6700\u7ec8\u6210\u7ee9\" &lt;&lt; std::endl\n        &lt;&lt; \"4. \u672c\u6210\u7ee9\u5355\u7531\u5b66\u751f\u6210\u7ee9\u7ba1\u7406\u7cfb\u7edf\u81ea\u52a8\u751f\u6210\" &lt;&lt; std::endl\n        &lt;&lt; \"5. \u672c\u6210\u7ee9\u5355\u6700\u7ec8\u89e3\u91ca\u6743\u5f52\u00d7\u00d7\u5927\u5b66\u6240\u6709\" &lt;&lt; std::endl\n        &lt;&lt; std::endl\n        &lt;&lt; \"***\" &lt;&lt; std::endl\n        &lt;&lt; std::endl\n        &lt;&lt; \"&lt;h1&gt;&lt;center&gt;\u6210\u7ee9\u8bb0\u8f7d\u8bf4\u660e&lt;/center&gt;&lt;/h1&gt;\" &lt;&lt; std::endl\n        &lt;&lt; std::endl\n        &lt;&lt; \"&lt;table border=\\\"1\\\" align=\\\"center\\\"&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;th&gt;\u7b49\u7ea7\u5236\u6210\u7ee9&lt;/th&gt;&lt;th&gt;\u7ee9\u70b9&lt;/th&gt;&lt;th&gt;\u5bf9\u5e94\u767e\u5206\u5236\u6210\u7ee9\u8303\u56f4&lt;/th&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;td&gt;A+&lt;/td&gt;&lt;td rowspan=\\\"3\\\"&gt;4.0&lt;/td&gt;&lt;td rowspan=\\\"2\\\"&gt;95~100&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;td&gt;A&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;td&gt;A-&lt;/td&gt;&lt;td&gt;90~94&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;td&gt;B+&lt;/td&gt;&lt;td&gt;3.6&lt;/td&gt;&lt;td&gt;85~89&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;td&gt;B&lt;/td&gt;&lt;td&gt;3.3&lt;/td&gt;&lt;td&gt;80~84&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;td&gt;B-&lt;/td&gt;&lt;td&gt;3.0&lt;/td&gt;&lt;td&gt;77~79&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;td&gt;C+&lt;/td&gt;&lt;td&gt;2.6&lt;/td&gt;&lt;td&gt;73~76&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;td&gt;C&lt;/td&gt;&lt;td&gt;2.3&lt;/td&gt;&lt;td&gt;70~72&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;td&gt;C-&lt;/td&gt;&lt;td&gt;2.0&lt;/td&gt;&lt;td&gt;67~69&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;td&gt;D+&lt;/td&gt;&lt;td&gt;1.6&lt;/td&gt;&lt;td&gt;63~66&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;td&gt;D&lt;/td&gt;&lt;td&gt;1.3&lt;/td&gt;&lt;td&gt;60~62&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;td&gt;F&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0~59&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;/table&gt;\" &lt;&lt; std::endl\n        &lt;&lt; std::endl\n        &lt;&lt; \"\u5e73\u5747\u5b66\u5206\u7ee9\uff08GPA\uff09\u7684\u8ba1\u7b97\u65b9\u6cd5\u4e3a\uff1a$GPA=\\\\frac{\\\\Sigma \u8bfe\u7a0b\u5b66\u5206 * \u7ee9\u70b9}{\\\\Sigma \u8bfe\u7a0b\u5b66\u5206}$\" &lt;&lt; std::endl\n        &lt;&lt; std::endl;\n    out.close();\n    std::cout &lt;&lt; \"\u6253\u5370\u6210\u529f\uff01\" &lt;&lt; std::endl;\n}\n\n// \u6309\u5b66\u53f7\u6253\u5370\u5b66\u751f\u4fe1\u606f\nvoid Database::printStudent(int studentNo)\n{\n    Student *stu = findStudent(studentNo);\n    if (stu == nullptr)\n    {\n        std::cout &lt;&lt; \"\u672a\u627e\u5230\u8be5\u5b66\u751f\uff01\" &lt;&lt; std::endl;\n        return;\n    }\n    std::string filename = \"output_student_\" + std::to_string(studentNo) + \"_\" + stu-&gt;getName() + \".md\";\n    std::ofstream out(filename, std::ios::out | std::ios::trunc);\n    if (!out.is_open())\n    {\n        std::cerr &lt;&lt; \"Error: cannot open file \\\"\" &lt;&lt; filename &lt;&lt; \"\\\".\" &lt;&lt; std::endl;\n        return;\n    }\n    out &lt;&lt; \"&lt;h1&gt;&lt;center&gt;\u00d7\u00d7\u5927\u5b66\u5b66\u751f\u6210\u7ee9\u5355&lt;/center&gt;&lt;/h1&gt;\" &lt;&lt; std::endl\n        &lt;&lt; std::endl\n        &lt;&lt; \"\u5b66\u53f7\uff1a\" &lt;&lt; studentNo &lt;&lt; std::endl\n        &lt;&lt; std::endl\n        &lt;&lt; \"\u59d3\u540d\uff1a\" &lt;&lt; stu-&gt;getName() &lt;&lt; std::endl\n        &lt;&lt; std::endl\n        &lt;&lt; \"\u603b\u5b66\u5206\uff1a\" &lt;&lt; stu-&gt;getTotalCredit() &lt;&lt; std::endl\n        &lt;&lt; std::endl\n        &lt;&lt; \"\u5e73\u5747\u6210\u7ee9\uff1a\" &lt;&lt; stu-&gt;getAverageScore() &lt;&lt; std::endl\n        &lt;&lt; std::endl\n        &lt;&lt; \"\u5e73\u5747\u7ee9\u70b9\uff1a\" &lt;&lt; stu-&gt;getAverageGPA() &lt;&lt; std::endl\n        &lt;&lt; std::endl\n        &lt;&lt; \"&lt;table border=\\\"1\\\" align=\\\"center\\\"&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;th&gt;\u8bfe\u7a0b\u540d\u79f0&lt;/th&gt;&lt;th&gt;\u8bfe\u7a0b\u7c7b\u578b&lt;/th&gt;&lt;th&gt;\u5b66\u5206&lt;/th&gt;&lt;th&gt;\u6210\u7ee9&lt;/th&gt;&lt;th&gt;\u7ee9\u70b9&lt;/th&gt;&lt;/tr&gt;\" &lt;&lt; std::endl;\n    if (stu-&gt;getLectureNum() &gt; 0)\n    {\n        for (int i = 0; i &lt; stu-&gt;getLectureNum(); i++)\n        {\n            if (!stu-&gt;getLecturePF()[i])\n            {\n                out &lt;&lt; \"&lt;tr&gt;&lt;td&gt;\" &lt;&lt; stu-&gt;getLectureName()[i]\n                    &lt;&lt; \"&lt;/td&gt;&lt;td&gt;\" &lt;&lt; ((stu-&gt;getLectureType()[i] == REQUIRED) ? \"\u5fc5\u9009\u8bfe\" : ((stu-&gt;getLectureType()[i] == LIMITED) ? \"\u9650\u9009\u8bfe\" : \"\u4efb\u9009\u8bfe\"))\n                    &lt;&lt; \"&lt;/td&gt;&lt;td&gt;\" &lt;&lt; stu-&gt;getLectureCredit()[i]\n                    &lt;&lt; \"&lt;/td&gt;&lt;td&gt;\" &lt;&lt; stu-&gt;getLectureScore()[i]\n                    &lt;&lt; \"&lt;/td&gt;&lt;td&gt;\" &lt;&lt; stu-&gt;getLectureGPA()[i] &lt;&lt; \"&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl;\n            }\n            else\n            {\n                out &lt;&lt; \"&lt;tr&gt;&lt;td&gt;\" &lt;&lt; stu-&gt;getLectureName()[i]\n                    &lt;&lt; \"&lt;/td&gt;&lt;td&gt;\" &lt;&lt; ((stu-&gt;getLectureType()[i] == REQUIRED) ? \"\u5fc5\u9009\u8bfe\" : ((stu-&gt;getLectureType()[i] == LIMITED) ? \"\u9650\u9009\u8bfe\" : \"\u4efb\u9009\u8bfe\"))\n                    &lt;&lt; \"&lt;/td&gt;&lt;td&gt;\" &lt;&lt; stu-&gt;getLectureCredit()[i]\n                    &lt;&lt; \"&lt;/td&gt;&lt;td&gt;\"\n                    &lt;&lt; \"N/A\"\n                    &lt;&lt; \"&lt;/td&gt;&lt;td&gt;\" &lt;&lt; (stu-&gt;getLectureGPA()[i] ? \"P\" : \"F\") &lt;&lt; \"&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl;\n            }\n        }\n    }\n    else\n    {\n        out &lt;&lt; \"&lt;tr&gt;&lt;td colspan=\\\"5\\\"&gt;\u65e0&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl;\n    }\n    out &lt;&lt; \"&lt;/table&gt;\" &lt;&lt; std::endl\n        &lt;&lt; std::endl\n        &lt;&lt; \"\u6253\u5370\u65f6\u95f4\uff1a\" &lt;&lt; timeStampToString(time(0)) &lt;&lt; std::endl\n        &lt;&lt; std::endl\n        &lt;&lt; \"***\" &lt;&lt; std::endl\n        &lt;&lt; std::endl\n        &lt;&lt; \"&lt;h1&gt;&lt;center&gt;\u6210\u7ee9\u5355\u8bf4\u660e&lt;/center&gt;&lt;/h1&gt;\" &lt;&lt; std::endl\n        &lt;&lt; std::endl\n        &lt;&lt; \"1. \u672c\u6210\u7ee9\u5355\u4ec5\u5305\u542b\u8be5\u5b66\u751f\u7684\u5404\u8bfe\u7a0b\u6210\u7ee9\u4fe1\u606f\" &lt;&lt; std::endl\n        &lt;&lt; \"2. \u672c\u6210\u7ee9\u5355\u4ec5\u4f9b\u53c2\u8003\uff0c\u4e0d\u4f5c\u4e3a\u6700\u7ec8\u6210\u7ee9\" &lt;&lt; std::endl\n        &lt;&lt; \"3. \u672c\u6210\u7ee9\u5355\u7531\u5b66\u751f\u6210\u7ee9\u7ba1\u7406\u7cfb\u7edf\u81ea\u52a8\u751f\u6210\" &lt;&lt; std::endl\n        &lt;&lt; \"4. \u672c\u6210\u7ee9\u5355\u6700\u7ec8\u89e3\u91ca\u6743\u5f52\u00d7\u00d7\u5927\u5b66\u6240\u6709\" &lt;&lt; std::endl\n        &lt;&lt; std::endl\n        &lt;&lt; \"***\" &lt;&lt; std::endl\n        &lt;&lt; std::endl\n        &lt;&lt; \"&lt;h1&gt;&lt;center&gt;\u6210\u7ee9\u8bb0\u8f7d\u8bf4\u660e&lt;/center&gt;&lt;/h1&gt;\" &lt;&lt; std::endl\n        &lt;&lt; std::endl\n        &lt;&lt; \"&lt;table border=\\\"1\\\" align=\\\"center\\\"&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;th&gt;\u7b49\u7ea7\u5236\u6210\u7ee9&lt;/th&gt;&lt;th&gt;\u7ee9\u70b9&lt;/th&gt;&lt;th&gt;\u5bf9\u5e94\u767e\u5206\u5236\u6210\u7ee9\u8303\u56f4&lt;/th&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;td&gt;A+&lt;/td&gt;&lt;td rowspan=\\\"3\\\"&gt;4.0&lt;/td&gt;&lt;td rowspan=\\\"2\\\"&gt;95~100&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;td&gt;A&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;td&gt;A-&lt;/td&gt;&lt;td&gt;90~94&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;td&gt;B+&lt;/td&gt;&lt;td&gt;3.6&lt;/td&gt;&lt;td&gt;85~89&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;td&gt;B&lt;/td&gt;&lt;td&gt;3.3&lt;/td&gt;&lt;td&gt;80~84&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;td&gt;B-&lt;/td&gt;&lt;td&gt;3.0&lt;/td&gt;&lt;td&gt;77~79&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;td&gt;C+&lt;/td&gt;&lt;td&gt;2.6&lt;/td&gt;&lt;td&gt;73~76&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;td&gt;C&lt;/td&gt;&lt;td&gt;2.3&lt;/td&gt;&lt;td&gt;70~72&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;td&gt;C-&lt;/td&gt;&lt;td&gt;2.0&lt;/td&gt;&lt;td&gt;67~69&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;td&gt;D+&lt;/td&gt;&lt;td&gt;1.6&lt;/td&gt;&lt;td&gt;63~66&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;td&gt;D&lt;/td&gt;&lt;td&gt;1.3&lt;/td&gt;&lt;td&gt;60~62&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;td&gt;F&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0~59&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;/table&gt;\" &lt;&lt; std::endl\n        &lt;&lt; std::endl\n        &lt;&lt; \"\u5e73\u5747\u5b66\u5206\u7ee9\uff08GPA\uff09\u7684\u8ba1\u7b97\u65b9\u6cd5\u4e3a\uff1a$GPA=\\\\frac{\\\\Sigma \u8bfe\u7a0b\u5b66\u5206 * \u7ee9\u70b9}{\\\\Sigma \u8bfe\u7a0b\u5b66\u5206}$\" &lt;&lt; std::endl\n        &lt;&lt; std::endl;\n    out.close();\n    std::cout &lt;&lt; \"\u6253\u5370\u6210\u529f\uff01\" &lt;&lt; std::endl;\n}\n\n// \u6309\u59d3\u540d\u6253\u5370\u5b66\u751f\u4fe1\u606f\nvoid Database::printStudent(const std::string &amp;name)\n{\n    Student *stu = findStudent(name);\n    if (stu == nullptr)\n    {\n        std::cout &lt;&lt; \"\u672a\u627e\u5230\u8be5\u5b66\u751f\uff01\" &lt;&lt; std::endl;\n        return;\n    }\n    std::string filename = \"output_student_\" + std::to_string(stu-&gt;getStudentNo()) + \"_\" + name + \".md\";\n    std::ofstream out(filename, std::ios::out | std::ios::trunc);\n    if (!out.is_open())\n    {\n        std::cerr &lt;&lt; \"Error: cannot open file \\\"\" &lt;&lt; filename &lt;&lt; \"\\\".\" &lt;&lt; std::endl;\n        return;\n    }\n    out &lt;&lt; \"&lt;h1&gt;&lt;center&gt;\u00d7\u00d7\u5927\u5b66\u5b66\u751f\u6210\u7ee9\u5355&lt;/center&gt;&lt;/h1&gt;\" &lt;&lt; std::endl\n        &lt;&lt; std::endl\n        &lt;&lt; \"\u5b66\u53f7\uff1a\" &lt;&lt; stu-&gt;getStudentNo() &lt;&lt; std::endl\n        &lt;&lt; std::endl\n        &lt;&lt; \"\u59d3\u540d\uff1a\" &lt;&lt; name &lt;&lt; std::endl\n        &lt;&lt; std::endl\n        &lt;&lt; \"\u603b\u5b66\u5206\uff1a\" &lt;&lt; stu-&gt;getTotalCredit() &lt;&lt; std::endl\n        &lt;&lt; std::endl\n        &lt;&lt; \"\u5e73\u5747\u6210\u7ee9\uff1a\" &lt;&lt; stu-&gt;getAverageScore() &lt;&lt; std::endl\n        &lt;&lt; std::endl\n        &lt;&lt; \"\u5e73\u5747\u7ee9\u70b9\uff1a\" &lt;&lt; stu-&gt;getAverageGPA() &lt;&lt; std::endl\n        &lt;&lt; std::endl\n        &lt;&lt; \"&lt;table border=\\\"1\\\" align=\\\"center\\\"&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;th&gt;\u8bfe\u7a0b\u540d\u79f0&lt;/th&gt;&lt;th&gt;\u8bfe\u7a0b\u7c7b\u578b&lt;/th&gt;&lt;th&gt;\u5b66\u5206&lt;/th&gt;&lt;th&gt;\u6210\u7ee9&lt;/th&gt;&lt;th&gt;\u7ee9\u70b9&lt;/th&gt;&lt;/tr&gt;\" &lt;&lt; std::endl;\n    if (stu-&gt;getLectureNum() &gt; 0)\n    {\n        for (int i = 0; i &lt; stu-&gt;getLectureNum(); i++)\n        {\n            if (!stu-&gt;getLecturePF()[i])\n            {\n                out &lt;&lt; \"&lt;tr&gt;&lt;td&gt;\" &lt;&lt; stu-&gt;getLectureName()[i]\n                    &lt;&lt; \"&lt;/td&gt;&lt;td&gt;\" &lt;&lt; ((stu-&gt;getLectureType()[i] == REQUIRED) ? \"\u5fc5\u9009\u8bfe\" : ((stu-&gt;getLectureType()[i] == LIMITED) ? \"\u9650\u9009\u8bfe\" : \"\u4efb\u9009\u8bfe\"))\n                    &lt;&lt; \"&lt;/td&gt;&lt;td&gt;\" &lt;&lt; stu-&gt;getLectureCredit()[i]\n                    &lt;&lt; \"&lt;/td&gt;&lt;td&gt;\" &lt;&lt; stu-&gt;getLectureScore()[i]\n                    &lt;&lt; \"&lt;/td&gt;&lt;td&gt;\" &lt;&lt; stu-&gt;getLectureGPA()[i] &lt;&lt; \"&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl;\n            }\n            else\n            {\n                out &lt;&lt; \"&lt;tr&gt;&lt;td&gt;\" &lt;&lt; stu-&gt;getLectureName()[i]\n                    &lt;&lt; \"&lt;/td&gt;&lt;td&gt;\" &lt;&lt; ((stu-&gt;getLectureType()[i] == REQUIRED) ? \"\u5fc5\u9009\u8bfe\" : ((stu-&gt;getLectureType()[i] == LIMITED) ? \"\u9650\u9009\u8bfe\" : \"\u4efb\u9009\u8bfe\"))\n                    &lt;&lt; \"&lt;/td&gt;&lt;td&gt;\" &lt;&lt; stu-&gt;getLectureCredit()[i]\n                    &lt;&lt; \"&lt;/td&gt;&lt;td&gt;\"\n                    &lt;&lt; \"N/A\"\n                    &lt;&lt; \"&lt;/td&gt;&lt;td&gt;\" &lt;&lt; (stu-&gt;getLectureGPA()[i] ? \"P\" : \"F\") &lt;&lt; \"&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl;\n            }\n        }\n    }\n    else\n    {\n        out &lt;&lt; \"&lt;tr&gt;&lt;td colspan=\\\"5\\\"&gt;\u65e0&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl;\n    }\n    out &lt;&lt; \"&lt;/table&gt;\" &lt;&lt; std::endl\n        &lt;&lt; std::endl\n        &lt;&lt; \"\u6253\u5370\u65f6\u95f4\uff1a\" &lt;&lt; timeStampToString(time(0)) &lt;&lt; std::endl\n        &lt;&lt; std::endl\n        &lt;&lt; \"***\" &lt;&lt; std::endl\n        &lt;&lt; std::endl\n        &lt;&lt; \"&lt;h1&gt;&lt;center&gt;\u6210\u7ee9\u5355\u8bf4\u660e&lt;/center&gt;&lt;/h1&gt;\" &lt;&lt; std::endl\n        &lt;&lt; std::endl\n        &lt;&lt; \"1. \u672c\u6210\u7ee9\u5355\u4ec5\u5305\u542b\u8be5\u5b66\u751f\u7684\u5404\u8bfe\u7a0b\u6210\u7ee9\u4fe1\u606f\" &lt;&lt; std::endl\n        &lt;&lt; \"2. \u672c\u6210\u7ee9\u5355\u4ec5\u4f9b\u53c2\u8003\uff0c\u4e0d\u4f5c\u4e3a\u6700\u7ec8\u6210\u7ee9\" &lt;&lt; std::endl\n        &lt;&lt; \"3. \u672c\u6210\u7ee9\u5355\u7531\u5b66\u751f\u6210\u7ee9\u7ba1\u7406\u7cfb\u7edf\u81ea\u52a8\u751f\u6210\" &lt;&lt; std::endl\n        &lt;&lt; \"4. \u672c\u6210\u7ee9\u5355\u6700\u7ec8\u89e3\u91ca\u6743\u5f52\u00d7\u00d7\u5927\u5b66\u6240\u6709\" &lt;&lt; std::endl\n        &lt;&lt; std::endl\n        &lt;&lt; \"***\" &lt;&lt; std::endl\n        &lt;&lt; std::endl\n        &lt;&lt; \"&lt;h1&gt;&lt;center&gt;\u6210\u7ee9\u8bb0\u8f7d\u8bf4\u660e&lt;/center&gt;&lt;/h1&gt;\" &lt;&lt; std::endl\n        &lt;&lt; std::endl\n        &lt;&lt; \"&lt;table border=\\\"1\\\" align=\\\"center\\\"&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;th&gt;\u7b49\u7ea7\u5236\u6210\u7ee9&lt;/th&gt;&lt;th&gt;\u7ee9\u70b9&lt;/th&gt;&lt;th&gt;\u5bf9\u5e94\u767e\u5206\u5236\u6210\u7ee9\u8303\u56f4&lt;/th&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;td&gt;A+&lt;/td&gt;&lt;td rowspan=\\\"3\\\"&gt;4.0&lt;/td&gt;&lt;td rowspan=\\\"2\\\"&gt;95~100&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;td&gt;A&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;td&gt;A-&lt;/td&gt;&lt;td&gt;90~94&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;td&gt;B+&lt;/td&gt;&lt;td&gt;3.6&lt;/td&gt;&lt;td&gt;85~89&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;td&gt;B&lt;/td&gt;&lt;td&gt;3.3&lt;/td&gt;&lt;td&gt;80~84&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;td&gt;B-&lt;/td&gt;&lt;td&gt;3.0&lt;/td&gt;&lt;td&gt;77~79&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;td&gt;C+&lt;/td&gt;&lt;td&gt;2.6&lt;/td&gt;&lt;td&gt;73~76&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;td&gt;C&lt;/td&gt;&lt;td&gt;2.3&lt;/td&gt;&lt;td&gt;70~72&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;td&gt;C-&lt;/td&gt;&lt;td&gt;2.0&lt;/td&gt;&lt;td&gt;67~69&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;td&gt;D+&lt;/td&gt;&lt;td&gt;1.6&lt;/td&gt;&lt;td&gt;63~66&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;td&gt;D&lt;/td&gt;&lt;td&gt;1.3&lt;/td&gt;&lt;td&gt;60~62&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;td&gt;F&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0~59&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;/table&gt;\" &lt;&lt; std::endl\n        &lt;&lt; std::endl\n        &lt;&lt; \"\u5e73\u5747\u5b66\u5206\u7ee9\uff08GPA\uff09\u7684\u8ba1\u7b97\u65b9\u6cd5\u4e3a\uff1a$GPA=\\\\frac{\\\\Sigma \u8bfe\u7a0b\u5b66\u5206 * \u7ee9\u70b9}{\\\\Sigma \u8bfe\u7a0b\u5b66\u5206}$\" &lt;&lt; std::endl\n        &lt;&lt; std::endl;\n    out.close();\n    std::cout &lt;&lt; \"\u6253\u5370\u6210\u529f\uff01\" &lt;&lt; std::endl;\n}\n\n// \u6253\u5370\u5168\u90e8\u8bfe\u7a0b\u4fe1\u606f\nvoid Database::printLecture()\n{\n    std::ofstream out(\"output_lecture_all.md\", std::ios::out | std::ios::trunc);\n    if (!out.is_open())\n    {\n        std::cerr &lt;&lt; \"Error: cannot open file \\\"\"\n                  &lt;&lt; \"output_lecture_all.md\"\n                  &lt;&lt; \"\\\".\" &lt;&lt; std::endl;\n        return;\n    }\n\n    out &lt;&lt; \"&lt;h1&gt;&lt;center&gt;\u00d7\u00d7\u5927\u5b66\u5b66\u751f\u6210\u7ee9\u5355&lt;/center&gt;&lt;/h1&gt;\" &lt;&lt; std::endl\n        &lt;&lt; std::endl\n        &lt;&lt; \"&lt;h2&gt;&lt;center&gt;\u5168\u90e8\u8bfe\u7a0b\u4fe1\u606f&lt;/center&gt;&lt;/h2&gt;\" &lt;&lt; std::endl\n        &lt;&lt; std::endl\n        &lt;&lt; \"&lt;table border=\\\"1\\\" align=\\\"center\\\"&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;th&gt;\u540d\u79f0&lt;/th&gt;&lt;th&gt;\u7c7b\u578b&lt;/th&gt;&lt;th&gt;\u5b66\u5206&lt;/th&gt;&lt;th&gt;\u5b66\u751f\u6570&lt;/th&gt;&lt;th&gt;\u5e73\u5747\u6210\u7ee9&lt;/th&gt;&lt;th&gt;\u5e73\u5747\u7ee9\u70b9&lt;/th&gt;&lt;/tr&gt;\" &lt;&lt; std::endl;\n    Lecture **head;\n    int reqLength = requiredList.size(), limLength = limitedList.size(), optLength = optionalList.size();\n    if (reqLength + limLength + optLength &gt; 0)\n    {\n        head = new Lecture *[reqLength + limLength + optLength];\n        int cnt = 0;\n        if (reqLength &gt; 0)\n        {\n            Node&lt;LectureRequired&gt; *tmp = requiredList.getFirst();\n            do\n            {\n                head[cnt] = &amp;tmp-&gt;data;\n                tmp = requiredList.getNext();\n                cnt++;\n            } while (tmp != nullptr);\n        }\n        if (limLength &gt; 0)\n        {\n            Node&lt;LectureLimited&gt; *tmp = limitedList.getFirst();\n            do\n            {\n                head[cnt] = &amp;tmp-&gt;data;\n                tmp = limitedList.getNext();\n                cnt++;\n            } while (tmp != nullptr);\n        }\n        if (optLength &gt; 0)\n        {\n            Node&lt;LectureOptional&gt; *tmp = optionalList.getFirst();\n            do\n            {\n                head[cnt] = &amp;tmp-&gt;data;\n                tmp = optionalList.getNext();\n                cnt++;\n            } while (tmp != nullptr);\n        }\n        sortLectureCustom(head, reqLength + limLength + optLength, -1, 0);\n        for (cnt = 0; cnt &lt; reqLength + limLength + optLength; cnt++)\n        {\n            out &lt;&lt; \"&lt;tr&gt;&lt;td&gt;\" &lt;&lt; head[cnt]-&gt;getName()\n                &lt;&lt; \"&lt;/td&gt;&lt;td&gt;\" &lt;&lt; ((head[cnt]-&gt;getLectureType() == REQUIRED) ? \"\u5fc5\u9009\u8bfe\" : (head[cnt]-&gt;getLectureType() == LIMITED ? \"\u9650\u9009\u8bfe\" : \"\u4efb\u9009\u8bfe\"))\n                &lt;&lt; \"&lt;/td&gt;&lt;td&gt;\" &lt;&lt; head[cnt]-&gt;getCredit()\n                &lt;&lt; \"&lt;/td&gt;&lt;td&gt;\" &lt;&lt; head[cnt]-&gt;getStudentNum()\n                &lt;&lt; \"&lt;/td&gt;&lt;td&gt;\" &lt;&lt; head[cnt]-&gt;getAverageScore()\n                &lt;&lt; \"&lt;/td&gt;&lt;td&gt;\" &lt;&lt; head[cnt]-&gt;getAverageGPA() &lt;&lt; \"&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl;\n        }\n        delete[] head;\n    }\n    else\n    {\n        out &lt;&lt; \"&lt;tr&gt;&lt;td colspan=\\\"6\\\"&gt;\u65e0\u8bfe\u7a0b\u4fe1\u606f&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl;\n    }\n    out &lt;&lt; \"&lt;/table&gt;\" &lt;&lt; std::endl\n        &lt;&lt; std::endl\n        &lt;&lt; \"\u6253\u5370\u65f6\u95f4\uff1a\" &lt;&lt; timeStampToString(time(0)) &lt;&lt; std::endl\n        &lt;&lt; std::endl\n        &lt;&lt; \"***\" &lt;&lt; std::endl\n        &lt;&lt; std::endl\n        &lt;&lt; \"&lt;h1&gt;&lt;center&gt;\u6210\u7ee9\u5355\u8bf4\u660e&lt;/center&gt;&lt;/h1&gt;\" &lt;&lt; std::endl\n        &lt;&lt; std::endl\n        &lt;&lt; \"1. \u672c\u6210\u7ee9\u5355\u6309\u7167\u8bfe\u7a0b\u540d\u79f0\u5347\u5e8f\u6392\u5217\" &lt;&lt; std::endl\n        &lt;&lt; \"2. \u672c\u6210\u7ee9\u5355\u4ec5\u5305\u542b\u5168\u90e8\u8bfe\u7a0b\u7684\u603b\u6210\u7ee9\u4fe1\u606f\" &lt;&lt; std::endl\n        &lt;&lt; \"3. \u672c\u6210\u7ee9\u5355\u4ec5\u4f9b\u53c2\u8003\uff0c\u4e0d\u4f5c\u4e3a\u6700\u7ec8\u6210\u7ee9\" &lt;&lt; std::endl\n        &lt;&lt; \"4. \u672c\u6210\u7ee9\u5355\u7531\u5b66\u751f\u6210\u7ee9\u7ba1\u7406\u7cfb\u7edf\u81ea\u52a8\u751f\u6210\" &lt;&lt; std::endl\n        &lt;&lt; \"5. \u672c\u6210\u7ee9\u5355\u6700\u7ec8\u89e3\u91ca\u6743\u5f52\u00d7\u00d7\u5927\u5b66\u6240\u6709\" &lt;&lt; std::endl\n        &lt;&lt; std::endl\n        &lt;&lt; \"***\" &lt;&lt; std::endl\n        &lt;&lt; std::endl\n        &lt;&lt; \"&lt;h1&gt;&lt;center&gt;\u6210\u7ee9\u8bb0\u8f7d\u8bf4\u660e&lt;/center&gt;&lt;/h1&gt;\" &lt;&lt; std::endl\n        &lt;&lt; std::endl\n        &lt;&lt; \"&lt;table border=\\\"1\\\" align=\\\"center\\\"&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;th&gt;\u7b49\u7ea7\u5236\u6210\u7ee9&lt;/th&gt;&lt;th&gt;\u7ee9\u70b9&lt;/th&gt;&lt;th&gt;\u5bf9\u5e94\u767e\u5206\u5236\u6210\u7ee9\u8303\u56f4&lt;/th&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;td&gt;A+&lt;/td&gt;&lt;td rowspan=\\\"3\\\"&gt;4.0&lt;/td&gt;&lt;td rowspan=\\\"2\\\"&gt;95~100&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;td&gt;A&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;td&gt;A-&lt;/td&gt;&lt;td&gt;90~94&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;td&gt;B+&lt;/td&gt;&lt;td&gt;3.6&lt;/td&gt;&lt;td&gt;85~89&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;td&gt;B&lt;/td&gt;&lt;td&gt;3.3&lt;/td&gt;&lt;td&gt;80~84&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;td&gt;B-&lt;/td&gt;&lt;td&gt;3.0&lt;/td&gt;&lt;td&gt;77~79&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;td&gt;C+&lt;/td&gt;&lt;td&gt;2.6&lt;/td&gt;&lt;td&gt;73~76&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;td&gt;C&lt;/td&gt;&lt;td&gt;2.3&lt;/td&gt;&lt;td&gt;70~72&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;td&gt;C-&lt;/td&gt;&lt;td&gt;2.0&lt;/td&gt;&lt;td&gt;67~69&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;td&gt;D+&lt;/td&gt;&lt;td&gt;1.6&lt;/td&gt;&lt;td&gt;63~66&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;td&gt;D&lt;/td&gt;&lt;td&gt;1.3&lt;/td&gt;&lt;td&gt;60~62&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;td&gt;F&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0~59&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;/table&gt;\" &lt;&lt; std::endl\n        &lt;&lt; std::endl\n        &lt;&lt; \"\u5e73\u5747\u5b66\u5206\u7ee9\uff08GPA\uff09\u7684\u8ba1\u7b97\u65b9\u6cd5\u4e3a\uff1a$GPA=\\\\frac{\\\\Sigma \u8bfe\u7a0b\u5b66\u5206 * \u7ee9\u70b9}{\\\\Sigma \u8bfe\u7a0b\u5b66\u5206}$\" &lt;&lt; std::endl\n        &lt;&lt; std::endl;\n    out.close();\n    std::cout &lt;&lt; \"\u6253\u5370\u6210\u529f\uff01\" &lt;&lt; std::endl;\n}\n\n// \u6309\u7c7b\u578b\u6253\u5370\u8bfe\u7a0b\u4fe1\u606f\nvoid Database::printLecture(LectureType type)\n{\n    std::string filename = \"output_lecture_\" + std::string((type == REQUIRED) ? \"required\" : (type == LIMITED ? \"limited\" : \"optional\")) + \".md\";\n    std::ofstream out(filename, std::ios::out | std::ios::trunc);\n    if (!out.is_open())\n    {\n        std::cerr &lt;&lt; \"Error: cannot open file \\\"\" &lt;&lt; filename &lt;&lt; \"\\\".\" &lt;&lt; std::endl;\n        return;\n    }\n    Lecture **head = nullptr;\n    int length = 0;\n    int cnt = 0;\n    switch (type)\n    {\n    case REQUIRED:\n        out &lt;&lt; \"&lt;h1&gt;&lt;center&gt;\u00d7\u00d7\u5927\u5b66\u5b66\u751f\u6210\u7ee9\u5355&lt;/center&gt;&lt;/h1&gt;\" &lt;&lt; std::endl\n            &lt;&lt; std::endl\n            &lt;&lt; \"&lt;h2&gt;&lt;center&gt;\u5fc5\u9009\u8bfe\u7a0b\u4fe1\u606f&lt;/center&gt;&lt;/h2&gt;\" &lt;&lt; std::endl\n            &lt;&lt; std::endl\n            &lt;&lt; \"&lt;table border=\\\"1\\\" align=\\\"center\\\"&gt;\" &lt;&lt; std::endl\n            &lt;&lt; \"&lt;tr&gt;&lt;th&gt;\u540d\u79f0&lt;/th&gt;&lt;th&gt;\u7c7b\u578b&lt;/th&gt;&lt;th&gt;\u5b66\u5206&lt;/th&gt;&lt;th&gt;\u5b66\u751f\u6570&lt;/th&gt;&lt;th&gt;\u5e73\u5747\u6210\u7ee9&lt;/th&gt;&lt;th&gt;\u5e73\u5747\u7ee9\u70b9&lt;/th&gt;&lt;/tr&gt;\" &lt;&lt; std::endl;\n        length = requiredList.size();\n        head = new Lecture *[length];\n        if (length &gt; 0)\n        {\n            Node&lt;LectureRequired&gt; *tmp = requiredList.getFirst();\n            do\n            {\n                head[cnt] = &amp;tmp-&gt;data;\n                tmp = requiredList.getNext();\n                cnt++;\n            } while (tmp != nullptr);\n        }\n        break;\n    case LIMITED:\n        out &lt;&lt; \"&lt;h1&gt;&lt;center&gt;\u00d7\u00d7\u5927\u5b66\u5b66\u751f\u6210\u7ee9\u5355&lt;/center&gt;&lt;/h1&gt;\" &lt;&lt; std::endl\n            &lt;&lt; std::endl\n            &lt;&lt; \"&lt;h2&gt;&lt;center&gt;\u9650\u9009\u8bfe\u7a0b\u4fe1\u606f&lt;/center&gt;&lt;/h2&gt;\" &lt;&lt; std::endl\n            &lt;&lt; std::endl\n            &lt;&lt; \"&lt;table border=\\\"1\\\" align=\\\"center\\\"&gt;\" &lt;&lt; std::endl\n            &lt;&lt; \"&lt;tr&gt;&lt;th&gt;\u540d\u79f0&lt;/th&gt;&lt;th&gt;\u7c7b\u578b&lt;/th&gt;&lt;th&gt;\u5b66\u5206&lt;/th&gt;&lt;th&gt;\u5b66\u751f\u6570&lt;/th&gt;&lt;th&gt;\u5e73\u5747\u6210\u7ee9&lt;/th&gt;&lt;th&gt;\u5e73\u5747\u7ee9\u70b9&lt;/th&gt;&lt;/tr&gt;\" &lt;&lt; std::endl;\n        length = limitedList.size();\n        head = new Lecture *[length];\n        if (length &gt; 0)\n        {\n            Node&lt;LectureLimited&gt; *tmp = limitedList.getFirst();\n            do\n            {\n                head[cnt] = &amp;tmp-&gt;data;\n                tmp = limitedList.getNext();\n                cnt++;\n            } while (tmp != nullptr);\n        }\n        break;\n    case OPTIONAL:\n        out &lt;&lt; \"&lt;h1&gt;&lt;center&gt;\u00d7\u00d7\u5927\u5b66\u5b66\u751f\u6210\u7ee9\u5355&lt;/center&gt;&lt;/h1&gt;\" &lt;&lt; std::endl\n            &lt;&lt; std::endl\n            &lt;&lt; \"&lt;h2&gt;&lt;center&gt;\u4efb\u9009\u8bfe\u7a0b\u4fe1\u606f&lt;/center&gt;&lt;/h2&gt;\" &lt;&lt; std::endl\n            &lt;&lt; std::endl\n            &lt;&lt; \"&lt;table border=\\\"1\\\" align=\\\"center\\\"&gt;\" &lt;&lt; std::endl\n            &lt;&lt; \"&lt;tr&gt;&lt;th&gt;\u540d\u79f0&lt;/th&gt;&lt;th&gt;\u7c7b\u578b&lt;/th&gt;&lt;th&gt;\u5b66\u5206&lt;/th&gt;&lt;th&gt;\u5b66\u751f\u6570&lt;/th&gt;&lt;th&gt;\u5e73\u5747\u6210\u7ee9&lt;/th&gt;&lt;th&gt;\u5e73\u5747\u7ee9\u70b9&lt;/th&gt;&lt;/tr&gt;\" &lt;&lt; std::endl;\n        length = optionalList.size();\n        head = new Lecture *[length];\n        if (length &gt; 0)\n        {\n            Node&lt;LectureOptional&gt; *tmp = optionalList.getFirst();\n            do\n            {\n                head[cnt] = &amp;tmp-&gt;data;\n                tmp = optionalList.getNext();\n                cnt++;\n            } while (tmp != nullptr);\n        }\n        break;\n    default:\n        return;\n        break;\n    }\n    if (length &gt; 0)\n    {\n        sortLectureCustom(head, length, -1, 0);\n        for (cnt = 0; cnt &lt; length; cnt++)\n        {\n            out &lt;&lt; \"&lt;tr&gt;&lt;td&gt;\" &lt;&lt; head[cnt]-&gt;getName()\n                &lt;&lt; \"&lt;/td&gt;&lt;td&gt;\" &lt;&lt; ((head[cnt]-&gt;getLectureType() == REQUIRED) ? \"\u5fc5\u9009\u8bfe\" : (head[cnt]-&gt;getLectureType() == LIMITED ? \"\u9650\u9009\u8bfe\" : \"\u4efb\u9009\u8bfe\"))\n                &lt;&lt; \"&lt;/td&gt;&lt;td&gt;\" &lt;&lt; head[cnt]-&gt;getCredit()\n                &lt;&lt; \"&lt;/td&gt;&lt;td&gt;\" &lt;&lt; head[cnt]-&gt;getStudentNum()\n                &lt;&lt; \"&lt;/td&gt;&lt;td&gt;\" &lt;&lt; head[cnt]-&gt;getAverageScore()\n                &lt;&lt; \"&lt;/td&gt;&lt;td&gt;\" &lt;&lt; head[cnt]-&gt;getAverageGPA() &lt;&lt; \"&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl;\n        }\n        delete[] head;\n    }\n    else\n    {\n        out &lt;&lt; \"&lt;tr&gt;&lt;td colspan=\\\"6\\\"&gt;\u65e0\u8bfe\u7a0b\u4fe1\u606f&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl;\n    }\n    out &lt;&lt; \"&lt;/table&gt;\" &lt;&lt; std::endl\n        &lt;&lt; std::endl\n        &lt;&lt; \"\u6253\u5370\u65f6\u95f4\uff1a\" &lt;&lt; timeStampToString(time(0)) &lt;&lt; std::endl\n        &lt;&lt; std::endl\n        &lt;&lt; \"***\" &lt;&lt; std::endl\n        &lt;&lt; std::endl\n        &lt;&lt; \"&lt;h1&gt;&lt;center&gt;\u6210\u7ee9\u5355\u8bf4\u660e&lt;/center&gt;&lt;/h1&gt;\" &lt;&lt; std::endl\n        &lt;&lt; std::endl\n        &lt;&lt; \"1. \u672c\u6210\u7ee9\u5355\u6309\u7167\u8bfe\u7a0b\u540d\u79f0\u5347\u5e8f\u6392\u5217\" &lt;&lt; std::endl\n        &lt;&lt; \"2. \u672c\u6210\u7ee9\u5355\u4ec5\u5305\u542b\u5168\u90e8\u8bfe\u7a0b\u7684\u603b\u6210\u7ee9\u4fe1\u606f\" &lt;&lt; std::endl\n        &lt;&lt; \"3. \u672c\u6210\u7ee9\u5355\u4ec5\u4f9b\u53c2\u8003\uff0c\u4e0d\u4f5c\u4e3a\u6700\u7ec8\u6210\u7ee9\" &lt;&lt; std::endl\n        &lt;&lt; \"4. \u672c\u6210\u7ee9\u5355\u7531\u5b66\u751f\u6210\u7ee9\u7ba1\u7406\u7cfb\u7edf\u81ea\u52a8\u751f\u6210\" &lt;&lt; std::endl\n        &lt;&lt; \"5. \u672c\u6210\u7ee9\u5355\u6700\u7ec8\u89e3\u91ca\u6743\u5f52\u00d7\u00d7\u5927\u5b66\u6240\u6709\" &lt;&lt; std::endl\n        &lt;&lt; std::endl\n        &lt;&lt; \"***\" &lt;&lt; std::endl\n        &lt;&lt; std::endl\n        &lt;&lt; \"&lt;h1&gt;&lt;center&gt;\u6210\u7ee9\u8bb0\u8f7d\u8bf4\u660e&lt;/center&gt;&lt;/h1&gt;\" &lt;&lt; std::endl\n        &lt;&lt; std::endl\n        &lt;&lt; \"&lt;table border=\\\"1\\\" align=\\\"center\\\"&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;th&gt;\u7b49\u7ea7\u5236\u6210\u7ee9&lt;/th&gt;&lt;th&gt;\u7ee9\u70b9&lt;/th&gt;&lt;th&gt;\u5bf9\u5e94\u767e\u5206\u5236\u6210\u7ee9\u8303\u56f4&lt;/th&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;td&gt;A+&lt;/td&gt;&lt;td rowspan=\\\"3\\\"&gt;4.0&lt;/td&gt;&lt;td rowspan=\\\"2\\\"&gt;95~100&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;td&gt;A&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;td&gt;A-&lt;/td&gt;&lt;td&gt;90~94&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;td&gt;B+&lt;/td&gt;&lt;td&gt;3.6&lt;/td&gt;&lt;td&gt;85~89&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;td&gt;B&lt;/td&gt;&lt;td&gt;3.3&lt;/td&gt;&lt;td&gt;80~84&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;td&gt;B-&lt;/td&gt;&lt;td&gt;3.0&lt;/td&gt;&lt;td&gt;77~79&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;td&gt;C+&lt;/td&gt;&lt;td&gt;2.6&lt;/td&gt;&lt;td&gt;73~76&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;td&gt;C&lt;/td&gt;&lt;td&gt;2.3&lt;/td&gt;&lt;td&gt;70~72&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;td&gt;C-&lt;/td&gt;&lt;td&gt;2.0&lt;/td&gt;&lt;td&gt;67~69&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;td&gt;D+&lt;/td&gt;&lt;td&gt;1.6&lt;/td&gt;&lt;td&gt;63~66&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;td&gt;D&lt;/td&gt;&lt;td&gt;1.3&lt;/td&gt;&lt;td&gt;60~62&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;td&gt;F&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0~59&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;/table&gt;\" &lt;&lt; std::endl\n        &lt;&lt; std::endl\n        &lt;&lt; \"\u5e73\u5747\u5b66\u5206\u7ee9\uff08GPA\uff09\u7684\u8ba1\u7b97\u65b9\u6cd5\u4e3a\uff1a$GPA=\\\\frac{\\\\Sigma \u8bfe\u7a0b\u5b66\u5206 * \u7ee9\u70b9}{\\\\Sigma \u8bfe\u7a0b\u5b66\u5206}$\" &lt;&lt; std::endl\n        &lt;&lt; std::endl;\n    out.close();\n    std::cout &lt;&lt; \"\u6253\u5370\u6210\u529f\uff01\" &lt;&lt; std::endl;\n}\n\n// \u6309\u8bfe\u7a0b\u540d\u6253\u5370\u8bfe\u7a0b\u4fe1\u606f\nvoid Database::printLecture(const std::string &amp;name)\n{\n    Lecture *lec = findLecture(name);\n    if (lec == nullptr)\n    {\n        std::cout &lt;&lt; \"\u672a\u627e\u5230\u8be5\u8bfe\u7a0b\uff01\" &lt;&lt; std::endl;\n        return;\n    }\n    std::string filename = \"output_lecture_\" + name + \".md\";\n    std::ofstream out(filename, std::ios::out | std::ios::trunc);\n    if (!out.is_open())\n    {\n        std::cerr &lt;&lt; \"Error: cannot open file \\\"\" &lt;&lt; filename &lt;&lt; \"\\\".\" &lt;&lt; std::endl;\n        return;\n    }\n    out &lt;&lt; \"&lt;h1&gt;&lt;center&gt;\u00d7\u00d7\u5927\u5b66\u5b66\u751f\u6210\u7ee9\u5355&lt;/center&gt;&lt;/h1&gt;\" &lt;&lt; std::endl\n        &lt;&lt; std::endl\n        &lt;&lt; \"\u540d\u79f0\uff1a\" &lt;&lt; name &lt;&lt; std::endl\n        &lt;&lt; std::endl\n        &lt;&lt; \"\u5b66\u5206\uff1a\" &lt;&lt; lec-&gt;getCredit() &lt;&lt; std::endl\n        &lt;&lt; std::endl\n        &lt;&lt; \"\u5e73\u5747\u6210\u7ee9\uff1a\" &lt;&lt; lec-&gt;getAverageScore() &lt;&lt; std::endl\n        &lt;&lt; std::endl\n        &lt;&lt; \"\u5e73\u5747\u7ee9\u70b9\uff1a\" &lt;&lt; lec-&gt;getAverageGPA() &lt;&lt; std::endl\n        &lt;&lt; std::endl\n        &lt;&lt; \"&lt;table border=\\\"1\\\" align=\\\"center\\\"&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;th&gt;\u5b66\u53f7&lt;/th&gt;&lt;th&gt;\u59d3\u540d&lt;/th&gt;&lt;th&gt;\u6210\u7ee9&lt;/th&gt;&lt;th&gt;\u7ee9\u70b9&lt;/th&gt;&lt;/tr&gt;\" &lt;&lt; std::endl;\n    if (lec-&gt;getStudentNum() &gt; 0)\n    {\n        for (int i = 0; i &lt; lec-&gt;getStudentNum(); i++)\n        {\n            if (!queryOptional(name, false))\n            {\n                out &lt;&lt; \"&lt;tr&gt;&lt;td&gt;\" &lt;&lt; lec-&gt;getStudentNo()[i]\n                    &lt;&lt; \"&lt;/td&gt;&lt;td&gt;\" &lt;&lt; lec-&gt;getStudentName()[i]\n                    &lt;&lt; \"&lt;/td&gt;&lt;td&gt;\" &lt;&lt; lec-&gt;getStudentScore()[i]\n                    &lt;&lt; \"&lt;/td&gt;&lt;td&gt;\" &lt;&lt; lec-&gt;getStudentGPA()[i] &lt;&lt; \"&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl;\n            }\n            else if (!findOptional(name)-&gt;getStudentPF()[i])\n            {\n                out &lt;&lt; \"&lt;tr&gt;&lt;td&gt;\" &lt;&lt; lec-&gt;getStudentNo()[i]\n                    &lt;&lt; \"&lt;/td&gt;&lt;td&gt;\" &lt;&lt; lec-&gt;getStudentName()[i]\n                    &lt;&lt; \"&lt;/td&gt;&lt;td&gt;\" &lt;&lt; lec-&gt;getStudentScore()[i]\n                    &lt;&lt; \"&lt;/td&gt;&lt;td&gt;\" &lt;&lt; lec-&gt;getStudentGPA()[i] &lt;&lt; \"&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl;\n            }\n            else\n            {\n                out &lt;&lt; \"&lt;tr&gt;&lt;td&gt;\" &lt;&lt; lec-&gt;getStudentNo()[i]\n                    &lt;&lt; \"&lt;/td&gt;&lt;td&gt;\" &lt;&lt; lec-&gt;getStudentName()[i]\n                    &lt;&lt; \"&lt;/td&gt;&lt;td&gt;\"\n                    &lt;&lt; \"N/A\"\n                    &lt;&lt; \"&lt;/td&gt;&lt;td&gt;\" &lt;&lt; (lec-&gt;getStudentGPA()[i] ? \"P\" : \"F\") &lt;&lt; \"&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl;\n            }\n        }\n    }\n    else\n    {\n        out &lt;&lt; \"&lt;tr&gt;&lt;td colspan=\\\"4\\\"&gt;\u65e0\u5b66\u751f\u9009\u4fee\u8be5\u8bfe\u7a0b&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl;\n    }\n    out &lt;&lt; \"&lt;/table&gt;\" &lt;&lt; std::endl\n        &lt;&lt; std::endl\n        &lt;&lt; \"\u6253\u5370\u65f6\u95f4\uff1a\" &lt;&lt; timeStampToString(time(0)) &lt;&lt; std::endl\n        &lt;&lt; std::endl\n        &lt;&lt; \"***\" &lt;&lt; std::endl\n        &lt;&lt; std::endl\n        &lt;&lt; \"&lt;h1&gt;&lt;center&gt;\u6210\u7ee9\u5355\u8bf4\u660e&lt;/center&gt;&lt;/h1&gt;\" &lt;&lt; std::endl\n        &lt;&lt; std::endl\n        &lt;&lt; \"1. \u672c\u6210\u7ee9\u5355\u4ec5\u5305\u542b\u8be5\u8bfe\u7a0b\u7684\u5404\u5b66\u751f\u6210\u7ee9\u4fe1\u606f\" &lt;&lt; std::endl\n        &lt;&lt; \"2. \u672c\u6210\u7ee9\u5355\u4ec5\u4f9b\u53c2\u8003\uff0c\u4e0d\u4f5c\u4e3a\u6700\u7ec8\u6210\u7ee9\" &lt;&lt; std::endl\n        &lt;&lt; \"3. \u672c\u6210\u7ee9\u5355\u7531\u5b66\u751f\u6210\u7ee9\u7ba1\u7406\u7cfb\u7edf\u81ea\u52a8\u751f\u6210\" &lt;&lt; std::endl\n        &lt;&lt; \"4. \u672c\u6210\u7ee9\u5355\u6700\u7ec8\u89e3\u91ca\u6743\u5f52\u00d7\u00d7\u5927\u5b66\u6240\u6709\" &lt;&lt; std::endl\n        &lt;&lt; std::endl\n        &lt;&lt; \"***\" &lt;&lt; std::endl\n        &lt;&lt; std::endl\n        &lt;&lt; \"&lt;h1&gt;&lt;center&gt;\u6210\u7ee9\u8bb0\u8f7d\u8bf4\u660e&lt;/center&gt;&lt;/h1&gt;\" &lt;&lt; std::endl\n        &lt;&lt; std::endl\n        &lt;&lt; \"&lt;table border=\\\"1\\\" align=\\\"center\\\"&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;th&gt;\u7b49\u7ea7\u5236\u6210\u7ee9&lt;/th&gt;&lt;th&gt;\u7ee9\u70b9&lt;/th&gt;&lt;th&gt;\u5bf9\u5e94\u767e\u5206\u5236\u6210\u7ee9\u8303\u56f4&lt;/th&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;td&gt;A+&lt;/td&gt;&lt;td rowspan=\\\"3\\\"&gt;4.0&lt;/td&gt;&lt;td rowspan=\\\"2\\\"&gt;95~100&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;td&gt;A&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;td&gt;A-&lt;/td&gt;&lt;td&gt;90~94&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;td&gt;B+&lt;/td&gt;&lt;td&gt;3.6&lt;/td&gt;&lt;td&gt;85~89&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;td&gt;B&lt;/td&gt;&lt;td&gt;3.3&lt;/td&gt;&lt;td&gt;80~84&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;td&gt;B-&lt;/td&gt;&lt;td&gt;3.0&lt;/td&gt;&lt;td&gt;77~79&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;td&gt;C+&lt;/td&gt;&lt;td&gt;2.6&lt;/td&gt;&lt;td&gt;73~76&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;td&gt;C&lt;/td&gt;&lt;td&gt;2.3&lt;/td&gt;&lt;td&gt;70~72&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;td&gt;C-&lt;/td&gt;&lt;td&gt;2.0&lt;/td&gt;&lt;td&gt;67~69&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;td&gt;D+&lt;/td&gt;&lt;td&gt;1.6&lt;/td&gt;&lt;td&gt;63~66&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;td&gt;D&lt;/td&gt;&lt;td&gt;1.3&lt;/td&gt;&lt;td&gt;60~62&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;tr&gt;&lt;td&gt;F&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0~59&lt;/td&gt;&lt;/tr&gt;\" &lt;&lt; std::endl\n        &lt;&lt; \"&lt;/table&gt;\" &lt;&lt; std::endl\n        &lt;&lt; std::endl\n        &lt;&lt; \"\u5e73\u5747\u5b66\u5206\u7ee9\uff08GPA\uff09\u7684\u8ba1\u7b97\u65b9\u6cd5\u4e3a\uff1a$GPA=\\\\frac{\\\\Sigma \u8bfe\u7a0b\u5b66\u5206 * \u7ee9\u70b9}{\\\\Sigma \u8bfe\u7a0b\u5b66\u5206}$\" &lt;&lt; std::endl\n        &lt;&lt; std::endl;\n    out.close();\n    std::cout &lt;&lt; \"\u6253\u5370\u6210\u529f\uff01\" &lt;&lt; std::endl;\n}\n\n// \u767e\u5206\u5236\u6210\u7ee9\u8f6c\u5316\u4e3a\u7ee9\u70b9\ndouble Database::calculateGPA(int score)\n{\n    double ret = 0;\n    if (score &gt;= 90)\n        ret = 4.0;\n    else if (score &gt;= 85)\n        ret = 3.6;\n    else if (score &gt;= 80)\n        ret = 3.3;\n    else if (score &gt;= 77)\n        ret = 3.0;\n    else if (score &gt;= 73)\n        ret = 2.6;\n    else if (score &gt;= 70)\n        ret = 2.3;\n    else if (score &gt;= 67)\n        ret = 2.0;\n    else if (score &gt;= 63)\n        ret = 1.6;\n    else if (score &gt;= 60)\n        ret = 1.3;\n    else\n        ret = 0;\n    return ret;\n}\n\n// \u4ece\u8bfe\u7a0b\u66f4\u65b0\u5b66\u751f\u4fe1\u606f\nvoid Database::updateStudent()\n{\n    studentList.makeEmpty();\n    Node&lt;LectureRequired&gt; *req = requiredList.getFirst();\n    Node&lt;LectureLimited&gt; *lim = limitedList.getFirst();\n    Node&lt;LectureOptional&gt; *opt = optionalList.getFirst();\n    if (req != nullptr)\n    {\n        do\n        {\n            for (int i = 0; i &lt; req-&gt;data.getStudentNum(); i++)\n            {\n                if (!queryStudent(req-&gt;data.getStudentNo()[i], false))\n                {\n                    Node&lt;Student&gt; *stu = new Node&lt;Student&gt;;\n                    stu-&gt;data.setStudentNo(req-&gt;data.getStudentNo()[i]);\n                    stu-&gt;data.setName(req-&gt;data.getStudentName()[i]);\n                    stu-&gt;data.setLectureNum(stu-&gt;data.getLectureNum() + 1);\n                    stu-&gt;data.getLectureName().push_back(req-&gt;data.getName());\n                    stu-&gt;data.getLectureType().push_back(REQUIRED);\n                    stu-&gt;data.getLectureCredit().push_back(req-&gt;data.getCredit());\n                    stu-&gt;data.getLectureScore().push_back(req-&gt;data.getStudentScore()[i]);\n                    stu-&gt;data.getLectureGPA().push_back(req-&gt;data.getStudentGPA()[i]);\n                    stu-&gt;data.getLecturePF().push_back(false);\n                    stu-&gt;data.setTotalScore(stu-&gt;data.getTotalScore() + req-&gt;data.getStudentScore()[i] * req-&gt;data.getCredit());\n                    stu-&gt;data.setTotalCredit(stu-&gt;data.getTotalCredit() + req-&gt;data.getCredit());\n                    stu-&gt;data.setTotalGPA(stu-&gt;data.getTotalGPA() + calculateGPA(req-&gt;data.getStudentScore()[i]) * req-&gt;data.getCredit());\n                    if (stu-&gt;data.getTotalCredit() - stu-&gt;data.getTotalPFCredit())\n                        stu-&gt;data.setAverageScore(stu-&gt;data.getTotalScore() / (stu-&gt;data.getTotalCredit() - stu-&gt;data.getTotalPFCredit()));\n                    if (stu-&gt;data.getTotalCredit() - stu-&gt;data.getTotalPFCredit())\n                        stu-&gt;data.setAverageGPA(stu-&gt;data.getTotalGPA() / (stu-&gt;data.getTotalCredit() - stu-&gt;data.getTotalPFCredit()));\n                    studentList.insert_end(stu);\n                }\n                else\n                {\n                    Student *stu = findStudent(req-&gt;data.getStudentNo()[i]);\n                    stu-&gt;setLectureNum(stu-&gt;getLectureNum() + 1);\n                    stu-&gt;getLectureName().push_back(req-&gt;data.getName());\n                    stu-&gt;getLectureType().push_back(REQUIRED);\n                    stu-&gt;getLectureCredit().push_back(req-&gt;data.getCredit());\n                    stu-&gt;getLectureScore().push_back(req-&gt;data.getStudentScore()[i]);\n                    stu-&gt;getLectureGPA().push_back(req-&gt;data.getStudentGPA()[i]);\n                    stu-&gt;getLecturePF().push_back(false);\n                    stu-&gt;setTotalScore(stu-&gt;getTotalScore() + req-&gt;data.getStudentScore()[i] * req-&gt;data.getCredit());\n                    stu-&gt;setTotalCredit(stu-&gt;getTotalCredit() + req-&gt;data.getCredit());\n                    stu-&gt;setTotalGPA(stu-&gt;getTotalGPA() + calculateGPA(req-&gt;data.getStudentScore()[i]) * req-&gt;data.getCredit());\n                    if (stu-&gt;getTotalCredit() - stu-&gt;getTotalPFCredit())\n                        stu-&gt;setAverageScore(stu-&gt;getTotalScore() / (stu-&gt;getTotalCredit() - stu-&gt;getTotalPFCredit()));\n                    if (stu-&gt;getTotalCredit() - stu-&gt;getTotalPFCredit())\n                        stu-&gt;setAverageGPA(stu-&gt;getTotalGPA() / (stu-&gt;getTotalCredit() - stu-&gt;getTotalPFCredit()));\n                }\n            }\n            req = requiredList.getNext();\n        } while (req != nullptr);\n    }\n    if (lim != nullptr)\n    {\n        do\n        {\n            for (int i = 0; i &lt; lim-&gt;data.getStudentNum(); i++)\n            {\n                if (!queryStudent(lim-&gt;data.getStudentNo()[i], false))\n                {\n                    Node&lt;Student&gt; *stu = new Node&lt;Student&gt;;\n                    stu-&gt;data.setStudentNo(lim-&gt;data.getStudentNo()[i]);\n                    stu-&gt;data.setName(lim-&gt;data.getStudentName()[i]);\n                    stu-&gt;data.setLectureNum(stu-&gt;data.getLectureNum() + 1);\n                    stu-&gt;data.getLectureName().push_back(lim-&gt;data.getName());\n                    stu-&gt;data.getLectureType().push_back(LIMITED);\n                    stu-&gt;data.getLectureCredit().push_back(lim-&gt;data.getCredit());\n                    stu-&gt;data.getLectureScore().push_back(lim-&gt;data.getStudentScore()[i]);\n                    stu-&gt;data.getLectureGPA().push_back(lim-&gt;data.getStudentGPA()[i]);\n                    stu-&gt;data.getLecturePF().push_back(false);\n                    stu-&gt;data.setTotalScore(stu-&gt;data.getTotalScore() + lim-&gt;data.getStudentScore()[i] * lim-&gt;data.getCredit());\n                    stu-&gt;data.setTotalCredit(stu-&gt;data.getTotalCredit() + lim-&gt;data.getCredit());\n                    stu-&gt;data.setTotalGPA(stu-&gt;data.getTotalGPA() + calculateGPA(lim-&gt;data.getStudentScore()[i]) * lim-&gt;data.getCredit());\n                    if (stu-&gt;data.getTotalCredit() - stu-&gt;data.getTotalPFCredit())\n                        stu-&gt;data.setAverageScore(stu-&gt;data.getTotalScore() / (stu-&gt;data.getTotalCredit() - stu-&gt;data.getTotalPFCredit()));\n                    if (stu-&gt;data.getTotalCredit() - stu-&gt;data.getTotalPFCredit())\n                        stu-&gt;data.setAverageGPA(stu-&gt;data.getTotalGPA() / (stu-&gt;data.getTotalCredit() - stu-&gt;data.getTotalPFCredit()));\n                    studentList.insert_end(stu);\n                }\n                else\n                {\n                    Student *stu = findStudent(lim-&gt;data.getStudentNo()[i]);\n                    stu-&gt;setLectureNum(stu-&gt;getLectureNum() + 1);\n                    stu-&gt;getLectureName().push_back(lim-&gt;data.getName());\n                    stu-&gt;getLectureType().push_back(LIMITED);\n                    stu-&gt;getLectureCredit().push_back(lim-&gt;data.getCredit());\n                    stu-&gt;getLectureScore().push_back(lim-&gt;data.getStudentScore()[i]);\n                    stu-&gt;getLectureGPA().push_back(lim-&gt;data.getStudentGPA()[i]);\n                    stu-&gt;getLecturePF().push_back(false);\n                    stu-&gt;setTotalScore(stu-&gt;getTotalScore() + lim-&gt;data.getStudentScore()[i] * lim-&gt;data.getCredit());\n                    stu-&gt;setTotalCredit(stu-&gt;getTotalCredit() + lim-&gt;data.getCredit());\n                    stu-&gt;setTotalGPA(stu-&gt;getTotalGPA() + calculateGPA(lim-&gt;data.getStudentScore()[i]) * lim-&gt;data.getCredit());\n                    if (stu-&gt;getTotalCredit() - stu-&gt;getTotalPFCredit())\n                        stu-&gt;setAverageScore(stu-&gt;getTotalScore() / (stu-&gt;getTotalCredit() - stu-&gt;getTotalPFCredit()));\n                    if (stu-&gt;getTotalCredit() - stu-&gt;getTotalPFCredit())\n                        stu-&gt;setAverageGPA(stu-&gt;getTotalGPA() / (stu-&gt;getTotalCredit() - stu-&gt;getTotalPFCredit()));\n                }\n            }\n            lim = limitedList.getNext();\n        } while (lim != nullptr);\n    }\n    if (opt != nullptr)\n    {\n        do\n        {\n            for (int i = 0; i &lt; opt-&gt;data.getStudentNum(); i++)\n            {\n                if (!queryStudent(opt-&gt;data.getStudentNo()[i], false))\n                {\n                    Node&lt;Student&gt; *stu = new Node&lt;Student&gt;;\n                    stu-&gt;data.setStudentNo(opt-&gt;data.getStudentNo()[i]);\n                    stu-&gt;data.setName(opt-&gt;data.getStudentName()[i]);\n                    stu-&gt;data.setLectureNum(stu-&gt;data.getLectureNum() + 1);\n                    stu-&gt;data.getLectureName().push_back(opt-&gt;data.getName());\n                    stu-&gt;data.getLectureType().push_back(OPTIONAL);\n                    stu-&gt;data.getLectureCredit().push_back(opt-&gt;data.getCredit());\n                    stu-&gt;data.getLectureScore().push_back(opt-&gt;data.getStudentScore()[i]);\n                    stu-&gt;data.getLectureGPA().push_back(opt-&gt;data.getStudentGPA()[i]);\n                    stu-&gt;data.getLecturePF().push_back(opt-&gt;data.getStudentPF()[i]);\n                    stu-&gt;data.setLecturePFNum(stu-&gt;data.getLecturePFNum() + (opt-&gt;data.getStudentPF()[i] ? 1 : 0));\n                    stu-&gt;data.setTotalScore(stu-&gt;data.getTotalScore() + opt-&gt;data.getStudentScore()[i] * (!opt-&gt;data.getStudentPF()[i] ? opt-&gt;data.getCredit() : 0));\n                    stu-&gt;data.setTotalCredit(stu-&gt;data.getTotalCredit() + opt-&gt;data.getCredit());\n                    stu-&gt;data.setTotalPFCredit(stu-&gt;data.getTotalPFCredit() + (opt-&gt;data.getStudentPF()[i] ? opt-&gt;data.getCredit() : 0));\n                    stu-&gt;data.setTotalGPA(stu-&gt;data.getTotalGPA() + calculateGPA(opt-&gt;data.getStudentScore()[i]) * opt-&gt;data.getCredit());\n                    if (stu-&gt;data.getTotalCredit() - stu-&gt;data.getTotalPFCredit())\n                        stu-&gt;data.setAverageScore(stu-&gt;data.getTotalScore() / (stu-&gt;data.getTotalCredit() - stu-&gt;data.getTotalPFCredit()));\n                    if (stu-&gt;data.getTotalCredit() - stu-&gt;data.getTotalPFCredit())\n                        stu-&gt;data.setAverageGPA(stu-&gt;data.getTotalGPA() / (stu-&gt;data.getTotalCredit() - stu-&gt;data.getTotalPFCredit()));\n                    studentList.insert_end(stu);\n                }\n                else\n                {\n                    Student *stu = findStudent(opt-&gt;data.getStudentNo()[i]);\n                    stu-&gt;setLectureNum(stu-&gt;getLectureNum() + 1);\n                    stu-&gt;getLectureName().push_back(opt-&gt;data.getName());\n                    stu-&gt;getLectureType().push_back(OPTIONAL);\n                    stu-&gt;getLectureCredit().push_back(opt-&gt;data.getCredit());\n                    stu-&gt;getLectureScore().push_back(opt-&gt;data.getStudentScore()[i]);\n                    stu-&gt;getLectureGPA().push_back(opt-&gt;data.getStudentGPA()[i]);\n                    stu-&gt;getLecturePF().push_back(opt-&gt;data.getStudentPF()[i]);\n                    stu-&gt;setLecturePFNum(stu-&gt;getLecturePFNum() + (opt-&gt;data.getStudentPF()[i] ? 1 : 0));\n                    stu-&gt;setTotalScore(stu-&gt;getTotalScore() + opt-&gt;data.getStudentScore()[i] * (!opt-&gt;data.getStudentPF()[i] ? opt-&gt;data.getCredit() : 0));\n                    stu-&gt;setTotalCredit(stu-&gt;getTotalCredit() + opt-&gt;data.getCredit());\n                    stu-&gt;setTotalPFCredit(stu-&gt;getTotalPFCredit() + (opt-&gt;data.getStudentPF()[i] ? opt-&gt;data.getCredit() : 0));\n                    stu-&gt;setTotalGPA(stu-&gt;getTotalGPA() + calculateGPA(opt-&gt;data.getStudentScore()[i]) * opt-&gt;data.getCredit());\n                    if (stu-&gt;getTotalCredit() - stu-&gt;getTotalPFCredit())\n                        stu-&gt;setAverageScore(stu-&gt;getTotalScore() / (stu-&gt;getTotalCredit() - stu-&gt;getTotalPFCredit()));\n                    if (stu-&gt;getTotalCredit() - stu-&gt;getTotalPFCredit())\n                        stu-&gt;setAverageGPA(stu-&gt;getTotalGPA() / (stu-&gt;getTotalCredit() - stu-&gt;getTotalPFCredit()));\n                }\n            }\n            opt = optionalList.getNext();\n        } while (opt != nullptr);\n    }\n}\n\n// \u4ece\u5b66\u751f\u66f4\u65b0\u8bfe\u7a0b\u4fe1\u606f\nvoid Database::updateLecture()\n{\n    requiredList.makeEmpty();\n    limitedList.makeEmpty();\n    optionalList.makeEmpty();\n    Node&lt;Student&gt; *stu = studentList.getFirst();\n    if (stu != nullptr)\n    {\n        do\n        {\n            for (int i = 0; i &lt; stu-&gt;data.getLectureNum(); i++)\n            {\n                if (stu-&gt;data.getLectureType()[i] == REQUIRED)\n                {\n                    if (!queryRequired(stu-&gt;data.getLectureName()[i], false))\n                    {\n                        Node&lt;LectureRequired&gt; *req = new Node&lt;LectureRequired&gt;;\n                        req-&gt;data.setName(stu-&gt;data.getLectureName()[i]);\n                        req-&gt;data.setCredit(stu-&gt;data.getLectureCredit()[i]);\n                        req-&gt;data.setStudentNum(req-&gt;data.getStudentNum() + 1);\n                        std::vector&lt;int&gt; studentNo = req-&gt;data.getStudentNo();\n                        std::vector&lt;std::string&gt; studentName = req-&gt;data.getStudentName();\n                        std::vector&lt;int&gt; studentScore = req-&gt;data.getStudentScore();\n                        std::vector&lt;double&gt; studentGPA = req-&gt;data.getStudentGPA();\n                        studentNo.push_back(stu-&gt;data.getStudentNo());\n                        studentName.push_back(stu-&gt;data.getName());\n                        studentScore.push_back(stu-&gt;data.getLectureScore()[i]);\n                        studentGPA.push_back(stu-&gt;data.getLectureGPA()[i]);\n                        req-&gt;data.setStudentNo(studentNo);\n                        req-&gt;data.setStudentName(studentName);\n                        req-&gt;data.setStudentScore(studentScore);\n                        req-&gt;data.setStudentGPA(studentGPA);\n                        req-&gt;data.setTotalScore(req-&gt;data.getTotalScore() + stu-&gt;data.getLectureScore()[i]);\n                        req-&gt;data.setTotalGPA(req-&gt;data.getTotalGPA() + stu-&gt;data.getLectureGPA()[i]);\n                        req-&gt;data.setAverageScore(req-&gt;data.getTotalScore() / req-&gt;data.getStudentNum());\n                        req-&gt;data.setAverageGPA(req-&gt;data.getTotalGPA() / req-&gt;data.getStudentNum());\n                        requiredList.insert_end(req);\n                    }\n                    else\n                    {\n                        LectureRequired *req = findRequired(stu-&gt;data.getLectureName()[i]);\n                        req-&gt;setStudentNum(req-&gt;getStudentNum() + 1);\n                        std::vector&lt;int&gt; studentNo = req-&gt;getStudentNo();\n                        std::vector&lt;std::string&gt; studentName = req-&gt;getStudentName();\n                        std::vector&lt;int&gt; studentScore = req-&gt;getStudentScore();\n                        std::vector&lt;double&gt; studentGPA = req-&gt;getStudentGPA();\n                        studentNo.push_back(stu-&gt;data.getStudentNo());\n                        studentName.push_back(stu-&gt;data.getName());\n                        studentScore.push_back(stu-&gt;data.getLectureScore()[i]);\n                        studentGPA.push_back(stu-&gt;data.getLectureGPA()[i]);\n                        req-&gt;setStudentNo(studentNo);\n                        req-&gt;setStudentName(studentName);\n                        req-&gt;setStudentScore(studentScore);\n                        req-&gt;setStudentGPA(studentGPA);\n                        req-&gt;setTotalScore(req-&gt;getTotalScore() + stu-&gt;data.getLectureScore()[i]);\n                        req-&gt;setTotalGPA(req-&gt;getTotalGPA() + stu-&gt;data.getLectureGPA()[i]);\n                        req-&gt;setAverageScore(req-&gt;getTotalScore() / req-&gt;getStudentNum());\n                        req-&gt;setAverageGPA(req-&gt;getTotalGPA() / req-&gt;getStudentNum());\n                    }\n                }\n                else if (stu-&gt;data.getLectureType()[i] == LIMITED)\n                {\n                    if (!queryLimited(stu-&gt;data.getLectureName()[i], false))\n                    {\n                        Node&lt;LectureLimited&gt; *lim = new Node&lt;LectureLimited&gt;;\n                        lim-&gt;data.setName(stu-&gt;data.getLectureName()[i]);\n                        lim-&gt;data.setCredit(stu-&gt;data.getLectureCredit()[i]);\n                        lim-&gt;data.setStudentNum(lim-&gt;data.getStudentNum() + 1);\n                        std::vector&lt;int&gt; studentNo = lim-&gt;data.getStudentNo();\n                        std::vector&lt;std::string&gt; studentName = lim-&gt;data.getStudentName();\n                        std::vector&lt;int&gt; studentScore = lim-&gt;data.getStudentScore();\n                        std::vector&lt;double&gt; studentGPA = lim-&gt;data.getStudentGPA();\n                        studentNo.push_back(stu-&gt;data.getStudentNo());\n                        studentName.push_back(stu-&gt;data.getName());\n                        studentScore.push_back(stu-&gt;data.getLectureScore()[i]);\n                        studentGPA.push_back(stu-&gt;data.getLectureGPA()[i]);\n                        lim-&gt;data.setStudentNo(studentNo);\n                        lim-&gt;data.setStudentName(studentName);\n                        lim-&gt;data.setStudentScore(studentScore);\n                        lim-&gt;data.setStudentGPA(studentGPA);\n                        lim-&gt;data.setTotalScore(lim-&gt;data.getTotalScore() + stu-&gt;data.getLectureScore()[i]);\n                        lim-&gt;data.setTotalGPA(lim-&gt;data.getTotalGPA() + stu-&gt;data.getLectureGPA()[i]);\n                        lim-&gt;data.setAverageScore(lim-&gt;data.getTotalScore() / lim-&gt;data.getStudentNum());\n                        lim-&gt;data.setAverageGPA(lim-&gt;data.getTotalGPA() / lim-&gt;data.getStudentNum());\n                        limitedList.insert_end(lim);\n                    }\n                    else\n                    {\n                        LectureLimited *lim = findLimited(stu-&gt;data.getLectureName()[i]);\n                        lim-&gt;setStudentNum(lim-&gt;getStudentNum() + 1);\n                        std::vector&lt;int&gt; studentNo = lim-&gt;getStudentNo();\n                        std::vector&lt;std::string&gt; studentName = lim-&gt;getStudentName();\n                        std::vector&lt;int&gt; studentScore = lim-&gt;getStudentScore();\n                        std::vector&lt;double&gt; studentGPA = lim-&gt;getStudentGPA();\n                        studentNo.push_back(stu-&gt;data.getStudentNo());\n                        studentName.push_back(stu-&gt;data.getName());\n                        studentScore.push_back(stu-&gt;data.getLectureScore()[i]);\n                        studentGPA.push_back(stu-&gt;data.getLectureGPA()[i]);\n                        lim-&gt;setStudentNo(studentNo);\n                        lim-&gt;setStudentName(studentName);\n                        lim-&gt;setStudentScore(studentScore);\n                        lim-&gt;setStudentGPA(studentGPA);\n                        lim-&gt;setTotalScore(lim-&gt;getTotalScore() + stu-&gt;data.getLectureScore()[i]);\n                        lim-&gt;setTotalGPA(lim-&gt;getTotalGPA() + stu-&gt;data.getLectureGPA()[i]);\n                        lim-&gt;setAverageScore(lim-&gt;getTotalScore() / lim-&gt;getStudentNum());\n                    }\n                }\n                else if (stu-&gt;data.getLectureType()[i] == OPTIONAL)\n                {\n                    if (!queryOptional(stu-&gt;data.getLectureName()[i], false))\n                    {\n                        Node&lt;LectureOptional&gt; *opt = new Node&lt;LectureOptional&gt;;\n                        opt-&gt;data.setName(stu-&gt;data.getLectureName()[i]);\n                        opt-&gt;data.setCredit(stu-&gt;data.getLectureCredit()[i]);\n                        opt-&gt;data.setStudentNum(opt-&gt;data.getStudentNum() + 1);\n                        std::vector&lt;int&gt; studentNo = opt-&gt;data.getStudentNo();\n                        std::vector&lt;std::string&gt; studentName = opt-&gt;data.getStudentName();\n                        std::vector&lt;int&gt; studentScore = opt-&gt;data.getStudentScore();\n                        std::vector&lt;double&gt; studentGPA = opt-&gt;data.getStudentGPA();\n                        std::vector&lt;int&gt; studentPF = opt-&gt;data.getStudentPF();\n                        studentNo.push_back(stu-&gt;data.getStudentNo());\n                        studentName.push_back(stu-&gt;data.getName());\n                        studentScore.push_back(stu-&gt;data.getLectureScore()[i]);\n                        studentGPA.push_back(stu-&gt;data.getLectureGPA()[i]);\n                        studentPF.push_back(stu-&gt;data.getLecturePF()[i]);\n                        opt-&gt;data.setStudentNo(studentNo);\n                        opt-&gt;data.setStudentName(studentName);\n                        opt-&gt;data.setStudentScore(studentScore);\n                        opt-&gt;data.setStudentGPA(studentGPA);\n                        opt-&gt;data.setStudentPF(studentPF);\n                        opt-&gt;data.setStudentPFNum(opt-&gt;data.getStudentPFNum() + stu-&gt;data.getLecturePF()[i]);\n                        opt-&gt;data.setTotalScore(opt-&gt;data.getTotalScore() + (!stu-&gt;data.getLecturePF()[i] ? stu-&gt;data.getLectureScore()[i] : 0));\n                        opt-&gt;data.setTotalGPA(opt-&gt;data.getTotalGPA() + (!stu-&gt;data.getLecturePF()[i] ? stu-&gt;data.getLectureGPA()[i] : 0));\n                        if (opt-&gt;data.getStudentNum() - opt-&gt;data.getStudentPFNum())\n                            opt-&gt;data.setAverageScore(opt-&gt;data.getTotalScore() / (opt-&gt;data.getStudentNum() - opt-&gt;data.getStudentPFNum()));\n                        if (opt-&gt;data.getStudentNum() - opt-&gt;data.getStudentPFNum())\n                            opt-&gt;data.setAverageGPA(opt-&gt;data.getTotalGPA() / (opt-&gt;data.getStudentNum() - opt-&gt;data.getStudentPFNum()));\n                        optionalList.insert_end(opt);\n                    }\n                    else\n                    {\n                        LectureOptional *opt = findOptional(stu-&gt;data.getLectureName()[i]);\n                        opt-&gt;setStudentNum(opt-&gt;getStudentNum() + 1);\n                        std::vector&lt;int&gt; studentNo = opt-&gt;getStudentNo();\n                        std::vector&lt;std::string&gt; studentName = opt-&gt;getStudentName();\n                        std::vector&lt;int&gt; studentScore = opt-&gt;getStudentScore();\n                        std::vector&lt;double&gt; studentGPA = opt-&gt;getStudentGPA();\n                        std::vector&lt;int&gt; studentPF = opt-&gt;getStudentPF();\n                        studentNo.push_back(stu-&gt;data.getStudentNo());\n                        studentName.push_back(stu-&gt;data.getName());\n                        studentScore.push_back(stu-&gt;data.getLectureScore()[i]);\n                        studentGPA.push_back(stu-&gt;data.getLectureGPA()[i]);\n                        studentPF.push_back(stu-&gt;data.getLecturePF()[i]);\n                        opt-&gt;setStudentNo(studentNo);\n                        opt-&gt;setStudentName(studentName);\n                        opt-&gt;setStudentScore(studentScore);\n                        opt-&gt;setStudentGPA(studentGPA);\n                        opt-&gt;setStudentPF(studentPF);\n                        opt-&gt;setStudentPFNum(opt-&gt;getStudentPFNum() + stu-&gt;data.getLecturePF()[i]);\n                        opt-&gt;setTotalScore(opt-&gt;getTotalScore() + (!stu-&gt;data.getLecturePF()[i] ? stu-&gt;data.getLectureScore()[i] : 0));\n                        opt-&gt;setTotalGPA(opt-&gt;getTotalGPA() + (!stu-&gt;data.getLecturePF()[i] ? stu-&gt;data.getLectureGPA()[i] : 0));\n                        if (opt-&gt;getStudentNum() - opt-&gt;getStudentPFNum())\n                            opt-&gt;setAverageScore(opt-&gt;getTotalScore() / (opt-&gt;getStudentNum() - opt-&gt;getStudentPFNum()));\n                        if (opt-&gt;getStudentNum() - opt-&gt;getStudentPFNum())\n                            opt-&gt;setAverageGPA(opt-&gt;getTotalGPA() / (opt-&gt;getStudentNum() - opt-&gt;getStudentPFNum()));\n                    }\n                }\n            }\n            stu = studentList.getNext();\n        } while (stu != nullptr);\n    }\n}\n\n// \u767b\u5f55\nAccount *Database::login(std::string username, std::string password)\n{\n    Node&lt;User&gt; *user = userList.getFirst();\n    while (user != nullptr)\n    {\n        if (user-&gt;data.getName() == username &amp;&amp; user-&gt;data.getPassword() == password)\n            return &amp;user-&gt;data;\n        user = userList.getNext();\n    }\n    Node&lt;Admin&gt; *admin = adminList.getFirst();\n    while (admin != nullptr)\n    {\n        if (admin-&gt;data.getName() == username &amp;&amp; admin-&gt;data.getPassword() == password)\n            return &amp;admin-&gt;data;\n        admin = adminList.getNext();\n    }\n    return nullptr;\n}\n\n// \u6ce8\u518c\nAccount *Database::registerUser(std::string username, std::string password, int permission)\n{\n    if (permission == 1)\n    {\n        Node&lt;User&gt; *acc = new Node&lt;User&gt;;\n        acc-&gt;data.setName(username);\n        acc-&gt;data.setPassword(password);\n        userList.insert_end(acc);\n        return &amp;acc-&gt;data;\n    }\n    else if (permission == 2)\n    {\n        Node&lt;Admin&gt; *acc = new Node&lt;Admin&gt;;\n        acc-&gt;data.setName(username);\n        acc-&gt;data.setPassword(password);\n        adminList.insert_end(acc);\n        return &amp;acc-&gt;data;\n    }\n    else\n    {\n        return nullptr;\n    }\n}\n\n// \u52a0\u8f7d\u8d26\u53f7\nvoid Database::loadAccount(const std::string &amp;userFilename, const std::string &amp;adminFilename)\n{\n    userList.makeEmpty();\n    adminList.makeEmpty();\n    encrypt(userFilename);\n    encrypt(adminFilename);\n    std::ifstream in;\n    in.open(userFilename.c_str(), std::ios::in);\n    Node&lt;User&gt; *user;\n    int tmpPermission = 0;\n    // \u6253\u5f00\u6587\u4ef6\u6210\u529f\n    if (in)\n    {\n        in.seekg(0, std::ios::end);\n        int fileSize = in.tellg();\n        in.seekg(std::ios::beg);\n        while (fileSize - in.tellg() &gt; 2)\n        {\n            user = new Node&lt;User&gt;;\n            if (in &gt;&gt; user-&gt;data)\n            {\n                userList.insert_end(user);\n            }\n            else\n            {\n                FileException e(userFilename, \"operate\", \"read\");\n                throw e;\n            }\n        }\n    }\n    else\n    {\n        FileException e(userFilename, \"open\", \"read\");\n        throw e;\n    }\n    in.close();\n    in.open(adminFilename.c_str(), std::ios::in);\n    Node&lt;Admin&gt; *admin;\n    // \u6253\u5f00\u6587\u4ef6\u6210\u529f\n    if (in)\n    {\n        in.seekg(0, std::ios::end);\n        int fileSize = in.tellg();\n        in.seekg(std::ios::beg);\n        while (fileSize - in.tellg() &gt; 2)\n        {\n            admin = new Node&lt;Admin&gt;;\n            if (in &gt;&gt; admin-&gt;data)\n            {\n                adminList.insert_end(admin);\n            }\n            else\n            {\n                FileException e(adminFilename, \"operate\", \"read\");\n                throw e;\n            }\n        }\n    }\n    else\n    {\n        FileException e(adminFilename, \"open\", \"read\");\n        throw e;\n    }\n    encrypt(userFilename);\n    encrypt(adminFilename);\n}\n\n// \u4fdd\u5b58\u8d26\u53f7\nvoid Database::saveAccount(const std::string &amp;userFilename, const std::string &amp;adminFilename)\n{\n    encrypt(userFilename);\n    encrypt(adminFilename);\n    std::ofstream out;\n    out.open(userFilename.c_str(), std::ios::out);\n    Node&lt;User&gt; *user = userList.getFirst();\n    // \u6253\u5f00\u6587\u4ef6\u6210\u529f\n    if (out)\n    {\n        while (user != nullptr)\n        {\n            if (!(out &lt;&lt; user-&gt;data))\n            {\n                FileException e(userFilename, \"operate\", \"write\");\n                throw e;\n            }\n            user = userList.getNext();\n        }\n    }\n    else\n    {\n        FileException e(userFilename, \"open\", \"write\");\n        throw e;\n    }\n    out.close();\n    out.open(adminFilename.c_str(), std::ios::out);\n    Node&lt;Admin&gt; *admin = adminList.getFirst();\n    // \u6253\u5f00\u6587\u4ef6\u6210\u529f\n    if (out)\n    {\n        while (admin != nullptr)\n        {\n            if (!(out &lt;&lt; admin-&gt;data))\n            {\n                FileException e(adminFilename, \"operate\", \"write\");\n                throw e;\n            }\n            admin = adminList.getNext();\n        }\n    }\n    else\n    {\n        FileException e(adminFilename, \"open\", \"write\");\n        throw e;\n    }\n    encrypt(userFilename);\n    encrypt(adminFilename);\n}\n\n// \u67e5\u8be2\u8d26\u53f7\nint Database::queryAccount(const std::string&amp; username)\n{\n    int count = 0;\n    Node&lt;User&gt;*user = userList.getFirst();\n    while (user != nullptr)\n    {\n        if (user-&gt;data.getName() == username)\n            count++;\n        user = userList.getNext();\n    }\n    Node&lt;Admin&gt;*admin = adminList.getFirst();\n    while (admin != nullptr)\n    {\n        if (admin-&gt;data.getName() == username)\n            count++;\n        admin = adminList.getNext();\n    }\n    return count;\n}\n</code></pre>"},{"location":"coursework/cpd/3/project/#infocpp","title":"<code>info.cpp</code>","text":"<pre><code>#include \"commonheader.h\"\n\n// \u6784\u9020\u51fd\u6570\nInfo::Info()\n{\n    name = \"DefaultName\";\n    uid = currentUid++;\n}\n\n// \u6784\u9020\u51fd\u6570\nInfo::Info(std::string inputName)\n{\n    name = inputName;\n    uid = currentUid++;\n}\n\n// \u6790\u6784\u51fd\u6570\nInfo::~Info() {}\n\n// \u83b7\u53d6\u540d\u79f0\nstd::string Info::getName()\n{\n    return name;\n}\n\n// \u83b7\u53d6\u552f\u4e00\u6807\u8bc6\u7b26\nint Info::getUid()\n{\n    return uid;\n}\n\n// \u83b7\u53d6\u662f\u5426\u5904\u4e8e\u8c03\u8bd5\u6a21\u5f0f\nbool Info::isDebugMode()\n{\n    return DebugMode;\n}\n\n// \u8bbe\u7f6e\u540d\u79f0\nvoid Info::setName(std::string inputName)\n{\n    name = inputName;\n}\n</code></pre>"},{"location":"coursework/cpd/3/project/#lecturecpp","title":"<code>lecture.cpp</code>","text":"<pre><code>#include \"commonheader.h\"\n\n// \u6784\u9020\u51fd\u6570\nLecture::Lecture()\n{\n    credit = 0;\n    studentNo.clear();\n    studentName.clear();\n    studentScore.clear();\n    studentGPA.clear();\n    studentNum = 0;\n    totalScore = 0;\n    totalGPA = 0;\n    averageScore = 0;\n    averageGPA = 0;\n}\n\n// \u6790\u6784\u51fd\u6570\nLecture::~Lecture() {}\n\n// \u83b7\u53d6\u5b66\u5206\nint Lecture::getCredit()\n{\n    return credit;\n}\n\n// \u83b7\u53d6\u5b66\u53f7\nstd::vector&lt;int&gt; Lecture::getStudentNo()\n{\n    return studentNo;\n}\n\n// \u83b7\u53d6\u59d3\u540d\nstd::vector&lt;std::string&gt; Lecture::getStudentName()\n{\n    return studentName;\n}\n\n// \u83b7\u53d6\u6210\u7ee9\nstd::vector&lt;int&gt; Lecture::getStudentScore()\n{\n    return studentScore;\n}\n\n// \u83b7\u53d6\u7ee9\u70b9\nstd::vector&lt;double&gt; Lecture::getStudentGPA()\n{\n    return studentGPA;\n}\n\n// \u83b7\u53d6\u5b66\u751f\u4eba\u6570\nint Lecture::getStudentNum()\n{\n    return studentNum;\n}\n\n// \u83b7\u53d6\u603b\u5206\nint Lecture::getTotalScore()\n{\n    return totalScore;\n}\n\n// \u83b7\u53d6\u603b\u7ee9\u70b9\ndouble Lecture::getTotalGPA()\n{\n    return totalGPA;\n}\n\n// \u83b7\u53d6\u5e73\u5747\u5206\nint Lecture::getAverageScore()\n{\n    return averageScore;\n}\n\n// \u83b7\u53d6\u5e73\u5747\u7ee9\u70b9\ndouble Lecture::getAverageGPA()\n{\n    return averageGPA;\n}\n\n// \u66f4\u65b0\u8bfe\u7a0b\u4fe1\u606f\nvoid Lecture::updateInfo(Database &amp;database)\n{\n    bool validName = false, validCredit = false;\n    std::string inputName;\n    int inputCredit;\n    std::string oldName = name;\n\n    do\n    {\n        std::cout &lt;&lt; \"\u8bf7\u8f93\u5165\u540d\u79f0\uff1a\";\n        std::cin &gt;&gt; inputName;\n        if (database.queryLecture(inputName, false) &amp;&amp; inputName != oldName)\n        {\n            std::cout &lt;&lt; \"\u8be5\u540d\u79f0\u5df2\u5b58\u5728\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165\uff01\" &lt;&lt; std::endl;\n        }\n        else\n        {\n            name = inputName;\n            validName = true;\n        }\n    } while (!validName);\n\n    do\n    {\n        std::cout &lt;&lt; \"\u8bf7\u8f93\u5165\u5b66\u5206\uff1a\";\n        std::cin &gt;&gt; inputCredit;\n        if (inputCredit &lt; 0)\n        {\n            std::cout &lt;&lt; \"\u5b66\u5206\u4e0d\u80fd\u4e3a\u8d1f\u6570\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165\uff01\" &lt;&lt; std::endl;\n        }\n        else\n        {\n            credit = inputCredit;\n            validCredit = true;\n        }\n    } while (!validCredit);\n\n    // TODO: update database\n}\n\n// \u8bbe\u7f6e\u540d\u79f0\nvoid Lecture::setName(std::string inputName)\n{\n    name = inputName;\n}\n\n// \u8bbe\u7f6e\u5b66\u5206\nvoid Lecture::setCredit(int inputCredit)\n{\n    credit = inputCredit;\n}\n\n// \u8bbe\u7f6e\u5b66\u53f7\nvoid Lecture::setStudentNo(std::vector&lt;int&gt; inputStudentNo)\n{\n    studentNo = inputStudentNo;\n}\n\n// \u8bbe\u7f6e\u59d3\u540d\nvoid Lecture::setStudentName(std::vector&lt;std::string&gt; inputStudentName)\n{\n    studentName = inputStudentName;\n}\n\n// \u8bbe\u7f6e\u6210\u7ee9\nvoid Lecture::setStudentScore(std::vector&lt;int&gt; inputStudentScore)\n{\n    studentScore = inputStudentScore;\n}\n\n// \u8bbe\u7f6e\u7ee9\u70b9\nvoid Lecture::setStudentGPA(std::vector&lt;double&gt; inputStudentGPA)\n{\n    studentGPA = inputStudentGPA;\n}\n\n// \u8bbe\u7f6e\u5b66\u751f\u4eba\u6570\nvoid Lecture::setStudentNum(int inputStudentNum)\n{\n    studentNum = inputStudentNum;\n}\n\n// \u8bbe\u7f6e\u603b\u5206\nvoid Lecture::setTotalScore(int inputTotalScore)\n{\n    totalScore = inputTotalScore;\n}\n\n// \u8bbe\u7f6e\u603b\u7ee9\u70b9\nvoid Lecture::setTotalGPA(double inputTotalGPA)\n{\n    totalGPA = inputTotalGPA;\n}\n\n// \u8bbe\u7f6e\u5e73\u5747\u5206\nvoid Lecture::setAverageScore(int inputAverageScore)\n{\n    averageScore = inputAverageScore;\n}\n\n// \u8bbe\u7f6e\u5e73\u5747\u7ee9\u70b9\nvoid Lecture::setAverageGPA(double inputAverageGPA)\n{\n    averageGPA = inputAverageGPA;\n}\n\n// \u6dfb\u52a0\u5b66\u751f\nvoid Lecture::addStudent(int inputStudentNo, std::string inputStudentName, int inputStudentScore, double inputStudentGPA)\n{\n    studentNo.push_back(inputStudentNo);\n    studentName.push_back(inputStudentName);\n    studentScore.push_back(inputStudentScore);\n    studentGPA.push_back(inputStudentGPA);\n    studentNum++;\n    totalScore += inputStudentScore;\n    totalGPA += inputStudentGPA;\n    averageScore = totalScore / studentNum;\n    averageGPA = totalGPA / studentNum;\n}\n\n// \u7b80\u7565\u6253\u5370\u8bfe\u7a0b\u4fe1\u606f\nvoid Lecture::printInfo(int widthName)\n{\n    std::cout &lt;&lt; std::setw(widthName) &lt;&lt; name\n              &lt;&lt; std::setw(5) &lt;&lt; \"\u901a\u7528\"\n              &lt;&lt; std::setw(5) &lt;&lt; credit\n              &lt;&lt; std::setw(5) &lt;&lt; studentNum\n              &lt;&lt; std::setw(5) &lt;&lt; std::setprecision(3) &lt;&lt; averageScore\n              &lt;&lt; std::setw(5) &lt;&lt; std::setprecision(3) &lt;&lt; averageGPA &lt;&lt; std::endl;\n}\n\n// \u8be6\u7ec6\u6253\u5370\u8bfe\u7a0b\u4fe1\u606f\nvoid Lecture::printLectureInfo()\n{\n    std::cout &lt;&lt; std::endl;\n    if (isDebugMode())\n        std::cout &lt;&lt; \"     UID\uff1a\" &lt;&lt; uid &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"\u8bfe\u7a0b\u540d\u79f0\uff1a\" &lt;&lt; name &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"\u8bfe\u7a0b\u5b66\u5206\uff1a\" &lt;&lt; credit &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"\u5b66\u751f\u4eba\u6570\uff1a\" &lt;&lt; studentNum &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"\u5e73\u5747\u5206\u6570\uff1a\" &lt;&lt; averageScore &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"\u5e73\u5747\u7ee9\u70b9\uff1a\" &lt;&lt; averageGPA &lt;&lt; std::endl;\n    int widthStudentNo = 5, widthStudentName = 5, widthStudentScore = 5, widthStudentGPA = 5;\n    for (int i = 0; i &lt; studentNum; i++)\n    {\n        if (std::to_string(studentNo[i]).length() &gt;= widthStudentNo)\n        {\n            widthStudentNo = std::to_string(studentNo[i]).length() + 1;\n        }\n        if (studentName[i].length() &gt;= widthStudentName)\n        {\n            widthStudentName = studentName[i].length() + 1;\n        }\n    }\n    std::cout &lt;&lt; std::setw(widthStudentNo) &lt;&lt; \"\u5b66\u53f7\"\n              &lt;&lt; std::setw(widthStudentName) &lt;&lt; \"\u59d3\u540d\"\n              &lt;&lt; std::setw(5) &lt;&lt; \"\u6210\u7ee9\"\n              &lt;&lt; std::setw(5) &lt;&lt; \"\u7ee9\u70b9\" &lt;&lt; std::endl;\n    for (int i = 0; i &lt; studentNum; i++)\n    {\n        std::cout &lt;&lt; std::setw(widthStudentNo) &lt;&lt; studentNo[i]\n                  &lt;&lt; std::setw(widthStudentName) &lt;&lt; studentName[i]\n                  &lt;&lt; std::setw(5) &lt;&lt; studentScore[i]\n                  &lt;&lt; std::setw(5) &lt;&lt; studentGPA[i] &lt;&lt; std::endl;\n    }\n}\n\n// \u6d41\u8f93\u5165\u64cd\u4f5c\u7b26\u91cd\u8f7d\u51fd\u6570\nstd::istream &amp;operator&gt;&gt;(std::istream &amp;is, Lecture &amp;lecture)\n{\n    is &gt;&gt; lecture.name &gt;&gt; lecture.credit &gt;&gt; lecture.studentNum &gt;&gt; lecture.totalScore &gt;&gt; lecture.totalGPA &gt;&gt; lecture.averageScore &gt;&gt; lecture.averageGPA;\n    lecture.studentNo.resize(lecture.studentNum);\n    lecture.studentName.resize(lecture.studentNum);\n    lecture.studentScore.resize(lecture.studentNum);\n    lecture.studentGPA.resize(lecture.studentNum);\n    for (int i = 0; i &lt; lecture.studentNum; i++)\n    {\n        is &gt;&gt; lecture.studentNo[i] &gt;&gt; lecture.studentName[i] &gt;&gt; lecture.studentScore[i] &gt;&gt; lecture.studentGPA[i];\n    }\n    return is;\n}\n\n// \u6d41\u8f93\u51fa\u64cd\u4f5c\u7b26\u91cd\u8f7d\u51fd\u6570\nstd::ostream &amp;operator&lt;&lt;(std::ostream &amp;os, Lecture &amp;lecture)\n{\n    os &lt;&lt; lecture.name &lt;&lt; \"\\t\"\n       &lt;&lt; lecture.credit &lt;&lt; \"\\t\"\n       &lt;&lt; lecture.studentNum &lt;&lt; \"\\t\"\n       &lt;&lt; lecture.totalScore &lt;&lt; \"\\t\"\n       &lt;&lt; lecture.totalGPA &lt;&lt; \"\\t\"\n       &lt;&lt; lecture.averageScore &lt;&lt; \"\\t\"\n       &lt;&lt; lecture.averageGPA &lt;&lt; std::endl;\n    for (int i = 0; i &lt; lecture.studentNum; i++)\n    {\n        os &lt;&lt; lecture.studentNo[i] &lt;&lt; \"\\t\"\n           &lt;&lt; lecture.studentName[i] &lt;&lt; \"\\t\"\n           &lt;&lt; lecture.studentScore[i] &lt;&lt; \"\\t\"\n           &lt;&lt; lecture.studentGPA[i] &lt;&lt; std::endl;\n    }\n    return os;\n}\n</code></pre>"},{"location":"coursework/cpd/3/project/#lecture_limitedcpp","title":"<code>lecture_limited.cpp</code>","text":"<pre><code>#include \"commonheader.h\"\n\n// \u6784\u9020\u51fd\u6570\nLectureLimited::LectureLimited()\n{\n}\n\n// \u6790\u6784\u51fd\u6570\nLectureLimited::~LectureLimited()\n{\n}\n\n// \u66f4\u65b0\u8bfe\u7a0b\u4fe1\u606f\nvoid LectureLimited::updateInfo(Database &amp;database)\n{\n    Lecture::updateInfo(database);\n}\n\n// \u7b80\u7565\u6253\u5370\u8bfe\u7a0b\u4fe1\u606f\nvoid LectureLimited::printInfo(int widthName)\n{\n    std::cout &lt;&lt; std::setw(widthName) &lt;&lt; name\n              &lt;&lt; std::setw(5) &lt;&lt; \"\u9650\u9009\"\n              &lt;&lt; std::setw(5) &lt;&lt; credit\n              &lt;&lt; std::setw(5) &lt;&lt; studentNum\n              &lt;&lt; std::setw(5) &lt;&lt; std::setprecision(3) &lt;&lt; averageScore\n              &lt;&lt; std::setw(5) &lt;&lt; std::setprecision(3) &lt;&lt; averageGPA &lt;&lt; std::endl;\n}\n\n// \u8be6\u7ec6\u6253\u5370\u8bfe\u7a0b\u4fe1\u606f\nvoid LectureLimited::printLectureInfo()\n{\n    if (isDebugMode())\n        std::cout &lt;&lt; \"UID\uff1a\" &lt;&lt; uid &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"\u8bfe\u7a0b\u540d\u79f0\uff1a\" &lt;&lt; name &lt;&lt; std::endl\n              &lt;&lt; \"\u8bfe\u7a0b\u7c7b\u578b\uff1a\u9650\u9009\u8bfe\" &lt;&lt; std::endl\n              &lt;&lt; \"\u8bfe\u7a0b\u5b66\u5206\uff1a\" &lt;&lt; credit &lt;&lt; std::endl\n              &lt;&lt; \"\u5b66\u751f\u4eba\u6570\uff1a\" &lt;&lt; studentNum &lt;&lt; std::endl\n              &lt;&lt; \"\u5e73\u5747\u5206\u6570\uff1a\" &lt;&lt; averageScore &lt;&lt; std::endl\n              &lt;&lt; \"\u5e73\u5747\u7ee9\u70b9\uff1a\" &lt;&lt; averageGPA &lt;&lt; std::endl;\n    int widthStudentNo = 5, widthStudentName = 5;\n    for (int i = 0; i &lt; studentNum; i++)\n    {\n        if (std::to_string(studentNo[i]).length() &gt;= widthStudentNo)\n        {\n            widthStudentNo = std::to_string(studentNo[i]).length() + 1;\n        }\n        if (studentName[i].length() &gt;= widthStudentName)\n        {\n            widthStudentName = studentName[i].length() + 1;\n        }\n    }\n    std::cout &lt;&lt; std::setw(widthStudentNo) &lt;&lt; \"\u5b66\u53f7\"\n              &lt;&lt; std::setw(widthStudentName) &lt;&lt; \"\u59d3\u540d\"\n              &lt;&lt; std::setw(5) &lt;&lt; \"\u6210\u7ee9\"\n              &lt;&lt; std::setw(5) &lt;&lt; \"\u7ee9\u70b9\" &lt;&lt; std::endl;\n    for (int i = 0; i &lt; studentNum; i++)\n    {\n        std::cout &lt;&lt; std::setw(widthStudentNo) &lt;&lt; studentNo[i]\n                  &lt;&lt; std::setw(widthStudentName) &lt;&lt; studentName[i]\n                  &lt;&lt; std::setw(5) &lt;&lt; studentScore[i]\n                  &lt;&lt; std::setw(5) &lt;&lt; studentGPA[i] &lt;&lt; std::endl;\n    }\n}\n\n// \u6d41\u8f93\u5165\u64cd\u4f5c\u7b26\u91cd\u8f7d\u51fd\u6570\nstd::istream &amp;operator&gt;&gt;(std::istream &amp;is, LectureLimited &amp;lecture)\n{\n    is &gt;&gt; lecture.name &gt;&gt; lecture.credit &gt;&gt; lecture.studentNum &gt;&gt; lecture.totalScore &gt;&gt; lecture.totalGPA &gt;&gt; lecture.averageScore &gt;&gt; lecture.averageGPA;\n    lecture.studentNo.resize(lecture.studentNum);\n    lecture.studentName.resize(lecture.studentNum);\n    lecture.studentScore.resize(lecture.studentNum);\n    lecture.studentGPA.resize(lecture.studentNum);\n    for (int i = 0; i &lt; lecture.studentNum; i++)\n    {\n        is &gt;&gt; lecture.studentNo[i] &gt;&gt; lecture.studentName[i] &gt;&gt; lecture.studentScore[i] &gt;&gt; lecture.studentGPA[i];\n    }\n    return is;\n}\n\n// \u6d41\u8f93\u51fa\u64cd\u4f5c\u7b26\u91cd\u8f7d\u51fd\u6570\nstd::ostream &amp;operator&lt;&lt;(std::ostream &amp;os, LectureLimited &amp;lecture)\n{\n    os &lt;&lt; lecture.name &lt;&lt; \"\\t\"\n       &lt;&lt; lecture.credit &lt;&lt; \"\\t\"\n       &lt;&lt; lecture.studentNum &lt;&lt; \"\\t\"\n       &lt;&lt; lecture.totalScore &lt;&lt; \"\\t\"\n       &lt;&lt; lecture.totalGPA &lt;&lt; \"\\t\"\n       &lt;&lt; lecture.averageScore &lt;&lt; \"\\t\"\n       &lt;&lt; lecture.averageGPA &lt;&lt; std::endl;\n    for (int i = 0; i &lt; lecture.studentNum; i++)\n    {\n        os &lt;&lt; lecture.studentNo[i] &lt;&lt; \"\\t\"\n           &lt;&lt; lecture.studentName[i] &lt;&lt; \"\\t\"\n           &lt;&lt; lecture.studentScore[i] &lt;&lt; \"\\t\"\n           &lt;&lt; lecture.studentGPA[i] &lt;&lt; std::endl;\n    }\n    return os;\n}\n</code></pre>"},{"location":"coursework/cpd/3/project/#limited_optionalcpp","title":"<code>limited_optional.cpp</code>","text":"<pre><code>#include \"commonheader.h\"\n\n// \u6784\u9020\u51fd\u6570\nLectureOptional::LectureOptional()\n{\n    studentPF.clear();\n    studentPFNum = 0;\n}\n\n// \u6790\u6784\u51fd\u6570\nLectureOptional::~LectureOptional()\n{\n}\n\n// \u83b7\u53d6\u5b66\u751f\u8ba1PF\u60c5\u51b5\nstd::vector&lt;int&gt; LectureOptional::getStudentPF()\n{\n    return studentPF;\n}\n\n// \u83b7\u53d6\u5b66\u751f\u8ba1PF\u4eba\u6570\nint LectureOptional::getStudentPFNum()\n{\n    return studentPFNum;\n}\n\n// \u8bbe\u7f6e\u5b66\u751f\u8ba1PF\u60c5\u51b5\nvoid LectureOptional::setStudentPF(std::vector&lt;int&gt; inputStudentPF)\n{\n    studentPF = inputStudentPF;\n}\n\n// \u8bbe\u7f6e\u5b66\u751f\u8ba1PF\u4eba\u6570\nvoid LectureOptional::setStudentPFNum(int inputStudentPFNum)\n{\n    studentPFNum = inputStudentPFNum;\n}\n\n// \u6dfb\u52a0\u5b66\u751f\nvoid LectureOptional::addStudent(int inputStudentNo, std::string inputStudentName, int inputStudentScore, double inputStudentGPA, bool inputStudentPF)\n{\n    studentNo.push_back(inputStudentNo);\n    studentName.push_back(inputStudentName);\n    studentScore.push_back(inputStudentScore);\n    studentGPA.push_back(inputStudentGPA);\n    studentPF.push_back(inputStudentPF);\n    studentNum++;\n    if (!inputStudentPF)\n    {\n        totalScore += inputStudentScore;\n        totalGPA += inputStudentGPA;\n    }\n    else\n    {\n        studentPFNum++;\n    }\n    averageScore = totalScore / (studentNum - studentPFNum);\n    averageGPA = totalGPA / (studentNum - studentPFNum);\n}\n\n// \u66f4\u65b0\u8bfe\u7a0b\u4fe1\u606f\nvoid LectureOptional::updateInfo(Database &amp;database)\n{\n    Lecture::updateInfo(database);\n}\n\n// \u7b80\u7565\u6253\u5370\u8bfe\u7a0b\u4fe1\u606f\nvoid LectureOptional::printInfo(int widthName)\n{\n    std::cout &lt;&lt; std::setw(widthName) &lt;&lt; name\n              &lt;&lt; std::setw(5) &lt;&lt; \"\u4efb\u9009\"\n              &lt;&lt; std::setw(5) &lt;&lt; credit\n              &lt;&lt; std::setw(5) &lt;&lt; studentNum\n              &lt;&lt; std::setw(5) &lt;&lt; std::setprecision(3) &lt;&lt; averageScore\n              &lt;&lt; std::setw(5) &lt;&lt; std::setprecision(3) &lt;&lt; averageGPA &lt;&lt; std::endl;\n}\n\n// \u8be6\u7ec6\u6253\u5370\u8bfe\u7a0b\u4fe1\u606f\nvoid LectureOptional::printLectureInfo()\n{\n    if (isDebugMode())\n        std::cout &lt;&lt; \"UID\uff1a\" &lt;&lt; uid &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"\u8bfe\u7a0b\u540d\u79f0\uff1a\" &lt;&lt; name &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"\u8bfe\u7a0b\u7c7b\u578b\uff1a\u4efb\u9009\u8bfe\" &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"\u8bfe\u7a0b\u5b66\u5206\uff1a\" &lt;&lt; credit &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"\u5b66\u751f\u4eba\u6570\uff1a\" &lt;&lt; studentNum &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"\u5e73\u5747\u5206\u6570\uff1a\" &lt;&lt; averageScore &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"\u5e73\u5747\u7ee9\u70b9\uff1a\" &lt;&lt; averageGPA &lt;&lt; std::endl;\n    int widthStudentNo = 5, widthStudentName = 5;\n    for (int i = 0; i &lt; studentNum; i++)\n    {\n        if (std::to_string(studentNo[i]).length() &gt;= widthStudentNo)\n        {\n            widthStudentNo = std::to_string(studentNo[i]).length() + 1;\n        }\n        if (studentName[i].length() &gt;= widthStudentName)\n        {\n            widthStudentName = studentName[i].length() + 1;\n        }\n    }\n    std::cout &lt;&lt; std::setw(widthStudentNo) &lt;&lt; \"\u5b66\u53f7\"\n              &lt;&lt; std::setw(widthStudentName) &lt;&lt; \"\u59d3\u540d\"\n              &lt;&lt; std::setw(5) &lt;&lt; \"\u6210\u7ee9\"\n              &lt;&lt; std::setw(5) &lt;&lt; \"\u7ee9\u70b9\" &lt;&lt; std::endl;\n    for (int i = 0; i &lt; studentNum; i++)\n    {\n        std::cout &lt;&lt; std::setw(widthStudentNo) &lt;&lt; studentNo[i]\n                  &lt;&lt; std::setw(widthStudentName) &lt;&lt; studentName[i];\n        std::cout.width(5);\n        if (studentPF[i])\n            std::cout &lt;&lt; \"N/A\";\n        else\n            std::cout &lt;&lt; studentScore[i];\n        std::cout.width(5);\n        if (studentPF[i])\n            std::cout &lt;&lt; (studentGPA[i] ? \"P\" : \"F\") &lt;&lt; std::endl;\n        else\n            std::cout &lt;&lt; studentGPA[i] &lt;&lt; std::endl;\n    }\n}\n\n// \u6d41\u8f93\u5165\u64cd\u4f5c\u7b26\u91cd\u8f7d\u51fd\u6570\nstd::istream &amp;operator&gt;&gt;(std::istream &amp;is, LectureOptional &amp;lecture)\n{\n    is &gt;&gt; lecture.name &gt;&gt; lecture.credit &gt;&gt; lecture.studentNum &gt;&gt; lecture.studentPFNum &gt;&gt; lecture.totalScore &gt;&gt; lecture.totalGPA &gt;&gt; lecture.averageScore &gt;&gt; lecture.averageGPA;\n    lecture.studentNo.resize(lecture.studentNum);\n    lecture.studentName.resize(lecture.studentNum);\n    lecture.studentScore.resize(lecture.studentNum);\n    lecture.studentGPA.resize(lecture.studentNum);\n    lecture.studentPF.resize(lecture.studentNum);\n    for (int i = 0; i &lt; lecture.studentNum; i++)\n    {\n        is &gt;&gt; lecture.studentNo[i] &gt;&gt; lecture.studentName[i] &gt;&gt; lecture.studentScore[i] &gt;&gt; lecture.studentGPA[i] &gt;&gt; lecture.studentPF[i];\n    }\n    return is;\n}\n\n// \u6d41\u8f93\u51fa\u64cd\u4f5c\u7b26\u91cd\u8f7d\u51fd\u6570\nstd::ostream &amp;operator&lt;&lt;(std::ostream &amp;os, LectureOptional &amp;lecture)\n{\n    os &lt;&lt; lecture.name &lt;&lt; \"\\t\"\n       &lt;&lt; lecture.credit &lt;&lt; \"\\t\"\n       &lt;&lt; lecture.studentNum &lt;&lt; \"\\t\"\n       &lt;&lt; lecture.studentPFNum &lt;&lt; \"\\t\"\n       &lt;&lt; lecture.totalScore &lt;&lt; \"\\t\"\n       &lt;&lt; lecture.totalGPA &lt;&lt; \"\\t\"\n       &lt;&lt; lecture.averageScore &lt;&lt; \"\\t\"\n       &lt;&lt; lecture.averageGPA &lt;&lt; std::endl;\n    for (int i = 0; i &lt; lecture.studentNum; i++)\n    {\n        os &lt;&lt; lecture.studentNo[i] &lt;&lt; \"\\t\"\n           &lt;&lt; lecture.studentName[i] &lt;&lt; \"\\t\"\n           &lt;&lt; lecture.studentScore[i] &lt;&lt; \"\\t\"\n           &lt;&lt; lecture.studentGPA[i] &lt;&lt; \"\\t\"\n           &lt;&lt; lecture.studentPF[i] &lt;&lt; std::endl;\n    }\n    return os;\n}\n</code></pre>"},{"location":"coursework/cpd/3/project/#lecture_requiredcpp","title":"<code>lecture_required.cpp</code>","text":"<pre><code>#include \"commonheader.h\"\n\n// \u6784\u9020\u51fd\u6570\nLectureRequired::LectureRequired()\n{\n}\n\n// \u6790\u6784\u51fd\u6570\nLectureRequired::~LectureRequired()\n{\n}\n\n// \u66f4\u65b0\u8bfe\u7a0b\u4fe1\u606f\nvoid LectureRequired::updateInfo(Database &amp;database)\n{\n    Lecture::updateInfo(database);\n}\n\n// \u7b80\u7565\u6253\u5370\u8bfe\u7a0b\u4fe1\u606f\nvoid LectureRequired::printInfo(int widthName)\n{\n    std::cout &lt;&lt; std::setw(widthName) &lt;&lt; name\n              &lt;&lt; std::setw(5) &lt;&lt; \"\u5fc5\u9009\"\n              &lt;&lt; std::setw(5) &lt;&lt; credit\n              &lt;&lt; std::setw(5) &lt;&lt; studentNum\n              &lt;&lt; std::setw(5) &lt;&lt; std::setprecision(3) &lt;&lt; averageScore\n              &lt;&lt; std::setw(5) &lt;&lt; std::setprecision(3) &lt;&lt; averageGPA &lt;&lt; std::endl;\n}\n\n// \u8be6\u7ec6\u6253\u5370\u8bfe\u7a0b\u4fe1\u606f\nvoid LectureRequired::printLectureInfo()\n{\n    if (isDebugMode())\n        std::cout &lt;&lt; \"UID\uff1a\" &lt;&lt; uid &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"\u8bfe\u7a0b\u540d\u79f0\uff1a\" &lt;&lt; name &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"\u8bfe\u7a0b\u7c7b\u578b\uff1a\u5fc5\u9009\u8bfe\" &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"\u8bfe\u7a0b\u5b66\u5206\uff1a\" &lt;&lt; credit &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"\u5b66\u751f\u4eba\u6570\uff1a\" &lt;&lt; studentNum &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"\u5e73\u5747\u5206\u6570\uff1a\" &lt;&lt; averageScore &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"\u5e73\u5747\u7ee9\u70b9\uff1a\" &lt;&lt; averageGPA &lt;&lt; std::endl;\n    int widthStudentNo = 5, widthStudentName = 5;\n    for (int i = 0; i &lt; studentNum; i++)\n    {\n        if (std::to_string(studentNo[i]).length() &gt;= widthStudentNo)\n        {\n            widthStudentNo = std::to_string(studentNo[i]).length() + 1;\n        }\n        if (studentName[i].length() &gt;= widthStudentName)\n        {\n            widthStudentName = studentName[i].length() + 1;\n        }\n    }\n    std::cout &lt;&lt; std::setw(widthStudentNo) &lt;&lt; \"\u5b66\u53f7\"\n              &lt;&lt; std::setw(widthStudentName) &lt;&lt; \"\u59d3\u540d\"\n              &lt;&lt; std::setw(5) &lt;&lt; \"\u6210\u7ee9\"\n              &lt;&lt; std::setw(5) &lt;&lt; \"\u7ee9\u70b9\" &lt;&lt; std::endl;\n    for (int i = 0; i &lt; studentNum; i++)\n    {\n        std::cout &lt;&lt; std::setw(widthStudentNo) &lt;&lt; studentNo[i]\n                  &lt;&lt; std::setw(widthStudentName) &lt;&lt; studentName[i]\n                  &lt;&lt; std::setw(5) &lt;&lt; studentScore[i]\n                  &lt;&lt; std::setw(5) &lt;&lt; studentGPA[i] &lt;&lt; std::endl;\n    }\n}\n\n// \u6d41\u8f93\u5165\u64cd\u4f5c\u7b26\u91cd\u8f7d\u51fd\u6570\nstd::istream &amp;operator&gt;&gt;(std::istream &amp;is, LectureRequired &amp;lecture)\n{\n    is &gt;&gt; lecture.name &gt;&gt; lecture.credit &gt;&gt; lecture.studentNum &gt;&gt; lecture.totalScore &gt;&gt; lecture.totalGPA &gt;&gt; lecture.averageScore &gt;&gt; lecture.averageGPA;\n    lecture.studentNo.resize(lecture.studentNum);\n    lecture.studentName.resize(lecture.studentNum);\n    lecture.studentScore.resize(lecture.studentNum);\n    lecture.studentGPA.resize(lecture.studentNum);\n    for (int i = 0; i &lt; lecture.studentNum; i++)\n    {\n        is &gt;&gt; lecture.studentNo[i] &gt;&gt; lecture.studentName[i] &gt;&gt; lecture.studentScore[i] &gt;&gt; lecture.studentGPA[i];\n    }\n    return is;\n}\n\n// \u6d41\u8f93\u51fa\u64cd\u4f5c\u7b26\u91cd\u8f7d\u51fd\u6570\nstd::ostream &amp;operator&lt;&lt;(std::ostream &amp;os, LectureRequired &amp;lecture)\n{\n    os &lt;&lt; lecture.name &lt;&lt; \"\\t\"\n       &lt;&lt; lecture.credit &lt;&lt; \"\\t\"\n       &lt;&lt; lecture.studentNum &lt;&lt; \"\\t\"\n       &lt;&lt; lecture.totalScore &lt;&lt; \"\\t\"\n       &lt;&lt; lecture.totalGPA &lt;&lt; \"\\t\"\n       &lt;&lt; lecture.averageScore &lt;&lt; \"\\t\"\n       &lt;&lt; lecture.averageGPA &lt;&lt; std::endl;\n    for (int i = 0; i &lt; lecture.studentNum; i++)\n    {\n        os &lt;&lt; lecture.studentNo[i] &lt;&lt; \"\\t\"\n           &lt;&lt; lecture.studentName[i] &lt;&lt; \"\\t\"\n           &lt;&lt; lecture.studentScore[i] &lt;&lt; \"\\t\"\n           &lt;&lt; lecture.studentGPA[i] &lt;&lt; std::endl;\n    }\n    return os;\n}\n</code></pre>"},{"location":"coursework/cpd/3/project/#maincpp","title":"<code>main.cpp</code>","text":"<pre><code>#include \"commonheader.h\"\n\nint Info::currentUid = 0;\nbool Info::DebugMode = false;\nAccount *UserInterface::currentUser = nullptr;\n\nint main()\n{\n    UserInterface ui;\n    while (ui.run())\n        ;\n    return 0;\n}\n</code></pre>"},{"location":"coursework/cpd/3/project/#studentcpp","title":"<code>student.cpp</code>","text":"<pre><code>#include \"commonheader.h\"\n\n// \u6784\u9020\u51fd\u6570\nStudent::Student()\n{\n    studentNo = 0;\n    lectureName.clear();\n    lectureScore.clear();\n    lectureCredit.clear();\n    lectureGPA.clear();\n    lectureNum = 0;\n    lecturePFNum = 0;\n    totalScore = 0;\n    totalCredit = 0;\n    totalPFCredit = 0;\n    totalGPA = 0;\n    averageScore = 0;\n    averageGPA = 0;\n}\n\n// \u6790\u6784\u51fd\u6570\nStudent::~Student() {}\n\n// \u83b7\u53d6\u5b66\u53f7\nint Student::getStudentNo()\n{\n    return studentNo;\n}\n\n// \u83b7\u53d6\u59d3\u540d\nstd::string Student::getName()\n{\n    return name;\n}\n\n// \u83b7\u53d6\u5404\u79d1\u540d\u79f0\nstd::vector&lt;std::string&gt; Student::getLectureName()\n{\n    return lectureName;\n}\n\n// \u83b7\u53d6\u5404\u79d1\u7c7b\u578b\nstd::vector&lt;LectureType&gt; Student::getLectureType()\n{\n    return lectureType;\n}\n\n// \u83b7\u53d6\u5404\u79d1\u6210\u7ee9\nstd::vector&lt;int&gt; Student::getLectureScore()\n{\n    return lectureScore;\n}\n\n// \u83b7\u53d6\u5404\u79d1\u5b66\u5206\nstd::vector&lt;int&gt; Student::getLectureCredit()\n{\n    return lectureCredit;\n}\n\n// \u83b7\u53d6\u5404\u79d1\u5b66\u5206\u7ee9\u70b9\nstd::vector&lt;double&gt; Student::getLectureGPA()\n{\n    return lectureGPA;\n}\n\n// \u83b7\u53d6\u5404\u79d1\u662f\u5426\u8ba1PF\nstd::vector&lt;int&gt; Student::getLecturePF()\n{\n    return lecturePF;\n}\n\n// \u83b7\u53d6\u8bfe\u7a0b\u6570\nint Student::getLectureNum()\n{\n    return lectureNum;\n}\n\n// \u83b7\u53d6PF\u8bfe\u7a0b\u6570\nint Student::getLecturePFNum()\n{\n    return lecturePFNum;\n}\n\n// \u83b7\u53d6\u603b\u6210\u7ee9\nint Student::getTotalScore()\n{\n    return totalScore;\n}\n\n// \u83b7\u53d6\u603b\u5b66\u5206\nint Student::getTotalCredit()\n{\n    return totalCredit;\n}\n\n// \u83b7\u53d6PF\u5b66\u5206\nint Student::getTotalPFCredit()\n{\n    return totalPFCredit;\n}\n\n// \u83b7\u53d6\u603b\u5b66\u5206\u7ee9\u70b9\ndouble Student::getTotalGPA()\n{\n    return totalGPA;\n}\n\n// \u83b7\u53d6\u5e73\u5747\u6210\u7ee9\ndouble Student::getAverageScore()\n{\n    return averageScore;\n}\n\n// \u83b7\u53d6\u5e73\u5747\u5b66\u5206\u7ee9\u70b9\ndouble Student::getAverageGPA()\n{\n    return averageGPA;\n}\n\n// \u4fee\u6539\u5b66\u751f\u4fe1\u606f\nvoid Student::updateInfo(Database &amp;database)\n{\n    int oldStudentNo = studentNo;\n    std::string oldName = name;\n    bool validStudentNo = false, validName = false, validLecture = false, newLecture = false, moreLecture = false;\n    int existLecture = 0;\n    int inputStudentNo;\n    std::string inputName;\n    std::string tmpLectureName;\n    int tmpLectureType;\n    int tmpLectureScore;\n    int tmpLectureCredit;\n    double tmpLectureGPA;\n    bool tmpLecturePF = false;\n    LectureType destLectureType;\n\n    do\n    {\n        std::cout &lt;&lt; \"\u8bf7\u8f93\u5165\u5b66\u53f7\uff1a\";\n        std::cin &gt;&gt; inputStudentNo;\n        if (database.queryStudent(inputStudentNo, false) &amp;&amp; oldStudentNo != inputStudentNo)\n        {\n            std::cout &lt;&lt; \"\u8be5\u5b66\u53f7\u5df2\u5b58\u5728\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165\uff01\" &lt;&lt; std::endl;\n        }\n        else\n        {\n            studentNo = inputStudentNo;\n            validStudentNo = true;\n        }\n    } while (!validStudentNo);\n\n    do\n    {\n        std::cout &lt;&lt; \"\u8bf7\u8f93\u5165\u59d3\u540d\uff1a\";\n        std::cin &gt;&gt; inputName;\n        if (database.queryStudent(inputName, false) &amp;&amp; oldName != inputName)\n        {\n            std::cout &lt;&lt; \"\u8be5\u59d3\u540d\u5df2\u5b58\u5728\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165\uff01\" &lt;&lt; std::endl;\n        }\n        else\n        {\n            name = inputName;\n            validName = true;\n        }\n    } while (!validName);\n\n    do\n    {\n        validLecture = newLecture = moreLecture = tmpLecturePF = false;\n        existLecture = 0;\n        std::cout &lt;&lt; \"\u8bf7\u8f93\u5165\u8bfe\u7a0b\u540d\u79f0\uff1a\";\n        std::cin &gt;&gt; tmpLectureName;\n        if (!lectureName.empty())\n        {\n            for (int i = 0; i &lt; lectureName.size(); i++)\n            {\n                if (lectureName[i] == tmpLectureName)\n                {\n                    existLecture = i + 1;\n                    break;\n                }\n            }\n        }\n        if (existLecture)\n        {\n            std::cout &lt;&lt; \"\u8be5\u5b66\u751f\u5df2\u6709\u8be5\u8bfe\u7a0b\u7684\u6210\u7ee9\u8bb0\u5f55\u3002\u662f\u5426\u8986\u76d6\uff1f[Y/N]\" &lt;&lt; std::endl;\n            int cover;\n            cover = _getch();\n            if (cover == 'Y' || cover == 'y')\n            {\n                destLectureType = (database.queryRequired(tmpLectureName, false) ? REQUIRED : (database.queryLimited(tmpLectureName, false) ? LIMITED : OPTIONAL));\n                std::cout &lt;&lt; \"\u8bf7\u8f93\u5165\u8bfe\u7a0b\u6210\u7ee9\uff080~100\uff09\uff1a\";\n                std::cin &gt;&gt; tmpLectureScore;\n                if (!std::cin)\n                {\n                    std::cout &lt;&lt; \"\u8f93\u5165\u9519\u8bef\uff01\" &lt;&lt; std::endl;\n                    std::cin.clear();\n                    std::cin.ignore();\n                    continue;\n                }\n                if (tmpLectureScore &lt; 0 || tmpLectureScore &gt; 100)\n                {\n                    std::cout &lt;&lt; \"\u8f93\u5165\u9519\u8bef\uff01\" &lt;&lt; std::endl;\n                    continue;\n                }\n                if (destLectureType == OPTIONAL)\n                {\n                    std::cout &lt;&lt; \"\u8be5\u8bfe\u7a0b\u4e3a\u4efb\u9009\u8bfe\uff0c\u5f97\u5206\u662f\u5426\u8ba1PF\uff1f[Y/N]\" &lt;&lt; std::endl;\n                    int inputLecturePF = _getch();\n                    if (inputLecturePF == 'Y' || inputLecturePF == 'y')\n                    {\n                        tmpLecturePF = true;\n                    }\n                }\n                lectureScore[existLecture - 1] = tmpLectureScore;\n                lecturePF[existLecture - 1] = tmpLectureScore;\n            }\n        }\n        else\n        {\n            if (database.queryLecture(tmpLectureName, false))\n            {\n                std::cout &lt;&lt; \"\u8be5\u8bfe\u7a0b\u5df2\u5b58\u5728\u4e8e\u6570\u636e\u5e93\u4e2d\u3002\u5b83\u7684\u7c7b\u578b\u662f\";\n                if (database.queryRequired(tmpLectureName, false))\n                {\n                    std::cout &lt;&lt; \"\u5fc5\u9009\u8bfe\u3002\" &lt;&lt; std::endl;\n                    destLectureType = REQUIRED;\n                    tmpLectureCredit = database.findRequired(tmpLectureName)-&gt;getCredit();\n                }\n                else if (database.queryLimited(tmpLectureName, false))\n                {\n                    std::cout &lt;&lt; \"\u9650\u9009\u8bfe\u3002\" &lt;&lt; std::endl;\n                    destLectureType = LIMITED;\n                    tmpLectureCredit = database.findLimited(tmpLectureName)-&gt;getCredit();\n                }\n                else\n                {\n                    std::cout &lt;&lt; \"\u4efb\u9009\u8bfe\u3002\" &lt;&lt; std::endl;\n                    destLectureType = OPTIONAL;\n                    tmpLectureCredit = database.findOptional(tmpLectureName)-&gt;getCredit();\n                }\n            }\n            else\n            {\n                std::cout &lt;&lt; \"\u8be5\u8bfe\u7a0b\u4e0d\u5b58\u5728\u4e8e\u6570\u636e\u5e93\u4e2d\u3002\u5b83\u7684\u7c7b\u578b\u662f\u4ec0\u4e48\uff1f\" &lt;&lt; std::endl;\n                std::cout &lt;&lt; \"1.\u5fc5\u9009\u8bfe\" &lt;&lt; std::endl\n                          &lt;&lt; \"2.\u9650\u9009\u8bfe\" &lt;&lt; std::endl\n                          &lt;&lt; \"3.\u4efb\u9009\u8bfe\" &lt;&lt; std::endl;\n                tmpLectureType = _getch();\n                if (tmpLectureType != '1' &amp;&amp; tmpLectureType != '2' &amp;&amp; tmpLectureType != '3')\n                {\n                    std::cout &lt;&lt; \"\u8f93\u5165\u9519\u8bef\uff01\" &lt;&lt; std::endl;\n                    continue;\n                }\n                switch (tmpLectureType)\n                {\n                case '1':\n                    destLectureType = REQUIRED;\n                    break;\n                case '2':\n                    destLectureType = LIMITED;\n                    break;\n                case '3':\n                    destLectureType = OPTIONAL;\n                    break;\n                default:\n                    break;\n                }\n                std::cout &lt;&lt; \"\u8bf7\u8f93\u5165\u8bfe\u7a0b\u5b66\u5206\uff1a\";\n                std::cin &gt;&gt; tmpLectureCredit;\n                if (!std::cin)\n                {\n                    std::cout &lt;&lt; \"\u8f93\u5165\u9519\u8bef\uff01\" &lt;&lt; std::endl;\n                    std::cin.clear();\n                    std::cin.ignore();\n                    continue;\n                }\n                if (tmpLectureCredit &lt; 0)\n                {\n                    std::cout &lt;&lt; \"\u8f93\u5165\u9519\u8bef\uff01\" &lt;&lt; std::endl;\n                    continue;\n                }\n                newLecture = true;\n            }\n            std::cout &lt;&lt; \"\u8bf7\u8f93\u5165\u8bfe\u7a0b\u6210\u7ee9\uff080~100\uff09\uff1a\";\n            std::cin &gt;&gt; tmpLectureScore;\n            if (!std::cin)\n            {\n                std::cout &lt;&lt; \"\u8f93\u5165\u9519\u8bef\uff01\" &lt;&lt; std::endl;\n                std::cin.clear();\n                std::cin.ignore();\n                continue;\n            }\n            if (tmpLectureScore &lt; 0 || tmpLectureScore &gt; 100)\n            {\n                std::cout &lt;&lt; \"\u8f93\u5165\u9519\u8bef\uff01\" &lt;&lt; std::endl;\n                continue;\n            }\n            if (destLectureType == OPTIONAL)\n            {\n                std::cout &lt;&lt; \"\u8be5\u8bfe\u7a0b\u4e3a\u4efb\u9009\u8bfe\uff0c\u5f97\u5206\u662f\u5426\u8ba1PF\uff1f[Y/N]\" &lt;&lt; std::endl;\n                int inputLecturePF = _getch();\n                if (inputLecturePF == 'Y' || inputLecturePF == 'y')\n                {\n                    tmpLecturePF = true;\n                }\n            }\n            lectureScore.push_back(tmpLectureScore);\n            lectureName.push_back(tmpLectureName);\n            lectureType.push_back(destLectureType);\n            lectureCredit.push_back(tmpLectureCredit);\n            lecturePF.push_back(tmpLecturePF);\n            lectureNum++;\n            if (tmpLecturePF)\n                lecturePFNum++;\n            validLecture = true;\n            tmpLectureGPA = database.calculateGPA(tmpLectureScore);\n            lectureGPA.push_back(tmpLectureGPA);\n            if (!tmpLecturePF)\n                totalScore += tmpLectureScore * tmpLectureCredit;\n            totalCredit += tmpLectureCredit;\n            if (tmpLecturePF)\n                totalPFCredit += tmpLectureCredit;\n            if (!tmpLecturePF)\n                totalGPA += tmpLectureGPA * tmpLectureCredit;\n            if (totalCredit - totalPFCredit &gt; 0)\n                averageScore = totalScore / (totalCredit - totalPFCredit);\n            if (totalCredit - totalPFCredit &gt; 0)\n                averageGPA = totalGPA / (totalCredit - totalPFCredit);\n            if (newLecture)\n            {\n                switch (tmpLectureType)\n                {\n                case '1':\n                    database.addRequired(tmpLectureName, tmpLectureCredit);\n                    destLectureType = REQUIRED;\n                    break;\n                case '2':\n                    database.addLimited(tmpLectureName, tmpLectureCredit);\n                    destLectureType = LIMITED;\n                    break;\n                case '3':\n                    database.addOptional(tmpLectureName, tmpLectureCredit);\n                    destLectureType = OPTIONAL;\n                    break;\n                default:\n                    break;\n                }\n            }\n            // database.addStudentToLecture(tmpLectureName, destLectureType, *this);\n        }\n\n        std::cout &lt;&lt; \"\u662f\u5426\u7ee7\u7eed\u8f93\u5165\u8bfe\u7a0b\uff1f[Y/N]\" &lt;&lt; std::endl;\n        char tmp;\n        tmp = _getch();\n        if (tmp == 'Y' || tmp == 'y')\n        {\n            moreLecture = true;\n        }\n        else\n        {\n            moreLecture = false;\n        }\n    } while (!validLecture || moreLecture);\n}\n\n// \u8bbe\u7f6e\u5b66\u53f7\nvoid Student::setStudentNo(int inputStudentNo)\n{\n    studentNo = inputStudentNo;\n}\n\n// \u8bbe\u7f6e\u59d3\u540d\nvoid Student::setName(std::string inputName)\n{\n    name = inputName;\n}\n\n// \u8bbe\u7f6e\u8bfe\u7a0b\u540d\u79f0\nvoid Student::setLectureName(std::vector&lt;std::string&gt; inputLectureName)\n{\n    lectureName = inputLectureName;\n}\n\n// \u8bbe\u7f6e\u8bfe\u7a0b\u7c7b\u578b\nvoid Student::setLectureType(std::vector&lt;LectureType&gt; inputLectureType)\n{\n    lectureType = inputLectureType;\n}\n\n// \u8bbe\u7f6e\u8bfe\u7a0b\u5b66\u5206\nvoid Student::setLectureCredit(std::vector&lt;int&gt; inputLectureCredit)\n{\n    lectureCredit = inputLectureCredit;\n}\n\n// \u8bbe\u7f6e\u8bfe\u7a0b\u6210\u7ee9\nvoid Student::setLectureScore(std::vector&lt;int&gt; inputLectureScore)\n{\n    lectureScore = inputLectureScore;\n}\n\n// \u8bbe\u7f6e\u8bfe\u7a0b\u7ee9\u70b9\nvoid Student::setLectureGPA(std::vector&lt;double&gt; inputLectureGPA)\n{\n    lectureGPA = inputLectureGPA;\n}\n\n// \u8bbe\u7f6e\u8bfe\u7a0bPF\nvoid Student::setLecturePF(std::vector&lt;int&gt; inputLecturePF)\n{\n    lecturePF = inputLecturePF;\n}\n\n// \u8bbe\u7f6e\u8bfe\u7a0b\u6570\nvoid Student::setLectureNum(int inputLectureNum)\n{\n    lectureNum = inputLectureNum;\n}\n\n// \u8bbe\u7f6ePF\u8bfe\u7a0b\u6570\nvoid Student::setLecturePFNum(int inputLecturePFNum)\n{\n    lecturePFNum = inputLecturePFNum;\n}\n\n// \u8bbe\u7f6e\u603b\u5b66\u5206\nvoid Student::setTotalCredit(int inputTotalCredit)\n{\n    totalCredit = inputTotalCredit;\n}\n\n// \u8bbe\u7f6ePF\u5b66\u5206\nvoid Student::setTotalPFCredit(int inputTotalPFCredit)\n{\n    totalPFCredit = inputTotalPFCredit;\n}\n\n// \u8bbe\u7f6e\u603b\u6210\u7ee9\nvoid Student::setTotalScore(int inputTotalScore)\n{\n    totalScore = inputTotalScore;\n}\n\n// \u8bbe\u7f6e\u603b\u7ee9\u70b9\nvoid Student::setTotalGPA(double inputTotalGPA)\n{\n    totalGPA = inputTotalGPA;\n}\n\n// \u8bbe\u7f6e\u5e73\u5747\u6210\u7ee9\nvoid Student::setAverageScore(double inputAverageScore)\n{\n    averageScore = inputAverageScore;\n}\n\n// \u8bbe\u7f6e\u5e73\u5747\u7ee9\u70b9\nvoid Student::setAverageGPA(double inputAverageGPA)\n{\n    averageGPA = inputAverageGPA;\n}\n\n// \u7b80\u7565\u6253\u5370\u5b66\u751f\u4fe1\u606f\nvoid Student::printInfo(int widthStudentNo, int widthName)\n{\n    std::cout &lt;&lt; std::setw(widthStudentNo) &lt;&lt; studentNo\n              &lt;&lt; std::setw(widthName) &lt;&lt; name\n              &lt;&lt; std::setw(5) &lt;&lt; lectureNum\n              &lt;&lt; std::setw(5) &lt;&lt; totalCredit\n              &lt;&lt; std::setw(5) &lt;&lt; std::setprecision(3) &lt;&lt; averageScore\n              &lt;&lt; std::setw(5) &lt;&lt; std::setprecision(3) &lt;&lt; averageGPA &lt;&lt; std::endl;\n}\n\n// \u8be6\u7ec6\u6253\u5370\u5b66\u751f\u4fe1\u606f\nvoid Student::printStudentInfo()\n{\n    if (isDebugMode())\n        std::cout &lt;&lt; \"UID\uff1a\" &lt;&lt; uid &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"\u5b66\u53f7\uff1a\" &lt;&lt; studentNo &lt;&lt; std::endl\n              &lt;&lt; \"\u59d3\u540d\uff1a\" &lt;&lt; name &lt;&lt; std::endl\n              &lt;&lt; \"\u8bfe\u7a0b\u6570\uff1a\" &lt;&lt; lectureNum &lt;&lt; std::endl\n              &lt;&lt; \"\u603b\u5b66\u5206\uff1a\" &lt;&lt; totalCredit &lt;&lt; std::endl\n              &lt;&lt; \"\u5e73\u5747\u6210\u7ee9\uff1a\" &lt;&lt; averageScore &lt;&lt; std::endl\n              &lt;&lt; \"\u5e73\u5747\u7ee9\u70b9\uff1a\" &lt;&lt; averageGPA &lt;&lt; std::endl;\n    int widthLectureName = 9, widthLectureType = 5;\n    for (int i = 0; i &lt; lectureNum; i++)\n    {\n        if (lectureName[i].length() &gt;= widthLectureName)\n        {\n            widthLectureName = lectureName[i].length() + 1;\n        }\n    }\n    std::cout &lt;&lt; std::setw(widthLectureName) &lt;&lt; \"\u8bfe\u7a0b\u540d\u79f0\"\n              &lt;&lt; std::setw(widthLectureType) &lt;&lt; \"\u7c7b\u578b\"\n              &lt;&lt; std::setw(5) &lt;&lt; \"\u5b66\u5206\"\n              &lt;&lt; std::setw(5) &lt;&lt; \"\u6210\u7ee9\"\n              &lt;&lt; std::setw(5) &lt;&lt; \"\u7ee9\u70b9\" &lt;&lt; std::endl;\n    for (int i = 0; i &lt; lectureNum; i++)\n    {\n        if (!lecturePF[i])\n        {\n            std::cout &lt;&lt; std::setw(widthLectureName) &lt;&lt; lectureName[i]\n                      &lt;&lt; std::setw(widthLectureType) &lt;&lt; ((lectureType[i] == REQUIRED) ? \"\u5fc5\u9009\" : ((lectureType[i] == LIMITED) ? \"\u9650\u9009\" : \"\u4efb\u9009\"))\n                      &lt;&lt; std::setw(5) &lt;&lt; lectureCredit[i]\n                      &lt;&lt; std::setw(5) &lt;&lt; std::setprecision(3) &lt;&lt; lectureScore[i]\n                      &lt;&lt; std::setw(5) &lt;&lt; std::setprecision(3) &lt;&lt; lectureGPA[i] &lt;&lt; std::endl;\n        }\n        else\n        {\n            std::cout &lt;&lt; std::setw(widthLectureName) &lt;&lt; lectureName[i]\n                      &lt;&lt; std::setw(widthLectureType) &lt;&lt; ((lectureType[i] == REQUIRED) ? \"\u5fc5\u9009\" : ((lectureType[i] == LIMITED) ? \"\u9650\u9009\" : \"\u4efb\u9009\"))\n                      &lt;&lt; std::setw(5) &lt;&lt; lectureCredit[i]\n                      &lt;&lt; std::setw(5) &lt;&lt; \"N/A\"\n                      &lt;&lt; std::setw(5) &lt;&lt; (lectureGPA[i] ? \"P\" : \"F\") &lt;&lt; std::endl;\n        }\n    }\n}\n\n// \u6d41\u8f93\u5165\u64cd\u4f5c\u7b26\u91cd\u8f7d\u51fd\u6570\nstd::istream &amp;operator&gt;&gt;(std::istream &amp;is, Student &amp;student)\n{\n    is &gt;&gt; student.studentNo &gt;&gt; student.name &gt;&gt; student.totalCredit &gt;&gt; student.totalScore &gt;&gt; student.totalGPA &gt;&gt; student.averageScore &gt;&gt; student.averageGPA &gt;&gt; student.lectureNum &gt;&gt; student.lecturePFNum;\n    student.lectureName.resize(student.lectureNum);\n    student.lectureType.resize(student.lectureNum);\n    student.lectureCredit.resize(student.lectureNum);\n    student.lectureScore.resize(student.lectureNum);\n    student.lectureGPA.resize(student.lectureNum);\n    student.lecturePF.resize(student.lectureNum);\n    int tmpLectureType;\n    for (int i = 0; i &lt; student.lectureNum; i++)\n    {\n        is &gt;&gt; student.lectureName[i] &gt;&gt; tmpLectureType &gt;&gt; student.lectureCredit[i] &gt;&gt; student.lectureScore[i] &gt;&gt; student.lectureGPA[i] &gt;&gt; student.lecturePF[i];\n        student.lectureType[i] = (LectureType)tmpLectureType;\n    }\n    return is;\n}\n\n// \u6d41\u8f93\u51fa\u64cd\u4f5c\u7b26\u91cd\u8f7d\u51fd\u6570\nstd::ostream &amp;operator&lt;&lt;(std::ostream &amp;os, Student &amp;student)\n{\n    os &lt;&lt; student.studentNo &lt;&lt; \"\\t\"\n       &lt;&lt; student.name &lt;&lt; \"\\t\"\n       &lt;&lt; student.totalCredit &lt;&lt; \"\\t\"\n       &lt;&lt; student.totalScore &lt;&lt; \"\\t\"\n       &lt;&lt; student.totalGPA &lt;&lt; \"\\t\"\n       &lt;&lt; student.averageScore &lt;&lt; \"\\t\"\n       &lt;&lt; student.averageGPA &lt;&lt; \"\\t\"\n       &lt;&lt; student.lectureNum &lt;&lt; \"\\t\"\n       &lt;&lt; student.lecturePFNum &lt;&lt; std::endl;\n    for (int i = 0; i &lt; student.lectureNum; i++)\n    {\n        os &lt;&lt; student.lectureName[i] &lt;&lt; \"\\t\"\n           &lt;&lt; student.lectureType[i] &lt;&lt; \"\\t\"\n           &lt;&lt; student.lectureCredit[i] &lt;&lt; \"\\t\"\n           &lt;&lt; student.lectureScore[i] &lt;&lt; \"\\t\"\n           &lt;&lt; student.lectureGPA[i] &lt;&lt; \"\\t\"\n           &lt;&lt; student.lecturePF[i] &lt;&lt; std::endl;\n    }\n    return os;\n}\n</code></pre>"},{"location":"coursework/cpd/3/project/#userinterfacecpp","title":"<code>userinterface.cpp</code>","text":"<pre><code>#include \"commonheader.h\"\n\n// \u6784\u9020\u51fd\u6570\nUserInterface::UserInterface()\n{\n    database = nullptr;\n}\n\n// \u6790\u6784\u51fd\u6570\nUserInterface::~UserInterface()\n{\n    if (database != nullptr)\n    {\n        delete database;\n    }\n}\n\n// \u4e3b\u8981\u7684\u4ea4\u4e92\u754c\u9762\nbool UserInterface::run()\n{\n    system(\"cls\");\n    std::cin.clear();\n    std::cin.sync();\n\n    if (database == nullptr)\n    {\n        database = new Database();\n    }\n    if (currentUser == nullptr)\n        currentUser = login();\n    if (currentUser == nullptr)\n        return false;\n    welcome();\n    int input;\n    input = _getch();\n    if (currentUser-&gt;getPermission() == 1)\n    {\n        switch (input)\n        {\n        case '1':\n            while (searchInfo())\n                ;\n            break;\n        case '2':\n            while (sortInfo())\n                ;\n            break;\n        case '3':\n            while (load())\n                ;\n            break;\n        case '4':\n            while (print())\n                ;\n            break;\n        case '5':\n            while (about())\n                ;\n            break;\n        case '0':\n            quit();\n            return false;\n        }\n    }\n    else if (currentUser-&gt;getPermission() == 2)\n    {\n        switch (input)\n        {\n        case '1':\n            while (searchInfo())\n                ;\n            break;\n        case '2':\n            while (sortInfo())\n                ;\n            break;\n        case '3':\n            while (addInfo())\n                ;\n            break;\n        case '4':\n            while (deleteInfo())\n                ;\n            break;\n        case '5':\n            while (modifyInfo())\n                ;\n            break;\n        case '6':\n            while (load())\n                ;\n            break;\n        case '7':\n            while (save())\n                ;\n            break;\n        case '8':\n            while (print())\n                ;\n            break;\n        case '9':\n            while (about())\n                ;\n            break;\n        case '0':\n            quit();\n            return false;\n        case '`':\n        case '~':\n            while (debug())\n                ;\n            break;\n        default:\n            std::cout &lt;&lt; \"\u8f93\u5165\u9519\u8bef\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165\uff01\" &lt;&lt; std::endl;\n            pause();\n        }\n    }\n\n    return true;\n}\n\n// \u6682\u505c\u51fd\u6570\nvoid UserInterface::pause()\n{\n    std::cin.clear();\n    std::cin.sync();\n    std::cout &lt;&lt; \"\u6309\u4efb\u610f\u952e\u7ee7\u7eed...\";\n    _getch();\n}\n\n// \u767b\u5f55\u754c\u9762\nAccount *UserInterface::login()\n{\n    database-&gt;loadAccount(\"savedata_user.dat\", \"savedata_admin.dat\");\n    system(\"cls\");\n    std::cin.clear();\n    std::cin.sync();\n    std::cout &lt;&lt; \"\u6b22\u8fce\u4f7f\u7528\u5b66\u751f\u6210\u7ee9\u7ba1\u7406\u7cfb\u7edf\" &lt;&lt; std::endl\n              &lt;&lt; \"1.\u767b\u5f55\" &lt;&lt; std::endl\n              &lt;&lt; \"2.\u6ce8\u518c\" &lt;&lt; std::endl\n              &lt;&lt; \"3.\u9000\u51fa\" &lt;&lt; std::endl\n              &lt;&lt; \"\u8bf7\u8f93\u5165\u60a8\u7684\u9009\u62e9\uff1a\" &lt;&lt; std::endl;\n    int input;\n    input = _getch();\n    int tmpPermission;\n    std::string tmpUsername;\n    std::string tmpPassword;\n    Account *acc = nullptr;\n    switch (input)\n    {\n    case '1':\n        std::cout &lt;&lt; \"\u7528\u6237\u540d\uff1a\" &lt;&lt; std::endl;\n        std::cin &gt;&gt; tmpUsername;\n        std::cout &lt;&lt; \"\u5bc6\u7801\uff1a\" &lt;&lt; std::endl;\n        std::cin &gt;&gt; tmpPassword;\n        acc = database-&gt;login(tmpUsername, tmpPassword);\n        if (acc != nullptr)\n        {\n            std::cout &lt;&lt; \"\u767b\u5f55\u6210\u529f\uff01\" &lt;&lt; std::endl;\n            database-&gt;saveAccount(\"savedata_user.dat\", \"savedata_admin.dat\");\n            pause();\n            std::cout &lt;&lt; std::endl;\n            return acc;\n        }\n        else\n        {\n            std::cout &lt;&lt; \"\u767b\u5f55\u5931\u8d25\uff01\" &lt;&lt; std::endl;\n            pause();\n            return nullptr;\n        }\n        break;\n    case '2':\n        std::cout &lt;&lt; \"\u7528\u6237\u7c7b\u578b\uff1a1.\u5b66\u751f 2.\u6559\u5e08\" &lt;&lt; std::endl;\n        tmpPermission = _getch();\n        if (tmpPermission != '1' &amp;&amp; tmpPermission != '2')\n        {\n            std::cout &lt;&lt; \"\u8f93\u5165\u9519\u8bef\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165\uff01\" &lt;&lt; std::endl;\n            pause();\n            return nullptr;\n        }\n        tmpPermission -= 48;\n        if (tmpPermission == 2)\n            std::cout &lt;&lt; \"\u7528\u6237\u540d\uff1a\" &lt;&lt; std::endl;\n        else\n            std::cout &lt;&lt; \"\u5b66\u53f7\uff1a\" &lt;&lt; std::endl;\n        std::cin &gt;&gt; tmpUsername;\n        std::cout &lt;&lt; \"\u5bc6\u7801\uff1a\" &lt;&lt; std::endl;\n        std::cin &gt;&gt; tmpPassword;\n        acc = database-&gt;registerUser(tmpUsername, tmpPassword, tmpPermission);\n        if (acc != nullptr)\n        {\n            std::cout &lt;&lt; \"\u6ce8\u518c\u6210\u529f\uff01\" &lt;&lt; std::endl;\n            database-&gt;saveAccount(\"savedata_user.dat\", \"savedata_admin.dat\");\n            pause();\n            std::cout &lt;&lt; std::endl;\n            return acc;\n        }\n        else\n        {\n            std::cout &lt;&lt; \"\u6ce8\u518c\u5931\u8d25\uff01\" &lt;&lt; std::endl;\n            pause();\n            return nullptr;\n        }\n        break;\n    case '3':\n        return nullptr;\n        break;\n    }\n}\n\n// \u6b22\u8fce\u754c\u9762\nvoid UserInterface::welcome()\n{\n    system(\"cls\");\n    std::cout &lt;&lt; \"&lt; - \u5b66\u751f\u6210\u7ee9\u7ba1\u7406\u7cfb\u7edf - &gt;\" &lt;&lt; std::endl\n              &lt;&lt; std::endl;\n    if (currentUser-&gt;getPermission() == 1)\n    {\n        if (Info::isDebugMode())\n            std::cout &lt;&lt; \"~.\u8c03\u8bd5\u6a21\u5f0f\" &lt;&lt; std::endl;\n        std::cout &lt;&lt; \"1.\u67e5\u8be2\u4fe1\u606f\" &lt;&lt; std::endl\n                  &lt;&lt; \"2.\u5168\u90e8\u4fe1\u606f\" &lt;&lt; std::endl\n                  &lt;&lt; \"3.\u8bfb\u53d6\u4fe1\u606f\" &lt;&lt; std::endl\n                  &lt;&lt; \"4.\u6253\u5370\u4fe1\u606f\" &lt;&lt; std::endl\n                  &lt;&lt; \"5.\u5173\u4e8e\u7a0b\u5e8f\" &lt;&lt; std::endl\n                  &lt;&lt; \"0.\u9000\u51fa\u7a0b\u5e8f\" &lt;&lt; std::endl\n                  &lt;&lt; \"\u8bf7\u8f93\u5165\u60a8\u7684\u9009\u62e9\uff1a\" &lt;&lt; std::endl;\n    }\n    else if (currentUser-&gt;getPermission() == 2)\n    {\n        if (Info::isDebugMode())\n            std::cout &lt;&lt; \"~.\u8c03\u8bd5\u6a21\u5f0f\" &lt;&lt; std::endl;\n        std::cout &lt;&lt; \"1.\u67e5\u8be2\u4fe1\u606f\" &lt;&lt; std::endl\n                  &lt;&lt; \"2.\u5168\u90e8\u4fe1\u606f\" &lt;&lt; std::endl\n                  &lt;&lt; \"3.\u6dfb\u52a0\u4fe1\u606f\" &lt;&lt; std::endl\n                  &lt;&lt; \"4.\u5220\u9664\u4fe1\u606f\" &lt;&lt; std::endl\n                  &lt;&lt; \"5.\u4fee\u6539\u4fe1\u606f\" &lt;&lt; std::endl\n                  &lt;&lt; \"6.\u8bfb\u53d6\u4fe1\u606f\" &lt;&lt; std::endl\n                  &lt;&lt; \"7.\u4fdd\u5b58\u4fe1\u606f\" &lt;&lt; std::endl\n                  &lt;&lt; \"8.\u6253\u5370\u4fe1\u606f\" &lt;&lt; std::endl\n                  &lt;&lt; \"9.\u5173\u4e8e\u7a0b\u5e8f\" &lt;&lt; std::endl\n                  &lt;&lt; \"0.\u9000\u51fa\u7a0b\u5e8f\" &lt;&lt; std::endl\n                  &lt;&lt; \"\u8bf7\u8f93\u5165\u60a8\u7684\u9009\u62e9\uff1a\" &lt;&lt; std::endl;\n    }\n    else\n    {\n        std::cout &lt;&lt; \"\u672a\u77e5\u7528\u6237\u7c7b\u578b\uff01\" &lt;&lt; std::endl;\n    }\n}\n\n// 1.\u67e5\u8be2\u4fe1\u606f\nbool UserInterface::searchInfo()\n{\n    system(\"cls\");\n\n    std::cout &lt;&lt; \"&lt; - \u67e5\u8be2\u4fe1\u606f - &gt;\" &lt;&lt; std::endl\n              &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"1.\u67e5\u8be2\u5b66\u751f\u4fe1\u606f\" &lt;&lt; std::endl\n              &lt;&lt; \"2.\u67e5\u8be2\u8bfe\u7a0b\u4fe1\u606f\" &lt;&lt; std::endl\n              &lt;&lt; \"3.\u8fd4\u56de\u4e0a\u4e00\u7ea7\" &lt;&lt; std::endl\n              &lt;&lt; \"\u8bf7\u8f93\u5165\u60a8\u7684\u9009\u62e9\uff1a\" &lt;&lt; std::endl;\n\n    int input;\n    input = _getch();\n\n    switch (input)\n    {\n    case '1':\n        while (searchStudent())\n            ;\n        break;\n    case '2':\n        while (searchLecture())\n            ;\n        break;\n    case '3':\n        std::cout &lt;&lt; \"\u8fd4\u56de\u4e0a\u4e00\u7ea7\u3002\" &lt;&lt; std::endl;\n        return false;\n    default:\n        std::cout &lt;&lt; \"\u8f93\u5165\u9519\u8bef\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165\uff01\" &lt;&lt; std::endl;\n        break;\n    }\n    pause();\n    return true;\n}\n\n// \u67e5\u8be2\u5b66\u751f\u4fe1\u606f\nbool UserInterface::searchStudent()\n{\n    system(\"cls\");\n\n    if (currentUser-&gt;getPermission() == 1)\n    {\n        std::cout &lt;&lt; \"&lt; - \u67e5\u8be2\u5b66\u751f\u4fe1\u606f - &gt;\" &lt;&lt; std::endl\n                  &lt;&lt; std::endl;\n        int num = database-&gt;queryStudent(atoi(currentUser-&gt;getName().c_str()));\n        if (num == 0)\n        {\n            std::cout &lt;&lt; \"\u672a\u627e\u5230\u8be5\u5b66\u751f\uff01\" &lt;&lt; std::endl;\n        }\n        else\n        {\n            std::cout &lt;&lt; \"\u5171\u627e\u5230\" &lt;&lt; num &lt;&lt; \"\u4e2a\u5b66\u751f\u3002\" &lt;&lt; std::endl;\n        }\n        return false;\n    }\n    else\n    {\n        std::cout &lt;&lt; \"&lt; - \u67e5\u8be2\u5b66\u751f\u4fe1\u606f - &gt;\" &lt;&lt; std::endl\n                  &lt;&lt; std::endl;\n        std::cout &lt;&lt; \"1.\u6309\u5b66\u53f7\u67e5\u8be2\" &lt;&lt; std::endl\n                  &lt;&lt; \"2.\u6309\u59d3\u540d\u67e5\u8be2\" &lt;&lt; std::endl\n                  &lt;&lt; \"3.\u8fd4\u56de\u4e0a\u4e00\u7ea7\" &lt;&lt; std::endl\n                  &lt;&lt; \"\u8bf7\u8f93\u5165\u60a8\u7684\u9009\u62e9\uff1a\" &lt;&lt; std::endl;\n\n        int input;\n        int num;\n        int stuNo;\n        std::string stuName;\n        input = _getch();\n\n        switch (input)\n        {\n        case '1':\n            std::cout &lt;&lt; \"\u8bf7\u8f93\u5165\u5b66\u53f7\uff1a\";\n            std::cin &gt;&gt; stuNo;\n            if (!std::cin)\n            {\n                std::cout &lt;&lt; \"\u8f93\u5165\u9519\u8bef\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165\uff01\" &lt;&lt; std::endl;\n                pause();\n                return true;\n            }\n            num = database-&gt;queryStudent(stuNo);\n            if (num == 0)\n            {\n                std::cout &lt;&lt; \"\u672a\u627e\u5230\u8be5\u5b66\u751f\uff01\" &lt;&lt; std::endl;\n            }\n            else\n            {\n                std::cout &lt;&lt; \"\u5171\u627e\u5230\" &lt;&lt; num &lt;&lt; \"\u4e2a\u5b66\u751f\u3002\" &lt;&lt; std::endl;\n            }\n            break;\n        case '2':\n            std::cout &lt;&lt; \"\u8bf7\u8f93\u5165\u59d3\u540d\uff1a\";\n            std::cin &gt;&gt; stuName;\n            if (!std::cin)\n            {\n                std::cout &lt;&lt; \"\u8f93\u5165\u9519\u8bef\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165\uff01\" &lt;&lt; std::endl;\n                pause();\n                return true;\n            }\n            num = database-&gt;queryStudent(stuName);\n            if (num == 0)\n            {\n                std::cout &lt;&lt; \"\u672a\u627e\u5230\u8be5\u5b66\u751f\uff01\" &lt;&lt; std::endl;\n            }\n            else\n            {\n                std::cout &lt;&lt; \"\u5171\u627e\u5230\" &lt;&lt; num &lt;&lt; \"\u4e2a\u5b66\u751f\u3002\" &lt;&lt; std::endl;\n            }\n            break;\n        case '3':\n            std::cout &lt;&lt; \"\u8fd4\u56de\u4e0a\u4e00\u7ea7\u3002\" &lt;&lt; std::endl;\n            return false;\n        default:\n            std::cout &lt;&lt; \"\u8f93\u5165\u9519\u8bef\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165\uff01\" &lt;&lt; std::endl;\n            break;\n        }\n        pause();\n        return true;\n    }\n}\n\n// \u67e5\u8be2\u8bfe\u7a0b\u4fe1\u606f\nbool UserInterface::searchLecture()\n{\n    system(\"cls\");\n\n    std::cout &lt;&lt; \"&lt; - \u67e5\u8be2\u8bfe\u7a0b\u4fe1\u606f - &gt;\" &lt;&lt; std::endl\n              &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"1.\u6309\u8bfe\u7a0b\u540d\u67e5\u8be2\" &lt;&lt; std::endl\n              &lt;&lt; \"2.\u8fd4\u56de\u4e0a\u4e00\u7ea7\" &lt;&lt; std::endl\n              &lt;&lt; \"\u8bf7\u8f93\u5165\u60a8\u7684\u9009\u62e9\uff1a\" &lt;&lt; std::endl;\n\n    int input = 0;\n    int num = 0;\n    std::string lecName;\n    input = _getch();\n\n    if (!std::cin)\n    {\n        std::cout &lt;&lt; \"\u8f93\u5165\u9519\u8bef\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165\uff01\" &lt;&lt; std::endl;\n        pause();\n        return true;\n    }\n\n    switch (input)\n    {\n    case '1':\n        std::cout &lt;&lt; \"\u8bf7\u8f93\u5165\u8bfe\u7a0b\u540d\uff1a\";\n        std::cin &gt;&gt; lecName;\n        if (!std::cin)\n        {\n            std::cout &lt;&lt; \"\u8f93\u5165\u9519\u8bef\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165\uff01\" &lt;&lt; std::endl;\n            pause();\n            return true;\n        }\n        num = database-&gt;queryLecture(lecName);\n        if (num == 0)\n        {\n            std::cout &lt;&lt; \"\u672a\u627e\u5230\u8be5\u8bfe\u7a0b\uff01\" &lt;&lt; std::endl;\n        }\n        else\n        {\n            std::cout &lt;&lt; \"\u5171\u627e\u5230\" &lt;&lt; num &lt;&lt; \"\u4e2a\u8bfe\u7a0b\u3002\" &lt;&lt; std::endl;\n        }\n        break;\n    case '2':\n        std::cout &lt;&lt; \"\u8fd4\u56de\u4e0a\u4e00\u7ea7\u3002\" &lt;&lt; std::endl;\n        return false;\n    default:\n        std::cout &lt;&lt; \"\u8f93\u5165\u9519\u8bef\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165\uff01\" &lt;&lt; std::endl;\n        pause();\n        return true;\n    }\n    pause();\n    return true;\n}\n\n// \u5168\u90e8\u4fe1\u606f\nbool UserInterface::sortInfo()\n{\n    system(\"cls\");\n\n    if (currentUser-&gt;getPermission() == 1)\n    {\n        while (sortLecture())\n            ;\n        return false;\n    }\n    else\n    {\n        std::cout &lt;&lt; \"&lt; - \u5168\u90e8\u4fe1\u606f - &gt;\" &lt;&lt; std::endl\n                  &lt;&lt; std::endl;\n        std::cout &lt;&lt; \"1.\u663e\u793a\u5b66\u751f\u4fe1\u606f\" &lt;&lt; std::endl\n                  &lt;&lt; \"2.\u663e\u793a\u8bfe\u7a0b\u4fe1\u606f\" &lt;&lt; std::endl\n                  &lt;&lt; \"3.\u8fd4\u56de\u4e0a\u4e00\u7ea7\" &lt;&lt; std::endl\n                  &lt;&lt; \"\u8bf7\u8f93\u5165\u60a8\u7684\u9009\u62e9\uff1a\" &lt;&lt; std::endl;\n\n        int input;\n        input = _getch();\n\n        switch (input)\n        {\n        case '1':\n            while (sortStudent())\n                ;\n            break;\n        case '2':\n            while (sortLecture())\n                ;\n            break;\n        case '3':\n            std::cout &lt;&lt; \"\u8fd4\u56de\u4e0a\u4e00\u7ea7\u3002\" &lt;&lt; std::endl;\n            return false;\n        default:\n            std::cout &lt;&lt; \"\u8f93\u5165\u9519\u8bef\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165\uff01\" &lt;&lt; std::endl;\n            break;\n        }\n    }\n    pause();\n    return true;\n}\n\n// \u6392\u5e8f\u5b66\u751f\u4fe1\u606f\nbool UserInterface::sortStudent()\n{\n    system(\"cls\");\n\n    int input = 0;\n    int direction = 0;\n\n    std::cout &lt;&lt; \"&lt; - \u5168\u90e8\u5b66\u751f\u4fe1\u606f - &gt;\" &lt;&lt; std::endl\n              &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"1.\u9ed8\u8ba4\u6392\u5e8f\" &lt;&lt; std::endl\n              &lt;&lt; \"2.\u6309\u5b66\u53f7\u6392\u5e8f\" &lt;&lt; std::endl\n              &lt;&lt; \"3.\u6309\u59d3\u540d\u6392\u5e8f\" &lt;&lt; std::endl\n              &lt;&lt; \"4.\u6309\u603b\u6210\u7ee9\u6392\u5e8f\" &lt;&lt; std::endl\n              &lt;&lt; \"5.\u6309\u603b\u5b66\u5206\u6392\u5e8f\" &lt;&lt; std::endl\n              &lt;&lt; \"6.\u6309\u603b\u7ee9\u70b9\u6392\u5e8f\" &lt;&lt; std::endl\n              &lt;&lt; \"7.\u6309\u5e73\u5747\u6210\u7ee9\u6392\u5e8f\" &lt;&lt; std::endl\n              &lt;&lt; \"8.\u6309GPA\u6392\u5e8f\" &lt;&lt; std::endl\n              &lt;&lt; \"9.\u8fd4\u56de\u4e0a\u4e00\u7ea7\" &lt;&lt; std::endl\n              &lt;&lt; \"\u8bf7\u8f93\u5165\u60a8\u7684\u9009\u62e9\uff1a\" &lt;&lt; std::endl;\n    input = _getch();\n    switch (input)\n    {\n    case '1':\n    case '2':\n    case '3':\n    case '4':\n    case '5':\n    case '6':\n    case '7':\n    case '8':\n        break;\n    case '9':\n        std::cout &lt;&lt; \"\u8fd4\u56de\u4e0a\u4e00\u7ea7\u3002\" &lt;&lt; std::endl;\n        return false;\n    default:\n        std::cout &lt;&lt; \"\u8f93\u5165\u9519\u8bef\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165\uff01\" &lt;&lt; std::endl;\n        pause();\n        return true;\n    }\n\n    if (input != '1')\n    {\n        std::cout &lt;&lt; \"\u6392\u5e8f\u65b9\u5411\u9009\u62e9\" &lt;&lt; std::endl\n                  &lt;&lt; \"1.\u5347\u5e8f\" &lt;&lt; std::endl\n                  &lt;&lt; \"2.\u964d\u5e8f\" &lt;&lt; std::endl\n                  &lt;&lt; \"\u8bf7\u8f93\u5165\u60a8\u7684\u9009\u62e9\uff1a\" &lt;&lt; std::endl;\n        direction = _getch();\n        if (direction != '1' &amp;&amp; direction != '2')\n        {\n            std::cout &lt;&lt; \"\u8f93\u5165\u9519\u8bef\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165\uff01\" &lt;&lt; std::endl;\n            pause();\n            return true;\n        }\n    }\n\n    database-&gt;sortStudent((direction == '1') ? -1 : 1, input - 50);\n\n    pause();\n    return true;\n}\n\n// \u6392\u5e8f\u8bfe\u7a0b\u4fe1\u606f\nbool UserInterface::sortLecture()\n{\n    system(\"cls\");\n\n    int input = 0;\n    int direction = 0;\n    int lecType = 0;\n\n    std::cout &lt;&lt; \"&lt; - \u5168\u90e8\u8bfe\u7a0b\u4fe1\u606f - &gt;\" &lt;&lt; std::endl\n              &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"1.\u9ed8\u8ba4\u6392\u5e8f\" &lt;&lt; std::endl\n              &lt;&lt; \"2.\u6309\u8bfe\u7a0b\u540d\u6392\u5e8f\" &lt;&lt; std::endl\n              &lt;&lt; \"3.\u6309\u5b66\u5206\u6392\u5e8f\" &lt;&lt; std::endl\n              &lt;&lt; \"4.\u6309\u5b66\u751f\u6570\u6392\u5e8f\" &lt;&lt; std::endl\n              &lt;&lt; \"5.\u6309\u5e73\u5747\u5206\u6392\u5e8f\" &lt;&lt; std::endl\n              &lt;&lt; \"6.\u6309\u5e73\u5747\u7ee9\u70b9\u6392\u5e8f\" &lt;&lt; std::endl\n              &lt;&lt; \"7.\u8fd4\u56de\u4e0a\u4e00\u7ea7\" &lt;&lt; std::endl\n              &lt;&lt; \"\u8bf7\u8f93\u5165\u60a8\u7684\u9009\u62e9\uff1a\" &lt;&lt; std::endl;\n    input = _getch();\n    switch (input)\n    {\n    case '1':\n    case '2':\n    case '3':\n    case '4':\n    case '5':\n    case '6':\n        break;\n    case '7':\n        std::cout &lt;&lt; \"\u8fd4\u56de\u4e0a\u4e00\u7ea7\u3002\" &lt;&lt; std::endl;\n        return false;\n    default:\n        std::cout &lt;&lt; \"\u8f93\u5165\u9519\u8bef\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165\uff01\" &lt;&lt; std::endl;\n        pause();\n        return true;\n    }\n\n    std::cout &lt;&lt; \"\u8bfe\u7a0b\u7c7b\u578b\u9009\u62e9\" &lt;&lt; std::endl\n              &lt;&lt; \"1.\u5168\u90e8\u8bfe\" &lt;&lt; std::endl\n              &lt;&lt; \"2.\u5fc5\u9009\u8bfe\" &lt;&lt; std::endl\n              &lt;&lt; \"3.\u9650\u9009\u8bfe\" &lt;&lt; std::endl\n              &lt;&lt; \"4.\u4efb\u9009\u8bfe\" &lt;&lt; std::endl\n              &lt;&lt; \"\u8bf7\u8f93\u5165\u60a8\u7684\u9009\u62e9\uff1a\" &lt;&lt; std::endl;\n    lecType = _getch();\n    if (lecType != '1' &amp;&amp; lecType != '2' &amp;&amp; lecType != '3' &amp;&amp; lecType != '4')\n    {\n        std::cout &lt;&lt; \"\u8f93\u5165\u9519\u8bef\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165\uff01\" &lt;&lt; std::endl;\n        pause();\n        return true;\n    }\n\n    if (input != '1')\n    {\n        std::cout &lt;&lt; \"\u6392\u5e8f\u65b9\u5411\u9009\u62e9\" &lt;&lt; std::endl\n                  &lt;&lt; \"1.\u5347\u5e8f\" &lt;&lt; std::endl\n                  &lt;&lt; \"2.\u964d\u5e8f\" &lt;&lt; std::endl\n                  &lt;&lt; \"\u8bf7\u8f93\u5165\u60a8\u7684\u9009\u62e9\uff1a\" &lt;&lt; std::endl;\n        direction = _getch();\n        if (direction != '1' &amp;&amp; direction != '2')\n        {\n            std::cout &lt;&lt; \"\u8f93\u5165\u9519\u8bef\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165\uff01\" &lt;&lt; std::endl;\n            pause();\n            return true;\n        }\n    }\n\n    database-&gt;sortLecture((LectureType)(lecType - 49), (direction == '1') ? -1 : 1, input - 50);\n\n    pause();\n    return true;\n}\n\n// \u6dfb\u52a0\u4fe1\u606f\nbool UserInterface::addInfo()\n{\n    system(\"cls\");\n\n    std::cout &lt;&lt; \"&lt; - \u6dfb\u52a0\u4fe1\u606f - &gt;\" &lt;&lt; std::endl\n              &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"1.\u6dfb\u52a0\u5b66\u751f\u4fe1\u606f\" &lt;&lt; std::endl\n              &lt;&lt; \"2.\u8fd4\u56de\u4e0a\u4e00\u7ea7\" &lt;&lt; std::endl\n              &lt;&lt; \"\u8bf7\u8f93\u5165\u60a8\u7684\u9009\u62e9\uff1a\" &lt;&lt; std::endl;\n\n    int input;\n    input = _getch();\n\n    switch (input)\n    {\n    case '1':\n        while (addStudent())\n            ;\n        break;\n    case '2':\n        std::cout &lt;&lt; \"\u8fd4\u56de\u4e0a\u4e00\u7ea7\u3002\" &lt;&lt; std::endl;\n        return false;\n    default:\n        std::cout &lt;&lt; \"\u8f93\u5165\u9519\u8bef\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165\uff01\" &lt;&lt; std::endl;\n        break;\n    }\n    pause();\n    return true;\n}\n\n// \u6dfb\u52a0\u5b66\u751f\u4fe1\u606f\nbool UserInterface::addStudent()\n{\n    system(\"cls\");\n\n    std::cout &lt;&lt; \"&lt; - \u6dfb\u52a0\u5b66\u751f\u4fe1\u606f - &gt;\" &lt;&lt; std::endl\n              &lt;&lt; std::endl;\n    database-&gt;addStudent();\n    database-&gt;updateLecture();\n\n    std::cout &lt;&lt; \"\u662f\u5426\u7ee7\u7eed\u6dfb\u52a0\uff1f[Y/N]\" &lt;&lt; std::endl;\n    char input;\n    input = _getch();\n    if (input == 'Y' || input == 'y')\n        return true;\n    else\n        return false;\n}\n\n// \u6dfb\u52a0\u8bfe\u7a0b\u4fe1\u606f\nbool UserInterface::addLecture()\n{\n    return true;\n}\n\n// \u5220\u9664\u4fe1\u606f\nbool UserInterface::deleteInfo()\n{\n    system(\"cls\");\n\n    std::cout &lt;&lt; \"&lt; - \u5220\u9664\u5b66\u751f\u4fe1\u606f - &gt;\" &lt;&lt; std::endl\n              &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"1.\u5220\u9664\u5b66\u751f\u4fe1\u606f\" &lt;&lt; std::endl\n              &lt;&lt; \"2.\u5220\u9664\u8bfe\u7a0b\u4fe1\u606f\" &lt;&lt; std::endl\n              &lt;&lt; \"3.\u8fd4\u56de\u4e0a\u4e00\u7ea7\" &lt;&lt; std::endl\n              &lt;&lt; \"\u8bf7\u8f93\u5165\u60a8\u7684\u9009\u62e9\uff1a\" &lt;&lt; std::endl;\n\n    int input;\n    input = _getch();\n\n    switch (input)\n    {\n    case '1':\n        while (deleteStudent())\n            ;\n        break;\n    case '2':\n        while (deleteLecture())\n            ;\n        break;\n    case '3':\n        std::cout &lt;&lt; \"\u8fd4\u56de\u4e0a\u4e00\u7ea7\u3002\" &lt;&lt; std::endl;\n        return false;\n    default:\n        std::cout &lt;&lt; \"\u8f93\u5165\u9519\u8bef\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165\uff01\" &lt;&lt; std::endl;\n        break;\n    }\n    pause();\n    return true;\n}\n\n// \u5220\u9664\u5b66\u751f\u4fe1\u606f\nbool UserInterface::deleteStudent()\n{\n    system(\"cls\");\n\n    std::cout &lt;&lt; \"&lt; - \u5220\u9664\u5b66\u751f\u4fe1\u606f - &gt;\" &lt;&lt; std::endl\n              &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"1.\u6309\u5b66\u53f7\u5220\u9664\" &lt;&lt; std::endl\n              &lt;&lt; \"2.\u6309\u59d3\u540d\u5220\u9664\" &lt;&lt; std::endl\n              &lt;&lt; \"3.\u8fd4\u56de\u4e0a\u4e00\u7ea7\" &lt;&lt; std::endl\n              &lt;&lt; \"\u8bf7\u8f93\u5165\u60a8\u7684\u9009\u62e9\uff1a\" &lt;&lt; std::endl;\n\n    int input;\n    int num;\n    int stuNo;\n    std::string stuName;\n\n    input = _getch();\n    if (!std::cin)\n    {\n        std::cout &lt;&lt; \"\u8f93\u5165\u9519\u8bef\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165\uff01\" &lt;&lt; std::endl;\n        pause();\n        return true;\n    }\n    switch (input)\n    {\n    case '1':\n        std::cout &lt;&lt; \"\u8bf7\u8f93\u5165\u5b66\u53f7\uff1a\";\n        std::cin &gt;&gt; stuNo;\n        if (!std::cin)\n        {\n            std::cout &lt;&lt; \"\u8f93\u5165\u9519\u8bef\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165\uff01\" &lt;&lt; std::endl;\n            pause();\n            return true;\n        }\n        num = database-&gt;queryStudent(stuNo, false);\n        if (num == 0)\n        {\n            std::cout &lt;&lt; \"\u672a\u627e\u5230\u8be5\u5b66\u751f\uff01\" &lt;&lt; std::endl;\n        }\n        else\n        {\n            database-&gt;deleteStudent(stuNo);\n            std::cout &lt;&lt; \"\u5df2\u5220\u9664\" &lt;&lt; num &lt;&lt; \"\u4e2a\u5b66\u751f\u3002\" &lt;&lt; std::endl;\n            database-&gt;updateLecture();\n        }\n        break;\n    case '2':\n        std::cout &lt;&lt; \"\u8bf7\u8f93\u5165\u59d3\u540d\uff1a\";\n        std::cin &gt;&gt; stuName;\n        if (!std::cin)\n        {\n            std::cout &lt;&lt; \"\u8f93\u5165\u9519\u8bef\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165\uff01\" &lt;&lt; std::endl;\n            pause();\n            return true;\n        }\n        num = database-&gt;queryStudent(stuName, false);\n        if (num == 0)\n        {\n            std::cout &lt;&lt; \"\u672a\u627e\u5230\u8be5\u5b66\u751f\uff01\" &lt;&lt; std::endl;\n        }\n        else\n        {\n            database-&gt;deleteStudent(stuName);\n            std::cout &lt;&lt; \"\u5df2\u5220\u9664\" &lt;&lt; num &lt;&lt; \"\u4e2a\u5b66\u751f\u3002\" &lt;&lt; std::endl;\n            database-&gt;updateLecture();\n        }\n        break;\n    case '3':\n        std::cout &lt;&lt; \"\u8fd4\u56de\u4e0a\u4e00\u7ea7\u3002\" &lt;&lt; std::endl;\n        return false;\n    default:\n        std::cout &lt;&lt; \"\u8f93\u5165\u9519\u8bef\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165\uff01\" &lt;&lt; std::endl;\n        break;\n    }\n\n    std::cout &lt;&lt; \"\u662f\u5426\u7ee7\u7eed\u5220\u9664\uff1f[Y/N]\" &lt;&lt; std::endl;\n    char ctn;\n    ctn = _getch();\n    if (ctn == 'Y' || ctn == 'y')\n        return true;\n    else\n        return false;\n}\n\n// \u5220\u9664\u8bfe\u7a0b\u4fe1\u606f\nbool UserInterface::deleteLecture()\n{\n    system(\"cls\");\n\n    std::cout &lt;&lt; \"&lt; - \u5220\u9664\u8bfe\u7a0b\u4fe1\u606f - &gt;\" &lt;&lt; std::endl\n              &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"1.\u6309\u540d\u79f0\u5220\u9664\" &lt;&lt; std::endl\n              &lt;&lt; \"2.\u8fd4\u56de\u4e0a\u4e00\u7ea7\" &lt;&lt; std::endl\n              &lt;&lt; \"\u8bf7\u8f93\u5165\u60a8\u7684\u9009\u62e9\uff1a\" &lt;&lt; std::endl;\n\n    int input;\n    int num;\n    std::string lecName;\n\n    input = _getch();\n    switch (input)\n    {\n    case '1':\n        std::cout &lt;&lt; \"\u8bf7\u8f93\u5165\u8bfe\u7a0b\u540d\uff1a\";\n        std::cin &gt;&gt; lecName;\n        if (!std::cin)\n        {\n            std::cout &lt;&lt; \"\u8f93\u5165\u9519\u8bef\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165\uff01\" &lt;&lt; std::endl;\n            pause();\n            return true;\n        }\n        num = database-&gt;queryLecture(lecName, false);\n        if (num == 0)\n        {\n            std::cout &lt;&lt; \"\u672a\u627e\u5230\u8be5\u8bfe\u7a0b\uff01\" &lt;&lt; std::endl;\n        }\n        else\n        {\n            if (database-&gt;queryRequired(lecName, false))\n            {\n                database-&gt;deleteRequired(lecName);\n                std::cout &lt;&lt; \"\u5df2\u5220\u9664\" &lt;&lt; num &lt;&lt; \"\u4e2a\u5fc5\u9009\u8bfe\u3002\" &lt;&lt; std::endl;\n                database-&gt;updateStudent();\n            }\n            else if (database-&gt;queryLimited(lecName, false))\n            {\n                database-&gt;deleteLimited(lecName);\n                std::cout &lt;&lt; \"\u5df2\u5220\u9664\" &lt;&lt; num &lt;&lt; \"\u4e2a\u9650\u9009\u8bfe\u3002\" &lt;&lt; std::endl;\n                database-&gt;updateStudent();\n            }\n            else\n            {\n                database-&gt;deleteOptional(lecName);\n                std::cout &lt;&lt; \"\u5df2\u5220\u9664\" &lt;&lt; num &lt;&lt; \"\u4e2a\u4efb\u9009\u8bfe\u3002\" &lt;&lt; std::endl;\n                database-&gt;updateStudent();\n            }\n        }\n        break;\n    case '2':\n        std::cout &lt;&lt; \"\u8fd4\u56de\u4e0a\u4e00\u7ea7\u3002\" &lt;&lt; std::endl;\n        return false;\n    default:\n        std::cout &lt;&lt; \"\u8f93\u5165\u9519\u8bef\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165\uff01\" &lt;&lt; std::endl;\n        break;\n    }\n\n    std::cout &lt;&lt; \"\u662f\u5426\u7ee7\u7eed\u5220\u9664\uff1f[Y/N]\" &lt;&lt; std::endl;\n    char ctn;\n    ctn = _getch();\n    if (ctn == 'Y' || ctn == 'y')\n        return true;\n    else\n        return false;\n}\n\n// \u4fee\u6539\u4fe1\u606f\nbool UserInterface::modifyInfo()\n{\n    system(\"cls\");\n\n    std::cout &lt;&lt; \"&lt; - \u4fee\u6539\u4fe1\u606f - &gt;\" &lt;&lt; std::endl\n              &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"1.\u4fee\u6539\u5b66\u751f\u4fe1\u606f\" &lt;&lt; std::endl\n              &lt;&lt; \"2.\u4fee\u6539\u8bfe\u7a0b\u4fe1\u606f\" &lt;&lt; std::endl\n              &lt;&lt; \"3.\u8fd4\u56de\u4e0a\u4e00\u7ea7\" &lt;&lt; std::endl\n              &lt;&lt; \"\u8bf7\u8f93\u5165\u60a8\u7684\u9009\u62e9\uff1a\" &lt;&lt; std::endl;\n\n    int input;\n    input = _getch();\n    switch (input)\n    {\n    case '1':\n        while (modifyStudent())\n            ;\n        break;\n    case '2':\n        while (modifyLecture())\n            ;\n        break;\n    case '3':\n        std::cout &lt;&lt; \"\u8fd4\u56de\u4e0a\u4e00\u7ea7\u3002\" &lt;&lt; std::endl;\n        return false;\n    default:\n        std::cout &lt;&lt; \"\u8f93\u5165\u9519\u8bef\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165\uff01\" &lt;&lt; std::endl;\n        break;\n    }\n\n    std::cout &lt;&lt; \"\u662f\u5426\u7ee7\u7eed\u4fee\u6539\uff1f[Y/N]\" &lt;&lt; std::endl;\n    char ctn;\n    ctn = _getch();\n    if (ctn == 'Y' || ctn == 'y')\n        return true;\n    else\n        return false;\n}\n\n// \u4fee\u6539\u5b66\u751f\u4fe1\u606f\nbool UserInterface::modifyStudent()\n{\n    system(\"cls\");\n\n    std::cout &lt;&lt; \"&lt; - \u4fee\u6539\u5b66\u751f\u4fe1\u606f - &gt;\" &lt;&lt; std::endl\n              &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"1.\u6309\u5b66\u53f7\u4fee\u6539\" &lt;&lt; std::endl\n              &lt;&lt; \"2.\u6309\u59d3\u540d\u4fee\u6539\" &lt;&lt; std::endl\n              &lt;&lt; \"3.\u8fd4\u56de\u4e0a\u4e00\u7ea7\" &lt;&lt; std::endl\n              &lt;&lt; \"\u8bf7\u8f93\u5165\u60a8\u7684\u9009\u62e9\uff1a\" &lt;&lt; std::endl;\n\n    int input;\n    int num;\n    int stuNo;\n    std::string stuName;\n\n    input = _getch();\n    switch (input)\n    {\n    case '1':\n        std::cout &lt;&lt; \"\u8bf7\u8f93\u5165\u5b66\u53f7\uff1a\";\n        std::cin &gt;&gt; stuNo;\n        if (!std::cin)\n        {\n            std::cout &lt;&lt; \"\u8f93\u5165\u9519\u8bef\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165\uff01\" &lt;&lt; std::endl;\n            pause();\n            return true;\n        }\n        num = database-&gt;queryStudent(stuNo, false);\n        if (num == 0)\n        {\n            std::cout &lt;&lt; \"\u672a\u627e\u5230\u8be5\u5b66\u751f\uff01\" &lt;&lt; std::endl;\n        }\n        else\n        {\n            database-&gt;modifyStudent(stuNo);\n            std::cout &lt;&lt; \"\u5df2\u4fee\u6539\" &lt;&lt; num &lt;&lt; \"\u4e2a\u5b66\u751f\u3002\" &lt;&lt; std::endl;\n            database-&gt;updateLecture();\n        }\n        break;\n    case '2':\n        std::cout &lt;&lt; \"\u8bf7\u8f93\u5165\u59d3\u540d\uff1a\";\n        std::cin &gt;&gt; stuName;\n        if (!std::cin)\n        {\n            std::cout &lt;&lt; \"\u8f93\u5165\u9519\u8bef\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165\uff01\" &lt;&lt; std::endl;\n            pause();\n            return true;\n        }\n        num = database-&gt;queryStudent(stuName, false);\n        if (num == 0)\n        {\n            std::cout &lt;&lt; \"\u672a\u627e\u5230\u8be5\u5b66\u751f\uff01\" &lt;&lt; std::endl;\n        }\n        else\n        {\n            database-&gt;modifyStudent(stuName);\n            std::cout &lt;&lt; \"\u5df2\u4fee\u6539\" &lt;&lt; num &lt;&lt; \"\u4e2a\u5b66\u751f\u3002\" &lt;&lt; std::endl;\n            database-&gt;updateLecture();\n        }\n        break;\n    case '3':\n        std::cout &lt;&lt; \"\u8fd4\u56de\u4e0a\u4e00\u7ea7\u3002\" &lt;&lt; std::endl;\n        return false;\n    default:\n        std::cout &lt;&lt; \"\u8f93\u5165\u9519\u8bef\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165\uff01\" &lt;&lt; std::endl;\n        break;\n    }\n\n    std::cout &lt;&lt; \"\u662f\u5426\u7ee7\u7eed\u4fee\u6539\uff1f[Y/N]\" &lt;&lt; std::endl;\n    char ctn;\n    ctn = _getch();\n    if (ctn == 'Y' || ctn == 'y')\n        return true;\n    else\n        return false;\n}\n\n// \u4fee\u6539\u8bfe\u7a0b\u4fe1\u606f\nbool UserInterface::modifyLecture()\n{\n    system(\"cls\");\n\n    std::cout &lt;&lt; \"&lt; - \u4fee\u6539\u8bfe\u7a0b\u4fe1\u606f - &gt;\" &lt;&lt; std::endl\n              &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"1.\u6309\u540d\u79f0\u4fee\u6539\" &lt;&lt; std::endl\n              &lt;&lt; \"2.\u8fd4\u56de\u4e0a\u4e00\u7ea7\" &lt;&lt; std::endl\n              &lt;&lt; \"\u8bf7\u8f93\u5165\u60a8\u7684\u9009\u62e9\uff1a\" &lt;&lt; std::endl;\n\n    int input;\n    std::string lecName;\n\n    input = _getch();\n    switch (input)\n    {\n    case '1':\n        std::cout &lt;&lt; \"\u8bf7\u8f93\u5165\u8bfe\u7a0b\u540d\u79f0\uff1a\";\n        std::cin &gt;&gt; lecName;\n        if (!std::cin)\n        {\n            std::cout &lt;&lt; \"\u8f93\u5165\u9519\u8bef\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165\uff01\" &lt;&lt; std::endl;\n            pause();\n            return true;\n        }\n        database-&gt;modifyLecture(lecName);\n        database-&gt;updateStudent();\n        break;\n    case '2':\n        std::cout &lt;&lt; \"\u8fd4\u56de\u4e0a\u4e00\u7ea7\u3002\" &lt;&lt; std::endl;\n        return false;\n    default:\n        std::cout &lt;&lt; \"\u8f93\u5165\u9519\u8bef\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165\uff01\" &lt;&lt; std::endl;\n        break;\n    }\n\n    std::cout &lt;&lt; \"\u662f\u5426\u7ee7\u7eed\u4fee\u6539\uff1f[Y/N]\" &lt;&lt; std::endl;\n    char ctn;\n    ctn = _getch();\n    if (ctn == 'Y' || ctn == 'y')\n        return true;\n    else\n        return false;\n}\n\n// \u8bfb\u53d6\u4fe1\u606f\nbool UserInterface::load()\n{\n    system(\"cls\");\n\n    std::cout &lt;&lt; \"&lt; - \u8bfb\u53d6\u4fdd\u5b58\u4fe1\u606f - &gt;\" &lt;&lt; std::endl\n              &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"\u8be5\u64cd\u4f5c\u5c06\u4f1a\u8986\u76d6\u5f53\u524d\u6570\u636e\uff0c\u662f\u5426\u7ee7\u7eed\uff1f[Y/N]\" &lt;&lt; std::endl;\n    int input;\n    input = _getch();\n    if (input == 'Y' || input == 'y')\n    {\n        try\n        {\n            database-&gt;load();\n        }\n        catch (FileException e)\n        {\n            if (e.mode == \"open\")\n            {\n                std::cout &lt;&lt; \"\u4ee5\" &lt;&lt; e.type &lt;&lt; \"\u65b9\u5f0f\u6253\u5f00\u6587\u4ef6\" &lt;&lt; e.filename &lt;&lt; \"\u5931\u8d25\uff01\" &lt;&lt; std::endl;\n            }\n            else\n            {\n                if (e.type == \"read\")\n                {\n                    std::cout &lt;&lt; \"\u8bfb\u53d6\u6587\u4ef6\" &lt;&lt; e.filename &lt;&lt; \"\u5931\u8d25\uff01\" &lt;&lt; std::endl;\n                }\n                else\n                {\n                    std::cout &lt;&lt; \"\u5199\u5165\u6587\u4ef6\" &lt;&lt; e.filename &lt;&lt; \"\u5931\u8d25\uff01\" &lt;&lt; std::endl;\n                }\n            }\n        }\n        std::cout &lt;&lt; \"\u6570\u636e\u5df2\u8bfb\u53d6\u3002\" &lt;&lt; std::endl;\n    }\n    pause();\n    return false;\n}\n\n// \u4fdd\u5b58\u4fe1\u606f\nbool UserInterface::save()\n{\n    system(\"cls\");\n\n    std::cout &lt;&lt; \"&lt; - \u4fdd\u5b58\u4fe1\u606f - &gt;\" &lt;&lt; std::endl\n              &lt;&lt; std::endl;\n\n    try\n    {\n        database-&gt;save();\n    }\n    catch (FileException e)\n    {\n        if (e.mode == \"open\")\n        {\n            std::cout &lt;&lt; \"\u4ee5\" &lt;&lt; e.type &lt;&lt; \"\u65b9\u5f0f\u6253\u5f00\u6587\u4ef6\" &lt;&lt; e.filename &lt;&lt; \"\u5931\u8d25\uff01\" &lt;&lt; std::endl;\n        }\n        else\n        {\n            if (e.type == \"read\")\n            {\n                std::cout &lt;&lt; \"\u8bfb\u53d6\u6587\u4ef6\" &lt;&lt; e.filename &lt;&lt; \"\u5931\u8d25\uff01\" &lt;&lt; std::endl;\n            }\n            else\n            {\n                std::cout &lt;&lt; \"\u5199\u5165\u6587\u4ef6\" &lt;&lt; e.filename &lt;&lt; \"\u5931\u8d25\uff01\" &lt;&lt; std::endl;\n            }\n        }\n    }\n    std::cout &lt;&lt; \"\u6570\u636e\u5df2\u4fdd\u5b58\u3002\" &lt;&lt; std::endl;\n    pause();\n    return false;\n}\n\n// \u6253\u5370\u4fe1\u606f\nbool UserInterface::print()\n{\n    system(\"cls\");\n\n    if (currentUser-&gt;getPermission() == 1)\n    {\n        while (printStudent())\n            ;\n        return false;\n    }\n    else\n    {\n        std::cout &lt;&lt; \"&lt; - \u6253\u5370\u4fe1\u606f - &gt;\" &lt;&lt; std::endl\n                  &lt;&lt; std::endl;\n        std::cout &lt;&lt; \"1.\u6253\u5370\u5b66\u751f\u4fe1\u606f\" &lt;&lt; std::endl\n                  &lt;&lt; \"2.\u6253\u5370\u8bfe\u7a0b\u4fe1\u606f\" &lt;&lt; std::endl\n                  &lt;&lt; \"3.\u8fd4\u56de\u4e0a\u4e00\u7ea7\" &lt;&lt; std::endl\n                  &lt;&lt; \"\u8bf7\u8f93\u5165\u60a8\u7684\u9009\u62e9\uff1a\" &lt;&lt; std::endl;\n\n        int input;\n        input = _getch();\n        switch (input)\n        {\n        case '1':\n            while (printStudent())\n                ;\n            break;\n        case '2':\n            while (printLecture())\n                ;\n            break;\n        case '3':\n            std::cout &lt;&lt; \"\u8fd4\u56de\u4e0a\u4e00\u7ea7\u3002\" &lt;&lt; std::endl;\n            return false;\n        default:\n            std::cout &lt;&lt; \"\u8f93\u5165\u9519\u8bef\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165\uff01\" &lt;&lt; std::endl;\n            pause();\n            break;\n        }\n    }\n    pause();\n    return true;\n}\n\n// \u6253\u5370\u5b66\u751f\u4fe1\u606f\nbool UserInterface::printStudent()\n{\n    system(\"cls\");\n\n    if (currentUser-&gt;getPermission() == 1)\n    {\n        std::cout &lt;&lt; \"&lt; - \u6253\u5370\u5b66\u751f\u4fe1\u606f - &gt;\" &lt;&lt; std::endl\n                  &lt;&lt; std::endl;\n        database-&gt;printStudent(atoi(currentUser-&gt;getName().c_str()));\n        pause();\n        return false;\n    }\n    else\n    {\n        std::cout &lt;&lt; \"&lt; - \u6253\u5370\u5b66\u751f\u4fe1\u606f - &gt;\" &lt;&lt; std::endl\n                  &lt;&lt; std::endl;\n        std::cout &lt;&lt; \"1.\u6253\u5370\u5168\u90e8\u5b66\u751f\u4fe1\u606f\" &lt;&lt; std::endl\n                  &lt;&lt; \"2.\u6309\u5b66\u53f7\u6253\u5370\u5b66\u751f\u4fe1\u606f\" &lt;&lt; std::endl\n                  &lt;&lt; \"3.\u6309\u59d3\u540d\u6253\u5370\u5b66\u751f\u4fe1\u606f\" &lt;&lt; std::endl\n                  &lt;&lt; \"4.\u8fd4\u56de\u4e0a\u4e00\u7ea7\" &lt;&lt; std::endl\n                  &lt;&lt; \"\u8bf7\u8f93\u5165\u60a8\u7684\u9009\u62e9\uff1a\" &lt;&lt; std::endl;\n\n        int input;\n        int stuId;\n        std::string stuName;\n\n        input = _getch();\n        switch (input)\n        {\n        case '1':\n            database-&gt;printStudent();\n            pause();\n            break;\n        case '2':\n            std::cout &lt;&lt; \"\u8bf7\u8f93\u5165\u5b66\u53f7\uff1a\";\n            std::cin &gt;&gt; stuId;\n            if (!std::cin)\n            {\n                std::cout &lt;&lt; \"\u8f93\u5165\u9519\u8bef\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165\uff01\" &lt;&lt; std::endl;\n                pause();\n                return true;\n            }\n            database-&gt;printStudent(stuId);\n            pause();\n            break;\n        case '3':\n            std::cout &lt;&lt; \"\u8bf7\u8f93\u5165\u59d3\u540d\uff1a\";\n            std::cin &gt;&gt; stuName;\n            if (!std::cin)\n            {\n                std::cout &lt;&lt; \"\u8f93\u5165\u9519\u8bef\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165\uff01\" &lt;&lt; std::endl;\n                pause();\n                return true;\n            }\n            database-&gt;printStudent(stuName);\n            pause();\n            break;\n        case '4':\n            std::cout &lt;&lt; \"\u8fd4\u56de\u4e0a\u4e00\u7ea7\u3002\" &lt;&lt; std::endl;\n            return false;\n        default:\n            std::cout &lt;&lt; \"\u8f93\u5165\u9519\u8bef\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165\uff01\" &lt;&lt; std::endl;\n            pause();\n            break;\n        }\n    }\n    return true;\n}\n\n// \u6253\u5370\u8bfe\u7a0b\u4fe1\u606f\nbool UserInterface::printLecture()\n{\n    system(\"cls\");\n\n    std::cout &lt;&lt; \"&lt; - \u6253\u5370\u8bfe\u7a0b\u4fe1\u606f - &gt;\" &lt;&lt; std::endl\n              &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"1.\u6253\u5370\u5168\u90e8\u8bfe\u7a0b\u4fe1\u606f\" &lt;&lt; std::endl\n              &lt;&lt; \"2.\u6309\u7c7b\u578b\u6253\u5370\u8bfe\u7a0b\u4fe1\u606f\" &lt;&lt; std::endl\n              &lt;&lt; \"3.\u6309\u540d\u79f0\u6253\u5370\u8bfe\u7a0b\u4fe1\u606f\" &lt;&lt; std::endl\n              &lt;&lt; \"4.\u8fd4\u56de\u4e0a\u4e00\u7ea7\" &lt;&lt; std::endl\n              &lt;&lt; \"\u8bf7\u8f93\u5165\u60a8\u7684\u9009\u62e9\uff1a\" &lt;&lt; std::endl;\n\n    int input;\n    int lecType;\n    std::string lecName;\n\n    input = _getch();\n    switch (input)\n    {\n    case '1':\n        database-&gt;printLecture();\n        pause();\n        break;\n    case '2':\n        std::cout &lt;&lt; \"\u8bf7\u9009\u62e9\u8bfe\u7a0b\u7c7b\u578b\uff1a\" &lt;&lt; std::endl\n                  &lt;&lt; \"1.\u5fc5\u9009\u8bfe\" &lt;&lt; std::endl\n                  &lt;&lt; \"2.\u9650\u9009\u8bfe\" &lt;&lt; std::endl\n                  &lt;&lt; \"3.\u4efb\u9009\u8bfe\" &lt;&lt; std::endl;\n        lecType = _getch();\n        if (lecType &lt; '1' || lecType &gt; '3')\n        {\n            std::cout &lt;&lt; \"\u8f93\u5165\u9519\u8bef\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165\uff01\" &lt;&lt; std::endl;\n            pause();\n            return true;\n        }\n        database-&gt;printLecture((LectureType)(lecType - 48));\n        pause();\n        break;\n    case '3':\n        std::cout &lt;&lt; \"\u8bf7\u8f93\u5165\u8bfe\u7a0b\u540d\uff1a\";\n        std::cin &gt;&gt; lecName;\n        if (!std::cin)\n        {\n            std::cout &lt;&lt; \"\u8f93\u5165\u9519\u8bef\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165\uff01\" &lt;&lt; std::endl;\n            pause();\n            return true;\n        }\n        database-&gt;printLecture(lecName);\n        pause();\n        break;\n    case '4':\n        std::cout &lt;&lt; \"\u8fd4\u56de\u4e0a\u4e00\u7ea7\u3002\" &lt;&lt; std::endl;\n        return false;\n    default:\n        std::cout &lt;&lt; \"\u8f93\u5165\u9519\u8bef\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165\uff01\" &lt;&lt; std::endl;\n        break;\n    }\n    return true;\n}\n\n// \u5173\u4e8e\u7a0b\u5e8f\nbool UserInterface::about()\n{\n    system(\"cls\");\n\n    std::cout &lt;&lt; \"&lt; - \u5173\u4e8e\u7a0b\u5e8f - &gt;\" &lt;&lt; std::endl\n              &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"\u5b66\u751f\u4fe1\u606f\u7ba1\u7406\u7cfb\u7edf\" &lt;&lt; std::endl\n              &lt;&lt; \"Copyright (c) Xuc Pan 2023\" &lt;&lt; std::endl\n              &lt;&lt; \"https://github.com/Panxuc\" &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"\u7edf\u8ba1\u4fe1\u606f\uff1a\" &lt;&lt; std::endl\n              &lt;&lt; \"\u5b66\u751f\" &lt;&lt; database-&gt;getStudentListSize() &lt;&lt; \"\u4eba\u3002\" &lt;&lt; std::endl\n              &lt;&lt; \"\u5fc5\u9009\u8bfe\" &lt;&lt; database-&gt;getRequiredListSize() &lt;&lt; \"\u95e8\u3002\" &lt;&lt; std::endl\n              &lt;&lt; \"\u9650\u9009\u8bfe\" &lt;&lt; database-&gt;getLimitedListSize() &lt;&lt; \"\u95e8\u3002\" &lt;&lt; std::endl\n              &lt;&lt; \"\u4efb\u9009\u8bfe\" &lt;&lt; database-&gt;getOptionalListSize() &lt;&lt; \"\u95e8\u3002\" &lt;&lt; std::endl;\n    pause();\n    return false;\n}\n\n// \u9000\u51fa\u7a0b\u5e8f\nvoid UserInterface::quit()\n{\n    if (currentUser-&gt;getPermission() == 2)\n    {\n        std::cout &lt;&lt; \"\u662f\u5426\u4fdd\u5b58\u6570\u636e\uff1f[Y/N]\" &lt;&lt; std::endl;\n        char input;\n        input = _getch();\n        if (input == 'Y' || input == 'y')\n        {\n            try\n            {\n                database-&gt;save();\n            }\n            catch (FileException e)\n            {\n                if (e.mode == \"open\")\n                {\n                    std::cout &lt;&lt; \"\u4ee5\" &lt;&lt; e.type &lt;&lt; \"\u65b9\u5f0f\u6253\u5f00\u6587\u4ef6\" &lt;&lt; e.filename &lt;&lt; \"\u5931\u8d25\uff01\" &lt;&lt; std::endl;\n                }\n                else\n                {\n                    if (e.type == \"read\")\n                    {\n                        std::cout &lt;&lt; \"\u8bfb\u53d6\u6587\u4ef6\" &lt;&lt; e.filename &lt;&lt; \"\u5931\u8d25\uff01\" &lt;&lt; std::endl;\n                    }\n                    else\n                    {\n                        std::cout &lt;&lt; \"\u5199\u5165\u6587\u4ef6\" &lt;&lt; e.filename &lt;&lt; \"\u5931\u8d25\uff01\" &lt;&lt; std::endl;\n                    }\n                }\n            }\n            std::cout &lt;&lt; \"\u6570\u636e\u5df2\u4fdd\u5b58\u3002\" &lt;&lt; std::endl;\n        }\n        else\n        {\n            std::cout &lt;&lt; \"\u6570\u636e\u672a\u4fdd\u5b58\u3002\" &lt;&lt; std::endl;\n        }\n    }\n    std::cout &lt;&lt; \"\u611f\u8c22\u4f7f\u7528\u672c\u5b66\u751f\u6210\u7ee9\u7ba1\u7406\u7cfb\u7edf\u3002\" &lt;&lt; std::endl;\n}\n\n//~.\u8c03\u8bd5\u6a21\u5f0f\nbool UserInterface::debug()\n{\n    system(\"cls\");\n\n    std::cout &lt;&lt; \"&lt; - \u8c03\u8bd5\u6a21\u5f0f - &gt;\" &lt;&lt; std::endl\n              &lt;&lt; std::endl;\n    if (!Info::isDebugMode())\n    {\n        std::cout &lt;&lt; \"\u8c03\u8bd5\u6a21\u5f0f\u4f1a\u8f93\u51fa\u66f4\u591a\u4fe1\u606f\uff0c\u4e5f\u53ef\u4ee5\u81ea\u7531\u4fee\u6539\u6240\u6709\u6570\u503c\uff0c\u662f\u5426\u7ee7\u7eed\uff1f[Y/N]\" &lt;&lt; std::endl;\n        int input;\n        input = _getch();\n        if (input == 'Y' || input == 'y')\n        {\n            std::cout &lt;&lt; \"\u8bf7\u8f93\u5165\u5bc6\u7801\uff1a\" &lt;&lt; std::endl;\n            std::string password;\n            std::cin &gt;&gt; password;\n            if (password == \"114514\")\n            {\n                std::cout &lt;&lt; \"\u8c03\u8bd5\u6a21\u5f0f\u5df2\u5f00\u542f\u3002\" &lt;&lt; std::endl;\n                Info::setDebug(true);\n                pause();\n                return false;\n            }\n            else\n            {\n                std::cout &lt;&lt; \"\u5bc6\u7801\u9519\u8bef\uff0c\u8c03\u8bd5\u6a21\u5f0f\u672a\u5f00\u542f\u3002\" &lt;&lt; std::endl;\n                pause();\n                return false;\n            }\n        }\n        else\n        {\n            std::cout &lt;&lt; \"\u56de\u5230\u4e3b\u83dc\u5355\u3002\" &lt;&lt; std::endl;\n            pause();\n            return false;\n        }\n    }\n    else\n    {\n        std::cout &lt;&lt; \"\u8c03\u8bd5\u6a21\u5f0f\u5df2\u5f00\u542f\uff0c\u662f\u5426\u5173\u95ed\uff1f[Y/N]\" &lt;&lt; std::endl;\n        int input;\n        input = _getch();\n        if (input == 'Y' || input == 'y')\n        {\n            std::cout &lt;&lt; \"\u8bf7\u8f93\u5165\u5bc6\u7801\uff1a\" &lt;&lt; std::endl;\n            std::string password;\n            std::cin &gt;&gt; password;\n            if (password == \"114514\")\n            {\n                std::cout &lt;&lt; \"\u8c03\u8bd5\u6a21\u5f0f\u5df2\u5173\u95ed\u3002\" &lt;&lt; std::endl;\n                Info::setDebug(false);\n                pause();\n                return false;\n            }\n            else\n            {\n                std::cout &lt;&lt; \"\u5bc6\u7801\u9519\u8bef\uff0c\u8c03\u8bd5\u6a21\u5f0f\u672a\u5173\u95ed\u3002\" &lt;&lt; std::endl;\n                pause();\n                return false;\n            }\n        }\n        else\n        {\n            std::cout &lt;&lt; \"\u56de\u5230\u4e3b\u83dc\u5355\u3002\" &lt;&lt; std::endl;\n            pause();\n            return false;\n        }\n    }\n}\n</code></pre>"},{"location":"coursework/daa/","title":"\u6570\u636e\u4e0e\u7b97\u6cd5 LambdaOJ2 \u8bfe\u7a0b\u4f5c\u4e1a","text":""},{"location":"coursework/daa/#\u6570\u636e\u4e0e\u7b97\u6cd5-lambdaoj2-\u8bfe\u7a0b\u4f5c\u4e1a","title":"\u6570\u636e\u4e0e\u7b97\u6cd5 LambdaOJ2 \u8bfe\u7a0b\u4f5c\u4e1a","text":"<p>\u6b64\u4ed3\u5e93\u53ea\u7528\u4f5c\u5907\u4efd\uff0c\u4e0d\u53ef\u4f5c\u4e3a\u4f5c\u4e1a\u53c2\u8003\uff0c\u4e0d\u53ef\u6284\u88ad\u3002\u6bcf\u6b21\u4f5c\u4e1a\u4f1a\u5728\u622a\u6b62\u65e5\u671f\u540e\u63d0\u4ea4\u5230\u6b64\u4ed3\u5e93\u3002</p>"},{"location":"coursework/daa/#\u76ee\u5f55","title":"\u76ee\u5f55","text":"# \u9898\u76ee \u7b54\u6848 \u622a\u6b62\u65e5\u671f 1001 A + B Problem \u7b54\u6848 2017-10-10 23:59:00 1002 The Nth Number in Fibonacci Sequence \u7b54\u6848 2017-09-22 23:59:00 2023201 \u4e22\u5931\u7684\u7ec3\u4e60\u518c \u7b54\u6848 2023-10-15 23:59:00 2023202 \u519b\u8bad\u6392\u961f \u7b54\u6848 2023-10-28 23:59:00 2023203 \u6bd4\u6b66 \u7b54\u6848 2023-11-04 23:59:00 2023204 \u7f3a\u635f\u4e8c\u53c9\u6811 \u7b54\u6848 2023-11-18 23:59:00 2023205 \u4fe1\u606f\u4f20\u9012 \u7b54\u6848 2023-11-26 23:59:00 2023206 \u8df3\u8df3\u4e50 \u7b54\u6848 2023-12-09 23:59:00 2023207 \u5e26\u9650\u77e9\u9635\u65b9\u7a0b\u7ec4\u6c42\u89e3 \u7b54\u6848 2023-12-18 23:59:00 2023208 \u7f3a\u5931\u6570\u636e\u6062\u590d \u7b54\u6848 2023-12-31 23:59:00 2023209 \u5c0f\u660e\u7684\u706b\u8f66\u65c5\u884c\u8ba1\u5212 \u7b54\u6848 2024-01-27 23:59:00 2023210 \u5f20\u91cf\u76f8\u4e58\u7684\u6700\u5c0f\u5f00\u9500\u95ee\u9898 \u7b54\u6848 2024-01-27 23:59:00"},{"location":"coursework/daa/#\u58f0\u660e","title":"\u58f0\u660e","text":"<p>\u6709\u540c\u5b66\u65e0\u89c6\u8bfe\u7a0b\u8981\u6c42\u4ee5\u53ca\u672c\u4ed3\u5e93\u8bb8\u53ef\u8bc1\uff0c\u6076\u610f\u6284\u88ad\u672c\u4ed3\u5e93\u4ee3\u7801\uff0c\u9020\u6210\u4e86\u4e0d\u5fc5\u8981\u7684\u9ebb\u70e6\u3002\u76f8\u4fe1\u8fd9\u4e9b\u540c\u5b66\u5df2\u7ecf\u4ed8\u51fa\u4e86\u5e94\u5f97\u7684\u4ee3\u4ef7\u3002\u5e0c\u671b\u8fd9\u4e9b\u540c\u5b66\u597d\u81ea\u4e3a\u4e4b\uff0c\u597d\u597d\u53cd\u601d\u3002</p> <p>\u5982\u679c\u9700\u8981\u5f15\u7528\u672c\u4ed3\u5e93\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u8bf7\u9075\u5faa CC BY-SA 4.0 \u534f\u8bae\uff0c\u6ce8\u660e\u51fa\u5904\u3001\u4ee5\u76f8\u540c\u65b9\u5f0f\u5171\u4eab\uff0c\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e\u5728 LambdaOJ2 \u4e0a\u63d0\u4ea4\u4ee3\u7801\u3001\u5728\u535a\u5ba2\u4e2d\u5f15\u7528\u7b49\u3002</p>"},{"location":"coursework/daa/ans/1001/","title":"A + B Problem","text":""},{"location":"coursework/daa/ans/1001/#a--b-problem","title":"A + B Problem","text":"<p>\u8fd9\u9053\u9898\u5171\u6709 10 \u4e2a\u6d4b\u8bd5\u70b9\uff0c\u5176\u4e2d\u7b2c 10 \u4e2a\u6d4b\u8bd5\u70b9\u4f3c\u4e4e\u6709\u4e00\u767e\u591a\u4f4d\u7684\u8d85\u5927\u6b63\u6574\u6570\uff08\u7b11\uff09\u3002\u5e78\u597d\u9898\u76ee\u53ea\u8981\u6c42\u662f\u6b63\u6574\u6570\uff0c\u4e0d\u7136\u52a0\u5165\u8d1f\u6570\u548c\u6d6e\u70b9\u6570\u5c31\u66f4\u52a0\u6076\u5fc3\u4e86www\u3002</p> <p>\u65e2\u7136\u662f\u8d85\u5927\u6b63\u6574\u6570\uff0c\u90a3\u4e48\u5373\u4f7f\u662f <code>long long</code> \u4e5f\u4e0d\u4e00\u5b9a\u80fd\u5b58\u4e0b\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u7528\u5b57\u7b26\u4e32\u6765\u5b58\u50a8\u3002\u7136\u540e\uff0c\u6211\u4eec\u9700\u8981\u5b9e\u73b0\u52a0\u6cd5\u8fd0\u7b97\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u7528\u5b57\u7b26\u4e32\u6a21\u62df\u52a0\u6cd5\u6765\u5b9e\u73b0\u3002</p> <p>\u6a21\u62df\u52a0\u6cd5\u672c\u8eab\u6ca1\u6709\u4ec0\u4e48\u597d\u8bf4\u7684\uff0c\u53ea\u8981\u8003\u8651\u8fdb\u4f4d\u5c31\u884c\u4e86\u3002\u5b9e\u73b0\u52a0\u6cd5\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u4ece\u4f4e\u4f4d\u5230\u9ad8\u4f4d\u3002\u800c\u6211\u4eec\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u662f\u6b63\u5411\u7684\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5c06\u5b57\u7b26\u4e32\u53cd\u8f6c\u4e00\u4e0b\uff0c\u7136\u540e\u4ece\u9ad8\u4f4d\u5230\u4f4e\u4f4d\u8fdb\u884c\u52a0\u6cd5\u8fd0\u7b97\uff0c\u6700\u540e\u518d\u5c06\u7ed3\u679c\u53cd\u8f6c\u4e00\u4e0b\u8f93\u51fa\u3002</p> <p>\u73b0\u5728\u7b54\u6848\u5c31\u547c\u4e4b\u6b32\u51fa\u4e86\u3002</p> <pre><code>#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n\nvoid reverse(char *str) {\n  int len = strlen(str);\n  for (int i = 0; i &lt; len / 2; i++) {\n    char temp = str[i];\n    str[i] = str[len - i - 1];\n    str[len - i - 1] = temp;\n  }\n}\n\nint main() {\n  char a[200];\n  char b[200];\n  char ret[200];\n  memset(a, 0, sizeof(a));\n  memset(b, 0, sizeof(b));\n  memset(ret, 0, sizeof(ret));\n  scanf(\"%s%s\", a, b);\n  reverse(a);\n  reverse(b);\n  for (int i = 0; a[i] + b[i] &gt; 0; i++) {\n    if (a[i] == 0)\n      a[i] = '0';\n    if (b[i] == 0)\n      b[i] = '0';\n    ret[i] += a[i] + b[i] - '0';\n    if (ret[i] &gt; '9') {\n      ret[i] -= 10;\n      ret[i + 1] += 1;\n    }\n  }\n  if (ret[strlen(ret) - 1] &gt; 0 &amp;&amp; ret[strlen(ret) - 1] &lt; '0') {\n    ret[strlen(ret) - 1] += '0';\n  }\n  reverse(ret);\n  printf(\"%s\\n\", ret);\n  return 0;\n}\n</code></pre> # \u72b6\u6001 \u65f6\u95f4 \u5185\u5b58 1 Accepted 0 ms 696 KB 2 Accepted 0 ms 788 KB 3 Accepted 0 ms 696 KB 4 Accepted 0 ms 788 KB 5 Accepted 0 ms 716 KB 6 Accepted 0 ms 776 KB 7 Accepted 0 ms 792 KB 8 Accepted 0 ms 692 KB 9 Accepted 0 ms 696 KB 10 Accepted 0 ms 720 KB"},{"location":"coursework/daa/ans/1002/","title":"The Nth Number in Fibonacci Sequence","text":""},{"location":"coursework/daa/ans/1002/#the-nth-number-in-fibonacci-sequence","title":"The Nth Number in Fibonacci Sequence","text":"<p>\u63d0\u793a\u90e8\u5206\u7ed9\u4e86\u4e2a\u7f51\u5740\uff0c\u91cc\u9762\u6709\u4e00\u4e9b\u6709\u8da3\u7684\u6545\u4e8b\uff0c\u5305\u62ec\u4e0a\u53e4\u65f6\u4ee3\u4e00\u4f4d\u6570\u636e\u4e0e\u7b97\u6cd5\u8bfe\u7a0b\u52a9\u6559\u3001LambdaOJ2 \u7684\u521b\u9020\u8005\u5bf9\u4e8e\u6e05\u534e\u5927\u5b66\u7684\u6240\u601d\u6240\u611f\u3002</p> <p>\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u91cc\u9762\u63d0\u5230\u8981\u89e3\u8fd9\u9898\u9700\u8981\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(\\log(n))\\) \u7684\u7b97\u6cd5\u3002\u8fd9\u6837\u7684\u8bdd\uff0c\u90a3\u5c31\u80af\u5b9a\u4e0d\u80fd\u7528\u9012\u5f52\u4e86\uff0c\u56e0\u4e3a\u9012\u5f52\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f \\(O(2^n)\\) \u7684\uff0c\u975e\u5e38\u5413\u4eba\u3002</p> <p>\u8fd9\u65f6\u5019\uff0c\u6211\u4eec\u610f\u8bc6\u5230\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u77e9\u9635\u6765\u8868\u793a Fibonacci \u6570\u5217\u3002\u6211\u4eec\u53ef\u4ee5\u7528\u8fd9\u6837\u7684\u77e9\u9635\u6765\u8868\u793a Fibonacci \u6570\u5217\uff1a</p> \\[ \\begin{bmatrix} F(n) &amp; F(n-1) \\\\\\ F(n-1) &amp; F(n-2) \\end{bmatrix} = \\begin{bmatrix} 1 &amp; 1 \\\\\\ 1 &amp; 0 \\end{bmatrix}^{n-1} \\] <p>\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u77e9\u9635\u5feb\u901f\u5e42\u6765\u6c42 Fibonacci \u6570\u5217\u4e86\u3002</p> <pre><code>#include &lt;cstdio&gt;\n\n#define MOD 9973\n\nstruct Matrix {\n  long long a[2][2];\n  Matrix() {\n    a[0][0] = 0;\n    a[0][1] = 0;\n    a[1][0] = 0;\n    a[1][1] = 0;\n  }\n  Matrix(long long a, long long b, long long c, long long d) {\n    this-&gt;a[0][0] = a;\n    this-&gt;a[0][1] = b;\n    this-&gt;a[1][0] = c;\n    this-&gt;a[1][1] = d;\n  }\n  Matrix operator*(const Matrix &amp;b) const {\n    Matrix ret;\n    ret.a[0][0] = (a[0][0] * b.a[0][0] + a[0][1] * b.a[1][0]) % MOD;\n    ret.a[0][1] = (a[0][0] * b.a[0][1] + a[0][1] * b.a[1][1]) % MOD;\n    ret.a[1][0] = (a[1][0] * b.a[0][0] + a[1][1] * b.a[1][0]) % MOD;\n    ret.a[1][1] = (a[1][0] * b.a[0][1] + a[1][1] * b.a[1][1]) % MOD;\n    return ret;\n  }\n};\n\nMatrix pow(Matrix a, long long b) {\n  Matrix ret(1, 0, 0, 1);\n  while (b) {\n    if (b &amp; 1)\n      ret = ret * a;\n    a = a * a;\n    b &gt;&gt;= 1;\n  }\n  return ret;\n}\n\nlong long fibo(long long n) {\n  if (n == 0 || n == 1) {\n    return n;\n  } else {\n    Matrix a(1, 1, 1, 0);\n    Matrix ret = pow(a, n);\n    return ret.a[0][1];\n  }\n}\n\nint main() {\n  int num = 0;\n  scanf(\"%d\", &amp;num);\n  long long n[num];\n  for (int i = 0; i &lt; num; i++) {\n    scanf(\"%lld\", &amp;n[i]);\n  }\n  for (int i = 0; i &lt; num; i++) {\n    printf(\"%lld\\n\", fibo(n[i]));\n  }\n  return 0;\n}\n</code></pre> # \u72b6\u6001 \u65f6\u95f4 \u5185\u5b58 1 Accepted 0 ms 768 KB"},{"location":"coursework/daa/ans/2023201/","title":"\u4e22\u5931\u7684\u7ec3\u4e60\u518c","text":""},{"location":"coursework/daa/ans/2023201/#\u4e22\u5931\u7684\u7ec3\u4e60\u518c","title":"\u4e22\u5931\u7684\u7ec3\u4e60\u518c","text":"<p>\u672c\u9053OJ\u672c\u8eab\u5e76\u4e0d\u96be\uff0c\u4f46\u5bf9\u7a0b\u5e8f\u8fd0\u884c\u7684\u65f6\u95f4\u548c\u7a7a\u95f4\u6709\u8f83\u4e3a\u4e25\u683c\u7684\u8981\u6c42\uff0c\u65f6\u95f4\u9700\u8981\u4e3a \\(O(n)\\)\uff0c\u7a7a\u95f4\u4e3a \\(O(1)\\) \u624d\u80fd\u901a\u8fc7\u6240\u6709\u7684\u6d4b\u8bd5\u6837\u4f8b\uff0c\u8bf7\u540c\u5b66\u4eec\u4ece\u7b97\u6cd5\u6548\u7387\u7684\u89d2\u5ea6\u51fa\u53d1\uff0c\u9009\u62e9\u5408\u9002\u7684\u7b97\u6cd5\u3002</p> <p>\u8fd9\u7684\u786e\u662f\u4e8b\u5b9e\u3002\u6211\u81ea\u5df1\u4e25\u91cd\u9ad8\u4f30\u4e86\u672c\u9053\u9898\u76ee\u7684\u96be\u5ea6\uff0c\u5bfc\u81f4\u63d0\u4ea4\u4e86\u4e00\u4e9b \\(30\\) \u5206\u7684\u5783\u573e\uff08\u7b11\uff09\u3002\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u9053\u9898\u76ee\u975e\u5e38\u7b80\u5355\u3002\u5982\u4f55\u628a \\(3\\) \u4e2a\u76f8\u540c\u7684\u6570\u5b57\u6d88\u6389\u800c\u4fdd\u7559 \\(2\\) \u4e2a\u76f8\u540c\u7684\u6570\u5b57\u5462\uff1f\u53ea\u8981\u60f3\u901a\u8fd9\u4e00\u70b9\uff0c\u7b54\u6848\u5c31\u51fa\u6765\u4e86\u3002</p> <p>\u8981\u5c06\u4e24\u4e2a\u76f8\u540c\u7684\u6570\u5b57\u6d88\u6389\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u5f02\u6216\u8fd0\u7b97\uff08<code>^</code>\uff09\u3002\u90a3\u4e48\uff0c\u4e09\u4e2a\u76f8\u540c\u7684\u6570\u5b57\u600e\u4e48\u5b9e\u73b0\u540c\u6837\u7684\u6548\u679c\u5462\uff1f</p> <p>\u6211\u4eec\u4ed4\u7ec6\u7814\u7a76\u53ef\u4ee5\u53d1\u73b0\uff0c\u5f02\u6216\u8fd0\u7b97\u7684\u672c\u8d28\u662f\u201c\u4e0d\u8fdb\u4f4d\u52a0\u6cd5\u201d\u3002\u6211\u4eec\u53ef\u4ee5\u5c06\u6240\u6709\u6570\u5b57\u8f6c\u4e3a\u4e8c\u8fdb\u5236\uff0c\u518d\u5bf9\u5176\u6bcf\u4e00\u4f4d\u7528\u201c\u4e09\u8fdb\u5236\u201d\u6765\u6a21\u62df\u201c\u4e0d\u8fdb\u4f4d\u52a0\u6cd5\u201d\u3002\u6211\u4eec\u5b9a\u4e49\u7684\u4e09\u8fdb\u5236\u4e0d\u8fdb\u4f4d\u52a0\u6cd5\u89c4\u5219\u5982\u4e0b\uff1a</p> a b a + b 0 0 0 0 1 1 0 2 2 1 0 1 1 1 2 1 2 0 2 0 2 2 1 0 2 2 1 <p>\u5728\u672c\u9898\u4e2d\uff0c\u5bf9\u6240\u7ed9\u7684 \\(3N-1\\) \u4e2a\u6570\u5b57\u7684\u6bcf\u4e00\u4f4d\u4f7f\u7528\u8fd9\u79cd\u4e09\u8fdb\u5236\u4e0d\u8fdb\u4f4d\u52a0\u6cd5\uff0c\u5f97\u5230\u7684\u7ed3\u679c\u5728\u6bcf\u4e00\u4f4d\u4e0a\u53ea\u4f1a\u662f <code>0</code> \u548c <code>2</code>\u3002\u5f53\u7136\uff0c\u7531\u4e8e\u6211\u4eec\u662f\u5bf9\u6bcf\u4e00\u4e2a\u6570\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u7684\u6bcf\u4e00\u4f4d\u8fdb\u884c\u64cd\u4f5c\uff0c\u6240\u4ee5\u7ed3\u679c\u4e5f\u662f\u4e8c\u8fdb\u5236\u7684\uff0c\u53ea\u662f\u770b\u8d77\u6765\u662f\u4e09\u8fdb\u5236\u7684\u3002\u6211\u4eec\u5c06\u5f97\u5230\u7684 <code>2</code> \u5168\u90e8\u8f6c\u4e3a <code>1</code>\uff0c\u5373\u4e3a\u7ed3\u679c\u7684\u4e8c\u8fdb\u5236\u3002\u5728\u8fd9\u79cd\u65b9\u6cd5\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u7528\u4e00\u4e2a \\(32\\) \u4f4d\u7684\u6570\u7ec4\u6765\u5b58\u50a8\u7ed3\u679c\u3002\u6700\u540e\uff0c\u6211\u4eec\u53ea\u9700\u8981\u628a\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e00\u4f4d\u8f6c\u6362\u4e3a\u5341\u8fdb\u5236\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u6700\u7ec8\u7684\u7b54\u6848\u4e86\u3002\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u628a <code>3</code> \u4e2a\u76f8\u540c\u7684\u6570\u5b57\u6d88\u6389\u800c\u4fdd\u7559 <code>2</code> \u4e2a\u76f8\u540c\u7684\u6570\u5b57\u4e86\u3002</p> <p>\u6211\u7684\u806a\u660e\u7684\u5ba4\u53cb\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7b80\u6d01\u7684\u65b9\u6cd5\u3002\u4ed6\u662f\u5bf9\u5341\u8fdb\u5236\u7684\u6bcf\u4e00\u4e2a\u6570\u8fdb\u884c\u64cd\u4f5c\u7684\u3002\u4ed6\u7684\u65b9\u6cd5\u662f\uff0c\u521b\u5efa\u4e00\u4e2a \\(10\\times 10\\) \u7684\u4e8c\u7ef4\u6570\u7ec4\uff0c\u8bb0\u5f55\u6bcf\u4e00\u4f4d\u4e0a\u6bcf\u4e00\u4e2a\u6570\u5b57\u51fa\u73b0\u7684\u4e2a\u6570\uff0c\u5bf9\u4e8e\u5341\u8fdb\u5236\u6bcf\u4e00\u4f4d\u7684\u6bcf\u4e00\u4e2a\u6570\u5b57\uff0c\u53ea\u8981\u5b83\u51fa\u73b0\u4e86\u4e00\u6b21\uff0c\u5c31\u7ed9\u5bf9\u5e94\u7684\u4f4d\u7f6e\u52a0\u4e00\u3002\u6700\u540e\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5bf9\u8fd9\u4e2a\u4e8c\u7ef4\u6570\u7ec4\u7684\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u53d6\u6a21 \\(3\\)\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u6700\u7ec8\u7684\u7b54\u6848\u4e86\u3002</p> <p>\u6bd4\u8f83\u8fd9\u4e24\u79cd\u65b9\u6cd5\uff0c\u4e0d\u96be\u53d1\u73b0\uff0c\u6211\u7684\u806a\u660e\u7684\u5ba4\u53cb\u7684\u65b9\u6cd5\u867d\u7136\u727a\u7272\u4e86\u4e00\u4e9b\u7a7a\u95f4\u590d\u6742\u5ea6\uff0c\u4f46\u662f\u66f4\u52a0\u76f4\u89c2\u3002\u6211\u89c9\u5f97\uff0c\u8fd9\u624d\u662f\u52a9\u6559\u5e0c\u671b\u6211\u4eec\u91c7\u7528\u7684\u65b9\u6cd5\u3002\u6240\u4ee5\uff0c\u6211\u8ba4\u4e3a\uff0c\u6211\u7684\u806a\u660e\u7684\u5ba4\u53cb\u7684\u65b9\u6cd5\u66f4\u52a0\u4f18\u96c5\u3002</p> <p>\u6211\u7684\u53e6\u4e00\u4f4d\u806a\u660e\u7684\u5ba4\u53cb\u7ecf\u8fc7\u8fdb\u4e00\u6b65\u7814\u7a76\u4e0e\u6d4b\u8bd5\uff0c\u53d1\u73b0 \\(65536\\) \u8fdb\u5236\u5904\u7406\u8fd9\u9053\u9898\u76ee\u65f6\u6548\u679c\u6700\u4f73\u3002</p> <p>\u4e0b\u9762\u662f\u6211\u7684\u4e8c\u8fdb\u5236\u4ee3\u7801\uff1a</p> <pre><code>#include &lt;cstdio&gt;\n\nint ternaryPlus(int a, int b) {\n  if (a + b &lt; 3) {\n    return a + b;\n  } else {\n    return a + b - 3;\n  }\n}\n\nint main() {\n  int num = 0;\n  int temp = 0;\n  int ret[32] = {0};\n  int ans = 0;\n  scanf(\"%d\", &amp;num);\n  for (int i = 0; i &lt; 3 * num - 1; i++) {\n    scanf(\"%d\", &amp;temp);\n    for (int j = 0; j &lt; 32; j++) {\n      ret[j] = ternaryPlus(ret[j], temp &amp; 1);\n      temp &gt;&gt;= 1;\n      if (temp == 0) {\n        break;\n      }\n    }\n  }\n  for (int i = 0; i &lt; 32; i++) {\n    if (ret[i]) {\n      ans += 1 &lt;&lt; i;\n    }\n  }\n  printf(\"%d\", ans);\n  return 0;\n}\n</code></pre> # \u72b6\u6001 \u65f6\u95f4 \u5185\u5b58 1 Accepted 0 ms 788 KB 2 Accepted 4 ms 760 KB 3 Accepted 4 ms 776 KB 4 Accepted 60 ms 760 KB 5 Accepted 128 ms 760 KB 6 Accepted 320 ms 792 KB 7 Accepted 664 ms 760 KB 8 Accepted 620 ms 784 KB 9 Accepted 668 ms 788 KB 10 Accepted 664 ms 792 KB"},{"location":"coursework/daa/ans/2023202/","title":"\u519b\u8bad\u6392\u961f","text":""},{"location":"coursework/daa/ans/2023202/#\u519b\u8bad\u6392\u961f","title":"\u519b\u8bad\u6392\u961f","text":"<p>\u8fd9\u9053\u9898\u7684\u901a\u8fc7\u7387\u610f\u5916\u5730\u5f88\u4f4e\u5462\u3002\u76f8\u4fe1\u63d0\u4ea4\u7684\u540c\u5b66\u770b\u5230\u9898\u76ee\u5c31\u5174\u51b2\u51b2\u5730\u7528\u94fe\u8868\u53bb\u505a\u4e86\u5427\u3002\u7136\u540e\u5c31\u8d85\u65f6\u4e86\u3002</p> <p>\u5f53\u7136\uff0c\u94fe\u8868\u5176\u5b9e\u4e5f\u80fd\u505a\u3002\u4f46\u662f\u5b83\u6709\u4e2a\u5f88\u4e25\u91cd\u7684\u95ee\u9898\uff0c\u5373\u5b83\u5728\u7a7a\u95f4\u4e0a\u662f\u4e0d\u8fde\u7eed\u7684\u3002\u8fd9\u5c31\u5bfc\u81f4\u4e86\u5b83\u7684\u8bbf\u95ee\u6548\u7387\u5f88\u4f4e\u3002</p> <p>\u9898\u76ee\u4e2d\u6709\u4e09\u79cd\u547d\u4ee4\uff0c\u5206\u522b\u662f\u201c\u63d2\u5165\u201d\u201c\u67e5\u627e\u201d\u201c\u5220\u9664\u201d\u3002\u8fd9\u4e09\u79cd\u547d\u4ee4\u6bcf\u4e2a\u90fd\u8981\u6d89\u53ca\u5230\u6570\u636e\u7684\u67e5\u627e\uff0c\u800c\u94fe\u8868\u7684\u67e5\u627e\u6548\u7387\u662f \\(O(n)\\) \u7684\u3002\u6240\u4ee5\uff0c\u5982\u679c\u7528\u94fe\u8868\u6765\u505a\uff0c\u90a3\u4e48\u6bcf\u4e2a\u547d\u4ee4\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u90fd\u662f \\(O(n)\\) \u7684\u3002\u800c\u9898\u76ee\u4e2d\u7684\u6570\u636e\u91cf\u662f 100000\uff0c\u6240\u4ee5\u8d85\u65f6\u53d8\u5f97\u5f02\u5e38\u5bb9\u6613\u3002</p> <p>\u8d6b\u8d6b\u6709\u540d\u7684\u5434\u53ca\u8001\u5e08\u66fe\u7ecf\u8bf4\u8fc7\uff0cOJ \u548c\u8bfe\u7a0b\u5e76\u4e0d\u76f8\u5173\u3002\u6240\u4ee5\u8bf4\uff0c\u867d\u7136\u6211\u4eec\u521a\u521a\u5728\u6570\u636e\u4e0e\u7b97\u6cd5\u8bfe\u7a0b\u4e0a\u5b66\u4e60\u4e86\u94fe\u8868\uff0c\u4f46\u662f\u5728 OJ \u4e0a\u7528\u94fe\u8868\u6765\u505a\u9898\u5e76\u4e0d\u662f\u4e00\u4e2a\u597d\u7684\u9009\u62e9\u3002\u90a3\u5c31\u7528\u6570\u7ec4\u7f62\u3002\u5b9a\u4e49\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\u3002\u5b83\u7684\u4e0b\u6807\u5c31\u662f\u7f16\u53f7\uff0c\u5b83\u7684\u4e24\u4e2a\u5143\u7d20\u5206\u522b\u662f\u524d\u4e00\u4e2a\u7f16\u53f7\u548c\u540e\u4e00\u4e2a\u7f16\u53f7\u3002\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5728 \\(O(1)\\) \u7684\u65f6\u95f4\u5185\u627e\u5230\u4efb\u610f\u4e00\u4e2a\u7f16\u53f7\u7684\u524d\u4e00\u4e2a\u7f16\u53f7\u548c\u540e\u4e00\u4e2a\u7f16\u53f7\u4e86\u3002\u8fd9\u6837\uff0c\u6bcf\u4e2a\u547d\u4ee4\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u90fd\u662f \\(O(1)\\) \u4e86\u3002</p> <pre><code>#include &lt;cstdio&gt;\n\nint queue[100000][2] = {0};\n\nvoid insert(int id, int pos) {\n  queue[id][0] = pos;\n  queue[id][1] = queue[pos][1];\n  queue[pos][1] = id;\n  if (queue[id][1] != 0) {\n    queue[queue[id][1]][0] = id;\n  }\n}\n\nvoid report(int id) { printf(\"%d\\n\", queue[id][1]); }\n\nvoid remove(int id) {\n  queue[queue[id][0]][1] = queue[id][1];\n  if (queue[id][1] != 0) {\n    queue[queue[id][1]][0] = queue[id][0];\n  }\n}\n\nvoid display() {\n  int i = queue[0][1];\n  while (i != 0) {\n    printf(\"%d\\n\", i);\n    i = queue[i][1];\n  }\n}\n\nint main() {\n  int N = 0, command = 0;\n  insert(1, 0);\n  scanf(\"%d\", &amp;N);\n  for (int i = 0; i &lt; N; i++) {\n    scanf(\"%d\", &amp;command);\n    if (command == 1) {\n      int id = 0, pos = 0;\n      scanf(\"%d%d\", &amp;pos, &amp;id);\n      insert(id, pos);\n    } else if (command == 2) {\n      int id = 0;\n      scanf(\"%d\", &amp;id);\n      report(id);\n    } else if (command == 3) {\n      int id = 0;\n      scanf(\"%d\", &amp;id);\n      remove(id);\n    }\n  }\n  display();\n  return 0;\n}\n</code></pre> # \u72b6\u6001 \u65f6\u95f4 \u5185\u5b58 1 Accepted 0 ms 800 KB 2 Accepted 0 ms 940 KB 3 Accepted 0 ms 1080 KB 4 Accepted 0 ms 1456 KB 5 Accepted 0 ms 1532 KB 6 Accepted 0 ms 1540 KB 7 Accepted 4 ms 1536 KB 8 Accepted 28 ms 1540 KB 9 Accepted 40 ms 1544 KB 10 Accepted 60 ms 1540 KB"},{"location":"coursework/daa/ans/2023203/","title":"\u6bd4\u6b66","text":""},{"location":"coursework/daa/ans/2023203/#\u6bd4\u6b66","title":"\u6bd4\u6b66","text":"<p>\u672c\u9898\u975e\u5e38\u7b80\u5355\uff0c\u5c24\u5176\u662f\u5728\u4e0a\u5468\u63d0\u4f9b\u4e86\u201c\u9898\u76ee\u8ba1\u5212\u201d\u8868\u683c\u4e4b\u540e\u3002\u201c\u9898\u76ee\u8ba1\u5212\u201d\u8868\u683c\u544a\u8bc9\u6211\u4eec\uff0c\u672c\u9898\u7684\u8003\u5bdf\u70b9\u662f\u201c\u6808\u201d\u3002</p> <p>\u672c\u9898\u7684\u201c\u6bd4\u6b66\u201d\u53ef\u80fd\u8ba9\u4e00\u4e9b\u540c\u5b66\u521d\u89c1\u65f6\u6478\u4e0d\u7740\u5934\u8111\u3002\u6211\u4eec\u53ef\u4ee5\u8bd5\u7740\u6362\u4e00\u79cd\u8bf4\u6cd5\u3002</p> <p>\\(N\\) \u4e2a\u4eba\u7ad9\u6210\u4e00\u5217\uff0c\u6bcf\u4e2a\u4eba\u90fd\u6709\u4e00\u4e2a\u8eab\u9ad8\u3002\u5bf9\u4e8e\u961f\u4f0d\u4e2d\u4efb\u610f\u4e24\u4e2a\u4eba \\(X\\)\uff08\u5047\u8bbe\u5728\u524d\u9762\uff09\u548c \\(Y\\)\uff08\u5047\u8bbe\u5728\u540e\u9762\uff09\uff0c\u5982\u679c\u4ed6\u4eec\u5728\u961f\u4f0d\u4e2d\u76f8\u90bb\uff0c\u6216\u8005\u4ed6\u4eec\u4e4b\u95f4\u6ca1\u6709\u4eba\u7684\u8eab\u9ad8\u4e25\u683c\u5927\u4e8e \\(X\\) \u548c \\(Y\\) \u7684\u8eab\u9ad8\u4e2d\u7684\u8f83\u5c0f\u503c\uff0c\u90a3\u4e48\u5728\u961f\u4f0d\u8f83\u4e3a\u540e\u9762\u7684 \\(Y\\) \u53ef\u4ee5\u770b\u89c1\u961f\u4f0d\u8f83\u4e3a\u524d\u9762\u7684 \\(X\\)\u3002\uff08\u5373\uff0c\u76f8\u90bb\u7684\u4eba\u4e00\u5b9a\u80fd\u591f\u770b\u89c1\u5bf9\u65b9\uff1b\u5982\u679c\u4e24\u8005\u4e4b\u95f4\u6709\u8eab\u9ad8\u6bd4 \\(X\\) \u66f4\u9ad8\u7684\u4eba\uff0c\u5219 \\(X\\) \u4f1a\u88ab\u6321\u4f4f\uff1b\u5982\u679c\u4e24\u8005\u4e4b\u95f4\u6709\u8eab\u9ad8\u6bd4 \\(Y\\) \u66f4\u9ad8\u7684\u4eba\uff0c\u5219 \\(Y\\) \u7684\u89c6\u7ebf\u4f1a\u88ab\u6321\u4f4f\u800c\u65e0\u6cd5\u518d\u770b\u5230\u524d\u9762\u3002\uff09\u8bf7\u8ba1\u7b97\u961f\u4f0d\u4e2d\u7684\u4eba\u4e00\u5171\u53ef\u4ee5\u770b\u89c1\u591a\u5c11\u4eba\u3002</p> <p>\u8fd9\u5c31\u610f\u5473\u7740\uff0c\u5bf9\u4e8e\u961f\u4f0d\u4e2d\u4efb\u610f\u4e00\u4e2a\u58eb\u5175 \\(Y\\) \u800c\u8a00\uff0c\u4ed6\u53ea\u80fd\u4e0e\u4ed6\u524d\u9762\u7684\u961f\u4f0d\u7684\u4e00\u4e2a\u4e0d\u4e25\u683c\u5355\u8c03\u9012\u51cf\u5b50\u5217\uff08\u5230\u7b2c\u4e00\u4e2a\u6b66\u529b\u503c\u5927\u4e8e \\(Y\\) \u7684\u58eb\u5175\u4e3a\u6b62\uff09\u8fdb\u884c\u6bd4\u6b66\u3002</p> <p>\u600e\u4e48\u5f97\u5230\u8fd9\u4e2a\u5355\u8c03\u9012\u51cf\u5b50\u5217\u5462\uff1f\u90a3\u5c31\u663e\u7136\u8981\u7528\u5355\u8c03\u6808\u4e86\u3002\u6211\u4eec\u4ece\u6808\u9876\u5411\u524d\u626b\u63cf\uff0c\u5982\u679c\u5f53\u524d\u58eb\u5175\u7684\u6b66\u529b\u503c\u5927\u4e8e\u6808\u9876\u7684\u58eb\u5175\u7684\u6b66\u529b\u503c\uff0c\u90a3\u4e48\u5c31\u628a\u6808\u9876\u7684\u58eb\u5175\u5f39\u51fa\uff0c\u76f4\u5230\u6808\u9876\u7684\u58eb\u5175\u7684\u6b66\u529b\u503c\u5927\u4e8e\u7b49\u4e8e\u5f53\u524d\u58eb\u5175\u7684\u6b66\u529b\u503c\u4e3a\u6b62\u3002\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u4e00\u4e2a\u4e0d\u4e25\u683c\u5355\u8c03\u9012\u51cf\u7684\u5b50\u5217\u3002</p> <p>\u8003\u8651\u5230\u672c\u9898\u7a7a\u95f4\u6781\u4e3a\u5145\u88d5\uff0c\u6211\u4eec\u53ef\u4ee5\u653e\u5fc3\u5b58\u50a8\u3002\u6211\u4eec\u53ea\u9700\u8981\u8003\u8651\u4e00\u4e0b\u600e\u4e48\u5728\u65f6\u95f4\u4e0a\u4f18\u5316\u4e00\u4e0b\u5c31\u884c\u4e86\u3002\u8fd9\u4e5f\u5c31\u610f\u5473\u7740\uff0c\u6211\u4eec\u4e0d\u80fd\u7528 \\(O(n^2)\\) \u7684\u7b97\u6cd5\uff0c\u800c\u5e94\u8be5\u7528 \\(O(n)\\) \u7684\u7b97\u6cd5\u3002\u6709\u4ec0\u4e48\u5feb\u901f\u7684\u7b97\u6cd5\u53ef\u4ee5\u8ba1\u7b97\u51fa\u6bcf\u4e00\u4e2a\u6765\u5230\u961f\u4f0d\u7684\u65b0\u58eb\u5175\u7684\u6bd4\u6b66\u6b21\u6570\u5462\uff1f</p> <p>\u5bf9\u4e8e\u6bcf\u4e2a\u65b0\u52a0\u5165\u961f\u4f0d\u7684\u58eb\u5175\uff0c\u5728\u5355\u8c03\u6808\u4e2d\u5bfb\u627e\u7b2c\u4e00\u4e2a\u6bd4\u4ed6\u6b66\u529b\u503c\u5927\u7684\u58eb\u5175\uff0c\u5f97\u5230\u6bd4\u6b66\u6b21\u6570\uff1b\u518d\u7528\u8fd9\u540d\u65b0\u58eb\u5175\u66f4\u65b0\u5355\u8c03\u6808\u3002\u5728\u5177\u4f53\u5b9e\u73b0\u4e0a\uff0c\u53ef\u4ee5\u5c06\u6b66\u529b\u503c\u76f8\u540c\u3001\u4e14\u4f4d\u7f6e\u5728\u4e00\u8d77\u7684\u58eb\u5175\u201c\u5408\u5e76\u201d\uff0c\u8fd9\u6837\u5927\u5927\u51cf\u5c11\u4e86\u67e5\u627e\u6b21\u6570\u3002</p> <p>\u4e0b\u9762\u7684 C++ \u4ee3\u7801\u4e2d\uff0c<code>data[i][0]</code> \u8868\u793a\u6b66\u529b\u503c\uff0c<code>data[i][1]</code> \u8868\u793a\u8fd9\u662f\u7b2c\u51e0\u4e2a\u6b66\u529b\u503c\u4e3a <code>data[i][0]</code> \u7684\u58eb\u5175\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u5373\u53ef\u5728\u5411\u524d\u67e5\u627e\u65f6\u8df3\u8fc7\u76f8\u540c\u7684\u6b66\u529b\u503c\u3002</p> <pre><code>#include &lt;cstdio&gt;\n\nstruct Stack {\n  int data[500000][2] = {0};\n  int size = 0;\n  void push(int x) {\n    data[size][0] = x;\n    if (size == 0 || x != data[size - 1][0])\n      data[size][1] = 1;\n    else\n      data[size][1] = data[size - 1][1] + 1;\n    size++;\n  }\n  void pop() { size--; }\n  void popTillNext() { size -= data[size - 1][1]; }\n  int *top() { return data[size - 1]; }\n  bool empty() { return size == 0; }\n};\n\nint main() {\n  int N = 0;\n  long long count = 0;\n  scanf(\"%d\", &amp;N);\n  Stack s;\n  for (int i = 0; i &lt; N; i++) {\n    int x = 0;\n    scanf(\"%d\", &amp;x);\n    while (!s.empty() &amp;&amp; s.top()[0] &lt; x) {\n      count += s.top()[1];\n      s.popTillNext();\n    }\n    if (x == s.top()[0]) {\n      count += s.top()[1];\n      if (s.top()[1] &lt; s.size)\n        count++;\n      s.push(x);\n    } else {\n      if (!s.empty())\n        count++;\n      s.push(x);\n    }\n  }\n  printf(\"%lld\", count);\n  return 0;\n}\n</code></pre> # \u72b6\u6001 \u65f6\u95f4 \u5185\u5b58 1 Accepted 0 ms 4660 KB 2 Accepted 0 ms 4660 KB 3 Accepted 0 ms 4664 KB 4 Accepted 0 ms 4664 KB 5 Accepted 32 ms 4668 KB 6 Accepted 56 ms 4664 KB 7 Accepted 64 ms 4660 KB 8 Accepted 64 ms 4668 KB 9 Accepted 64 ms 4664 KB 10 Accepted 48 ms 4664 KB"},{"location":"coursework/daa/ans/2023204/","title":"\u7f3a\u635f\u4e8c\u53c9\u6811","text":""},{"location":"coursework/daa/ans/2023204/#\u7f3a\u635f\u4e8c\u53c9\u6811","title":"\u7f3a\u635f\u4e8c\u53c9\u6811","text":"<p>\u672c\u9898\u867d\u7136\u770b\u8d77\u6765\u5f88\u590d\u6742\uff0c\u4f46\u662f\uff0c\u5982\u679c\u4e0a\u8bfe\u8ba4\u771f\u542c\u8bb2\u7684\u8bdd\uff0c\u5c31\u80fd\u5f88\u5feb\u505a\u51fa\u6765\u3002</p> <p>\u672c\u9898\u7684\u63d0\u793a\u5f88\u5173\u952e\u3002\u8bf7\u770b\u8fd9\u53e5\u8bdd\uff1a</p> <p>\u5bf9\u672c\u9898\uff0c\u53ef\u4ee5\u6839\u636e\u9898\u76ee\u8981\u6c42\u9010\u884c\u6784\u9020\u8be5\u7f3a\u635f\u4e8c\u53c9\u6811\u3002\u5bf9\u4e8e\u5f53\u524d\u884c\uff0c\u8bb0\u5f55\u6240\u6709\u975e\u7f3a\u635f\u70b9\uff0c\u5728\u4e0b\u4e00\u884c\u4f9d\u6b21\u6784\u9020\u5b50\u8282\u70b9\uff0c\u5e76\u6392\u9664\u7f3a\u635f\u70b9\uff0c\u76f4\u5230\u6784\u9020\u5230\u76ee\u6807\u8282\u70b9\u4e3a\u6b62\u3002\u5229\u7528\u6784\u9020\u8282\u70b9\u65f6\u8bb0\u5f55\u7684\u7236\u4eb2\u8282\u70b9\u7f16\u53f7\uff0c\u53ef\u4ee5\u4ece\u76ee\u6807\u8282\u70b9\u641c\u7d22\u5230\u56de\u5230\u6839\u8282\u70b9\u7684\u8def\u5f84\uff0c\u5c06\u8be5\u8def\u5f84\u7ffb\u8f6c\uff0c\u5373\u53ef\u5f97\u5230\u6240\u6c42\u8def\u5f84\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u601d\u8003\u4e00\u4e0b\u8fd9\u68f5\u7f3a\u635f\u4e8c\u53c9\u6811\u7684\u5927\u5c0f\u3002\u7531\u4e8e\u9898\u76ee\u5047\u5b9a\u7f3a\u635f\u70b9\u53ca\u76ee\u6807\u70b9\u6570\u76ee\u4e0d\u8d85\u8fc7 \\(100\\) \u4e2a\uff0c\u76ee\u6807\u8282\u70b9\u7f16\u53f7\u5747\u5c0f\u4e8e \\(2^{32}\\)\u3002\u56e0\u6b64\uff0c\u901a\u8fc7\u7b80\u5355\u7684\u6570\u5b66\u8fd0\u7b97\uff0c\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\uff0c\u8fd9\u68f5\u7f3a\u635f\u4e8c\u53c9\u6811\u4e0d\u4f1a\u8d85\u8fc7 \\(132\\) \u5c42\u3002\u8fd9\u5bf9\u4e8e\u9650\u65f6 1000ms \u7684\u672c\u9898\u6765\u8bf4\u662f\u4e00\u4e2a\u5f88\u5927\u7684\u7a81\u7834\u70b9\u3002\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u76ee\u6807\u70b9\uff0c\u90fd\u53ea\u6784\u5efa\u5b83\u6240\u5728\u7684\u90a3\u6761\u8def\u5f84\uff0c\u8fd9\u6837\u4e8b\u5b9e\u4e0a\u5e76\u4e0d\u4f1a\u6d88\u8017\u8bb8\u591a\u65f6\u95f4\u3002</p> <p>\u4e8c\u53c9\u6811\u662f\u4e00\u4e2a\u975e\u5e38\u7f8e\u89c2\u7684\u6570\u636e\u7ed3\u6784\u3002\u5b83\u6709\u5f88\u5f3a\u7684\u6570\u5b66\u6027\u8d28\u3002\u6211\u4eec\u4ee5\u5b8c\u5168\u4e8c\u53c9\u6811\u4e3a\u4f8b\u3002\u5047\u8bbe\u6211\u4eec\u7684\u4e8c\u53c9\u6811\u7684\u6839\u8282\u70b9\u7684\u7f16\u53f7\u4e3a \\(1\\)\uff0c\u90a3\u4e48\uff0c\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u8282\u70b9 \\(i\\)\uff0c\u5b83\u7684\u5de6\u513f\u5b50\u7684\u7f16\u53f7\u4e3a \\(2i\\)\uff0c\u5b83\u7684\u53f3\u513f\u5b50\u7684\u7f16\u53f7\u4e3a \\(2i+1\\)\u3002\u8fd9\u6837\uff0c\u5047\u5982\u6211\u4eec\u60f3\u8981\u4ece\u5b50\u8282\u70b9\u51fa\u53d1\uff0c\u627e\u5230\u5b83\u7684\u7236\u8282\u70b9\uff0c\u90a3\u4e48\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5c06\u5b83\u7684\u7f16\u53f7\u9664\u4ee5 \\(2\\)\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u5b83\u7684\u7236\u8282\u70b9\u7684\u7f16\u53f7\u3002\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4ece\u76ee\u6807\u8282\u70b9\u51fa\u53d1\uff0c\u4e00\u76f4\u5411\u4e0a\u627e\uff0c\u76f4\u5230\u627e\u5230\u6839\u8282\u70b9\u4e3a\u6b62\u3002\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230\u4ece\u76ee\u6807\u8282\u70b9\u5230\u6839\u8282\u70b9\u7684\u8def\u5f84\u3002</p> <p>\u8fd9\u4e2a\u6027\u8d28\u5bf9\u4e8e\u7f3a\u635f\u4e8c\u53c9\u6811\u662f\u76f8\u901a\u7684\u3002\u4e0b\u9762\u8bf7\u770b\u8be6\u7ec6\u8bf4\u660e\u3002</p> <p></p> <p>\u6211\u4eec\u7528\u4f8b\u9898\u4e3e\u4f8b\u3002\u6211\u4eec\u60f3\u627e\u5230 \\(15\\) \u7684\u7236\u8282\u70b9\u3002\u4e8e\u662f\u6211\u4eec\u5c06 \\(15\\) \u9664\u4ee5 \\(2\\)\uff0c\u5f97\u5230 \\(7\\)\u3002\u6211\u4eec\u53d1\u73b0\uff0c \\(5\\) \u662f\u4e00\u4e2a\u7f3a\u635f\u70b9\uff0c \\(7\\) \u4e0d\u53ef\u907f\u514d\u5730\u4f1a\u53d7\u5230\u5f71\u54cd\u3002\u6211\u4eec\u5c06 \\(7\\) \u52a0\u4e00\uff0c\u5f97\u5230 \\(8\\)\u3002\u7ee7\u7eed\u6765\u770b\uff0c\u6211\u4eec\u53d1\u73b0 \\(6\\) \u4e5f\u662f\u4e00\u4e2a\u7f3a\u635f\u70b9\u3002 \\(8\\) \u518d\u81ea\u589e \\(1\\)\uff0c\u5f97\u5230 \\(9\\)\u3002\u6211\u4eec\u53d1\u73b0 \\(9\\) \u4e5f\u662f\u4e00\u4e2a\u7f3a\u635f\u70b9\u3002\u6211\u4eec\u518d\u81ea\u589e \\(1\\)\uff0c\u5f97\u5230 \\(10\\)\u3002\u6211\u4eec\u53d1\u73b0 \\(10\\) \u4e0d\u662f\u4e00\u4e2a\u7f3a\u635f\u70b9\u3002\u6240\u4ee5\uff0c \\(10\\) \u5c31\u662f \\(15\\) \u7684\u7236\u8282\u70b9\u3002</p> <p>\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u53ea\u8981\u8003\u8651\u4e00\u4e9b\u7279\u6b8a\u60c5\u51b5\u5c31\u53ef\u4ee5\u4e86\u3002\u5982\u679c\u4e00\u6574\u884c\u90fd\u662f\u7f3a\u635f\u70b9\u4f1a\u600e\u6837\uff1f\u5982\u679c \\(1\\) \u662f\u76ee\u6807\u70b9\u4f1a\u600e\u6837\uff1f\u2026\u2026</p> <p>\u53e6\u5916\uff0c\u6ce8\u610f\u76ee\u6807\u8282\u70b9\u7f16\u53f7\u5747\u5c0f\u4e8e \\(2^{32}\\)\uff0c\u8fd9\u662f\u4e00\u4e2a\u5f88\u5927\u7684\u6570\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u7528 <code>unsigned int</code> \u6765\u5b58\u50a8\u5b83\u4eec\u3002</p> <pre><code>#include &lt;cstdio&gt;\n\nint main() {\n  int N = 0, M = 0;\n  scanf(\"%d%d\", &amp;N, &amp;M);\n  unsigned int colo[N] = {0};\n  unsigned int dest[M] = {0};\n  for (int i = 0; i &lt; N; i++) {\n    scanf(\"%d\", &amp;colo[i]);\n  }\n  for (int i = 0; i &lt; M; i++) {\n    scanf(\"%d\", &amp;dest[i]);\n  }\n  unsigned int path[200] = {0};\n  for (int i = 0; i &lt; M; i++) {\n    if (dest[i] == 1) {\n      printf(\"1\\n\");\n    } else {\n      path[0] = dest[i];\n      bool noPath = false;\n      unsigned int temp = 0;\n      int lastJ = 0;\n      for (int j = 1; j &lt; 132; j++) {\n        temp = path[j - 1] / 2;\n        for (int k = 0; k &lt; N; k++) {\n          if (colo[k] &lt;= temp) {\n            temp++;\n          } else {\n            break;\n          }\n          if (temp &gt;= path[j - 1]) {\n            break;\n          }\n        }\n        if (temp &gt;= path[j - 1]) {\n          noPath = true;\n          break;\n        } else {\n          path[j] = temp;\n          if (temp == 1) {\n            lastJ = j;\n            break;\n          }\n        }\n      }\n      if (noPath) {\n        printf(\"0\\n\");\n      } else {\n        for (int j = lastJ; j &gt;= 0; j--) {\n          printf(j == 0 ? \"%u\\n\" : \"%u \", path[j]);\n        }\n      }\n    }\n  }\n  return 0;\n}\n</code></pre> # \u72b6\u6001 \u65f6\u95f4 \u5185\u5b58 1 Accepted 0 ms 768 KB 2 Accepted 0 ms 764 KB 3 Accepted 0 ms 760 KB 4 Accepted 0 ms 772 KB 5 Accepted 0 ms 788 KB 6 Accepted 0 ms 760 KB 7 Accepted 0 ms 756 KB 8 Accepted 0 ms 788 KB 9 Accepted 0 ms 756 KB 10 Accepted 0 ms 784 KB"},{"location":"coursework/daa/ans/2023205/","title":"\u4fe1\u606f\u4f20\u9012","text":""},{"location":"coursework/daa/ans/2023205/#\u4fe1\u606f\u4f20\u9012","title":"\u4fe1\u606f\u4f20\u9012","text":"<p>\u672c\u9898\u770b\u8d77\u6765\u6709\u4e00\u4e9b\u590d\u6742\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u5e76\u4e0d\u9700\u8981\u7528\u5230\u4efb\u4f55\u6570\u636e\u4e0e\u7b97\u6cd5\u8bfe\u4ee5\u5916\u7684\u4efb\u4f55\u77e5\u8bc6\u3002\u4e8b\u5b9e\u8bc1\u660e\uff0c\u53ea\u8981\u4f18\u5316\u5f97\u597d\uff0c\u5373\u4f7f\u662f\u6700\u6734\u7d20\u7684\u7b97\u6cd5\u601d\u60f3\u4e5f\u80fd\u591f\u901a\u8fc7\u672c\u9898\u3002</p> <p>\u5728\u201c\u9898\u76ee\u8ba1\u5212\u201d\u4e2d\uff0c\u672c\u9898\u8003\u5bdf\u70b9\u4e3a\u201c\u56fe\u7b97\u6cd5\uff1a\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u201d\u3002\u4e8b\u5b9e\u4e0a\uff0c\u76f4\u63a5\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\uff0c\u7a0d\u5fae\u8fdb\u884c\u4e00\u4e9b\u5c0f\u4f18\u5316\u5c31\u80fd\u591f\u901a\u8fc7\u672c\u9898\u3002</p> <p>\u6211\u4eec\u8ba4\u771f\u7814\u7a76\u4e00\u4e0b\u672c\u9898\uff0c\u53ef\u4ee5\u53d1\u73b0\u4e00\u4e9b\u57fa\u672c\u6027\u8d28\u3002</p> <p>\u9996\u5148\uff0c\u82e5\u7cfb\u7edf\u672c\u8eab\u5c31\u4e0d\u80fd\u4f7f\u6240\u6709\u8282\u70b9\u90fd\u6536\u5230 \\(0\\) \u53f7\u8282\u70b9\u53d1\u9001\u7684\u6d88\u606f\uff0c\u90a3\u4e48\u6bc1\u574f\u4efb\u610f\u4e00\u4e2a\u4fe1\u9053\u90fd\u4e0d\u4f1a\u6539\u53d8\u8fd9\u4e00\u4e8b\u5b9e\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u5224\u65ad\u7cfb\u7edf\u672c\u8eab\u662f\u5426\u80fd\u591f\u4f7f\u6240\u6709\u8282\u70b9\u90fd\u6536\u5230 \\(0\\) \u53f7\u8282\u70b9\u53d1\u9001\u7684\u6d88\u606f\uff0c\u82e5\u4e0d\u80fd\uff0c\u5219\u5bf9\u6240\u6709\u60c5\u51b5\u90fd\u76f4\u63a5\u8f93\u51fa \\(0\\)\u3002</p> <p>\u5176\u6b21\uff0c\u6bc1\u574f\u4e00\u4e2a\u6307\u5411 \\(0\\) \u53f7\u8282\u70b9\u7684\u4fe1\u9053\u6216\u8005\u4e00\u4e2a\u4e0d\u5b58\u5728\u7684\u4fe1\u9053\uff08\u6d4b\u8bd5\u70b9\u91cc\u4f3c\u4e4e\u6ca1\u6709\u8fd9\u79cd\u60c5\u51b5\uff0c\u4e0d\u8fc7\u8003\u8651\u9c81\u68d2\u6027\u6700\u597d\u52a0\u4e0a\uff09\u5bf9\u7cfb\u7edf\u4e0d\u4f1a\u9020\u6210\u4efb\u4f55\u5f71\u54cd\u3002</p> <p>\u6700\u540e\uff0c\u5220\u53bb\u4e00\u4e2a\u5e73\u51e1\u7684\u4fe1\u9053\u53ea\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\u82e5\u76ee\u6807\u70b9\u6709\u4e14\u53ea\u6709 1 \u6761\u4fe1\u9053\u6307\u5411\u5b83\uff0c\u5219\u5220\u53bb\u8fd9\u6761\u4fe1\u9053\u540e\uff0c\u76ee\u6807\u70b9\u65e0\u6cd5\u6536\u5230 \\(0\\) \u53f7\u8282\u70b9\u53d1\u9001\u7684\u6d88\u606f\uff1b\u82e5\u76ee\u6807\u70b9\u6709\u591a\u6761\u4fe1\u9053\u6307\u5411\u5b83\uff0c\u5219\u5220\u53bb\u8fd9\u6761\u4fe1\u9053\u540e\uff0c\u76ee\u6807\u70b9\u4ecd\u7136\u53ef\u80fd\u53ef\u4ee5\u6536\u5230 \\(0\\) \u53f7\u8282\u70b9\u53d1\u9001\u7684\u6d88\u606f\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5224\u65ad\u76ee\u6807\u70b9\u662f\u5426\u80fd\u591f\u6536\u5230 \\(0\\) \u53f7\u8282\u70b9\u53d1\u9001\u7684\u6d88\u606f\uff0c\u800c\u4e0d\u9700\u8981\u8003\u8651\u5176\u4ed6\u8282\u70b9\u3002</p> <p>\u672c\u9898\u7684\u6d4b\u8bd5\u70b9\u5f88\u5f31\uff0c\u6211\u7684\u7a0b\u5e8f\u53ef\u80fd\u5b58\u5728\u4e00\u4e9b\u95ee\u9898\uff0c\u4f46\u662f\u4ecd\u7136\u80fd\u591f\u901a\u8fc7\u6240\u6709\u6d4b\u8bd5\u70b9\u3002\u53ef\u4ee5\u770b\u5230\u7684\u662f\uff0c\u7531\u4e8e\u6211\u7684\u7b97\u6cd5\u975e\u5e38\u6734\u7d20\uff0c\u5bfc\u81f4\u5728\u6d4b\u8bd5\u70b9 10 \u4e0a\u7684\u8fd0\u884c\u65f6\u95f4\u975e\u5e38\u957f\uff0c\u4f46\u662f\u4ecd\u7136\u80fd\u591f\u901a\u8fc7\u3002\u5982\u679c\u6709\u5927\u4f6c\u7814\u7a76\u51fa\u4e86\u9ad8\u7ea7\u7b97\u6cd5\uff0c\u6b22\u8fce\u548c\u6211\u5206\u4eab\u3002</p> <p>\u6211\u7684\u5ba4\u53cb\u6307\u51fa\uff0c\u672c\u9898\u6709\u9ad8\u7ea7\u7b97\u6cd5<sup>1</sup>\uff0c\u800c\u4e14\u5176\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(e\\alpha(e))\\)\uff0c\u51e0\u4e4e\u662f\u7ebf\u6027\u7684\u3002\u4f46\u662f\u5bf9\u4e8e\u672c\u9053 OJ \u9898\u800c\u8a00\uff0c\u9898\u76ee\u7684\u7a7a\u95f4\u9650\u5236\u5e76\u4e0d\u652f\u6301\u8fd9\u7bc7\u8bba\u6587\u4e2d\u7684\u7b97\u6cd5\u5b9e\u73b0\u3002\u8fd9\u662f\u6bd4\u8f83\u9057\u61be\u7684\u3002\u4e0d\u8fc7\u53cd\u6b63\u6211\u4e0d\u4f1a\u8fd9\u79cd\u9ad8\u7ea7\u7b97\u6cd5\uff0c\u6240\u4ee5\u6ca1\u6709\u5f71\u54cd\uff08\uff1f\uff09\u3002</p> <pre><code>#include &lt;cstdio&gt;\n#include &lt;vector&gt;\n\ntypedef struct Node {\n  std::vector&lt;unsigned short&gt; next;\n};\n\nint main() {\n  int N = 0, M = 0;\n  scanf(\"%d%d\", &amp;N, &amp;M);\n  std::vector&lt;Node&gt; node(N);\n  std::vector&lt;unsigned short&gt; fromNum(N, 0);\n  unsigned short nextNum = 0;\n  unsigned short nextIndex = 0;\n  for (int i = 0; i &lt; N; i++) {\n    scanf(\"%hu\", &amp;nextNum);\n    for (int j = 0; j &lt; nextNum; j++) {\n      scanf(\"%hu\", &amp;nextIndex);\n      node[i].next.push_back(nextIndex);\n    }\n  }\n  std::vector&lt;unsigned short&gt; queue;\n  std::vector&lt;bool&gt; visited(N, false);\n  queue.push_back(0);\n  visited[0] = true;\n  for (int i = 0; i &lt; queue.size(); i++) {\n    unsigned short index = queue[i];\n    for (int j = 0; j &lt; node[index].next.size(); j++) {\n      unsigned short next = node[index].next[j];\n      fromNum[next]++;\n      if (!visited[next]) {\n        queue.push_back(next);\n        visited[next] = true;\n      }\n    }\n  }\n  bool flag = queue.size() == N;\n  // queue.clear();\n  // visited.assign(N, false);\n  if (flag) {\n    printf(\"1\\n\");\n    for (int i = 0; i &lt; M; i++) {\n      unsigned short from = 0, to = 0;\n      scanf(\"%hu%hu\", &amp;from, &amp;to);\n      if (to == 0) {\n        printf(\"1\\n\");\n      } else {\n        if (fromNum[to] == 1) {\n          bool PathExists = false;\n          for (int j = 0; j &lt; node[from].next.size(); j++) {\n            if (node[from].next[j] == to) {\n              PathExists = true;\n              printf(\"0\\n\");\n              break;\n            }\n          }\n          if (!PathExists) {\n            printf(\"1\\n\");\n          }\n        } else {\n          std::vector&lt;unsigned short&gt; queue;\n          std::vector&lt;bool&gt; visited(N, false);\n          queue.push_back(0);\n          visited[0] = true;\n          bool flag = false;\n          for (int j = 0; j &lt; queue.size(); j++) {\n            unsigned short index = queue[j];\n            for (int k = 0; k &lt; node[index].next.size(); k++) {\n              unsigned short next = node[index].next[k];\n              if (!visited[next] &amp;&amp; !(index == from &amp;&amp; next == to)) {\n                queue.push_back(next);\n                visited[next] = true;\n                if (next == to) {\n                  flag = true;\n                  break;\n                }\n              }\n            }\n            if (flag) {\n              break;\n            }\n          }\n          printf(\"%d\\n\", flag ? 1 : 0);\n          // queue.clear();\n          // visited.assign(N, false);\n        }\n      }\n    }\n  } else {\n    printf(\"0\\n\");\n    for (int i = 0; i &lt; M; i++) {\n      printf(\"0\\n\");\n    }\n  }\n}\n</code></pre> # \u72b6\u6001 \u65f6\u95f4 \u5185\u5b58 1 Accepted 0 ms 916 KB 2 Accepted 0 ms 920 KB 3 Accepted 0 ms 928 KB 4 Accepted 92 ms 2968 KB 5 Accepted 8 ms 1316 KB 6 Accepted 64 ms 3504 KB 7 Accepted 44 ms 4488 KB 8 Accepted 0 ms 920 KB 9 Accepted 84 ms 2160 KB 10 Accepted 780 ms 4696 KB <ol> <li> <p>Robert E. Tarjan, Edge-disjoint spanning trees and depth-first search, Acta Inf. 6 (1976) 171\u2013185.\u00a0\u21a9</p> </li> </ol>"},{"location":"coursework/daa/ans/2023206/","title":"\u8df3\u8df3\u4e50","text":""},{"location":"coursework/daa/ans/2023206/#\u8df3\u8df3\u4e50","title":"\u8df3\u8df3\u4e50","text":"<p>\u672c\u9898\u8f93\u5165\u6570\u636e\u8303\u56f4\u4ee4\u6211\u5927\u53d7\u9707\u64bc\u3002\u867d\u7136\u9898\u76ee\u58f0\u79f0 \\(M&lt;2^{31}\\)\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a \\(M\\) \u7684\u503c\u6700\u5927\u53ea\u6709 \\(10^5\\)\u3002</p> <p>\u5982\u679c\u53ea\u662f\u60f3\u901a\u8fc7\u672c\u9898\u7684\u6d4b\u8bd5\u70b9\u7684\u8bdd\uff0c\u90a3\u4e48\u6ca1\u6709\u5fc5\u8981\u8003\u8651\u975e\u5e38\u590d\u6742\u7684\u7b97\u6cd5\u3002\u7b80\u5355\u679a\u4e3e\u6bcf\u4e2a\u53f0\u9636\u524d\u9762\u7684 \\(K\\) \u4e2a\u53f0\u9636\uff0c\u7136\u540e\u5224\u65ad\u662f\u5426\u6ee1\u8db3\u6761\u4ef6\u5373\u53ef\u3002</p> <p>\u5f53\u7136\uff0c \\(O(MK)\\) \u7684\u7b97\u6cd5\u8fd8\u662f\u4e0d\u884c\u7684\uff0c\u53ea\u80fd\u8fc7 \\(4\\) \u4e2a\u6d4b\u8bd5\u70b9\u3002\u6211\u4eec\u9700\u8981\u5bf9\u679a\u4e3e\u7684\u8fc7\u7a0b\u8fdb\u884c\u4f18\u5316\u3002</p> <p>\u600e\u4e48\u4f18\u5316\u5462\uff1f</p> <p>\u4e8b\u5b9e\u8bc1\u660e\uff0c<code>std::vector</code> \u7684 <code>insert()</code> \u51fd\u6570\u548c <code>erase()</code> \u51fd\u6570\u662f\u975e\u5e38\u5feb\u7684\u3002\u8fd9\u6837\u53ef\u4ee5\u52a8\u70b9\u6b6a\u8111\u7b4b\u3002</p> <p>\u6211\u4eec\u53ea\u8981\u628a\u524d\u9762\u7684 \\(K\\) \u4e2a\u53f0\u9636\u7684\u9ad8\u5ea6\u6392\u5e8f\uff0c\u7528\u4e8c\u5206\u67e5\u627e\u5c31\u53ef\u4ee5\u5728 \\(O(\\log K)\\) \u7684\u65f6\u95f4\u5185\u627e\u5230\u6ee1\u8db3\u6761\u4ef6\u7684\u53f0\u9636\u3002\u8fd9\u6837\u4e00\u6765\uff0c\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f \\(O(M\\log K)\\)\uff0c\u53ef\u4ee5\u901a\u8fc7\u6240\u6709\u6d4b\u8bd5\u70b9\u3002</p> <p>\u540c\u65f6\uff0c\u7531\u4e8e\u672c\u9898\u6570\u636e\u6bd4\u8f83\u5206\u6563\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528\u7d22\u5f15\u7684\u65b9\u5f0f\u6765\u5b58\u50a8\u53f0\u9636\u7684\u9ad8\u5ea6\u3002\u5373\u5c06\u53f0\u9636\u9ad8\u5ea6\u5206\u7c7b\u5b58\u50a8\uff0c\u8fd9\u6837\u4e0d\u7528\u904d\u5386\u6240\u6709\u53f0\u9636\u3002</p> <p>\u672c\u4eba\u8ba4\u4e3a\uff0c\u8fd9\u4e24\u79cd\u65b9\u6cd5\u90fd\u4e0d\u7f8e\u89c2\uff0c\u4f46\u662f\u6211\u7cbe\u529b\u6709\u9650\uff0c\u4e0d\u60f3\u7ee7\u7eed\u5199\u4e86\u3002</p> <p>\u987a\u5e26\u4e00\u63d0\uff0c\u867d\u7136 \\(M&lt;2^{31}\\)\uff0c \\(K&lt;2^{31}\\)\uff0c \\(H&lt;2^{31}\\)\uff0c\u6bcf\u7ea7\u53f0\u9636\u7684\u9ad8\u5ea6\u4e5f\u5c0f\u4e8e \\(2^{31}\\)\uff0c\u4f46\u662f\u5176\u4e2d\u4e24\u4e2a\u6570\u76f8\u52a0\u53ef\u80fd\u5c31\u8d85\u8fc7 \\(2^{31}\\) \u4e86\u3002\u8bb0\u5f97\u76f8\u52a0\u65f6\u7528 <code>long long</code>\u3002</p> <p>\u4e0b\u9762\u662f\u7b2c\u4e00\u79cd\u505a\u6cd5\uff0c\u5f88\u4e11\u964b\uff0c\u4f46\u662f\u8fc7\u4e86\uff0c\u6211\u4e5f\u7d2f\u4e86\u3002</p> <pre><code>#include &lt;cstdio&gt;\n#include &lt;vector&gt;\n\nvoid add(std::vector&lt;int&gt; &amp;v, int x) {\n  int l = 0, r = v.size();\n  while (l &lt; r) {\n    int m = (l + r) / 2;\n    if (v[m] &lt; x) {\n      l = m + 1;\n    } else {\n      r = m;\n    }\n  }\n  v.insert(v.begin() + l, x);\n}\n\nint find(std::vector&lt;int&gt; &amp;v, int x) {\n  int l = 0, r = v.size();\n  while (l &lt; r) {\n    int m = (l + r) / 2;\n    if (v[m] &lt; x) {\n      l = m + 1;\n    } else {\n      r = m;\n    }\n  }\n  return l;\n}\n\nint findLeq(std::vector&lt;int&gt; &amp;v, long long x) {\n  int l = 0, r = v.size();\n  while (l &lt; r) {\n    int m = (l + r) / 2;\n    if (v[m] &lt;= x) {\n      l = m + 1;\n    } else {\n      r = m;\n    }\n  }\n  if (l &gt; 0) {\n    --l;\n  }\n  return l;\n}\n\nint findGeq(std::vector&lt;int&gt; &amp;v, long long x) {\n  int l = 0, r = v.size();\n  while (l &lt; r) {\n    int m = (l + r) / 2;\n    if (v[m] &lt; x) {\n      l = m + 1;\n    } else {\n      r = m;\n    }\n  }\n  return l;\n}\n\nint main() {\n  int m, k, h;\n  scanf(\"%d%d%d\", &amp;m, &amp;k, &amp;h);\n  std::vector&lt;int&gt; l;\n  std::vector&lt;int&gt; q;\n  long long cnt = 0;\n  for (int i = 0; i &lt; m; ++i) {\n    int x;\n    scanf(\"%d\", &amp;x);\n    if (l.size() &gt; 0 &amp;&amp; !((long long)x + (long long)h &lt; l.front() ||\n                          (long long)x - (long long)h &gt; l.back())) {\n      cnt += findLeq(l, (long long)x + (long long)h) -\n             findGeq(l, (long long)x - (long long)h) + 1;\n    }\n    q.push_back(x);\n    add(l, x);\n    if (i &gt;= k) {\n      l.erase(l.begin() + find(l, q.front()));\n      q.erase(q.begin());\n    }\n  }\n  printf(\"%lld\\n\", cnt);\n  return 0;\n}\n</code></pre> # \u72b6\u6001 \u65f6\u95f4 \u5185\u5b58 1 Accepted 0 ms 836 KB 2 Accepted 24 ms 952 KB 3 Accepted 84 ms 1040 KB 4 Accepted 132 ms 1040 KB 5 Accepted 0 ms 836 KB 6 Accepted 320 ms 1200 KB 7 Accepted 404 ms 1368 KB 8 Accepted 448 ms 1364 KB 9 Accepted 488 ms 1364 KB 10 Accepted 488 ms 1372 KB"},{"location":"coursework/daa/ans/2023207/","title":"\u5e26\u9650\u77e9\u9635\u65b9\u7a0b\u7ec4\u6c42\u89e3","text":""},{"location":"coursework/daa/ans/2023207/#\u5e26\u9650\u77e9\u9635\u65b9\u7a0b\u7ec4\u6c42\u89e3","title":"\u5e26\u9650\u77e9\u9635\u65b9\u7a0b\u7ec4\u6c42\u89e3","text":"<p>\u672c\u9898\u53ea\u6709\u6700\u540e\u4e00\u4e2a\u6d4b\u8bd5\u70b9\u662f\u4e94\u5bf9\u89d2\u77e9\u9635\uff0c\u5176\u4f59\u5747\u4e3a\u4e09\u5bf9\u89d2\u77e9\u9635\u3002</p> <p>\u672c\u9898\u5bf9\u7cbe\u5ea6\u8981\u6c42\u8f83\u9ad8\uff0c\u6545\u5b58\u50a8\u6570\u636e\u4e0e\u8ba1\u7b97\u65f6\u4e0d\u80fd\u4f7f\u7528 <code>float</code> \u7c7b\u578b\uff0c\u800c\u8981\u4f7f\u7528 <code>double</code> \u7c7b\u578b\u3002</p>"},{"location":"coursework/daa/ans/2023207/#\u4e09\u5bf9\u89d2\u77e9\u9635\u7684-lu-\u5206\u89e3","title":"\u4e09\u5bf9\u89d2\u77e9\u9635\u7684 LU \u5206\u89e3<sup>1</sup>","text":"<p>\u82e5\u4e09\u5bf9\u89d2\u77e9\u9635 \\(A\\) \u53ef\u4ee5\u8fdb\u884c LU \u5206\u89e3\uff0c\u5219\u6709</p> \\[ \\begin{align*} A&amp;= \\begin{bmatrix} b_1 &amp; c_1 \\\\\\ a_2 &amp; b_2 &amp; c_2 \\\\\\ &amp; \\ddots &amp; \\ddots &amp; \\ddots \\\\\\ &amp; &amp; \\ddots &amp; \\ddots &amp; \\ddots \\\\\\ &amp; &amp; &amp; a_{n-1} &amp; b_{n-1} &amp; c_{n-1} \\\\\\ &amp; &amp; &amp; &amp; a_n &amp; b_n \\end{bmatrix} \\\\\\ &amp;= \\begin{bmatrix} 1 \\\\\\ l_2 &amp; 1 \\\\\\ &amp; \\ddots &amp; \\ddots \\\\\\ &amp; &amp; l_{n-1} &amp; 1 \\\\\\ &amp; &amp; &amp; l_n &amp; 1 \\end{bmatrix} \\begin{bmatrix} d_1 &amp; c_1 \\\\\\ &amp; d_2 &amp; c_2 \\\\\\ &amp; &amp; \\ddots &amp; \\ddots \\\\\\ &amp; &amp; &amp; d_{n-1} &amp; c_{n-1} \\\\\\ &amp; &amp; &amp; &amp; d_n \\end{bmatrix} \\\\\\ \\end{align*} \\] <p>\u4e3a\u4e86\u8282\u7701\u7a7a\u95f4\uff0c\u6211\u4eec\u5c06 \\(l_i\\) \u5b58\u50a8\u5728 \\(a_i\\) \u4e2d\uff0c\u5c06 \\(d_i\\) \u5b58\u50a8\u5728 \\(b_i\\) \u4e2d\u3002\u8fd9\u6837\uff0c\u6709\u5982\u4e0b\u7684\u9012\u63a8\u7b97\u6cd5\uff1a</p> \\[ \\begin{align*} a_i&amp;\\leftarrow\\frac{a_i}{b_{i-1}} &amp;&amp;i=2,3,\\cdots,n \\\\\\ b_i&amp;\\leftarrow b_i-a_ic_{i-1} &amp;&amp;i=2,3,\\cdots,n \\end{align*} \\] <p>\u89e3\u5f97 \\(A=LU\\) \u540e\uff0c\u5bf9\u4e8e\u65b9\u7a0b \\(AX=Z\\)\uff0c\u6709 \\(LUX=Z\\)\uff0c\u4ee4 \\(Y=UX\\)\uff0c\u5219\u6709 \\(LY=Z\\)\uff0c\u89e3\u5f97 \\(Y\\) \u540e\uff0c\u518d\u89e3\u5f97 \\(X\\)\u3002</p> <p>\u4e3a\u4e86\u8282\u7701\u7a7a\u95f4\uff0c\u6211\u4eec\u76f4\u63a5\u5728 \\(Z\\) \u4e0a\u8fdb\u884c\u64cd\u4f5c\u3002\u8fd9\u6837\uff0c\u6709\u5982\u4e0b\u7684\u9012\u63a8\u7b97\u6cd5\uff1a</p> \\[ \\begin{align*} z_i&amp;\\leftarrow z_i-a_iz_{i-1} &amp;&amp;i=2,3,\\cdots,n \\\\\\ z_i&amp;\\leftarrow \\frac{z_i-c_iz_{i+1}}{b_i} &amp;&amp;i=n-1,n-2,\\cdots,1 \\end{align*} \\]"},{"location":"coursework/daa/ans/2023207/#\u4e94\u5bf9\u89d2\u77e9\u9635\u7684-lu-\u5206\u89e3","title":"\u4e94\u5bf9\u89d2\u77e9\u9635\u7684 LU \u5206\u89e3<sup>2</sup>","text":"<p>\u82e5\u4e94\u5bf9\u89d2\u77e9\u9635 \\(A\\) \u53ef\u4ee5\u8fdb\u884c LU \u5206\u89e3\uff0c\u5219\u6709</p> \\[ \\begin{align*} A&amp;= \\begin{bmatrix} c_1 &amp; d_1 &amp; e_1 \\\\\\ b_2 &amp; c_2 &amp; d_2 &amp; e_2 \\\\\\ a_3 &amp; b_3 &amp; c_3 &amp; d_3 &amp; e_3 \\\\\\ &amp; a_4 &amp; b_4 &amp; c_4 &amp; d_4 &amp; e_4 \\\\\\ &amp; &amp; \\ddots &amp; \\ddots &amp; \\ddots &amp; \\ddots &amp; \\ddots \\\\\\ &amp; &amp; &amp; \\ddots &amp; \\ddots &amp; \\ddots &amp; \\ddots &amp; \\ddots \\\\\\ &amp; &amp; &amp; &amp; a_{n-2} &amp; b_{n-2} &amp; c_{n-2} &amp; d_{n-2} &amp; e_{n-2} \\\\\\ &amp; &amp; &amp; &amp; &amp; a_{n-1} &amp; b_{n-1} &amp; c_{n-1} &amp; d_{n-1} \\\\\\ &amp; &amp; &amp; &amp; &amp; &amp; a_n &amp; b_n &amp; c_n \\end{bmatrix} \\\\\\ &amp;= \\begin{bmatrix} \\alpha_1 \\\\\\ \\gamma_2 &amp; \\alpha_2 \\\\\\ z_3 &amp; \\gamma_3 &amp; \\alpha_3 \\\\\\ &amp; \\ddots &amp; \\ddots &amp; \\ddots \\\\\\ &amp; &amp; z_{n-1} &amp; \\gamma_{n-1} &amp; \\alpha_{n-1} \\\\\\ &amp; &amp; &amp; z_n &amp; \\gamma_n &amp; \\alpha_n \\end{bmatrix} \\begin{bmatrix} 1 &amp; \\beta_1 &amp; q_1 \\\\\\ &amp; 1 &amp; \\beta_2 &amp; q_2 \\\\\\ &amp; &amp; \\ddots &amp; \\ddots &amp; \\ddots \\\\\\ &amp; &amp; &amp; 1 &amp; \\beta_{n-2} &amp; q_{n-2} \\\\\\ &amp; &amp; &amp; &amp; 1 &amp; \\beta_{n-1} \\\\\\ &amp; &amp; &amp; &amp; &amp; 1 \\end{bmatrix} \\\\\\ \\end{align*} \\] <p>\u4e3a\u4e86\u8282\u7701\u7a7a\u95f4\uff0c\u6211\u4eec\u5c06 \\(z_i\\) \u5b58\u50a8\u5728 \\(a_i\\) \u4e2d\uff0c\u5c06 \\(\\gamma_i\\) \u5b58\u50a8\u5728 \\(b_i\\) \u4e2d\uff0c\u5c06 \\(\\alpha_i\\) \u5b58\u50a8\u5728 \\(c_i\\) \u4e2d\uff0c\u5c06 \\(\\beta_i\\) \u5b58\u50a8\u5728 \\(d_i\\) \u4e2d\uff0c\u5c06 \\(q_i\\) \u5b58\u50a8\u5728 \\(e_i\\) \u4e2d\u3002\u8fd9\u6837\uff0c\u6709\u5982\u4e0b\u7684\u9012\u63a8\u7b97\u6cd5<sup>3</sup>\uff1a</p> \\[ \\begin{align*} \\alpha_1&amp;=c_1 \\\\\\ \\beta_1&amp;=\\frac{d_1}{\\alpha_1} \\\\\\ \\gamma_2&amp;=b_2 \\\\\\ \\alpha_2&amp;=c_2-\\gamma_2\\beta_1 \\\\\\ z_i&amp;=a_i &amp;&amp;i=3,4,\\cdots,n \\\\\\ \\gamma_i&amp;=b_i-z_i\\beta_{i-2} &amp;&amp;i=3,4,\\cdots,n \\\\\\ \\alpha_i&amp;=c_i-z_iq_{i-2}-\\gamma_i\\beta_{i-1} &amp;&amp;i=3,4,\\cdots,n \\\\\\ \\beta_i&amp;=\\frac{d_i-\\gamma_iq_{i-1}}{\\alpha_i} &amp;&amp;i=2,3,\\cdots,n-1 \\\\\\ q_i&amp;=\\frac{e_i}{\\alpha_i} &amp;&amp;i=1,2,\\cdots,n-2 \\end{align*} \\] <p>\u5373</p> \\[ \\begin{align*} d_1&amp;\\leftarrow\\frac{d_1}{c_1} \\\\\\ e_1&amp;\\leftarrow\\frac{e_1}{c_1} \\\\\\ c_2&amp;\\leftarrow c_2-b_2d_1 \\\\\\ d_2&amp;\\leftarrow\\frac{d_2-b_2e_1}{c_2} \\\\\\ e_2&amp;\\leftarrow\\frac{e_2}{c_2} \\\\\\ b_i&amp;\\leftarrow b_i-a_id_{i-2} &amp;&amp;i=3,4,\\cdots,n \\\\\\ c_i&amp;\\leftarrow c_i-a_ie_{i-2}-b_id_{i-1} &amp;&amp;i=3,4,\\cdots,n \\\\\\ d_i&amp;\\leftarrow\\frac{d_i-b_ie_{i-1}}{c_i} &amp;&amp;i=3,4,\\cdots,n \\\\\\ e_i&amp;\\leftarrow\\frac{e_i}{c_i} &amp;&amp;i=3,4,\\cdots,n \\end{align*} \\] <p>\u89e3\u5f97 \\(A=LU\\) \u540e\uff0c\u5bf9\u4e8e\u65b9\u7a0b \\(AX=Z\\)\uff0c\u6709 \\(LUX=Z\\)\uff0c\u4ee4 \\(Y=UX\\)\uff0c\u5219\u6709 \\(LY=Z\\)\uff0c\u89e3\u5f97 \\(Y\\) \u540e\uff0c\u518d\u89e3\u5f97 \\(X\\)\u3002</p> <p>\u4e3a\u4e86\u8282\u7701\u7a7a\u95f4\uff0c\u6211\u4eec\u76f4\u63a5\u5728 \\(Z\\) \u4e0a\u8fdb\u884c\u64cd\u4f5c\u3002\u8fd9\u6837\uff0c\u6709\u5982\u4e0b\u7684\u9012\u63a8\u7b97\u6cd5\uff1a</p> \\[ \\begin{align*} z_1&amp;\\leftarrow\\frac{z_1}{c_1} \\\\\\ z_2&amp;\\leftarrow\\frac{z_2-b_2z_1}{c_2} \\\\\\ z_i&amp;\\leftarrow\\frac{z_i-a_iz_{i-2}-b_iz_{i-1}}{c_i} &amp;&amp;i=3,4,\\cdots,n \\\\\\ z_{n-1}&amp;\\leftarrow z_{n-1}-d_{n-1}z_{n} \\\\\\ z_i&amp;\\leftarrow z_i-d_iz_{i+1}-e_iz_{i+2} &amp;&amp;i=n-2,n-3,\\cdots,1 \\end{align*} \\]"},{"location":"coursework/daa/ans/2023207/#\u4ee3\u7801","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;cstdio&gt;\n\nint main() {\n  int p = 0, n = 0, m = 0;\n  scanf(\"%d\", &amp;p);\n  scanf(\"%d%d\", &amp;n, &amp;m);\n  if (p == 3) {\n    double a[n] = {0}, b[n] = {0}, c[n] = {0};\n    for (int i = 0; i &lt; n - 1; i++) {\n      scanf(\"%lf\", &amp;c[i]);\n    }\n    for (int i = 0; i &lt; n; i++) {\n      scanf(\"%lf\", &amp;b[i]);\n    }\n    for (int i = 1; i &lt; n; i++) {\n      scanf(\"%lf\", &amp;a[i]);\n    }\n    // LU\u5206\u89e3\n    for (int i = 1; i &lt; n; i++) {\n      a[i] = a[i] / b[i - 1];\n      b[i] = b[i] - a[i] * c[i - 1];\n    }\n    double z[n] = {0};\n    for (int i = 0; i &lt; m; i++) {\n      // \u8f93\u5165\n      for (int j = 0; j &lt; n; j++) {\n        scanf(\"%lf\", &amp;z[j]);\n      }\n      // \u524d\u4ee3\n      for (int j = 1; j &lt; n; j++) {\n        z[j] = z[j] - a[j] * z[j - 1];\n      }\n      // \u540e\u4ee3\n      z[n - 1] = z[n - 1] / b[n - 1];\n      for (int j = n - 2; j &gt;= 0; j--) {\n        z[j] = (z[j] - c[j] * z[j + 1]) / b[j];\n      }\n      // \u8f93\u51fa\n      for (int j = 0; j &lt; n - 1; j++) {\n        printf(\"%.4lf \", z[j]);\n      }\n      printf(\"%.4lf\\n\", z[n - 1]);\n    }\n  }\n  if (p == 5) {\n    double a[n] = {0}, b[n] = {0}, c[n] = {0}, d[n] = {0}, e[n] = {0};\n    for (int i = 0; i &lt; n - 2; i++) {\n      scanf(\"%lf\", &amp;e[i]);\n    }\n    for (int i = 0; i &lt; n - 1; i++) {\n      scanf(\"%lf\", &amp;d[i]);\n    }\n    for (int i = 0; i &lt; n; i++) {\n      scanf(\"%lf\", &amp;c[i]);\n    }\n    for (int i = 1; i &lt; n; i++) {\n      scanf(\"%lf\", &amp;b[i]);\n    }\n    for (int i = 2; i &lt; n; i++) {\n      scanf(\"%lf\", &amp;a[i]);\n    }\n    // LU\u5206\u89e3\n    d[0] = d[0] / c[0];\n    e[0] = e[0] / c[0];\n    c[1] = c[1] - b[1] * d[0];\n    d[1] = (d[1] - b[1] * e[0]) / c[1];\n    e[1] = e[1] / c[1];\n    for (int i = 2; i &lt; n; i++) {\n      b[i] = b[i] - a[i] * d[i - 2];\n      c[i] = c[i] - a[i] * e[i - 2] - b[i] * d[i - 1];\n      d[i] = (d[i] - b[i] * e[i - 1]) / c[i];\n      e[i] = e[i] / c[i];\n    }\n    double z[n] = {0};\n    for (int i = 0; i &lt; m; i++) {\n      // \u8f93\u5165\n      for (int j = 0; j &lt; n; j++) {\n        scanf(\"%lf\", &amp;z[j]);\n      }\n      // \u524d\u4ee3\n      z[0] = z[0] / c[0];\n      z[1] = (z[1] - b[1] * z[0]) / c[1];\n      for (int j = 2; j &lt; n; j++) {\n        z[j] = (z[j] - a[j] * z[j - 2] - b[j] * z[j - 1]) / c[j];\n      }\n      // \u540e\u4ee3\n      z[n - 2] = z[n - 2] - d[n - 2] * z[n - 1];\n      for (int j = n - 3; j &gt;= 0; j--) {\n        z[j] = z[j] - d[j] * z[j + 1] - e[j] * z[j + 2];\n      }\n      // \u8f93\u51fa\n      for (int j = 0; j &lt; n - 1; j++) {\n        printf(\"%.4lf \", z[j]);\n      }\n      printf(\"%.4lf\\n\", z[n - 1]);\n    }\n  }\n}\n</code></pre>"},{"location":"coursework/daa/ans/2023207/#\u8868\u73b0","title":"\u8868\u73b0","text":"<p>\u8fd8\u4e0d\u9519\u3002</p> # \u72b6\u6001 \u65f6\u95f4 \u5185\u5b58 1 Accepted 0 ms 760 KB 2 Accepted 0 ms 764 KB 3 Accepted 0 ms 772 KB 4 Accepted 0 ms 792 KB 5 Accepted 40 ms 792 KB 6 Accepted 84 ms 1072 KB 7 Accepted 412 ms 912 KB 8 Accepted 200 ms 788 KB 9 Accepted 164 ms 820 KB 10 Accepted 440 ms 1228 KB <ol> <li> <p>\u53c2\u8003\u6587\u732e\uff1a29 \u7279\u6b8a\u7ebf\u6027\u65b9\u7a0b\u7ec4\u6c42\u89e3(*) | \u7edf\u8ba1\u8ba1\u7b97 \u21a9</p> </li> <li> <p>\u53c2\u8003\u6587\u732e\uff1a\u738b\u793c\u5e7f,\u8521\u653e,\u718a\u5cb3\u5c71.\u4e94\u5bf9\u89d2\u7ebf\u6027\u65b9\u7a0b\u7ec4\u8ffd\u8d76\u6cd5[J].\u5357\u534e\u5927\u5b66\u5b66\u62a5(\u81ea\u7136\u79d1\u5b66\u7248),2008(01):1-4.DOI:10.19431/j.cnki.1673-0062.2008.01.001. \u21a9\u21a9</p> </li> <li> <p>\u53c2\u8003\u6587\u732e<sup>2</sup>\u4e2d\u7684\u516c\u5f0f\u6709\u8bef\u3002\u00a0\u21a9</p> </li> </ol>"},{"location":"coursework/daa/ans/2023208/","title":"\u7f3a\u5931\u6570\u636e\u6062\u590d","text":""},{"location":"coursework/daa/ans/2023208/#\u7f3a\u5931\u6570\u636e\u6062\u590d","title":"\u7f3a\u5931\u6570\u636e\u6062\u590d","text":"<p>\u5728\u6240\u6709\u6d4b\u8bd5\u70b9\u4e2d\uff0c\u53ea\u6709 6\u30018\u300110 \u4e09\u4e2a\u6d4b\u8bd5\u70b9 \\(n&gt;20\\)\uff0c\u53ea\u6709 6 \u4e00\u4e2a\u6d4b\u8bd5\u70b9 \\(n&gt;30\\)\u3002</p> <p>\u8fd9\u9053\u9898\u9700\u8981\u7528\u5230\u591a\u9879\u5f0f\u62df\u5408\uff0c\u8fd9\u672c\u8eab\u6ca1\u6709\u4ec0\u4e48\u597d\u8bf4\u7684\u3002\u6570\u636e\u4e0e\u7b97\u6cd5\u8bfe\u5802\u4e0a\u8bb2\u4e86\u51e0\u79cd\u63d2\u503c\u6cd5\uff0c\u5305\u62ec\u62c9\u683c\u6717\u65e5\u63d2\u503c\u6cd5\u3001\u725b\u987f\u63d2\u503c\u6cd5\u7b49\u3002\u6211\u7efc\u5408\u4f7f\u7528\u4e86\u725b\u987f\u63d2\u503c\u6cd5\u548c\u5207\u6bd4\u96ea\u592b\u63d2\u503c\u6cd5\uff0c\u5728\u7ecf\u8fc7\u5f88\u957f\u65f6\u95f4\u7684\u6211\u8ba4\u4e3a\u5bf9\u4e8e\u7b97\u6cd5\u6ca1\u6709\u4ec0\u4e48\u5b9e\u8d28\u6027\u5e2e\u52a9\u7684\u8c03\u53c2\u4e4b\u540e\uff0c\u6700\u7ec8\u901a\u8fc7\u4e86\u8fd9\u9053\u9898\u7684\u5168\u90e8 10 \u4e2a\u6d4b\u8bd5\u70b9\u3002</p> <p>\u5b9e\u9645\u6d4b\u8bd5\u4e0b\u6765\uff0c\u725b\u987f\u63d2\u503c\u6cd5\u5bf9\u4e8e\u4f4e\u9636\u591a\u9879\u5f0f\u62df\u5408\u8ba1\u7b97\u66f4\u7b80\u4fbf\uff0c\u800c\u7ecf\u8fc7\u6539\u826f\u7684\u5207\u6bd4\u96ea\u592b\u63d2\u503c\u6cd5\u5bf9\u4e8e\u9ad8\u9636\u591a\u9879\u5f0f\u66f4\u7cbe\u786e\u3001\u53ef\u9760\u3002\u8fd9\u53ef\u80fd\u4e0e\u6211\u5177\u4f53\u5b9e\u73b0\u65b9\u6cd5\u6709\u5173\u3002\u4e0d\u8fc7\u4e8b\u5b9e\u4e0a\uff0c\u5207\u6bd4\u96ea\u592b\u63d2\u503c\u6cd5\u4e5f\u662f\u80fd\u591f\u907f\u514d\u725b\u987f\u63d2\u503c\u6cd5\u7684\u9f99\u683c\u95ee\u9898\u7684\uff0c\u867d\u7136\u8fd9\u8ddf\u8fd9\u9053\u9898\u6ca1\u6709\u4ec0\u4e48\u5173\u7cfb\u3002</p> <p>\u8fd9\u9053\u9898\u5b9e\u9645\u4e0a\u53ea\u7528\u725b\u987f\u6cd5\u4e5f\u80fd\u89e3\u51fa\u6765\uff0c\u6ce8\u610f\u8f93\u5165\u6570\u636e\u65f6\u6392\u9664\u91cd\u590d\u6570\u636e\u5373\u53ef\u3002</p> <pre><code>#include &lt;algorithm&gt;\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n\n#define THRESHOLD_NEWTON 1e-4\n#define THRESHOLD_CHEBYSHEV 1e-10\n#define THRESHOLD_N 20\n\n#define CHEBYSHEV_SCALE 1.0\n\nint n, m;\nint fit;\ndouble max = -1e10, min = 1e10;\ndouble x[101] = {0}, y[101] = {0}, nt[101][101] = {0};\ndouble cb[101][101] = {0}, s1[101][101] = {0}, s2[101] = {0};\ndouble t1[101][101] = {0}, t2[101] = {0}, t3[101] = {0};\n\nvoid inputXY() {\n  for (int i = 0; i &lt; n; i++) {\n    scanf(\"%lf%lf\", &amp;x[i], &amp;y[i]);\n  }\n}\n\nvoid newtonNT() {\n  nt[0][0] = y[0];\n  for (int i = 1; i &lt; n; i++) {\n    nt[i][0] = y[i];\n    for (int j = 1; j &lt;= i; j++) {\n      nt[i][j] = (nt[i][j - 1] - nt[i - 1][j - 1]) / (x[i] - x[i - j]);\n    }\n  }\n}\n\nint newtonFit() {\n  for (int i = n - 1; i &gt;= 0; i--) {\n    if (nt[i][i] &gt; THRESHOLD_NEWTON || nt[i][i] &lt; -THRESHOLD_NEWTON) {\n      return i;\n    }\n  }\n  return -1;\n}\n\ndouble newtonCalc(double t) {\n  double w = 1;\n  double z = nt[0][0];\n  for (int j = 1; j &lt; n; j++) {\n    w *= (t - x[j - 1]);\n    if (nt[j][j] &gt; THRESHOLD_NEWTON || nt[j][j] &lt; -THRESHOLD_NEWTON) {\n      z += nt[j][j] * w;\n    }\n  }\n  return z;\n}\n\nvoid chebyshevCB(double x, double *cb) {\n  cb[0] = 1;\n  cb[1] = x;\n  for (int i = 2; i &lt; n; i++) {\n    cb[i] = 2 * x * cb[i - 1] - cb[i - 2];\n  }\n}\n\nvoid chebyshevScale() {\n  for (int i = 0; i &lt; n; i++) {\n    if (x[i] &lt; min) {\n      min = x[i];\n    }\n    if (x[i] &gt; max) {\n      max = x[i];\n    }\n  }\n  if (min == max) {\n    min = min - 1;\n    max = max + 1;\n  }\n  for (int i = 0; i &lt; n; i++) {\n    x[i] = (2 * x[i] * CHEBYSHEV_SCALE - max - min) / (max - min);\n    chebyshevCB(x[i], cb[i]);\n  }\n  for (int i = 0; i &lt; n; i++) {\n    for (int j = 0; j &lt; n; j++) {\n      s2[i] += y[j] * cb[j][i];\n    }\n  }\n  for (int i = 0; i &lt; n; i++) {\n    for (int j = 0; j &lt; n; j++) {\n      for (int k = 0; k &lt; n; k++) {\n        s1[i][j] += cb[k][i] * cb[k][j];\n      }\n    }\n  }\n}\n\nbool testFit() {\n  memcpy(t1, s1, sizeof(s1));\n  memcpy(t2, s2, sizeof(s2));\n  for (int i = 0; i &lt;= fit; i++) {\n    int s = i;\n    for (int j = i + 1; j &lt;= fit; j++) {\n      if (std::abs(t1[j][i]) &gt; std::abs(t1[s][i])) {\n        s = j;\n      }\n    }\n    if (s != i) {\n      for (int j = i; j &lt;= fit; j++) {\n        std::swap(t1[s][j], t1[i][j]);\n      }\n      std::swap(t2[s], t2[i]);\n    }\n    for (int j = i + 1; j &lt;= fit; j++) {\n      double ratio = t1[j][i] / t1[i][i];\n      for (int k = i; k &lt;= fit; k++) {\n        t1[j][k] -= ratio * t1[i][k];\n      }\n      t2[j] -= ratio * t2[i];\n    }\n  }\n  for (int i = fit; i &gt;= 0; i--) {\n    t2[i] /= t1[i][i];\n    for (int j = i - 1; j &gt;= 0; j--) {\n      t2[j] -= t2[i] * t1[j][i];\n    }\n  }\n  for (int i = 0; i &lt; n; i++) {\n    double yy = 0;\n    for (int j = 0; j &lt;= fit; j++) {\n      yy += t2[j] * cb[i][j];\n    }\n    if (std::abs(yy - y[i]) &gt;= THRESHOLD_CHEBYSHEV) {\n      return false;\n    }\n  }\n  return true;\n}\n\nvoid chebyshevFit() {\n  for (fit = 0; fit &lt; n; fit++) {\n    if (testFit()) {\n      return;\n    }\n  }\n}\n\ndouble chebyshevCalc(double t) {\n  memset(t3, 0, sizeof(t3));\n  t3[0] = 1;\n  t3[1] = t;\n  double ret = 0;\n  for (int i = 2; i &lt;= fit; i++) {\n    t3[i] = 2 * t * t3[i - 1] - t3[i - 2];\n  }\n  for (int i = 0; i &lt;= fit; i++) {\n    ret += t3[i] * t2[i];\n  }\n  return ret;\n}\n\nint main() {\n  scanf(\"%d%d\", &amp;n, &amp;m);\n  if (n &lt;= THRESHOLD_N) {\n    inputXY();\n    newtonNT();\n    fit = newtonFit();\n    printf(\"%d\\n\", fit);\n    for (int i = 0; i &lt; m; i++) {\n      double t;\n      scanf(\"%lf\", &amp;t);\n      printf(\"%lf\\n\", newtonCalc(t));\n    }\n  } else {\n    inputXY();\n    chebyshevScale();\n    chebyshevFit();\n    printf(\"%d\\n\", fit);\n    for (int i = 0; i &lt; m; i++) {\n      double t;\n      scanf(\"%lf\", &amp;t);\n      t = (2 * t * CHEBYSHEV_SCALE - max - min) / (max - min);\n      printf(\"%lf\\n\", chebyshevCalc(t));\n    }\n  }\n  return 0;\n}\n</code></pre> # \u72b6\u6001 \u65f6\u95f4 \u5185\u5b58 1 Accepted 0 ms 788 KB 2 Accepted 0 ms 768 KB 3 Accepted 0 ms 760 KB 4 Accepted 0 ms 768 KB 5 Accepted 0 ms 772 KB 6 Accepted 0 ms 1000 KB 7 Accepted 4 ms 788 KB 8 Accepted 40 ms 896 KB 9 Accepted 940 ms 772 KB 10 Accepted 872 ms 888 KB"},{"location":"coursework/daa/ans/2023209/","title":"\u5c0f\u660e\u7684\u706b\u8f66\u65c5\u884c\u8ba1\u5212","text":""},{"location":"coursework/daa/ans/2023209/#\u5c0f\u660e\u7684\u706b\u8f66\u65c5\u884c\u8ba1\u5212","title":"\u5c0f\u660e\u7684\u706b\u8f66\u65c5\u884c\u8ba1\u5212","text":"<p>\u8fd9\u9053\u9898\u76ee\u770b\u8d77\u6765\u662f\u4e00\u9053\u7ecf\u5178\u7684\u52a8\u6001\u89c4\u5212\u9898\u76ee\u3002\u6700\u57fa\u7840\u7684\u52a8\u6001\u89c4\u5212\u80fd\u8fc7\u524d 8 \u4e2a\u70b9\u3002\u4f46\u662f\u5bf9\u4e8e\u540e\u4e24\u4e2a\u70b9\u5c31\u6ca1\u90a3\u4e48\u7b80\u5355\u4e86\u3002</p> <p>\u4f46\u662f\uff0c\u5b83\u5e76\u4e0d\u662f\u4e00\u9053\u52a8\u6001\u89c4\u5212\u9898\u76ee\uff01\u6211\u4eec\u76f4\u63a5\u7528\u6df1\u5ea6\u4f18\u5148\u904d\u5386\u5c31\u53ef\u4ee5\u8fc7\u4e86\uff01\u6211\u4eec\u5bf9\u6bcf\u4e2a\u70b9\u9012\u5f52\u5730\u904d\u5386\u5373\u53ef\uff0c\u540c\u65f6\u8fdb\u884c\u526a\u679d\u3002\u526a\u679d\u7684\u65b9\u6cd5\u662f\uff0c\u5982\u679c\u5f53\u524d\u7684\u65f6\u95f4\u548c\u82b1\u8d39\u90fd\u6bd4\u5df2\u77e5\u53c2\u91cf\u8981\u5dee\uff0c\u5c31\u4e0d\u7528\u904d\u5386\u4e86\uff1b\u5426\u5219\u66f4\u65b0\u5df2\u77e5\u53c2\u91cf\uff0c\u7ee7\u7eed\u904d\u5386\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u8fc7\u4e86\u3002</p> <p>\u5f53\u7136\uff0c\u8fd9\u4e5f\u6709\u53ef\u80fd\u662f\u4e00\u79cd\u6295\u673a\u53d6\u5de7\u7684\u65b9\u6cd5\uff0c\u56e0\u4e3a\u8fd9\u9053\u9898\u7684\u5185\u5b58\u9650\u5236\u662f 20000 KB\uff0c\u800c\u6211\u4eec\u7684\u7a0b\u5e8f\u7684\u5185\u5b58\u5360\u7528\u662f 5020 KB\uff0c\u6240\u4ee5\u8fd9\u9053\u9898\u7a76\u7adf\u662f\u4e0d\u662f\u4e00\u9053\u52a8\u6001\u89c4\u5212\u9898\u76ee\uff0c\u6211\u4e5f\u4e0d\u77e5\u9053\u3002</p> <pre><code>#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;queue&gt;\n#include &lt;vector&gt;\n\nint n, m;\nint src, dest, limit;\nint tTime = 0, tCost = 0, mCost = 0x3f3f3f3f;\n\nstruct Path {\n  int dest;\n  int time;\n  int cost;\n};\n\nstruct Node {\n  std::vector&lt;Path&gt; path;\n};\n\nvoid dfs(std::vector&lt;Node&gt; &amp;graph, std::vector&lt;int&gt; &amp;time,\n         std::vector&lt;int&gt; &amp;cost, std::vector&lt;bool&gt; &amp;visited, int s) {\n  if (s == dest) {\n    if (tCost &lt; mCost) {\n      mCost = tCost;\n    }\n    return;\n  }\n  for (int i = 0; i &lt; graph[s].path.size(); i++) {\n    int to = graph[s].path[i].dest, t = graph[s].path[i].time,\n        c = graph[s].path[i].cost;\n    if (tTime + t &gt; limit) {\n      continue;\n    }\n    if (tTime + t &gt;= time[to] &amp;&amp; tCost + c &gt;= cost[to]) {\n      continue;\n    } else if (tTime + t &gt;= time[to]) {\n      time[to] = tTime + t;\n    } else {\n      time[to] = tTime + t;\n      cost[to] = tCost + c;\n    }\n    if (visited[to]) {\n      continue;\n    }\n    tTime += t;\n    tCost += c;\n    visited[to] = true;\n    dfs(graph, time, cost, visited, to);\n    tTime -= t;\n    tCost -= c;\n    visited[to] = false;\n  }\n}\n\nint main() {\n  scanf(\"%d%d\", &amp;n, &amp;m);\n  std::vector&lt;Node&gt; graph(n);\n  for (int i = 0; i &lt; m; i++) {\n    int from, to, t, c;\n    scanf(\"%d%d%d%d\", &amp;from, &amp;to, &amp;t, &amp;c);\n    graph[from].path.push_back({to, t, c});\n  }\n  scanf(\"%d%d%d\", &amp;src, &amp;dest, &amp;limit);\n  std::vector&lt;int&gt; time(n, 0x3f3f3f3f);\n  std::vector&lt;int&gt; cost(n, 0x3f3f3f3f);\n  std::vector&lt;bool&gt; visited(n, false);\n  visited[src] = true;\n  dfs(graph, time, cost, visited, src);\n  printf(\"%d\\n\", mCost == 0x3f3f3f3f ? -1 : mCost);\n  return 0;\n}\n</code></pre> # \u72b6\u6001 \u65f6\u95f4 \u5185\u5b58 1 Accepted 0 ms 916 KB 2 Accepted 0 ms 916 KB 3 Accepted 0 ms 936 KB 4 Accepted 0 ms 980 KB 5 Accepted 0 ms 964 KB 6 Accepted 4 ms 1228 KB 7 Accepted 20 ms 1844 KB 8 Accepted 16 ms 1848 KB 9 Accepted 16 ms 2112 KB 10 Accepted 248 ms 5020 KB"},{"location":"coursework/daa/ans/2023210/","title":"\u5f20\u91cf\u76f8\u4e58\u7684\u6700\u5c0f\u5f00\u9500\u95ee\u9898","text":""},{"location":"coursework/daa/ans/2023210/#\u5f20\u91cf\u76f8\u4e58\u7684\u6700\u5c0f\u5f00\u9500\u95ee\u9898","title":"\u5f20\u91cf\u76f8\u4e58\u7684\u6700\u5c0f\u5f00\u9500\u95ee\u9898","text":"<p>\u76f4\u63a5\u6839\u636e\u5b9a\u4e49\u8ba1\u7b97\uff0c\u7565\u5fae\u505a\u4e00\u4e9b\u4f18\u5316\u5373\u53ef\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(n^3)\\)\uff0c\u7ecf\u8fc7\u4f18\u5316\u540e\u8fd8\u662f\u53ef\u4ee5\u5728 3000 ms \u5185\u5b8c\u6210\u7684\u3002</p> <pre><code>#include &lt;cstdio&gt;\n\nint n = 0, k = 0;\n\nunsigned int firstK_2D[2001] = {0};\nunsigned int last2D[2001] = {0};\nunsigned int Dj[32] = {0};\nunsigned int temp[2001] = {0};\nunsigned int dp[2001][2001] = {0};\nunsigned int dpDj[2001] = {0};\n\nvoid input() {\n  scanf(\"%u%u\", &amp;n, &amp;k);\n  for (auto i = 1; i &lt;= n; i++) {\n    for (auto j = 0; j &lt; k - 2; j++) {\n      unsigned int tempDj = 0;\n      scanf(\"%u\", &amp;tempDj);\n      if (tempDj != 1) {\n        firstK_2D[i] += (1u &lt;&lt; j);\n        Dj[j] = tempDj;\n      }\n    }\n    scanf(\"%u%u\", &amp;last2D[i - 1], &amp;last2D[i]);\n  }\n}\n\nvoid calculateDpDj(int i) {\n  for (auto j = 1; j &lt;= i; j++) {\n    temp[j] |= firstK_2D[i];\n    dpDj[j] = 1;\n    for (auto l = 0; l &lt; k - 2; l++) {\n      if (temp[j] &amp; (1u &lt;&lt; l)) {\n        dpDj[j] *= Dj[l];\n      }\n    }\n    dpDj[j] *= last2D[j - 1] * last2D[i];\n  }\n}\n\nvoid updateDp(int i) {\n  for (auto j = i - 1; j &gt;= 1; j--) {\n    for (auto l = j; l &lt; i; l++) {\n      dp[j][i] = dp[j][i] &gt; dp[j][l] + dp[l + 1][i] + dpDj[j] * last2D[l] ||\n                         dp[j][i] == 0\n                     ? dp[j][l] + dp[l + 1][i] + dpDj[j] * last2D[l]\n                     : dp[j][i];\n    }\n  }\n}\n\nint main() {\n  input();\n  for (auto i = 1; i &lt;= n; i++) {\n    calculateDpDj(i);\n    updateDp(i);\n  }\n  printf(\"%u\\n\", dp[1][n]);\n  return 0;\n}\n</code></pre> # \u72b6\u6001 \u65f6\u95f4 \u5185\u5b58 1 Accepted 0 ms 780 KB 2 Accepted 0 ms 828 KB 3 Accepted 36 ms 3332 KB 4 Accepted 0 ms 792 KB 5 Accepted 36 ms 3344 KB 6 Accepted 0 ms 896 KB 7 Accepted 36 ms 3348 KB 8 Accepted 36 ms 3344 KB 9 Accepted 2560 ms 12988 KB 10 Accepted 2560 ms 12988 KB"},{"location":"doc/","title":"\u6587\u6863\u7f16\u8f91 - \u76ee\u5f55","text":""},{"location":"doc/#\u6587\u6863\u7f16\u8f91---\u76ee\u5f55","title":"\u6587\u6863\u7f16\u8f91 - \u76ee\u5f55","text":"<ul> <li>\u683c\u5f0f<ul> <li>\u5b57\u7b26</li> </ul> </li> <li> Markdown<ul> <li> Material for MkDocs</li> <li> Docusaurus</li> </ul> </li> <li>Typst</li> <li>\\(\\LaTeX\\)</li> </ul>"},{"location":"doc/latex/","title":"LaTeX","text":""},{"location":"doc/latex/#latex","title":"LaTeX","text":"<p>LaTeX\uff08/\u02c8l\u0251\u02d0t\u025bx/\uff0c\u5199\u4f5c \\(\\LaTeX\\)\uff09\u662f\u4e00\u79cd\u57fa\u4e8e \\(\\TeX\\) \u7684\u6392\u7248\u7cfb\u7edf\uff0c\u7531\u7f8e\u56fd\u8ba1\u7b97\u673a\u79d1\u5b66\u5bb6\u83b1\u65af\u5229\u00b7\u5170\u4f2f\u7279\uff08Leslie Lamport\uff09\u5728 20 \u4e16\u7eaa 80 \u5e74\u4ee3\u521d\u671f\u5f00\u53d1\uff0c\u5229\u7528\u8fd9\u79cd\u683c\u5f0f\uff0c\u5373\u4f7f\u4f7f\u7528\u8005\u6ca1\u6709\u6392\u7248\u548c\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u77e5\u8bc6\u4e5f\u53ef\u4ee5\u5145\u5206\u53d1\u6325\u7531 \\(\\TeX\\) \u6240\u63d0\u4f9b\u7684\u5f3a\u5927\u529f\u80fd\uff0c\u80fd\u5728\u51e0\u5929\uff0c\u751a\u81f3\u51e0\u5c0f\u65f6\u5185\u751f\u6210\u5f88\u591a\u5177\u6709\u4e66\u7c4d\u8d28\u91cf\u7684\u5370\u5237\u54c1\u3002</p>"},{"location":"doc/latex/#\u57fa\u672c\u7ed3\u6784","title":"\u57fa\u672c\u7ed3\u6784","text":"\u57fa\u672c\u7ed3\u6784<pre><code>\\documentclass{article}\n\n\\usepackage{ctex}\n\n\\title{\u6807\u9898}\n\\author{\u4f5c\u8005}\n\\date{\u65e5\u671f}\n\n\\begin{document}\n\n\\maketitle\n\n\\tableofcontents\n\n\\section{\u6807\u9898}\n\n\u6bb5\u843d\n\n\\subsection{\u6807\u9898}\n\n\u6bb5\u843d\n\n\\end{document}\n</code></pre>"},{"location":"doc/latex/basic/","title":"\u57fa\u672c\u6587\u5b57\u5904\u7406","text":""},{"location":"doc/latex/basic/#\u57fa\u672c\u6587\u5b57\u5904\u7406","title":"\u57fa\u672c\u6587\u5b57\u5904\u7406","text":"<p>\\(\\LaTeX\\) \u6587\u5b57\u6392\u7248\u80fd\u529b\u5f88\u5f3a\u3002</p>"},{"location":"doc/latex/basic/#\u5b57\u4f53","title":"\u5b57\u4f53","text":"<p>\\(\\LaTeX\\) \u5b57\u4f53\u5206\u4e3a\u4e09\u79cd\u65cf\uff1a\u7f57\u9a6c\u65cf\u3001\u65e0\u886c\u7ebf\u65cf\u548c\u6253\u5b57\u673a\u65cf\u3002</p>"},{"location":"doc/latex/basic/#\u7f57\u9a6c\u65cf","title":"\u7f57\u9a6c\u65cf","text":"<p>\u7f57\u9a6c\u65cf\u662f\u6700\u5e38\u7528\u7684\u5b57\u4f53\u65cf\uff0c\u5b83\u5305\u542b\u4e86\u659c\u4f53\u548c\u7c97\u4f53\u3002</p> \u7f57\u9a6c\u65cf<pre><code>\\textnormal{Normal}\n\\textit{Italic}\n\\textbf{Bold}\n\\textit{\\textbf{Bold Italic}}\n</code></pre> Normal Italic Bold"},{"location":"doc/latex/basic/#\u65e0\u886c\u7ebf\u65cf","title":"\u65e0\u886c\u7ebf\u65cf","text":"<p>\u65e0\u886c\u7ebf\u65cf\u662f\u6ca1\u6709\u886c\u7ebf\u7684\u5b57\u4f53\uff0c\u5b83\u5305\u542b\u4e86\u659c\u4f53\u548c\u7c97\u4f53\u3002</p> \u65e0\u886c\u7ebf\u65cf<pre><code>\\textsf{Sans Serif}\n</code></pre> Sans Serif"},{"location":"doc/latex/basic/#\u6253\u5b57\u673a\u65cf","title":"\u6253\u5b57\u673a\u65cf","text":"<p>\u6253\u5b57\u673a\u65cf\u662f\u7b49\u5bbd\u5b57\u4f53\uff0c\u5b83\u5305\u542b\u4e86\u659c\u4f53\u548c\u7c97\u4f53\u3002</p> \u6253\u5b57\u673a\u65cf<pre><code>\\texttt{Typewriter}\n</code></pre> Typewriter"},{"location":"doc/latex/basic/#\u4e2d\u6587\u5b57\u4f53","title":"\u4e2d\u6587\u5b57\u4f53","text":"<p>\u4e2d\u6587\u5b57\u4f53\u9700\u8981\u4f7f\u7528 <code>ctex</code> \u5b8f\u5305\u3002</p> \u4e2d\u6587\u5b57\u4f53<pre><code>\\usepackage{ctex}\n</code></pre> <p>\u7f16\u8bd1\u65f6\u9700\u8981\u4f7f\u7528 <code>XeLaTeX</code>\u3002</p>"},{"location":"doc/latex/basic/#\u5b57\u4f53\u5927\u5c0f","title":"\u5b57\u4f53\u5927\u5c0f","text":"\u5b57\u4f53\u5927\u5c0f<pre><code>normalsize words\n{\\tiny tiny words}\n{\\scriptsize scriptsize words}\n{\\footnotesize footnotesize words}\n{\\small small words}\n{\\normalsize normalsize words}\n{\\large large words}\n{\\Large Large words}\n{\\LARGE LARGE words}\n{\\huge huge words}\n{\\Huge Huge words}\n</code></pre> normalsize words tiny words scriptsize words footnotesize words small words normalsize words large words Large words LARGE words huge words Huge words"},{"location":"doc/latex/formula/","title":"\u516c\u5f0f","text":""},{"location":"doc/latex/formula/#\u516c\u5f0f","title":"\u516c\u5f0f","text":"<p>\u5728 \\(\\LaTeX\\) \u4e2d\uff0c\u516c\u5f0f\u662f\u7528 <code>$</code> \u5305\u88f9\u8d77\u6765\u7684\uff0c\u6bd4\u5982 <code>$x^2$</code>\u3002\u5982\u679c\u60f3\u8981\u5355\u72ec\u663e\u793a\u516c\u5f0f\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>$$</code> \u6216\u8005 <code>\\[\\]</code>\uff0c\u6bd4\u5982 <code>$$x^2$$</code> \u6216\u8005 <code>\\[\\]x^2\\[\\]</code>\u3002</p>"},{"location":"doc/latex/formula/#\u57fa\u672c\u516c\u5f0f","title":"\u57fa\u672c\u516c\u5f0f","text":""},{"location":"doc/latex/formula/#\u4e0a\u4e0b\u6807","title":"\u4e0a\u4e0b\u6807","text":"<p>\u4e0a\u6807\u548c\u4e0b\u6807\u53ef\u4ee5\u4f7f\u7528 <code>^</code> \u548c <code>_</code> \u8868\u793a\uff0c\u5982\u679c\u4e0a\u4e0b\u6807\u7684\u5185\u5bb9\u4e0d\u6b62\u4e00\u4e2a\u5b57\u7b26\uff0c\u9700\u8981\u7528 <code>{}</code> \u5305\u88f9\u8d77\u6765\u3002</p> \u4e0a\u4e0b\u6807<pre><code>x^2, x_2\n</code></pre> x 2 , x 2"},{"location":"doc/latex/formula/#\u5206\u5f0f","title":"\u5206\u5f0f","text":"<p>\u5206\u5f0f\u53ef\u4ee5\u4f7f\u7528 <code>\\frac{\u5206\u5b50}{\u5206\u6bcd}</code> \u8868\u793a\u3002</p> \u5206\u5f0f<pre><code>\\frac{1}{2}\n</code></pre> 1 2"},{"location":"doc/latex/formula/#\u6839\u5f0f","title":"\u6839\u5f0f","text":"<p>\u6839\u5f0f\u53ef\u4ee5\u4f7f\u7528 <code>\\sqrt[\u6839\u6b21]{\u88ab\u5f00\u65b9\u6570}</code> \u8868\u793a\u3002</p> \u6839\u5f0f<pre><code>\\sqrt{2}, \\sqrt[3]{2}\n</code></pre> 2 , 2 3"},{"location":"doc/latex/formula/#\u79ef\u5206\u4e0e\u6c42\u548c","title":"\u79ef\u5206\u4e0e\u6c42\u548c","text":"<p>\u79ef\u5206\u548c\u6c42\u548c\u53ef\u4ee5\u4f7f\u7528 <code>\\int</code> \u548c <code>\\sum</code> \u8868\u793a\u3002\u5bf9\u4e8e\u5355\u72ec\u663e\u793a\u7684\u516c\u5f0f\uff0c<code>_</code> \u548c <code>^</code> \u4f1a\u81ea\u52a8\u627e\u5230\u5b83\u4eec\u5bf9\u5e94\u7684\u4f4d\u7f6e\u3002</p> \u79ef\u5206<pre><code>\\int_{-\\infty}^{+\\infty} e^{-x^2} dx\n</code></pre> \u222b \u2212 \u221e + \u221e e \u2212 x 2 d x \u6c42\u548c<pre><code>\\sum_{i=1}^{n} i\n</code></pre> \u2211 i = 1 n i"},{"location":"doc/latex/formula/#\u6781\u9650","title":"\u6781\u9650","text":"<p>\u6781\u9650\u53ef\u4ee5\u4f7f\u7528 <code>\\lim_{x \\to \\infty}</code> \u8868\u793a\u3002</p> \u6781\u9650<pre><code>\\lim_{x \\to \\infty} \\frac{1}{x}\n</code></pre> lim x \u2192 \u221e 1 x"},{"location":"doc/latex/formula/#\u77e9\u9635","title":"\u77e9\u9635","text":"<p>\u77e9\u9635\u53ef\u4ee5\u4f7f\u7528 <code>matrix</code>\u3001<code>pmatrix</code>\u3001<code>bmatrix</code>\u3001<code>Bmatrix</code>\u3001<code>vmatrix</code>\u3001<code>Vmatrix</code> \u7b49\u73af\u5883\u8868\u793a\uff0c\u5176\u4e2d\u5e26\u62ec\u53f7\u7684\u77e9\u9635\u4e5f\u53ef\u4ee5\u4f7f\u7528 <code>\\left</code> \u548c <code>\\right</code> \u52a0\u4e0a\u62ec\u53f7\u8868\u793a\u3002</p> \u77e9\u9635<pre><code>\\begin{matrix}\n    1 &amp; 2 &amp; 3 \\\\\n    4 &amp; 5 &amp; 6 \\\\\n    7 &amp; 8 &amp; 9\n\\end{matrix}\n</code></pre> 1 2 3 4 5 6 7 8 9 \u5706\u62ec\u53f7\u77e9\u9635<pre><code>\\begin{pmatrix}\n    1 &amp; 2 &amp; 3 \\\\\n    4 &amp; 5 &amp; 6 \\\\\n    7 &amp; 8 &amp; 9\n\\end{pmatrix}\n</code></pre> ( 1 2 3 4 5 6 7 8 9 ) \u65b9\u62ec\u53f7\u77e9\u9635<pre><code>\\begin{bmatrix}\n    1 &amp; 2 &amp; 3 \\\\\n    4 &amp; 5 &amp; 6 \\\\\n    7 &amp; 8 &amp; 9\n\\end{bmatrix}\n</code></pre> [ 1 2 3 4 5 6 7 8 9 ] \u5927\u62ec\u53f7\u77e9\u9635<pre><code>\\begin{Bmatrix}\n    1 &amp; 2 &amp; 3 \\\\\n    4 &amp; 5 &amp; 6 \\\\\n    7 &amp; 8 &amp; 9\n\\end{Bmatrix}\n</code></pre> { 1 2 3 4 5 6 7 8 9 } \u5355\u7ad6\u7ebf\u77e9\u9635<pre><code>\\begin{vmatrix}\n    1 &amp; 2 &amp; 3 \\\\\n    4 &amp; 5 &amp; 6 \\\\\n    7 &amp; 8 &amp; 9\n\\end{vmatrix}\n</code></pre> | 1 2 3 4 5 6 7 8 9 | \u53cc\u7ad6\u7ebf\u77e9\u9635<pre><code>\\begin{Vmatrix}\n    1 &amp; 2 &amp; 3 \\\\\n    4 &amp; 5 &amp; 6 \\\\\n    7 &amp; 8 &amp; 9\n\\end{Vmatrix}\n</code></pre> \u2016 1 2 3 4 5 6 7 8 9 \u2016 \u5e26\u62ec\u53f7\u77e9\u9635\u7684\u53e6\u4e00\u79cd\u8868\u793a<pre><code>\\left(\n\\begin{matrix}\n    1 &amp; 2 &amp; 3 \\\\\n    4 &amp; 5 &amp; 6 \\\\\n    7 &amp; 8 &amp; 9\n\\end{matrix}\n\\right)\n</code></pre> ( 1 2 3 4 5 6 7 8 9 )"},{"location":"doc/latex/formula/#\u5e0c\u814a\u5b57\u6bcd","title":"\u5e0c\u814a\u5b57\u6bcd","text":"<p>\u5728 \\(\\LaTeX\\) \u4e2d\uff0c\u5e0c\u814a\u5b57\u6bcd\u662f\u7528 <code>\\</code> \u52a0\u4e0a\u5b57\u6bcd\u7684\u5c0f\u5199\u6216\u8005\u5927\u5199\u5f62\u5f0f\u8868\u793a\u7684\uff0c\u6bd4\u5982 <code>\\delta</code> \u6216\u8005 <code>\\Delta</code>\u3002\u6709\u7684\u5e0c\u814a\u5b57\u6bcd\u6709\u591a\u79cd\u5f62\u5f0f\uff0c\u6bd4\u5982 <code>\\epsilon</code> \u548c <code>\\varepsilon</code>\uff0c<code>\\phi</code> \u548c <code>\\varphi</code>\u3002</p> LaTeX \\(\\LaTeX\\) LaTeX \\(\\LaTeX\\) LaTeX \\(\\LaTeX\\) <code>\\alpha</code> \\(\\alpha\\) <code>\\beta</code> \\(\\beta\\) <code>\\gamma</code> \\(\\gamma\\) <code>\\delta</code> \\(\\delta\\) <code>\\epsilon</code> \\(\\epsilon\\) <code>\\zeta</code> \\(\\zeta\\) <code>\\eta</code> \\(\\eta\\) <code>\\theta</code> \\(\\theta\\) <code>\\iota</code> \\(\\iota\\) <code>\\kappa</code> \\(\\kappa\\) <code>\\lambda</code> \\(\\lambda\\) <code>\\mu</code> \\(\\mu\\) <code>\\nu</code> \\(\\nu\\) <code>\\xi</code> \\(\\xi\\) <code>\\pi</code> \\(\\pi\\) <code>\\rho</code> \\(\\rho\\) <code>\\sigma</code> \\(\\sigma\\) <code>\\tau</code> \\(\\tau\\) <code>\\upsilon</code> \\(\\upsilon\\) <code>\\phi</code> \\(\\phi\\) <code>\\chi</code> \\(\\chi\\) <code>\\psi</code> \\(\\psi\\) <code>\\omega</code> \\(\\omega\\) <code>\\Gamma</code> \\(\\Gamma\\) <code>\\Delta</code> \\(\\Delta\\) <code>\\Theta</code> \\(\\Theta\\) <code>\\Lambda</code> \\(\\Lambda\\) <code>\\Xi</code> \\(\\Xi\\) <code>\\Pi</code> \\(\\Pi\\) <code>\\Sigma</code> \\(\\Sigma\\) <code>\\Upsilon</code> \\(\\Upsilon\\) <code>\\Phi</code> \\(\\Phi\\) <code>\\Psi</code> \\(\\Psi\\) <code>\\Omega</code> \\(\\Omega\\) <code>\\varepsilon</code> \\(\\varepsilon\\) <code>\\vartheta</code> \\(\\vartheta\\) <code>\\varpi</code> \\(\\varpi\\) <code>\\varrho</code> \\(\\varrho\\) <code>\\varsigma</code> \\(\\varsigma\\) <code>\\varphi</code> \\(\\varphi\\)"},{"location":"doc/latex/formula/#\u8fd0\u7b97\u7b26","title":"\u8fd0\u7b97\u7b26","text":""},{"location":"doc/latex/formula/#\u64cd\u4f5c\u7b26","title":"\u64cd\u4f5c\u7b26","text":"LaTeX \\(\\LaTeX\\) LaTeX \\(\\LaTeX\\) LaTeX \\(\\LaTeX\\) <code>\\pm</code> \\(\\pm\\) <code>\\mp</code> \\(\\mp\\) <code>\\times</code> \\(\\times\\) <code>\\div</code> \\(\\div\\) <code>\\cdot</code> \\(\\cdot\\) <code>\\ast</code> \\(\\ast\\) <code>\\star</code> \\(\\star\\) <code>\\dagger</code> \\(\\dagger\\) <code>\\ddagger</code> \\(\\ddagger\\) <code>\\amalg</code> \\(\\amalg\\) <code>\\cap</code> \\(\\cap\\) <code>\\cup</code> \\(\\cup\\) <code>\\uplus</code> \\(\\uplus\\) <code>\\sqcap</code> \\(\\sqcap\\) <code>\\sqcup</code> \\(\\sqcup\\) <code>\\vee</code> \\(\\vee\\) <code>\\wedge</code> \\(\\wedge\\) <code>\\oplus</code> \\(\\oplus\\) <code>\\ominus</code> \\(\\ominus\\) <code>\\otimes</code> \\(\\otimes\\) <code>\\circ</code> \\(\\circ\\) <code>\\bullet</code> \\(\\bullet\\) <code>\\diamond</code> \\(\\diamond\\) <code>\\lhd</code> \\(\\lhd\\) <code>\\rhd</code> \\(\\rhd\\) <code>\\unlhd</code> \\(\\unlhd\\) <code>\\unrhd</code> \\(\\unrhd\\) <code>\\oslash</code> \\(\\oslash\\) <code>\\odot</code> \\(\\odot\\) <code>\\bigcirc</code> \\(\\bigcirc\\) <code>\\triangleleft</code> \\(\\triangleleft\\) <code>\\Diamond</code> \\(\\Diamond\\) <code>\\bigtriangleup</code> \\(\\bigtriangleup\\) <code>\\bigtriangledown</code> \\(\\bigtriangledown\\) <code>\\Box</code> \\(\\Box\\) <code>\\triangleright</code> \\(\\triangleright\\) <code>\\setminus</code> \\(\\setminus\\) <code>\\wr</code> \\(\\wr\\) <code>\\triangledown</code> \\(\\triangledown\\)"},{"location":"doc/latex/formula/#\u5173\u7cfb\u7b26","title":"\u5173\u7cfb\u7b26","text":"LaTeX \\(\\LaTeX\\) LaTeX \\(\\LaTeX\\) LaTeX \\(\\LaTeX\\) <code>\\leq</code> \\(\\leq\\) <code>\\geq</code> \\(\\geq\\) <code>\\neq</code> \\(\\neq\\) <code>\\sim</code> \\(\\sim\\) <code>\\ll</code> \\(\\ll\\) <code>\\gg</code> \\(\\gg\\) <code>\\doteq</code> \\(\\doteq\\) <code>\\simeq</code> \\(\\simeq\\) <code>\\subset</code> \\(\\subset\\) <code>\\supset</code> \\(\\supset\\) <code>\\approx</code> \\(\\approx\\) <code>\\asymp</code> \\(\\asymp\\) <code>\\subseteq</code> \\(\\subseteq\\) <code>\\supseteq</code> \\(\\supseteq\\) <code>\\cong</code> \\(\\cong\\) <code>\\smile</code> \\(\\smile\\) <code>\\sqsubset</code> \\(\\sqsubset\\) <code>\\sqsupset</code> \\(\\sqsupset\\) <code>\\equiv</code> \\(\\equiv\\) <code>\\frown</code> \\(\\frown\\) <code>\\sqsubseteq</code> \\(\\sqsubseteq\\) <code>\\sqsupseteq</code> \\(\\sqsupseteq\\) <code>\\propto</code> \\(\\propto\\) <code>\\bowtie</code> \\(\\bowtie\\) <code>\\in</code> \\(\\in\\) <code>\\ni</code> \\(\\ni\\) <code>\\prec</code> \\(\\prec\\) <code>\\succ</code> \\(\\succ\\) <code>\\vdash</code> \\(\\vdash\\) <code>\\dashv</code> \\(\\dashv\\) <code>\\preceq</code> \\(\\preceq\\) <code>\\succeq</code> \\(\\succeq\\) <code>\\models</code> \\(\\models\\) <code>\\perp</code> \\(\\perp\\) <code>\\parallel</code> \\(\\parallel\\) <code>\\mid</code> \\(\\mid\\) <code>\\bumpeq</code> \\(\\bumpeq\\)"},{"location":"doc/latex/formula/#\u5426\u5b9a","title":"\u5426\u5b9a","text":"LaTeX \\(\\LaTeX\\) LaTeX \\(\\LaTeX\\) LaTeX \\(\\LaTeX\\) <code>\\nless</code> \\(\\nless\\) <code>\\ngtr</code> \\(\\ngtr\\) <code>\\neq</code> \\(\\neq\\) <code>\\nmid</code> \\(\\nmid\\) <code>\\nleq</code> \\(\\nleq\\) <code>\\ngeq</code> \\(\\ngeq\\) <code>\\nsim</code> \\(\\nsim\\) <code>\\ncong</code> \\(\\ncong\\) <code>\\nparallel</code> \\(\\nparallel\\) <code>\\nprec</code> \\(\\nprec\\) <code>\\nsucc</code> \\(\\nsucc\\) <code>\\nvdash</code> \\(\\nvdash\\) <code>\\lneq</code> \\(\\lneq\\) <code>\\gneq</code> \\(\\gneq\\) <code>\\nsubseteq</code> \\(\\nsubseteq\\) <code>\\lneqq</code> \\(\\lneqq\\) <code>\\gneqq</code> \\(\\gneqq\\) <code>\\nsupseteq</code> \\(\\nsupseteq\\) <code>\\lnsim</code> \\(\\lnsim\\) <code>\\gnsim</code> \\(\\gnsim\\)"},{"location":"doc/markdown/","title":"Markdown","text":""},{"location":"doc/markdown/#markdown","title":"Markdown","text":"<p>Markdown \u662f\u4e00\u79cd\u8f7b\u91cf\u7ea7\u6807\u8bb0\u8bed\u8a00\uff0c\u521b\u59cb\u4eba\u4e3a\u7ea6\u7ff0\u00b7\u683c\u9c81\u4f2f\u3002\u5b83\u5141\u8bb8\u4eba\u4eec\u4f7f\u7528\u6613\u8bfb\u6613\u5199\u7684\u7eaf\u6587\u672c\u683c\u5f0f\u7f16\u5199\u6587\u6863\uff0c\u7136\u540e\u8f6c\u6362\u6210\u6709\u6548\u7684XHTML\uff08\u6216\u8005HTML\uff09\u6587\u6863\u3002\u8fd9\u79cd\u8bed\u8a00\u5438\u6536\u4e86\u5f88\u591a\u5728\u7535\u5b50\u90ae\u4ef6\u4e2d\u5df2\u6709\u7684\u7eaf\u6587\u672c\u6807\u8bb0\u7684\u7279\u6027\u3002</p> <p>\u7531\u4e8e Markdown \u7684\u8f7b\u91cf\u5316\u3001\u6613\u8bfb\u6613\u5199\u7279\u6027\uff0c\u5e76\u4e14\u5bf9\u4e8e\u56fe\u7247\uff0c\u56fe\u8868\u3001\u6570\u5b66\u5f0f\u90fd\u6709\u652f\u6301\uff0c\u76ee\u524d\u8bb8\u591a\u7f51\u7ad9\u90fd\u5e7f\u6cdb\u4f7f\u7528 Markdown \u6765\u64b0\u5199\u5e2e\u52a9\u6587\u6863\u6216\u662f\u7528\u4e8e\u8bba\u575b\u4e0a\u53d1\u8868\u6d88\u606f\u3002\u5982 GitHub\u3001Reddit\u3001Discord\u3001Diaspora\u3001Stack Exchange\u3001OpenStreetMap\u3001SourceForge\u3001\u7b80\u4e66\u7b49\uff0c\u751a\u81f3\u8fd8\u80fd\u88ab\u7528\u6765\u64b0\u5199\u7535\u5b50\u4e66\u3002</p> <p>\u7531\u4e8e Markdown \u517c\u5bb9 HTML \u8bed\u6cd5\uff0c\u4e14\u5728 Markdown \u4e2d\u53ef\u4ee5\u76f4\u63a5\u63d2\u5165 HTML \u4ee3\u7801\uff0c\u56e0\u6b64 Markdown \u5177\u6709\u6781\u5f3a\u7684\u6269\u5c55\u6027\u3002</p>"},{"location":"doc/markdown/#\u57fa\u672c\u7ed3\u6784","title":"\u57fa\u672c\u7ed3\u6784","text":"<p>Markdown \u6587\u6863\u6ca1\u4ec0\u4e48\u57fa\u672c\u7ed3\u6784\uff0c\u968f\u4fbf\u5199\u5199\u5c31\u884c\u4e86\u3002</p>"},{"location":"doc/markdown/basic/","title":"\u57fa\u672c\u8bed\u6cd5","text":""},{"location":"doc/markdown/basic/#\u57fa\u672c\u8bed\u6cd5","title":"\u57fa\u672c\u8bed\u6cd5","text":"<p>Markdown \u539f\u751f\u8bed\u6cd5\u5176\u5b9e\u5f88\u5c11\uff0c\u4e00\u5171\u53ea\u6709\u51e0\u79cd\u3002</p> <p>\u4ee5\u4e0b\u6240\u6709\u5185\u5bb9\u5747\u53ef\u4ee5\u7528 HTML \u8bed\u6cd5\u5b9e\u73b0\uff0c\u4f46 Markdown \u8bed\u6cd5\u66f4\u52a0\u7b80\u6d01\uff0c\u66f4\u52a0\u6613\u8bfb\u6613\u5199\u3002</p>"},{"location":"doc/markdown/basic/#\u6807\u9898","title":"\u6807\u9898\u8fd9\u662f\u7b2c\u4e8c\u9636\u6807\u9898\u8fd9\u662f\u6807\u9898 2","text":"<p>Markdown \u652f\u6301\u4e24\u79cd\u6807\u9898\u7684\u8bed\u6cd5\uff0c\u7c7b Setext \u548c\u7c7b atx \u5f62\u5f0f\u3002</p> <p>\u7c7b Setext \u5f62\u5f0f\u662f\u7528\u5e95\u7ebf\u7684\u5f62\u5f0f\uff0c\u5229\u7528 <code>=</code> \uff08\u6700\u9ad8\u9636\u6807\u9898\uff09\u548c <code>-</code> \uff08\u7b2c\u4e8c\u9636\u6807\u9898\uff09\u3002</p> \u6807\u9898\uff08\u7c7b Setext \u5f62\u5f0f\uff09<pre><code>\u8fd9\u662f\u6700\u9ad8\u9636\u6807\u9898\n====================\n\u8fd9\u662f\u7b2c\u4e8c\u9636\u6807\u9898\n--------------------\n</code></pre> \u8fd9\u662f\u6700\u9ad8\u9636\u6807\u9898 <p>\u7c7b atx \u5f62\u5f0f\u5219\u662f\u5728\u884c\u9996\u63d2\u5165 1 \u5230 6 \u4e2a <code>#</code> \uff0c\u5bf9\u5e94\u5230\u6807\u9898 1 \u5230 6 \u9636\u3002</p> \u6807\u9898\uff08\u7c7b atx \u5f62\u5f0f\uff09<pre><code># \u8fd9\u662f\u6807\u9898 1\n## \u8fd9\u662f\u6807\u9898 2\n### \u8fd9\u662f\u6807\u9898 3\n#### \u8fd9\u662f\u6807\u9898 4\n##### \u8fd9\u662f\u6807\u9898 5\n###### \u8fd9\u662f\u6807\u9898 6\n</code></pre> \u8fd9\u662f\u6807\u9898 1 \u8fd9\u662f\u6807\u9898 3 \u8fd9\u662f\u6807\u9898 4 \u8fd9\u662f\u6807\u9898 5 \u8fd9\u662f\u6807\u9898 6"},{"location":"doc/markdown/basic/#\u6c34\u5e73\u7ebf","title":"\u6c34\u5e73\u7ebf","text":"<p>\u53ef\u4ee5\u5728\u6807\u9898\u4e0b\u9762\u6dfb\u52a0\u4e00\u6761\u6c34\u5e73\u7ebf\u3002</p> \u6c34\u5e73\u7ebf<pre><code>---\n</code></pre>"},{"location":"doc/markdown/basic/#\u6bb5\u843d","title":"\u6bb5\u843d","text":"<p>Markdown \u6bb5\u843d\u7684\u524d\u540e\u8981\u6709\u7a7a\u884c\uff0c\u6240\u8c13\u7684\u7a7a\u884c\u662f\u6307\u6ca1\u6709\u6587\u5b57\u5185\u5bb9\uff0c\u6216\u8005\u53ea\u6709\u7a7a\u767d\u7b26\uff08\u7a7a\u683c\u6216\u5236\u8868\u7b26\uff09\u7684\u884c\u3002</p> <p>\u5f53\u7136\u4e5f\u53ef\u4ee5\u5728\u6bb5\u843d\u540e\u9762\u4f7f\u7528 <code>&lt;br&gt;</code> \u6807\u7b7e\u6765\u6362\u884c\uff0c\u4f46\u662f\u8fd9\u4e2a\u5728 Markdown \u4e2d\u5e76\u4e0d\u63a8\u8350\u4f7f\u7528\u3002</p> \u6bb5\u843d<pre><code>\u8fd9\u662f\u7b2c\u4e00\u6bb5\u3002\n\n\u8fd9\u662f\u7b2c\u4e8c\u6bb5\u3002\n</code></pre> <p>\u8fd9\u662f\u7b2c\u4e00\u6bb5\u3002</p> <p>\u8fd9\u662f\u7b2c\u4e8c\u6bb5\u3002</p>"},{"location":"doc/markdown/basic/#\u6587\u672c\u683c\u5f0f\u5316","title":"\u6587\u672c\u683c\u5f0f\u5316","text":"<p>Markdown \u652f\u6301\u4ee5\u4e0b\u6587\u672c\u683c\u5f0f\u5316\u8bed\u6cd5\uff1a</p> \u6587\u672c\u683c\u5f0f\u5316<pre><code>*\u659c\u4f53*\n_\u659c\u4f53_\n**\u7c97\u4f53**\n__\u7c97\u4f53__\n***\u7c97\u659c\u4f53***\n___\u7c97\u659c\u4f53___\n~~\u5220\u9664\u7ebf~~\n</code></pre> <p>\u659c\u4f53 \u659c\u4f53 \u7c97\u4f53 \u7c97\u4f53 \u7c97\u659c\u4f53 \u7c97\u659c\u4f53 \u5220\u9664\u7ebf</p>"},{"location":"doc/markdown/basic/#\u94fe\u63a5","title":"\u94fe\u63a5","text":"<p>Markdown \u652f\u6301\u4e24\u79cd\u94fe\u63a5\u8bed\u6cd5\uff1a\u884c\u5185\u5f0f\u548c\u53c2\u8003\u5f0f\u3002</p>"},{"location":"doc/markdown/basic/#\u884c\u5185\u5f0f","title":"\u884c\u5185\u5f0f","text":"<p>\u884c\u5185\u5f0f\u94fe\u63a5\u8bed\u6cd5\u662f\u628a\u94fe\u63a5\u7684\u6587\u5b57\u7528 <code>[</code> \u548c <code>]</code> \u5305\u8d77\u6765\uff0c\u7136\u540e\u7d27\u8ddf\u7740\u5199\u4e0a\u94fe\u63a5\u7684\u5730\u5740\u3002</p> \u884c\u5185\u5f0f\u94fe\u63a5<pre><code>[Xuc Pan \u7684\u4e3b\u9875](https://www.panxuc.com)\n</code></pre> <p>Xuc Pan \u7684\u4e3b\u9875</p>"},{"location":"doc/markdown/basic/#\u53c2\u8003\u5f0f","title":"\u53c2\u8003\u5f0f","text":"<p>\u53c2\u8003\u5f0f\u94fe\u63a5\u8bed\u6cd5\u4e00\u822c\u7528\u5728\u6bd4\u8f83\u590d\u6742\u7684\u94fe\u63a5\u573a\u666f\uff0c\u5b83\u7684\u5199\u6cd5\u662f\u628a\u94fe\u63a5\u7684\u6587\u5b57\u7528 <code>[</code> \u548c <code>]</code> \u5305\u8d77\u6765\uff0c\u7136\u540e\u5728\u6587\u5b57\u7684\u540e\u9762\u518d\u52a0\u4e0a\u4e00\u4e2a <code>[\u94fe\u63a5\u6807\u8bb0]</code> \uff0c\u63a5\u7740\u5728\u6587\u4ef6\u7684\u4efb\u610f\u5904\uff0c\u53ef\u4ee5\u628a\u8fd9\u4e2a\u94fe\u63a5\u6807\u8bb0\u7684\u5730\u5740\u5b9a\u4e49\u51fa\u6765\u3002</p> \u53c2\u8003\u5f0f\u94fe\u63a5<pre><code>[Xuc Pan \u7684\u4e3b\u9875][1]\n\n[1]: https://www.panxuc.com\n</code></pre> <p>Xuc Pan \u7684\u4e3b\u9875</p>"},{"location":"doc/markdown/basic/#\u56fe\u7247","title":"\u56fe\u7247","text":"<p>Markdown \u56fe\u7247\u8bed\u6cd5\u548c\u94fe\u63a5\u8bed\u6cd5\u5f88\u50cf\uff0c\u53ea\u662f\u524d\u9762\u591a\u4e86\u4e00\u4e2a <code>!</code> \u3002</p> \u56fe\u7247<pre><code>![Xuc Pan \u7684\u5934\u50cf](https://docs.panxuc.com/assets/favicon.png)\n</code></pre> <p></p>"},{"location":"doc/markdown/basic/#\u5217\u8868","title":"\u5217\u8868","text":"<p>Markdown \u652f\u6301\u6709\u5e8f\u5217\u8868\u548c\u65e0\u5e8f\u5217\u8868\u3002</p>"},{"location":"doc/markdown/basic/#\u65e0\u5e8f\u5217\u8868","title":"\u65e0\u5e8f\u5217\u8868","text":"<p>\u65e0\u5e8f\u5217\u8868\u4f7f\u7528\u661f\u53f7\u3001\u52a0\u53f7\u6216\u662f\u51cf\u53f7\u4f5c\u4e3a\u5217\u8868\u6807\u8bb0\u3002</p> \u65e0\u5e8f\u5217\u8868<pre><code>* \u65e0\u5e8f\u5217\u8868\u9879 1\n* \u65e0\u5e8f\u5217\u8868\u9879 2\n* \u65e0\u5e8f\u5217\u8868\u9879 3\n\n+ \u65e0\u5e8f\u5217\u8868\u9879 1\n+ \u65e0\u5e8f\u5217\u8868\u9879 2\n+ \u65e0\u5e8f\u5217\u8868\u9879 3\n\n- \u65e0\u5e8f\u5217\u8868\u9879 1\n- \u65e0\u5e8f\u5217\u8868\u9879 2\n- \u65e0\u5e8f\u5217\u8868\u9879 3\n</code></pre> <ul> <li>\u65e0\u5e8f\u5217\u8868\u9879 1</li> <li>\u65e0\u5e8f\u5217\u8868\u9879 2</li> <li> <p>\u65e0\u5e8f\u5217\u8868\u9879 3</p> </li> <li> <p>\u65e0\u5e8f\u5217\u8868\u9879 1</p> </li> <li>\u65e0\u5e8f\u5217\u8868\u9879 2</li> <li> <p>\u65e0\u5e8f\u5217\u8868\u9879 3</p> </li> <li> <p>\u65e0\u5e8f\u5217\u8868\u9879 1</p> </li> <li>\u65e0\u5e8f\u5217\u8868\u9879 2</li> <li>\u65e0\u5e8f\u5217\u8868\u9879 3</li> </ul>"},{"location":"doc/markdown/basic/#\u6709\u5e8f\u5217\u8868","title":"\u6709\u5e8f\u5217\u8868","text":"<p>\u6709\u5e8f\u5217\u8868\u4f7f\u7528\u6570\u5b57\u63a5\u7740\u4e00\u4e2a\u82f1\u6587\u53e5\u70b9\u4f5c\u4e3a\u5217\u8868\u6807\u8bb0\u3002</p> \u6709\u5e8f\u5217\u8868<pre><code>1. \u6709\u5e8f\u5217\u8868\u9879 1\n2. \u6709\u5e8f\u5217\u8868\u9879 2\n3. \u6709\u5e8f\u5217\u8868\u9879 3\n</code></pre> <ol> <li>\u6709\u5e8f\u5217\u8868\u9879 1</li> <li>\u6709\u5e8f\u5217\u8868\u9879 2</li> <li>\u6709\u5e8f\u5217\u8868\u9879 3</li> </ol>"},{"location":"doc/markdown/basic/#\u5217\u8868\u5d4c\u5957","title":"\u5217\u8868\u5d4c\u5957","text":"<p>\u5217\u8868\u5d4c\u5957\u53ea\u9700\u5728\u5b50\u5217\u8868\u4e2d\u7684\u9009\u9879\u524d\u9762\u6dfb\u52a0\u7f29\u8fdb\u5373\u53ef\u3002</p> \u5217\u8868\u5d4c\u5957<pre><code>1. \u6709\u5e8f\u5217\u8868\u9879 1\n    - \u65e0\u5e8f\u5217\u8868\u9879 1\n    - \u65e0\u5e8f\u5217\u8868\u9879 2\n    - \u65e0\u5e8f\u5217\u8868\u9879 3\n2. \u6709\u5e8f\u5217\u8868\u9879 2\n    - \u65e0\u5e8f\u5217\u8868\u9879 1\n    - \u65e0\u5e8f\u5217\u8868\u9879 2\n    - \u65e0\u5e8f\u5217\u8868\u9879 3\n3. \u6709\u5e8f\u5217\u8868\u9879 3\n    - \u65e0\u5e8f\u5217\u8868\u9879 1\n    - \u65e0\u5e8f\u5217\u8868\u9879 2\n    - \u65e0\u5e8f\u5217\u8868\u9879 3\n</code></pre> <ol> <li>\u6709\u5e8f\u5217\u8868\u9879 1<ul> <li>\u65e0\u5e8f\u5217\u8868\u9879 1</li> <li>\u65e0\u5e8f\u5217\u8868\u9879 2</li> <li>\u65e0\u5e8f\u5217\u8868\u9879 3</li> </ul> </li> <li>\u6709\u5e8f\u5217\u8868\u9879 2<ul> <li>\u65e0\u5e8f\u5217\u8868\u9879 1</li> <li>\u65e0\u5e8f\u5217\u8868\u9879 2</li> <li>\u65e0\u5e8f\u5217\u8868\u9879 3</li> </ul> </li> <li>\u6709\u5e8f\u5217\u8868\u9879 3<ul> <li>\u65e0\u5e8f\u5217\u8868\u9879 1</li> <li>\u65e0\u5e8f\u5217\u8868\u9879 2</li> <li>\u65e0\u5e8f\u5217\u8868\u9879 3</li> </ul> </li> </ol>"},{"location":"doc/markdown/basic/#\u5f15\u7528","title":"\u5f15\u7528","text":"<p>Markdown \u4f7f\u7528 <code>&gt;</code> \u7b26\u53f7\u8868\u793a\u5f15\u7528\u3002</p> \u5f15\u7528<pre><code>&gt; \u8fd9\u662f\u4e00\u6bb5\u5f15\u7528\u3002\n</code></pre> <p>\u8fd9\u662f\u4e00\u6bb5\u5f15\u7528\u3002</p>"},{"location":"doc/markdown/basic/#\u5d4c\u5957\u5f15\u7528","title":"\u5d4c\u5957\u5f15\u7528","text":"<p>Markdown \u652f\u6301\u5d4c\u5957\u5f15\u7528\u3002</p> \u5d4c\u5957\u5f15\u7528<pre><code>&gt; \u8fd9\u662f\u4e00\u6bb5\u5f15\u7528\u3002\n&gt; &gt; \u8fd9\u662f\u4e00\u6bb5\u5d4c\u5957\u5f15\u7528\u3002\n</code></pre> <p>\u8fd9\u662f\u4e00\u6bb5\u5f15\u7528\u3002</p> <p>\u8fd9\u662f\u4e00\u6bb5\u5d4c\u5957\u5f15\u7528\u3002</p>"},{"location":"doc/markdown/basic/#\u4ee3\u7801","title":"\u4ee3\u7801","text":"<p>Markdown \u652f\u6301\u4e24\u79cd\u4ee3\u7801\u8bed\u6cd5\uff1a\u884c\u5185\u5f0f\u548c\u4ee3\u7801\u5757\u3002</p>"},{"location":"doc/markdown/basic/#\u884c\u5185\u5f0f_1","title":"\u884c\u5185\u5f0f","text":"<p>\u884c\u5185\u5f0f\u4ee3\u7801\u4f7f\u7528\u53cd\u5f15\u53f7\u5305\u88f9\u4ee3\u7801\u3002</p> \u884c\u5185\u5f0f\u4ee3\u7801<pre><code>\u8fd9\u662f\u4e00\u6bb5 `Inline Code`\u3002\n</code></pre> <p>\u8fd9\u662f\u4e00\u6bb5 <code>Inline Code</code>\u3002</p>"},{"location":"doc/markdown/basic/#\u4ee3\u7801\u5757","title":"\u4ee3\u7801\u5757","text":"<p>\u4ee3\u7801\u5757\u4f7f\u7528 4 \u4e2a\u7a7a\u683c\u6216\u662f 1 \u4e2a\u5236\u8868\u7b26\u7f29\u8fdb\u3002</p> \u7f29\u8fdb\u5f0f\u4ee3\u7801<pre><code>    \u8fd9\u662f\u4e00\u6bb5\u7f29\u8fdb\u5f0f\u4ee3\u7801\u3002\n</code></pre> <pre><code>\u8fd9\u662f\u4e00\u6bb5\u7f29\u8fdb\u5f0f\u4ee3\u7801\u3002\n</code></pre> <p>\u4ee3\u7801\u5757\u4e5f\u53ef\u4ee5\u4f7f\u7528 3 \u4e2a\u53cd\u5f15\u53f7\u5305\u88f9\u4ee3\u7801\uff0c\u5e76\u4e14\u53ef\u4ee5\u6307\u5b9a\u8bed\u8a00\u3002</p> \u4ee3\u7801\u5757<pre><code>```python\nprint(\"Hello World!\")\n```\n</code></pre> <pre><code>print(\"Hello World!\")\n</code></pre>"},{"location":"doc/markdown/basic/#\u8868\u683c","title":"\u8868\u683c","text":"<p>Markdown \u4f7f\u7528 <code>|</code> \u548c <code>-</code> \u6765\u7ed8\u5236\u8868\u683c\u3002</p> \u8868\u683c<pre><code>| \u8868\u5934 1   | \u8868\u5934 2   | \u8868\u5934 3   |\n| -------- | -------- | -------- |\n| \u5355\u5143\u683c 1 | \u5355\u5143\u683c 2 | \u5355\u5143\u683c 3 |\n| \u5355\u5143\u683c 4 | \u5355\u5143\u683c 5 | \u5355\u5143\u683c 6 |\n</code></pre> \u8868\u5934 1 \u8868\u5934 2 \u8868\u5934 3 \u5355\u5143\u683c 1 \u5355\u5143\u683c 2 \u5355\u5143\u683c 3 \u5355\u5143\u683c 4 \u5355\u5143\u683c 5 \u5355\u5143\u683c 6"},{"location":"doc/markdown/basic/#\u5bf9\u9f50\u65b9\u5f0f","title":"\u5bf9\u9f50\u65b9\u5f0f","text":"<p>\u53ef\u4ee5\u4f7f\u7528 <code>:</code> \u6765\u6307\u5b9a\u5bf9\u9f50\u65b9\u5f0f\u3002</p> \u8868\u683c\u5bf9\u9f50\u65b9\u5f0f<pre><code>| \u8868\u5934 1 |  \u8868\u5934 2  | \u8868\u5934 3 |\n| :----- | :------: | -----: |\n| \u5de6\u5bf9\u9f50 | \u5c45\u4e2d\u5bf9\u9f50 | \u53f3\u5bf9\u9f50 |\n</code></pre> \u8868\u5934 1 \u8868\u5934 2 \u8868\u5934 3 \u5de6\u5bf9\u9f50 \u5c45\u4e2d\u5bf9\u9f50 \u53f3\u5bf9\u9f50"},{"location":"doc/markdown/basic/#\u8f6c\u4e49","title":"\u8f6c\u4e49","text":"<p>Markdown \u4f7f\u7528 <code>\\</code> \u6765\u8f6c\u4e49\u7279\u6b8a\u5b57\u7b26\u3002</p> \u8f6c\u4e49<pre><code>\\*\u8fd9\u4e0d\u662f\u4e00\u6bb5\u659c\u4f53\u6587\u672c\\*\n</code></pre> <p>*\u8fd9\u4e0d\u662f\u4e00\u6bb5\u659c\u4f53\u6587\u672c*</p>"},{"location":"doc/markdown/basic/#\u516c\u5f0f","title":"\u516c\u5f0f","text":"<p>\u5728 MathJax \u6216 KaTeX \u7684\u5e2e\u52a9\u4e0b\uff0c\u53ef\u4ee5\u5728 Markdown \u4e2d\u63d2\u5165\u516c\u5f0f\u3002\u516c\u5f0f\u8bed\u6cd5\u4f7f\u7528\u7684\u662f \\(\\LaTeX\\) \u8bed\u6cd5\u3002</p> <p>Markdown \u4f7f\u7528 <code>$</code> \u6765\u63d2\u5165\u516c\u5f0f\u3002</p> \u516c\u5f0f<pre><code>$E=mc^2$\n</code></pre> <p>\\(E=mc^2\\)</p> <p>\u53ef\u4ee5\u4f7f\u7528 <code>$$</code> \u6765\u63d2\u5165\u884c\u95f4\u516c\u5f0f\u3002</p> \u884c\u95f4\u516c\u5f0f<pre><code>$$E=mc^2$$\n</code></pre> \\[E=mc^2\\]"},{"location":"doc/markdown/basic/#\u811a\u6ce8","title":"\u811a\u6ce8","text":"<p>Markdown \u4f7f\u7528 <code>[^]</code> \u6765\u63d2\u5165\u811a\u6ce8\u3002</p> \u811a\u6ce8<pre><code>\u8fd9\u662f\u4e00\u6bb5\u5e26\u6709\u811a\u6ce8\u7684\u6587\u672c[^1]\u3002\n\n[^1]: \u8fd9\u662f\u4e00\u4e2a\u811a\u6ce8\u3002\n</code></pre> <p>\u8fd9\u662f\u4e00\u6bb5\u5e26\u6709\u811a\u6ce8\u7684\u6587\u672c<sup>1</sup>\u3002</p>"},{"location":"doc/markdown/basic/#\u76ee\u5f55","title":"\u76ee\u5f55","text":"<p>Markdown \u4f7f\u7528 <code>[toc]</code> \u6765\u63d2\u5165\u76ee\u5f55\u3002</p> \u76ee\u5f55<pre><code>[toc]\n</code></pre> <p>[toc]</p>"},{"location":"doc/markdown/basic/#html","title":"HTML","text":"<p>Markdown \u652f\u6301\u4f7f\u7528 HTML \u8bed\u6cd5\u3002</p> HTML<pre><code>&lt;p&gt;\u8fd9\u662f\u4e00\u6bb5\u4f7f\u7528 &lt;strong&gt;HTML&lt;/strong&gt; &lt;em&gt;\u8bed\u6cd5&lt;/em&gt;\u7684&lt;span lang=\"ja\"&gt;\u6587\u672c&lt;/span&gt;\u3002&lt;/p&gt;\n\n&lt;video src=\"https://docs.panxuc.com/assets/videos/test.mp4\" controls=\"controls\" width=\"100%\"&gt;&lt;/video&gt;\n</code></pre> <p>\u8fd9\u662f\u4e00\u6bb5\u4f7f\u7528 HTML \u8bed\u6cd5\u7684\u6587\u672c\u3002</p> <ol> <li> <p>\u8fd9\u662f\u4e00\u4e2a\u811a\u6ce8\u3002\u00a0\u21a9</p> </li> </ol>"},{"location":"doc/markdown/mkdocsmaterial/","title":"Material for MkDocs","text":""},{"location":"doc/markdown/mkdocsmaterial/#material-for-mkdocs","title":"Material for MkDocs","text":"<p>MkDocs \u662f\u4e00\u4e2a\u9759\u6001\u7ad9\u70b9\u751f\u6210\u5668\uff0c\u5b83\u4f7f\u7528 Python \u548c Markdown \u6765\u521b\u5efa\u7b80\u5355\u7684\u7f51\u7ad9\u3002Material for MkDocs \u662f\u4e00\u4e2a MkDocs \u4e3b\u9898\uff0c\u5b83\u4f7f\u7528 Google \u7684 Material Design \u89c4\u8303\u3002</p> <p>Material for MkDocs \u4e2d\u5b9a\u4e49\u4e86\u4e00\u4e9b\u81ea\u5b9a\u4e49\u7684 Markdown \u8bed\u6cd5\uff0c\u7528\u4e8e\u521b\u5efa\u66f4\u597d\u7684\u6587\u6863\u3002\u8fd9\u4e9b\u8bed\u6cd5\u662f\u901a\u8fc7 Python Markdown \u7684\u6269\u5c55\u5b9e\u73b0\u7684\u3002</p>"},{"location":"doc/style/","title":"\u683c\u5f0f","text":""},{"location":"doc/style/#\u683c\u5f0f","title":"\u683c\u5f0f","text":"<p>\u5728\u5199\u4f5c\u6587\u6863\u4e4b\u524d\uff0c\u5e94\u8be5\u4e86\u89e3\u4e00\u4e9b\u57fa\u7840\u7684\u683c\u5f0f\u89c4\u8303\uff0c\u4ee5\u514d\u5199\u51fa\u6765\u7684\u6587\u6863\u683c\u5f0f\u6df7\u4e71\uff0c\u4e0d\u5229\u4e8e\u9605\u8bfb\u3002</p>"},{"location":"doc/style/#\u6807\u9898","title":"\u6807\u9898","text":"<p>\u6807\u9898\u662f\u6587\u6863\u7684\u91cd\u8981\u7ec4\u6210\u90e8\u5206\uff0c\u5b83\u80fd\u591f\u5e2e\u52a9\u8bfb\u8005\u5feb\u901f\u4e86\u89e3\u6587\u6863\u7684\u7ed3\u6784\uff0c\u6240\u4ee5\u6807\u9898\u7684\u683c\u5f0f\u5e94\u8be5\u7edf\u4e00\uff0c\u4e0d\u8981\u968f\u610f\u66f4\u6539\u3002</p> <p>\u5927\u591a\u6570\u6807\u8bb0\u8bed\u8a00\u90fd\u652f\u6301\u591a\u7ea7\u6807\u9898\uff0c\u4f46\u662f\u4e0d\u8981\u4f7f\u7528\u592a\u591a\u7ea7\u7684\u6807\u9898\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u6587\u6863\u7684\u6807\u9898\u4e0d\u5e94\u8be5\u8d85\u8fc7\u4e09\u7ea7\uff1b\u5982\u679c\u6587\u6863\u8f83\u957f\uff0c\u4e14\u65e0\u6cd5\u62c6\u5206\u6210\u591a\u4e2a\u5c0f\u6587\u6863\uff0c\u53ef\u4ee5\u4f7f\u7528\u56db\u7ea7\u6807\u9898\u3002</p> <p>\u4e0d\u8981\u8d8a\u7ea7\u4f7f\u7528\u6807\u9898\uff0c\u4f8b\u5982\uff0c\u4e0d\u8981\u4f7f\u7528\u4e8c\u7ea7\u6807\u9898\u540e\u9762\u76f4\u63a5\u4f7f\u7528\u56db\u7ea7\u6807\u9898\uff0c\u800c\u5e94\u8be5\u4f7f\u7528\u4e09\u7ea7\u6807\u9898\u3002</p> <p>\u6807\u9898\u5728\u6587\u7ae0\u4e2d\u8d77\u7740\u91cd\u8981\u4f5c\u7528\uff0c\u6545\u800c\u7edd\u5bf9\u4e0d\u5e94\u8be5\u4ec5\u4ec5\u4e3a\u4e86\u683c\u5f0f\u5316\u67d0\u4e00\u6bb5\u6587\u672c\u800c\u4f7f\u7528\u6807\u9898\u3002</p>"},{"location":"doc/style/#\u7a7a\u683c","title":"\u7a7a\u683c","text":"<p>\u5728 Markdown\u3001HTML \u7b49\u6807\u8bb0\u8bed\u8a00\u4e2d\uff0c\u4e3a\u4e86\u89c6\u89c9\u4e0a\u7684\u7f8e\u89c2\uff0c\u5e94\u8be5\u5728\u4e2d\u82f1\u6587<sup>1</sup>\u4e4b\u95f4\u4f7f\u7528\u7a7a\u683c\u3002</p>"},{"location":"doc/style/#\u4e2d\u82f1\u6587\u4e4b\u95f4\u4f7f\u7528\u7a7a\u683c","title":"\u4e2d\u82f1\u6587\u4e4b\u95f4\u4f7f\u7528\u7a7a\u683c","text":"<p>\u5728\u4e2d\u82f1\u6587\u4e4b\u95f4\u5e94\u8be5\u4f7f\u7528\u7a7a\u683c\uff0c\u4f8b\u5982\uff1a</p> <pre><code>Xuc's Docs \u662f\u4e00\u4e2a\u7531 Xuc \u521b\u5efa\u7684\u6587\u6863\u7f51\u7ad9\u3002\n</code></pre> <p>Xuc's Docs \u662f\u4e00\u4e2a\u7531 Xuc \u521b\u5efa\u7684\u6587\u6863\u7f51\u7ad9\u3002</p> <p>\u5982\u679c\u4e0d\u4f7f\u7528\u7a7a\u683c\uff0c\u4f1a\u5bfc\u81f4\u4e2d\u82f1\u6587\u4e4b\u95f4\u8fc7\u4e8e\u62e5\u6324\uff0c\u4f8b\u5982\uff1a</p> <pre><code>Xuc's Docs\u662f\u4e00\u4e2a\u7531Xuc\u521b\u5efa\u7684\u6587\u6863\u7f51\u7ad9\u3002\n</code></pre> <p>Xuc's Docs\u662f\u4e00\u4e2a\u7531Xuc\u521b\u5efa\u7684\u6587\u6863\u7f51\u7ad9\u3002</p>"},{"location":"doc/style/#\u4e2d\u6587\u4e0e\u6570\u5b57\u4e4b\u95f4\u4f7f\u7528\u7a7a\u683c","title":"\u4e2d\u6587\u4e0e\u6570\u5b57\u4e4b\u95f4\u4f7f\u7528\u7a7a\u683c","text":"<p>\u5728\u4e2d\u6587\u4e0e\u6570\u5b57\u4e4b\u95f4\u5e94\u8be5\u4f7f\u7528\u7a7a\u683c\uff0c\u4f8b\u5982\uff1a</p> <pre><code>[Xuc \u7684\u4e3b\u9875](https://www.panxuc.com/)\u90e8\u7f72\u5728\u4e00\u53f0\u5e74\u79df\u91d1 11.38 \u7f8e\u5143\u7684\u670d\u52a1\u5668\u4e0a\u3002\n</code></pre> <p>Xuc \u7684\u4e3b\u9875\u90e8\u7f72\u5728\u4e00\u53f0\u5e74\u79df\u91d1 11.38 \u7f8e\u5143\u7684\u670d\u52a1\u5668\u4e0a\u3002</p>"},{"location":"doc/style/#\u5168\u89d2\u6807\u70b9\u5468\u56f4\u4e0d\u4f7f\u7528\u7a7a\u683c","title":"\u5168\u89d2\u6807\u70b9\u5468\u56f4\u4e0d\u4f7f\u7528\u7a7a\u683c","text":"<p>\u5728\u4e2d\u6587\u6807\u70b9\u7b26\u53f7\u5468\u56f4\u4e0d\u5e94\u8be5\u4f7f\u7528\u7a7a\u683c\uff0c\u4f8b\u5982\uff1a</p> <pre><code>\u6b22\u8fce\u6765\u5230 Xuc's Docs\uff01\u672c\u7ad9\u7684\u6240\u6709\u8005\u662f Xuc\u3002\n</code></pre> <p>\u6b22\u8fce\u6765\u5230 Xuc's Docs\uff01\u672c\u7ad9\u7684\u6240\u6709\u8005\u662f Xuc\u3002</p>"},{"location":"doc/style/#\u62fc\u5199","title":"\u62fc\u5199","text":"<p>\u4e13\u6709\u540d\u8bcd\u5e94\u8be5\u4f7f\u7528\u6b63\u786e\u7684\u62fc\u5199\uff0c\u4f8b\u5982\uff1a</p> \u6b63\u786e\u7684\u62fc\u5199<pre><code>\u559c\u6b22\u770b\u300aBanG Dream! It's MyGO!!!!!\u300b\u7684 Xuc \u7528 LaTeX \u5199\u4e86\u4e00\u7bc7\u5c0f\u4f5c\u6587\uff0c\u6258\u7ba1\u5728 GitHub Pages \u4e0a\u3002\n</code></pre> <p>\u559c\u6b22\u770b\u300aBanG Dream! It's MyGO!!!!!\u300b\u7684 Xuc \u7528 LaTeX \u5199\u4e86\u4e00\u7bc7\u5c0f\u4f5c\u6587\uff0c\u6258\u7ba1\u5728 GitHub Pages \u4e0a\u3002</p> <p>\u5982\u679c\u4e0d\u4f7f\u7528\u6b63\u786e\u7684\u62fc\u5199\uff0c\u4f1a\u663e\u5f97\u5f88\u4e0d\u4e13\u4e1a\u3002\u6781\u7aef\u60c5\u51b5\u4e0b\uff0c\u8bfb\u8005\u53ef\u80fd\u65e0\u6cd5\u7406\u89e3\u4f60\u7684\u610f\u601d\u3002\u4f8b\u5982\uff1a</p> \u5927\u5c0f\u5199\u9519\u8bef<pre><code>\u559c\u6b22\u770b\u300aBang Dream! It's mygo!!!!!\u300b\u7684 xuc \u7528 Latex \u5199\u4e86\u4e00\u7bc7\u5c0f\u4f5c\u6587\uff0c\u6258\u7ba1\u5728 Github Pages \u4e0a\u3002\n</code></pre> <p>\u559c\u6b22\u770b\u300aBang Dream! It's mygo!!!!!\u300b\u7684 xuc \u7528 Latex \u5199\u4e86\u4e00\u7bc7\u5c0f\u4f5c\u6587\uff0c\u6258\u7ba1\u5728 Github Pages \u4e0a\u3002</p> \u610f\u4e49\u4e0d\u660e<pre><code>\u559c\u6b22\u770b\u300a\u4e43\uff91\u5200g d\u5c3a\uff93\uff91\uffb6! \uff89\uff72'\u4e02 \uffb6\uff98go!!!!!\u300b\u7684 \uff92uc \u7528 \uff9a\uff91\uff72\uff93\uff92 \u5199\u4e86\u4e00\u7bc7\u5c0f\u4f5c\u6587\uff0c\u6258\u7ba1\u5728 g\uff89\uff72\u3093u\u4e43 \uff71\uff91g\uff93\u4e02 \u4e0a\u3002\n</code></pre> <p>\u559c\u6b22\u770b\u300a\u4e43\uff91\u5200g d\u5c3a\uff93\uff91\uffb6! \uff89\uff72'\u4e02 \uffb6\uff98go!!!!!\u300b\u7684 \uff92uc \u7528 \uff9a\uff91\uff72\uff93\uff92 \u5199\u4e86\u4e00\u7bc7\u5c0f\u4f5c\u6587\uff0c\u6258\u7ba1\u5728 g\uff89\uff72\u3093u\u4e43 \uff71\uff91g\uff93\u4e02 \u4e0a\u3002</p> <ol> <li> <p>\u8fd9\u91cc\u7684\u4e2d\u82f1\u6587\u5e76\u4e0d\u4ec5\u4ec5\u5305\u542b\u4e2d\u6587\u548c\u82f1\u6587\u4e24\u79cd\u8bed\u8a00\uff0c\u800c\u662f\u5206\u522b\u4ee3\u6307\u5168\u89d2\u5b57\u7b26\u548c\u534a\u89d2\u5b57\u7b26\u3002\u00a0\u21a9</p> </li> </ol>"},{"location":"doc/style/glyph/","title":"\u5b57\u7b26","text":""},{"location":"doc/style/glyph/#\u5b57\u7b26","title":"\u5b57\u7b26","text":"<p>\u64b0\u5199\u6587\u6863\u5e94\u8be5\u7b26\u5408\u6240\u7528\u6587\u5b57\u7684\u8bed\u6cd5\u89c4\u8303\uff0c\u8fd9\u6837\u53ef\u4ee5\u4f7f\u5f97\u6587\u6863\u66f4\u52a0\u6613\u8bfb\u6613\u61c2\uff0c\u4e5f\u4f7f\u5f97\u6587\u7ae0\u66f4\u52a0\u4e25\u8083\u3001\u6b63\u5f0f\u3002</p>"},{"location":"doc/style/glyph/#\u6807\u70b9\u7b26\u53f7","title":"\u6807\u70b9\u7b26\u53f7","text":"<p>\u8bb8\u591a\u521a\u63a5\u89e6\u8ba1\u7b97\u673a\u7684\u65b0\u624b\uff0c\u5bf9\u4e8e\u6807\u70b9\u7b26\u53f7\u7684\u4f7f\u7528\u5e76\u4e0d\u662f\u5f88\u719f\u6089\uff0c\u8fd9\u91cc\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0b\u6807\u70b9\u7b26\u53f7\u7684\u4f7f\u7528\u3002</p>"},{"location":"doc/style/glyph/#\u5168\u89d2\u548c\u534a\u89d2","title":"\u5168\u89d2\u548c\u534a\u89d2","text":"<p>\u5728\u8ba1\u7b97\u673a\u4e2d\uff0c\u6807\u70b9\u7b26\u53f7\u5206\u4e3a\u300c\u5168\u89d2\u300d\uff08\u5168\u89d2\uff09\u548c\u300c\u534a\u89d2\u300d\uff08\u534a\u89d2\uff09\u4e24\u79cd\uff0c\u5168\u89d2\u6807\u70b9\u7b26\u53f7\u5360\u7528\u4e24\u4e2a\u5b57\u7b26\u7684\u5bbd\u5ea6\uff0c\u800c\u534a\u89d2\u6807\u70b9\u7b26\u53f7\u5360\u7528\u4e00\u4e2a\u5b57\u7b26\u7684\u5bbd\u5ea6\u3002\u5728\u4e2d\u6587\u4e2d\uff0c\u6807\u70b9\u7b26\u53f7\u4e00\u822c\u4f7f\u7528\u5168\u89d2\uff0c\u800c\u82f1\u6587\u4e2d\u5219\u4f7f\u7528\u534a\u89d2\u3002</p> \u5168\u89d2\u7b26\u53f7\u548c\u534a\u89d2\u7b26\u53f7\u7684\u5bf9\u5e94\u5173\u7cfb <p>\u4e0b\u8868\u4e0e\u952e\u76d8\u548c\u8f93\u5165\u6cd5\u65e0\u5173\uff0c\u53ea\u662f\u4ecb\u7ecd\u5728\u5168\u89d2\u8bed\u5883\uff08\u4e2d\u6587\u7b49\uff09\u548c\u534a\u89d2\u8bed\u5883\uff08\u82f1\u6587\u7b49\uff09\u4e2d\u6807\u70b9\u7b26\u53f7\u7684\u5bf9\u5e94\u5173\u7cfb\u3002</p> \u5168\u89d2 \u534a\u89d2 \u540d\u79f0 <code>\uff0c</code> <code>\u3001</code> <code>,</code> \u9017\u53f7\u3001\u987f\u53f7 <code>\u3002</code> <code>\uff0e</code> <code>.</code> \u53e5\u53f7 <code>\uff01</code> <code>!</code> \u611f\u53f9\u53f7 <code>\uff1f</code> <code>?</code> \u95ee\u53f7 <code>\uff1b</code> <code>;</code> \u5206\u53f7 <code>\uff1a</code> <code>:</code> \u5192\u53f7 <code>\u201c</code> <code>\u201d</code> <code>\u2018</code> <code>\u2019</code> <code>\u300c</code> <code>\u300d</code> <code>\u300e</code> <code>\u300f</code> <code>\"</code> <code>'</code> <code>\u201c</code> <code>\u201d</code> <code>\u2018</code> <code>\u2019</code> \u5f15\u53f7 <code>\uff08</code> <code>\uff09</code> <code>\uff3b</code> <code>\uff3d</code> <code>\u3010</code> <code>\u3011</code> <code>\u3016</code> <code>\u3017</code> <code>\u3014</code> <code>\u3015</code> <code>\uff5b</code> <code>\uff5d</code> <code>\u300a</code> <code>\u300b</code> <code>\u3008</code> <code>\u3009</code> <code>(</code> <code>)</code> <code>[</code> <code>]</code> <code>{</code> <code>}</code> <code>&lt;</code> <code>&gt;</code> \u62ec\u53f7 <code>\u2014</code>\uff08\u4e00\u822c\u4e24\u4e2a\u8fde\u7528\uff09 <code>-</code> \u7834\u6298\u53f7 <code>\u2026</code>\uff08\u4e00\u822c\u4e24\u4e2a\u8fde\u7528\uff09 <code>...</code>\uff08\u5b9e\u9645\u4e0a\u662f\u4e09\u4e2a\u70b9\uff09 \u7701\u7565\u53f7 <code>\uff5e</code> <code>~</code> \u6ce2\u6d6a \u6613\u6df7\u6dc6\u7684\u7b26\u53f7 <ul> <li><code>\u3008\u3009</code> <code>&lt;&gt;</code> <code>\uff1c\uff1e</code>\uff1a\u4ece\u5de6\u81f3\u53f3\u4f9d\u6b21\u4e3a\uff1a\u5168\u89d2\u5355\u4e66\u540d\u53f7\u3001\u534a\u89d2\u5c16\u62ec\u53f7/\u5927\u4e8e\u5c0f\u4e8e\u53f7\u3001\u5168\u89d2\u5927\u4e8e\u5c0f\u4e8e\u53f7\u3002</li> <li>\u5f85\u8865\u5145</li> </ul>"},{"location":"doc/style/glyph/#\u6307\u5b9a\u8bed\u8a00","title":"\u6307\u5b9a\u8bed\u8a00","text":"<p>\u5728 Unicode \u4e2d\uff0c\u6709\u8bb8\u591a\u5b57\u7b26\uff0c\u4e3a\u4e86\u8282\u7701\u7801\u4f4d\u88ab\u5408\u5e76\u5728\u4e00\u8d77\uff0c\u4f46\u662f\u8fd9\u4e8b\u5b9e\u4e0a\u662f\u4e0d\u592a\u6070\u5f53\u7684\u3002\u8fd9\u4e9b\u5b57\u7b26\u5728\u4e0d\u540c\u7684\u8bed\u8a00\u4e2d\u5e94\u5f53\u88ab\u5199\u4f5c\u4e0d\u540c\u7684\u6837\u5f0f\u3002\u4e0b\u9762\u6211\u4eec\u6765\u770b\u51e0\u4e2a\u4f8b\u5b50\u3002</p> <p>\u66dc\u66dc\u66dc\u66dc\u66dc</p> <p>\u9aa8\u9aa8\u9aa8\u9aa8\u9aa8</p> <p>\u6b21\u6b21\u6b21\u6b21\u6b21</p> \u770b\u4e0d\u51fa\u6765\uff1f\u70b9\u6211\uff01 <p></p> <p>\u4ece\u5de6\u5230\u53f3\u4f9d\u6b21\u4e3a\uff1a\u7b80\u4f53\u4e2d\u6587\uff08<code>zh_CN</code>\uff09\u3001\u53f0\u6e7e\u7e41\u4f53\u4e2d\u6587\uff08<code>zh_TW</code>\uff09\u3001\u9999\u6e2f\u7e41\u4f53\u4e2d\u6587\uff08<code>zh_HK</code>\uff09\u3001\u65e5\u6587\uff08<code>ja</code>\uff09\u3001\u97e9\u6587\uff08<code>ko</code>\uff09\u3002\u8fd9\u4e9b\u5b57\u7b26\u5728\u4e0d\u540c\u7684\u8bed\u8a00\u4e2d\u5e94\u5f53\u88ab\u5199\u4f5c\u4e0d\u540c\u7684\u6837\u5f0f<sup>1</sup>\u3002</p> <p>\u6545\u800c\uff0c\u6211\u4eec\u5728\u64b0\u5199\u6587\u6863\u65f6\uff0c\u5bf9\u4e8e\u4e0d\u540c\u7684\u8bed\u8a00\uff0c\u5e94\u5f53\u4f7f\u7528\u4e0d\u540c\u7684\u6837\u5f0f\u3002\u5728 HTML \u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 <code>lang</code> \u5c5e\u6027\u6765\u6307\u5b9a\u8bed\u8a00\u3002</p> <pre><code>&lt;span lang=\"zh_CN\"&gt;\u7b80\u4f53\u4e2d\u6587&lt;/span&gt;\n&lt;span lang=\"zh_TW\"&gt;\u53f0\u6e7e\u7e41\u4f53\u4e2d\u6587&lt;/span&gt;\n&lt;span lang=\"zh_HK\"&gt;\u9999\u6e2f\u7e41\u4f53\u4e2d\u6587&lt;/span&gt;\n&lt;span lang=\"ja\"&gt;\u65e5\u6587&lt;/span&gt;\n&lt;span lang=\"ko\"&gt;\u97e9\u6587&lt;/span&gt;\n</code></pre> <ol> <li> <p>\u6709\u4eba\u53ef\u80fd\u4f1a\u8bf4\uff0c\u53f0\u6e7e\u7e41\u4f53\u4e2d\u6587\u548c\u9999\u6e2f\u7e41\u4f53\u4e2d\u6587\u6ca1\u6709\u533a\u522b\u554a\uff1f\u5176\u5b9e\u4e0d\u7136\uff0c\u8fd9\u662f\u5b89\u88c5\u5728\u4f60\u7684\u8ba1\u7b97\u673a\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u7684\u5b57\u4f53\u7684\u95ee\u9898\u3002\u5982\u679c\u4f60\u5b89\u88c5\u4e86\u652f\u6301\u9999\u6e2f\u7e41\u4f53\u4e2d\u6587\u7684\u5b57\u4f53\uff0c\u4f60\u5c31\u80fd\u770b\u5230\u8fd9\u4e24\u4e2a\u5b57\u7b26\u7684\u533a\u522b\u4e86\u3002\u00a0\u21a9</p> </li> </ol>"},{"location":"doc/typst/","title":"Typst","text":""},{"location":"doc/typst/#typst","title":"Typst","text":"<p>Typst \u662f\u4e00\u79cd\u65b0\u7684\u6807\u8bb0\u8bed\u8a00\uff0c\u5b83\u6bd4 Markdown \u66f4\u9002\u5408\u6392\u7248\uff0c\u6bd4 LaTeX \u66f4\u7b80\u5355\u3002\u5f53\u7136\uff0c\u76ee\u524d Typst \u8fd8\u5904\u4e8e\u5f00\u53d1\u9636\u6bb5\uff0c\u56e0\u6b64\u5b83\u7684\u529f\u80fd\u8fd8\u4e0d\u5b8c\u5584\uff0c\u4f46\u662f\u5b83\u5df2\u7ecf\u53ef\u4ee5\u7528\u4e8e\u5199\u4f5c\u4e86\u3002</p> <p>Typst \u6709\u4e09\u79cd\u6a21\u5f0f\uff1a\u6587\u672c\u6a21\u5f0f\u3001\u4ee3\u7801\u6a21\u5f0f\u548c\u6570\u5b66\u6a21\u5f0f\u3002\u6587\u672c\u6a21\u5f0f\u7528\u4e8e\u6392\u7248\u6587\u672c\uff0c\u4ee3\u7801\u6a21\u5f0f\u7528\u4e8e\u6392\u7248\u4ee3\u7801\uff0c\u6570\u5b66\u6a21\u5f0f\u7528\u4e8e\u6392\u7248\u6570\u5b66\u5f0f\u3002Typst \u7684\u6587\u672c\u6a21\u5f0f\u548c Markdown \u7684\u6587\u672c\u6a21\u5f0f\u7c7b\u4f3c\uff0c\u4f46\u662f Typst \u7684\u4ee3\u7801\u6a21\u5f0f\u548c\u6570\u5b66\u6a21\u5f0f\u90fd\u662f\u5168\u65b0\u7684\u3002</p>"},{"location":"doc/typst/#\u57fa\u672c\u7ed3\u6784","title":"\u57fa\u672c\u7ed3\u6784","text":"<p>\u76f8\u6bd4 Markdown\uff0cTypst \u65b0\u589e\u4e86\u9875\u9762\u8bbe\u7f6e\u529f\u80fd\uff0c\u53ef\u4ee5\u5e2e\u52a9\u7528\u6237\u66f4\u597d\u5730\u6392\u7248\u6587\u6863\u3002\u8fd9\u4f1a\u5728\u540e\u9762\u7684\u7ae0\u8282\u4e2d\u4ecb\u7ecd\u3002</p>"},{"location":"doc/typst/basic/","title":"\u57fa\u672c\u8bed\u6cd5","text":""},{"location":"doc/typst/basic/#\u57fa\u672c\u8bed\u6cd5","title":"\u57fa\u672c\u8bed\u6cd5","text":"<p>Typst \u7684\u8bed\u6cd5\u548c Markdown \u6709\u4e9b\u7c7b\u4f3c\uff0c\u4f46\u662f\u5b83\u66f4\u52a0\u7b80\u5355\u3002\u5bf9\u4e8e Markdown \u7528\u6237\u6765\u8bf4\uff0cTypst \u7684\u8bed\u6cd5\u5e94\u8be5\u5f88\u5bb9\u6613\u4e0a\u624b\u3002</p>"},{"location":"doc/typst/basic/#\u6807\u9898","title":"\u6807\u98981.a) \u4e8c\u7ea7\u6807\u9898","text":"<p>Typst \u7684\u6807\u9898\u662f\u5728\u6807\u9898\u6587\u672c\u524d\u9762\u52a0\u4e0a <code>=</code>\uff0c\u540c\u65f6\uff0c\u5982\u679c\u6307\u5b9a\u4e86\u7f16\u53f7\uff0cTypst \u4f1a\u81ea\u52a8\u4e3a\u6807\u9898\u6dfb\u52a0\u7f16\u53f7\u3002</p> <pre><code>#set heading(numbering: \"1.a)\")\n\n= \u4e00\u7ea7\u6807\u9898\n\n== \u4e8c\u7ea7\u6807\u9898\n</code></pre> 1) \u4e00\u7ea7\u6807\u9898"},{"location":"doc/typst/basic/#\u6bb5\u843d","title":"\u6bb5\u843d","text":"<p>Typst \u7684\u6bb5\u843d\u548c Markdown \u7684\u6bb5\u843d\u4e00\u6837\uff0c\u53ea\u9700\u8981\u5728\u6bb5\u843d\u4e4b\u95f4\u52a0\u4e0a\u7a7a\u884c\u5373\u53ef\u3002</p> <p>Typst \u8fd8\u652f\u6301\u4f7f\u7528\u4ee3\u7801\u751f\u6210\u6bb5\u843d\u3002</p> <pre><code>#for i in range(3) {\n  [Blind text #i: ]\n  lorem(5)\n  parbreak()\n}\n</code></pre> <p>Blind text 0: Lorem ipsum dolor sit amet, consectetur adipiscing elit. </p> <p>Blind text 1: Lorem ipsum dolor sit amet, consectetur adipiscing elit. </p> <p>Blind text 2: Lorem ipsum dolor sit amet, consectetur adipiscing elit. </p>"},{"location":"doc/typst/basic/#\u6587\u672c\u683c\u5f0f\u5316","title":"\u6587\u672c\u683c\u5f0f\u5316","text":"<p>Typst \u7684\u6587\u672c\u683c\u5f0f\u5316\u529f\u80fd\u6bd4 Markdown \u66f4\u52a0\u5f3a\u5927\u3001\u66f4\u52a0\u89c4\u8303\u3001\u66f4\u52a0\u7075\u6d3b\u3002</p> <p>Typst \u652f\u6301\u4ee5\u4e0b\u6587\u672c\u683c\u5f0f\u5316\u8bed\u6cd5\uff1a</p> <pre><code>*\u7c97\u4f53*\n#strong[\u7c97\u4f53]\n_\u659c\u4f53_\n#emph[\u659c\u4f53]\n</code></pre> <p>\u7c97\u4f53</p> <p>\u659c\u4f53</p> <p>\u5176\u4e2d\uff0c\u53ef\u4ee5\u7ed9\u7c97\u4f53\u548c\u659c\u4f53\u624b\u52a8\u8bbe\u7f6e\u683c\u5f0f\uff1a</p> <pre><code>\u8fd9\u662f*\u7c97\u4f53*\uff0c\u8fd9\u662f_\u659c\u4f53_\u3002\n\n#show strong: set text(red)\n\n#show emph: it =&gt; {\n  text(blue, it.body)\n}\n\n\u8fd9\u662f*\u7c97\u4f53*\uff0c\u8fd9\u662f_\u659c\u4f53_\u3002\n</code></pre> <p>\u8fd9\u662f\u7c97\u4f53\uff0c\u8fd9\u662f\u659c\u4f53\u3002</p> <p>\u8fd9\u662f\u7c97\u4f53\uff0c\u8fd9\u662f\u659c\u4f53\u3002</p>"},{"location":"doc/typst/basic/#\u94fe\u63a5","title":"\u94fe\u63a5","text":"<p>Typst \u7684\u94fe\u63a5\u6709\u4ee5\u4e0b\u51e0\u79cd\u5f62\u5f0f\uff1a</p> <pre><code>#show link: underline\n\nhttps://www.panxuc.com/\n\n#link(https://www.panxuc.com/)\n\n#link(https://www.panxuc.com/)[Xuc Pan \u7684\u4e3b\u9875]\n</code></pre> <p>https://www.panxuc.com/</p> <p>https://www.panxuc.com/</p> <p>Xuc Pan \u7684\u4e3b\u9875</p>"},{"location":"doc/typst/basic/#\u5217\u8868","title":"\u5217\u8868","text":"<p>Typst \u652f\u6301\u6709\u5e8f\u5217\u8868\u548c\u65e0\u5e8f\u5217\u8868\u3002</p>"},{"location":"doc/typst/basic/#\u65e0\u5e8f\u5217\u8868","title":"\u65e0\u5e8f\u5217\u8868","text":"<p>Typst \u7684\u65e0\u5e8f\u5217\u8868\u548c Markdown \u7684\u65e0\u5e8f\u5217\u8868\u4e00\u6837\uff0c\u53ea\u9700\u8981\u5728\u5217\u8868\u9879\u524d\u9762\u52a0\u4e0a <code>-</code> \u5373\u53ef\u3002</p> <pre><code>- \u5217\u8868\u9879 1\n- \u5217\u8868\u9879 2\n- \u5217\u8868\u9879 3\n</code></pre> <ul> <li>\u5217\u8868\u9879 1</li> <li>\u5217\u8868\u9879 2</li> <li>\u5217\u8868\u9879 3</li> </ul> <p>\u6216\u8005\u4f7f\u7528 <code>list</code> \u547d\u4ee4\uff1a</p> <pre><code>#list(\n  [\u5217\u8868\u9879 1],\n  [\u5217\u8868\u9879 2],\n  [\u5217\u8868\u9879 3],\n)\n</code></pre> <ul> <li>\u5217\u8868\u9879 1</li> <li>\u5217\u8868\u9879 2</li> <li>\u5217\u8868\u9879 3</li> </ul>"},{"location":"doc/typst/basic/#\u6709\u5e8f\u5217\u8868","title":"\u6709\u5e8f\u5217\u8868","text":"<p>Typst \u7684\u6709\u5e8f\u5217\u8868\u53ea\u9700\u8981\u5728\u5217\u8868\u9879\u524d\u9762\u52a0\u4e0a <code>+</code> \u5373\u53ef\u3002</p> <pre><code>+ \u5217\u8868\u9879 1\n+ \u5217\u8868\u9879 2\n+ \u5217\u8868\u9879 3\n</code></pre> <ol> <li>\u5217\u8868\u9879 1</li> <li>\u5217\u8868\u9879 2</li> <li>\u5217\u8868\u9879 3</li> </ol> <p>\u53ef\u4ee5\u624b\u52a8\u7f16\u53f7\uff1a</p> <pre><code>2. \u5217\u8868\u9879 1\n5. \u5217\u8868\u9879 2\n+ \u5217\u8868\u9879 3\n</code></pre> <ol> <li>\u5217\u8868\u9879 1</li> <li>\u5217\u8868\u9879 2</li> <li>\u5217\u8868\u9879 3</li> </ol> <p>\u6216\u8005\u4f7f\u7528 <code>enum</code> \u547d\u4ee4\uff1a</p> <pre><code>#enum[\u5217\u8868\u98791][\u5217\u8868\u98792][\u5217\u8868\u98793]\n</code></pre> <ol> <li>\u5217\u8868\u98791</li> <li>\u5217\u8868\u98792</li> <li>\u5217\u8868\u98793</li> </ol> <p><code>enum</code> \u547d\u4ee4\u4e5f\u652f\u6301\u624b\u52a8\u7f16\u53f7\uff1a</p> <pre><code>#enum(\n  enum.item(2)[\u5217\u8868\u98791],\n  enum.item(5)[\u5217\u8868\u98792],\n  enum.item(6)[\u5217\u8868\u98793]\n)\n</code></pre> <ol> <li>\u5217\u8868\u98791</li> <li>\u5217\u8868\u98792</li> <li>\u5217\u8868\u98793</li> </ol>"},{"location":"game/","title":"\u6e38\u620f - \u76ee\u5f55","text":""},{"location":"game/#\u6e38\u620f---\u76ee\u5f55","title":"\u6e38\u620f - \u76ee\u5f55","text":"<ul> <li> \u9ebb\u5c06</li> <li>\u9006\u8f6c\u88c1\u5224</li> <li>\u5973\u795e\u5f02\u95fb\u5f55</li> <li>Galgame<ul> <li>YUZU SOFT</li> </ul> </li> </ul>"},{"location":"game/aceattorney/","title":"\u9006\u8f6c\u88c1\u5224","text":""},{"location":"game/aceattorney/#\u9006\u8f6c\u88c1\u5224","title":"\u9006\u8f6c\u88c1\u5224","text":"<p>\u672c\u6587\u90e8\u5206\u5185\u5bb9\u5f15\u81ea\u9006\u8f6c\u88c1\u5224\u4e2d\u6587\u767e\u79d1\u4e0e\u7535\u73a9\u5df4\u58eb\u3002</p>"},{"location":"game/aceattorney/#\u9006\u8f6c\u88c1\u5224123-\u6210\u6b65\u5802\u7cbe\u9009\u96c6","title":"\u9006\u8f6c\u88c1\u5224123 \u6210\u6b65\u5802\u7cbe\u9009\u96c6","text":""},{"location":"game/aceattorney/#\u9006\u8f6c\u88c1\u5224-\u590d\u82cf\u7684\u9006\u8f6c","title":"\u9006\u8f6c\u88c1\u5224 \u590d\u82cf\u7684\u9006\u8f6c","text":""},{"location":"game/aceattorney/#\u6700\u521d\u7684\u9006\u8f6c","title":"\u6700\u521d\u7684\u9006\u8f6c","text":"\u6e38\u620f\u653b\u7565 \u7b2c\u4e00\u65e5\u2027\u6cd5\u5ead <p>\u9996\u5148\uff0c\u8bf7\u4f60\u56de\u7b54\u672c\u6b21\u4e8b\u4ef6\u88ab\u544a\u7684\u540d\u5b57\u3002</p> <p>\u9009\u62e9\uff1a\u77e2\u5f20\u653f\u5fd7</p> <p>\u8bf7\u4f60\u56de\u7b54\u5427\u3002\u672c\u6b21\u4e8b\u4ef6\u7684\u88ab\u5bb3\u4eba\u59d3\u540d\u662f\uff1f</p> <p>\u9009\u62e9\uff1a\u9ad8\u65e5\u7f8e\u4f73</p> <p>\u88ab\u5bb3\u4eba\u7684\u6b7b\u56e0\u662f\u2026\u2026\uff1f</p> <p>\u9009\u62e9\uff1a\u88ab\u949d\u5668\u6bb4\u6253</p> <p>\uff08\u2026\u2026\u8bf4\u5f97\u4e5f\u662f\u3002\u77e2\u5f20\u5f88\u6709\u53ef\u80fd\u8bb2\u51fa\u4e0d\u8be5\u8bb2\u7684\u8bdd\u2026\u2026\uff09</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\uff08\u770b\u4ed6\u90a3\u4e2a\u6837\u5b50\uff0c\u80af\u5b9a\u53bb\u8fc7\u5979\u5bb6\u2026\u2026\u8be5\u600e\u4e48\u529e\u5462\u2026\u2026\uff09</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u8be2\u95ee \uff5e\u6848\u53d1\u5f53\u5929\u76ee\u51fb\u5230\u7684\u4e8b\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u5c71\u91ce\u661f\u96c4\u3011</p> <p>\u4e3e\u8bc1\uff1a\u300c\u65f6\u95f4\u6211\u8bb0\u5f97\u5f88\u6e05\u695a\u3002\u662f\u4e0b\u5348\uff12\u70b9\u7684\u65f6\u5019\u3002\u300d\u65f6\u9009\u300c\u9ad8\u65e5\u7f8e\u4f73\u7684\u89e3\u5256\u7eaa\u5f55\u300d</p> <p>\u8be2\u95ee \uff5e\u5173\u4e8e\u53d1\u73b0\u9057\u4f53\u7684\u65f6\u95f4\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u5c71\u91ce\u661f\u96c4\u3011</p> <p>\u4e3e\u8bc1\uff1a\u57281\uff5e5\u8bc1\u8a00\u4e2d\u7684\u4efb\u610f\u4e00\u5904\u4e3e\u8bc1\u300c\u505c\u7535\u7eaa\u5f55\u300d</p> <p>\u8be2\u95ee \uff5e\u5173\u4e8e\u201c\u542c\u5230\u65f6\u95f4\u201d\u8fd9\u4ef6\u4e8b\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u5c71\u91ce\u661f\u96c4\u3011</p> <p>\u4e3e\u8bc1\uff1a\u57282\uff5e4\u8bc1\u8a00\u4e2d\u7684\u4efb\u610f\u4e00\u5904\u4e3e\u8bc1\u300c\u5c0f\u96d5\u50cf\u300d</p> <p>\u2026\u2026\u5173\u4e8e\u5c71\u91ce\u5148\u751f\u7684\u8bc1\u8a00\uff0c\u4f60\u8fd8\u6709\u95ee\u9898\u5417\uff1f</p> <p>\u9009\u62e9\uff1a\u8fd8\u6709\u95ee\u9898</p> <p>\u4e3a\u4ec0\u4e48\u8bc1\u4eba\u4f1a\u77e5\u9053\u5c0f\u96d5\u50cf\u662f\u4e2a\u65f6\u949f\u5462\uff1f\u90a3\u662f\u56e0\u4e3a\u2026\u2026</p> <p>\u9009\u62e9\uff1a\u6848\u53d1\u5f53\u5929\uff0c\u4ed6\u66fe\u7ecf\u8fdb\u5165\u623f\u95f4</p> <p>\u8981\u8bc1\u660e\u8fd9\u4ef6\u4e8b\u60c5\u5e76\u4e0d\u96be\u3002\u53ea\u8981\u2026\u2026</p> <p>\u9009\u62e9\uff1a\u8ba9\u65f6\u949f\u62a5\u51fa\u73b0\u5728\u65f6\u523b</p> <p>\u4f60\u80fd\u60f3\u5230\uff0c\u90a3\u4e2a\u65f6\u949f\u4e3a\u4ec0\u4e48\u4f1a\u6162\uff12\u4e2a\u5c0f\u65f6\u5417\uff1f</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u90a3\u4e48\uff0c\u8bf7\u4f60\u51fa\u793a\u80fd\u591f\u8bf4\u660e\u65f6\u949f\u4e3a\u4f55\u4f1a\u6162\uff12\u5c0f\u65f6\u7684\u8bc1\u7269\uff01</p> <p>\u4e3e\u8bc1\uff1a\u62a4\u7167</p> <p>\uff08\u600e\u3001\u600e\u4e48\u7a81\u7136\u4e22\u51fa\u8fd9\u6837\u7684\u95ee\u9898\u2026\u2026\uff09</p> <p>\u4e3e\u8bc1\uff1a\u5c0f\u96d5\u50cf</p> <p>\u7b2c1\u8bdd\u7ed3\u675f\u3002</p>"},{"location":"game/aceattorney/#\u9006\u8f6c\u59d0\u59b9","title":"\u9006\u8f6c\u59d0\u59b9","text":"\u6e38\u620f\u653b\u7565 \u7b2c\u4e00\u65e5\u2027\u8c03\u67e5\u7b2c\u4e8c\u65e5\u2027\u6cd5\u5ead\u7b2c\u4e8c\u65e5\u2027\u8c03\u67e5\u7b2c\u4e09\u65e5\u2027\u6cd5\u5ead <p>\u7eeb\u91cc\u6cd5\u5f8b\u4e8b\u52a1\u6240</p> <p>\u79fb\u52a8\uff1a\u6240\u957f\u5ba4</p> <p>\u8c03\u67e5\uff1a\u3010\u5de6\u5c4f\u5e55\u3011\u5343\u5bfb\u3001\u7eb8\u6761\uff08\u8c03\u67e5\u5343\u5bfb\u540e\u51fa\u73b0\uff09\u3001\u3010\u53f3\u5c4f\u5e55\u3011\u7535\u8bdd</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u6c89\u601d\u8005\u3001\u73bb\u7483\u788e\u7247\u3001\u6536\u636e</p> <p>\u79fb\u52a8\uff1a\u7eeb\u91cc\u6cd5\u5f8b\u4e8b\u52a1\u6240</p> <p>\u5bf9\u8bdd\uff08\u5973\u5b69\uff09\uff1a\u300c\u8be2\u95ee\u72b6\u51b5\u300d\u300c\u548c\u6240\u957f\u7684\u5173\u7cfb\u300d</p> <p>\u4e3e\u8bc1\uff1a\u6536\u636e</p> <p>\u62d8\u7559\u6240</p> <p>\u5bf9\u8bdd\uff08\u771f\u5bb5\uff09\uff1a\u300c\u5173\u4e8e\u771f\u5bb5\u300d\u300c\u6848\u53d1\u5f53\u5929\u7684\u60c5\u51b5\u300d\u300c\u624b\u673a\u300d\u300c\u7075\u5a92\u5e08\u300d</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u771f\u5bb5\u7684\u5b57\u6761</p> <p>\u7eeb\u91cc\u6cd5\u5f8b\u4e8b\u52a1\u6240</p> <p>\u5bf9\u8bdd\uff08\u7cf8\u952f\uff09\uff1a\u300c\u5173\u4e8e\u5343\u5bfb\u59d0\u300d\u300c\u5173\u4e8e\u771f\u5bb5\u300d\u300c\u5fa1\u5251\u68c0\u5bdf\u5b98\u300d</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u7eeb\u91cc\u5343\u5bfb\u7684\u89e3\u5256\u7eaa\u5f55</p> <p>\u4e3e\u8bc1\uff1a\u771f\u5bb5\u7684\u5b57\u6761</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u771f\u5bb5\u7684\u624b\u673a</p> <p>\u677f\u4e1c\u65c5\u9986</p> <p>\u8c03\u67e5\uff1a\u62bd\u5c49\u91cc\u7684\u87ba\u4e1d\u5200</p> <p>\u2192\u6885\u4e16\u767b\u573a</p> <p>\u5bf9\u8bdd\uff08\u6885\u4e16\uff09\uff1a\u300c\u76ee\u51fb\u5230\u7684\u4e8b\u60c5\u300d\u300c\u5173\u4e8e\u6885\u4e16\u300d\u300c\u5173\u4e8e\u8fd9\u4e2a\u623f\u95f4\u300d</p> <p>\u661f\u5f71\u6cd5\u5f8b\u4e8b\u52a1\u6240</p> <p>\u5bf9\u8bdd\uff08\u661f\u5f71\uff09\uff1a\u300c\u62d2\u7edd\u59d4\u6258\u7684\u7406\u7531\u300d\u300c\u5173\u4e8e\u5343\u5bfb\u59d0\u300d\u300c\u5173\u4e8e\u753b\u300d</p> <p>\u62d8\u7559\u6240</p> <p>\u5bf9\u8bdd\uff08\u771f\u5bb5\uff09\uff1a\u300c\u6848\u53d1\u5f53\u5929\u7684\u60c5\u51b5\u300d\u300c\u5173\u4e8e\u5bb6\u4eba\u300d\u300c\u5173\u4e8e\u6bcd\u4eb2\u300d\u300c\u6bc1\u4e86\u6bcd\u4eb2\u4e00\u751f\u7684\u7537\u4eba\u300d</p> <p>\u677f\u4e1c\u65c5\u9986</p> <p>\u8c03\u67e5\uff1a\u62bd\u5c49\u91cc\u7684\u87ba\u4e1d\u5200</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u7a83\u542c\u5668</p> <p>\u8be2\u95ee \uff5e\u902e\u6355\u7eeb\u91cc\u771f\u5bb5\u7684\u7406\u7531\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u7cf8\u952f\u572d\u4ecb\u3011</p> <p>\u8ffd\u95ee\uff1a\u300c\u7406\u7531\u662f\uff01\u56e0\u4e3a\u6709\u62a5\u8b66\u8005\u7684\u76ee\u51fb\u8bc1\u8a00\uff01\u300d\u4ee5\u53ca\u300c\u8fd9\u4f4d\u62a5\u8b66\u8005\u4eb2\u773c\u770b\u5230\u88ab\u544a\u72af\u6848\u7684\u90a3\u4e00\u523b\uff01\u300d</p> <p>\u8be2\u95ee \uff5e\u65e0\u5eb8\u7f6e\u7591\u7684\u8bc1\u636e\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u7cf8\u952f\u572d\u4ecb\u3011</p> <p>\u4e3e\u8bc1\uff1a\u300c\u4e5f\u5c31\u662f\u8bf4\uff0c\u88ab\u5bb3\u4eba\u5728\u6b7b\u4ea1\u524d\u4e00\u523b\uff0c\u5199\u4e0b\u4e86\u72af\u4eba\u7684\u540d\u5b57\uff01\u300d\u65f6\u9009\u300c\u7eeb\u91cc\u5343\u5bfb\u7684\u89e3\u5256\u7eaa\u5f55\u300d</p> <p>\u4ec0\u3001\u4ec0\u4e48\u65f6\u5019\u2026\u2026</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u4f60\u6709\u4ec0\u4e48\u60f3\u8bf4\u7684\u8bdd\u5417\uff1f</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u8fa9\u62a4\u4eba\u2026\u2026\u4f60\u8fd8\u8981\u8fdb\u884c\u201c\u8baf\u95ee\u201d\u5417\uff1f</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u8be2\u95ee \uff5e\u4e8b\u4ef6\u5f53\u665a\u7684\u76ee\u51fb\u5185\u5bb9\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u677e\u7af9\u6885\u4e16\u3011</p> <p>\u8ffd\u95ee\uff1a\u300c\u653b\u51fb\u5979\u7684\u4eba\uff0c\u5f53\u7136\u5c31\u662f\u5750\u5728\u88ab\u544a\u5e2d\u7684\u90a3\u4e2a\u5c0f\u5973\u751f\u5566\uff01\u300d\u4ee5\u53ca\u300c\u4f46\u662f\uff0c\u90a3\u4e2a\u5973\u5b69\u8ffd\u4e0a\u53bb\uff0c\u7ed9\u4e86\u5979\u81f4\u547d\u4e00\u51fb\u2026\u2026\uff01\u300d</p> <p>\uff08\u662f\u8fd9\u6837\u7684\u5417\u2026\u2026\uff09</p> <p>\u9009\u62e9\uff1a\u521a\u521a\u7684\u8bf4\u6cd5\u5f88\u5947\u602a</p> <p>\u6885\u4e16\u5c0f\u59d0\u2026\u2026\u4f60\u2026\u2026</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u8be2\u95ee \uff5e\u4e8b\u4ef6\u5f53\u665a\u7684\u76ee\u51fb\u5185\u5bb9\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u677e\u7af9\u6885\u4e16\u3011</p> <p>\u4e3e\u8bc1\uff1a\u300c\u5c31\u662f\u90a3\u4e2a\u65f6\u949f\u554a\u2026\u2026\u5b83\u7684\u5916\u89c2\u662f\u201c\u6c89\u601d\u8005\u201d\u7684\u5c0f\u96d5\u50cf\u5594\uff01\u300d\u65f6\u9009\u300c\u6c89\u601d\u8005\u300d</p> <p>\u56e0\u4e3a\u2026\u2026</p> <p>\u9009\u62e9\uff1a\u65f6\u949f\u4e0d\u53ef\u80fd\u62a5\u65f6</p> <p>\u90a3\u4e2a\u65f6\u949f\u662f\u4e0d\u53ef\u80fd\u54cd\u8d77\u6765\u7684\uff01\u2026\u2026\u56e0\u4e3a\uff0c</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u80fd\u591f\u8bc1\u660e\u201c\u65f6\u949f\u7684\u673a\u68b0\u90e8\u5206\u4f55\u65f6\u88ab\u62c6\u4e0b\u201d\u7684\u8bc1\u7269\u662f\u2026\u2026</p> <p>\u4e3e\u8bc1\uff1a\u771f\u5bb5\u7684\u624b\u673a</p> <p>\u2026\u2026\u8fa9\u62a4\u4eba\u3002\u8fd9\u6837\u662f\u5426\u6ca1\u95ee\u9898\u4e86\u5462\uff1f</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u54ea\u4e00\u4ef6\u8bc1\u7269\uff0c\u80fd\u591f\u8bc1\u660e\u8bc1\u4eba\u4e0d\u66fe\u89c1\u8fc7\u8fd9\u4e2a\u65f6\u949f\u5462\uff1f</p> <p>\u4e3e\u8bc1\uff1a\u6c89\u601d\u8005</p> <p>\u677e\u7af9\u6885\u4e16\u4e3a\u4ec0\u4e48\u4f1a\u77e5\u9053\uff0c\u8fd9\u4e2a\u51f6\u5668\u662f\u4e2a\u65f6\u949f\uff1f\u90a3\u662f\u56e0\u4e3a\u2500\u2500</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u4f1a\u56e0\u4e3a\u9009\u62e9\u300c\u5979\u5b9e\u9645\u62ff\u5728\u624b\u4e2d\u8fc7/\u5979\u542c\u5230\u4e86\u8fd9\u4e2a\u6d88\u606f\u300d\u800c\u5bf9\u540e\u9762\u7684\u5267\u60c5\u6709\u5f71\u54cd</p> <p>\u300c\u7a83\u542c\u5668\u300d\u2192\u300c\u771f\u5bb5\u7684\u624b\u673a\u300d\u6216\u8005\u300c\u771f\u5bb5\u7684\u624b\u673a\u300d\u2192\u300c\u7a83\u542c\u5668\u300d\u90fd\u53ef\u4ee5\u3002</p> <p>\uff08\u4e00\u5b9a\u8981\u8d81\u8fd9\u65f6\u5019\u7ed9\u5979\u81f4\u547d\u4e00\u51fb\uff01\uff09</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u8fd9\u3001\u8fd9\u4e2a\u561b\u2026\u2026\uff08\u8fd8\u5269\u4e0b\u4ec0\u4e48\u624b\u6bb5\u2026\u2026\uff1f\uff09</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\uff08\u2026\u2026\u8be5\u600e\u4e48\u529e\u5462\uff1f\uff09</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u8be2\u95ee \uff5e\u5173\u4e8e\u6885\u4e16\u7684\u5ba2\u623f\u670d\u52a1\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u7537\u670d\u52a1\u751f\u3011</p> <p>\u8ffd\u95ee\uff1a\u300c\u8bb0\u5f97\u90a3\u5929\u665a\u4e0a\u5927\u6982\uff18\u70b9\u591a\uff0c\u6885\u4e16\u5c0f\u59d0\u6253\u7535\u8bdd\u8fc7\u6765\u3002\u300d\u300c\u5979\u5e0c\u671b\u6211\u5728\uff19\u70b9\u6574\u7684\u65f6\u5019\uff0c\u62ff\u51b0\u5496\u5561\u8fc7\u53bb\u3002\u300d\u300c\u56e0\u6b64\u6211\u5c31\u5728\uff19\u70b9\u6574\u7684\u65f6\u5019\uff0c\u5c06\u51b0\u5496\u5561\u9001\u5230\u5979\u7684\u5ba2\u623f\u3002\u300d\u4efb\u610f\u4e00\u53e5</p> <p>\u8ffd\u95ee\uff1a\u300c\u51b0\u5496\u5561\u786e\u5b9e\u662f\u62ff\u7ed9\u4e86\u8fd9\u4f4d\u5973\u58eb\uff0c\u6ca1\u6709\u9519\u7684\u3002\u300d</p> <p>\uff08\u771f\u7684\u8981\u8fd9\u6837\u653e\u4ed6\u8d70\u5417\uff01\uff09</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\uff08\u8be5\u95ee\u4ed6\u4ec0\u4e48\u95ee\u9898\u2026\u2026\uff01\uff09</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u2026\u2026\u8fd9\u4e2a\u4eba\u5c31\u662f\u2500\u2500</p> <p>\u9009\u62e9\uff1a\u8ddf\u6885\u4e16\u5728\u4e00\u8d77\u7684\u7537\u4eba</p> <p>\u83b7\u5f97\u8bc1\u636e\uff1a\u6885\u4e16\u7684\u8bc1\u8a00\u4e66</p> <p>\u62d8\u7559\u6240</p> <p>\u5bf9\u8bdd\uff08\u6885\u4e16\uff09\uff1a\u300c\u5173\u4e8e\u90a3\u4e2a\u201c\u7537\u4eba\u201d\u300d\u300c \u5173\u4e8e\u7a83\u542c\u300d\u300c\u626d\u66f2\u7684\u4e2a\u6027\u300d</p> <p>\u661f\u5f71\u6cd5\u5f8b\u4e8b\u52a1\u6240</p> <p>\u8c03\u67e5\uff1a\u684c\u5b50\u4e0a\u7684\u7167\u7247</p> <p>\u8981\u770b\u54ea\u4e00\u5f20\u7167\u7247\u5462\u2026\u2026\uff1f</p> <p>\u9009\u62e9\uff1a\u201c\uff24\uff2c\uff16\u53f7\u4e8b\u4ef6\u2027\u8d44\u6599\uff12\u201d</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u7167\u7247</p> <p>\u677f\u4e1c\u65c5\u9986</p> <p>\u5bf9\u8bdd\uff08\u7537\u670d\u52a1\u751f\uff09\uff1a\u300c\u5173\u4e8e\u6885\u4e16\u300d\u300c\u5728\u4e00\u8d77\u7684\u7537\u4eba\u300d\u300c\u5173\u4e8e\u8fd9\u5bb6\u65c5\u9986\u300d</p> <p>\u4e3e\u8bc1\uff1a\u7167\u7247</p> <p>\u5ba3\u8a93\u4e66\uff1f\uff08\u600e\u4e48\u529e\u5462\u2026\u2026\uff09</p> <p>\u9009\u62e9\uff1a\u8bf7\u4ed6\u5199</p> <p>\u83b7\u5f97\u8bc1\u636e\uff1a\u7537\u670d\u52a1\u751f\u7684\u5ba3\u8a93\u4e66</p> <p>\u62d8\u7559\u6240</p> <p>\u4e3e\u8bc1\uff1a\u7537\u670d\u52a1\u751f\u7684\u5ba3\u8a93\u4e66</p> <p>\uff08\u597d\u3002\u53ea\u5dee\u6700\u540e\u4e00\u6b65\u4e86\uff01\uff09</p> <p>\u9009\u62e9\uff1a\u5927\u58f0\u5a01\u80c1\u5979</p> <p>\u79fb\u52a8\uff1a\u5c0f\u4e2d\u6587\u5316</p> <p>\u5c0f\u4e2d\u6587\u5316</p> <p>\u5bf9\u8bdd\uff08\u5c0f\u4e2d\uff09\uff1a\u300c\u5173\u4e8e\u6885\u4e16\u300d\u300c\u6848\u53d1\u5f53\u665a\u300d\u300c\u5c0f\u4e2d\u6587\u5316\u300d\u300c\u5173\u4e8e\u753b\u300d</p> <p>\u5bf9\u8bdd\u300c\u5173\u4e8e\u753b\u300d\u7684\u9009\u9879</p> <p>\u9009\u62e9\uff1a\u300c\u6211\u66fe\u7ecf\u89c1\u8fc7\u300d\u4ee5\u53ca\u300c\u662f\u4ec0\u4e48\u65f6\u5019\u62ff\u5230\u624b\u7684\uff1f\u300d</p> <p>\u661f\u5f71\u6cd5\u5f8b\u4e8b\u52a1\u6240</p> <p>\u5bf9\u8bdd\uff08\u661f\u5f71\uff09\uff1a\u300c\u4eca\u5929\u7684\u6cd5\u5ead\u300d\u300c\u62d2\u7edd\u59d4\u6258\u7684\u7406\u7531\u300d\u300c\u5173\u4e8e\u5c0f\u4e2d\u300d</p> <p>\u5bf9\u8bdd\u300c\u5173\u4e8e\u5c0f\u4e2d\u300d\u7684\u9009\u9879</p> <p>\u90a3\u5c31\u662f\u2026\u2026</p> <p>\u9009\u62e9\uff1a\u300c\u90a3\u5e45\u5f88\u5927\u7684\u753b\u300d\u2192\u300c\u5a01\u80c1\u8005\u548c\u88ab\u5a01\u80c1\u8005\u300d</p> <p>\u5bf9\u8bdd\uff08\u661f\u5f71\uff09\uff1a\u300c\uff24\uff2c\uff16\u53f7\u4e8b\u4ef6\u300d\u300c\u906d\u5230\u5a01\u80c1\u7684\u7406\u7531\u300d</p> <p>\u7eeb\u91cc\u6cd5\u5f8b\u4e8b\u52a1\u6240</p> <p>\u8c03\u67e5\uff1a\u4e66\u67b6</p> <p>\u8be5\u4ece\u54ea\u8fb9\u770b\u8d77\u5462\u2026\u2026\uff1f</p> <p>\u9009\u62e9\uff1a\u53f3\u624b\u8fb9</p> <p>\u600e\u4e48\u529e\u5462\uff1f\u8981\u9605\u8bfb\u770b\u770b\u5417\u2026\u2026\uff1f</p> <p>\u9009\u62e9\uff1a\u8981</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u65b0\u95fb\u62a5\u9053</p> <p>\u5c0f\u4e2d\u6587\u5316</p> <p>\u4e3e\u8bc1\uff1a\u65b0\u95fb\u62a5\u9053</p> <p>\u5c0f\u4e2d\u5148\u751f\u3002\u4f60\u4e00\u5b9a\u662f\u2026\u2026\u4f60\u4e00\u5b9a\u662f\u8c03\u67e5\u4e86\u8fd9\u4e2a\u653f\u6cbb\u4eba\u7269\u3002</p> <p>\u9009\u62e9\uff1a\u5a01\u80c1\u4e86\u8fd9\u4e2a\u653f\u6cbb\u4eba\u7269</p> <p>\u7b49\u7b49\u2026\u2026\u5c0f\u4e2d\u5148\u751f\u3002\u4f60\u521a\u521a\u8bf4\u7684\u90a3\u4e9b\u8bdd\u2500\u2500</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u62d8\u7559\u6240</p> <p>\u5bf9\u8bdd\uff0c\u4efb\u610f\u9009\u9879</p> <p>\uff08\u600e\u4e48\u529e\u5462\uff0c\u867d\u7136\u63d0\u4e86\u53ef\u80fd\u4e5f\u6ca1\u7528\uff0c\u4f46\u662f\u8981\u4e0d\u8981\u63d0\u51fa\u6765\u8bd5\u8bd5\u770b\u5462\uff1f\uff09</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u8be2\u95ee \uff5e\u4e8b\u4ef6\u5f53\u665a\u76ee\u51fb\u5230\u7684\u60c5\u51b5\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u5c0f\u4e2d\u5927\u3011</p> <p>\u8ffd\u95ee\uff1a\u300c\u88ab\u5bb3\u4eba\u2026\u2026\u62fc\u547d\u5730\u9003\u8dd1\uff0c\u4f46\u8fd8\u662f\u88ab\u4f60\u8ffd\u4e0a\u4e86\uff01\u300d</p> <p>\u2192\u8bc1\u8a00\u53d8\u66f4</p> <p>\u4e3e\u8bc1\uff1a\u300c\u88ab\u5bb3\u4eba\u5f80\u5de6\u65b9\u9003\u8d70\uff0c\u4f46\u8fd8\u662f\u88ab\u4f60\u8ffd\u4e0a\u4e86\uff01\u300d\u65f6\u9009\u300c\u6885\u4e16\u7684\u8bc1\u8a00\u4e66\u300d</p> <p>\u5173\u4e8e\u8fd9\u4e2a\u201c\u77db\u76fe\u201d\uff0c\u4f60\u6709\u4ec0\u4e48\u60f3\u6cd5\u5462\uff1f</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\uff08\u628a\u4e8b\u4ef6\u53d1\u751f\u65f6\u5c0f\u4e2d\u6240\u5728\u7684\u4f4d\u7f6e\u6307\u51fa\u7ed9\u5927\u5bb6\u770b\u5427\uff01\uff09</p> <p>\u9009\u62e9\uff1a\u72af\u4eba\u7ad9\u7740\u7684\u5730\u65b9</p> <p>\u8be2\u95ee \uff5e\u5173\u4e8e\u201c\u5f80\u5de6\u8fb9\u9003\u8d70\u201d\u7684\u8bc1\u8a00\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u5c0f\u4e2d\u5927\u3011</p> <p>\u4e3e\u8bc1\uff1a\u300c\u63a5\u7740\u5979\u4f7f\u51fa\u6700\u540e\u7684\u529b\u91cf\uff0c\u8bd5\u56fe\u5f80\u53f3\u8fb9\u9003\u8d70\u3002\u300d\u300c\u800c\u4f60\u9a6c\u4e0a\u8ffd\u4e86\u8fc7\u53bb\uff0c\u7ed9\u4e86\u5979\u6700\u540e\u4e00\u51fb\u3002\u300d\u300c\u2026\u2026\u8fd9\u91cc\u5c31\u662f\u6885\u4e16\u770b\u5230\u7684\u90e8\u5206\u3002\u300d\u300c\u5982\u4f55\uff1f\u4e5f\u5c31\u662f\u8bf4\uff0c\u4f60\u603b\u5171\u6bb4\u6253\u4e86\uff12\u6b21\u3002\u300d\u4e2d\u4efb\u610f\u4e00\u9879\u4e3e\u8bc1\u300c\u7eeb\u91cc\u5343\u5bfb\u7684\u89e3\u5256\u7eaa\u5f55\u300d</p> <p>\u8be2\u95ee \uff5e\u5173\u4e8e\uff12\u4eba\u8bc1\u8a00\u7684\u77db\u76fe\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u5c0f\u4e2d\u5927\u3011</p> <p>\u8ffd\u95ee\uff1a\u300c\u8fd9\u4e2a\u2026\u2026\u90a3\u4e2a\u2026\u2026\u6211\u662f\u542c\u5230\u90a3\u4e1c\u897f\u5012\u4e0b\u7684\u58f0\u97f3\uff0c\u624d\u62ac\u5934\u770b\u5bf9\u9762\u7684\u7a97\u6237\u3002\u300d</p> <p>\u2026\u2026\u4f60\u4e0d\u89c9\u5f97\u6709\u4e9b\u5947\u602a\u5417\uff1f</p> <p>\u9009\u62e9\uff1a\u662f\u6709\u4e9b\u5947\u602a</p> <p>\u2192\u8bc1\u8a00\u53d8\u66f4</p> <p>\u4e3e\u8bc1\uff1a\u300c\u6211\u770b\u5411\u5bf9\u9762\u7684\u7a97\u6237\uff0c\u770b\u5230\u6709\u7acb\u706f\u5012\u5728\u5730\u4e0a\u3002\u300d\u65f6\u9009\u300c\u5e73\u9762\u56fe\u300d\u4ee5\u53ca\u300c\u73bb\u7483\u788e\u7247\u300d</p> <p>\uff08\u6ca1\u95ee\u9898\u4e86\u5417\u2026\u2026\uff1f\uff09</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u5f85\u5728\u65c5\u9986\u91cc\u9762\u7684\u4eba\uff0c\u7edd\u5bf9\u4e0d\u53ef\u80fd\u770b\u5230\u5012\u4e0b\u53bb\u4e4b\u524d\u7684\u7acb\u706f\uff01</p> <p>\u4e3e\u8bc1\uff1a\u5e73\u9762\u56fe</p> <p>\u8be2\u95ee \uff5e\u5173\u4e8e\u5b89\u88c5\u7a83\u542c\u5668\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u5c0f\u4e2d\u5927\u3011</p> <p>\u8ffd\u95ee\uff1a\u5168\u90e8</p> <p>\u8be2\u95ee \uff5e\u5173\u4e8e\u5b89\u88c5\u7a83\u542c\u5668\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u5c0f\u4e2d\u5927\u3011</p> <p>\u4e3e\u8bc1\uff1a\u5728\u4efb\u610f\u8bc1\u8a00\u65f6\u4e3e\u8bc1\u300c\u6536\u636e\u300d</p> <p>\uff08\u2026\u2026\u4e0d\u80fd\u8ba9\u4ed6\u5f97\u901e\uff01\uff09</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u83b7\u5f97\u8bc1\u636e\uff1a\u5343\u5bfb\u7684\u5b57\u6761</p> <p>\u5e0c\u671b\u8bf7\u5927\u5bb6\u6ce8\u610f\u542c\u6211\u63a5\u4e0b\u6765\u9605\u8bfb\u7684\u5185\u5bb9\uff01</p> <p>\u4e3e\u8bc1\uff1a\u5343\u5bfb\u7684\u5b57\u6761</p> <p>\u7b2c2\u8bdd\u7ed3\u675f\u3002</p>"},{"location":"game/aceattorney/#\u9006\u8f6c\u7684\u5927\u5c06\u519b","title":"\u9006\u8f6c\u7684\u5927\u5c06\u519b","text":"\u6e38\u620f\u653b\u7565 \u7b2c\u4e00\u65e5\u2027\u8c03\u67e5\u7b2c\u4e8c\u65e5\u2027\u6cd5\u5ead\u7b2c\u4e8c\u65e5\u2027\u8c03\u67e5\u7b2c\u4e09\u65e5\u2027\u6cd5\u5ead\u7b2c\u4e09\u65e5\u2027\u8c03\u67e5\u6700\u7ec8\u65e5\u2027\u6cd5\u5ead <p>\u6210\u6b69\u5802\u6cd5\u5f8b\u4e8b\u52a1\u6240</p> <p>\u79fb\u52a8\uff1a\u62d8\u7559\u6240</p> <p>\u62d8\u7559\u6240</p> <p>\u5bf9\u8bdd\uff08\u8377\u661f\uff09\uff1a\u300c\u5173\u4e8e\u4e8b\u4ef6\u300d\u300c\u5c06\u519b\u8d85\u4eba\u300d\u300c\u8377\u661f\u7684\u4e0d\u5728\u573a\u8bc1\u660e\u300d</p> <p>\u79fb\u52a8\uff1a\u5236\u7247\u5382\u2027\u5927\u95e8\u524d</p> <p>\u5236\u7247\u5382\u2027\u5927\u95e8\u524d</p> <p>\u5bf9\u8bdd\uff08\u5927\u5a76\uff09\uff1a\u300c\u5173\u4e8e\u6444\u5f71\u68da\u300d\u300c\u5173\u4e8e\u8377\u661f\u300d\u300c\u963f\u888b\u300d\u300c\u8ba4\u4e3a\u662f\u72af\u4eba\u7684\u7406\u7531\u300d</p> <p>\u79fb\u52a8\uff1a\u62d8\u7559\u6240</p> <p>\u62d8\u7559\u6240</p> <p>\u5bf9\u8bdd\uff08\u8377\u661f\uff09\uff1a\u300c\u5173\u4e8e\u4e0d\u5728\u573a\u8bc1\u660e\u300d\u300c\u5927\u5a76\u300d</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u8377\u661f\u4e09\u90ce\u7684\u59d4\u6258\u4e66</p> <p>\u5236\u7247\u5382\u2027\u5927\u95e8\u524d</p> <p>\u4e3e\u8bc1\uff1a\u8377\u661f\u4e09\u90ce\u7684\u59d4\u6258\u4e66</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u5e73\u9762\u56fe</p> <p>\u7b2c\uff11\u6444\u5f71\u68da\u524d</p> <p>\u5bf9\u8bdd\uff08\u7cf8\u952f\uff09\uff1a\u300c\u641c\u67e5\u7684\u72b6\u51b5\u300d\u300c\u902e\u6355\u7684\u7406\u7531\u300d\u300c\u5927\u5a76\u300d\u300c\u51b3\u5b9a\u6027\u7684\u8bc1\u636e\u300d</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u8863\u888b\u6b66\u5fd7\u7684\u89e3\u5256\u7eaa\u5f55</p> <p>\u5236\u7247\u5382\u2027\u5927\u95e8\u524d</p> <p>\u5bf9\u8bdd\uff08\u5927\u5a76\uff09\uff1a\u300c\u8bc1\u636e\u7167\u7247\u300d\u300c\u8ba4\u4e3a\u662f\u72af\u4eba\u7684\u7406\u7531\u300d\u300c\u963f\u888b\u300d\u300c\u81ea\u52a8\u62cd\u6444\u7684\u76f8\u673a\u300d</p> <p>\u79fb\u52a8\uff1a\u5de5\u4f5c\u4eba\u5458\u4f5c\u4e1a\u533a</p> <p>\u5de5\u4f5c\u4eba\u5458\u4f5c\u4e1a\u533a</p> <p>\u79fb\u52a8\uff1a\u6f14\u5458\u4f11\u606f\u5ba4</p> <p>\u6f14\u5458\u4f11\u606f\u5ba4</p> <p>\u8c03\u67e5\uff1a\u684c\u4e0b\u7684\u5305\u5305</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u95e8\u7981\u5361</p> <p>\u7b2c\uff11\u6444\u5f71\u68da\u524d</p> <p>\u8c03\u67e5\uff1a\u7b2c\uff11\u6444\u5f71\u68da\u7684\u95e8\uff08\u5199\u7740\u300c1<sup>st</sup>\u300d\u5b57\u6837\uff09</p> <p>\u79fb\u52a8\uff1a\u7b2c\uff11\u6444\u5f71\u68da\u5185</p> <p>\u7b2c\uff11\u6444\u5f71\u68da\u5185</p> <p>\u8c03\u67e5\uff1a\u76d1\u63a7\u6444\u50cf\u5934\u548c\u7167\u660e\u9053\u5177</p> <p>\u5bf9\u8bdd\uff08\u5de5\u4f5c\u4eba\u5458\uff09\uff1a\u300c\u6848\u53d1\u5f53\u5929\u7684\u60c5\u51b5\u300d\u300c\u5173\u4e8e\u8377\u661f\u300d\u300c\u89c9\u5f97\u6709\u5176\u4ed6\u4eba\u5728\u300d</p> <p>\u5236\u7247\u5382\u2027\u5927\u95e8\u524d</p> <p>\u5bf9\u8bdd\uff08\u5927\u5a76\uff09\uff1a\u300c\u5de5\u4f5c\u4eba\u5458\u7684\u8bc1\u8a00\u300d</p> <p>\u8c03\u67e5\uff1a\u8b66\u536b\u5ba4\u7684\u7535\u8111</p> <p>\uff08\u8981\u64cd\u4f5c\u8fd9\u53f0\u7535\u8111\u5417\uff1f\uff09</p> <p>\u9009\u62e9\uff1a\u8981</p> <p>\u201c\u8bf7\u8f93\u5165\u76d1\u63a7\u6444\u50cf\u5934\u7684\u7f16\u53f7\u201d</p> <p>\u9009\u62e9\uff1a\uff33\uff34\uff11\u2015\uff13\uff10\uff17</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u8377\u661f\uff08\uff1f\uff09\u7684\u7167\u7247</p> <p>\uff08\u600e\u4e48\u529e\uff1f\u8981\u518d\u542c\u4e00\u6b21\u5417\u2026\u2026\uff1f\uff09</p> <p>\u9009\u62e9\uff1a\u9009\u62e9\u300c\u4e0d\u9700\u8981\u300d\u540e\u7ee7\u7eed</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u5c06\u519b\u957f\u67aa</p> <p>\u8be2\u95ee \uff5e\u5173\u4e8e\u6848\u53d1\u5f53\u5929\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u5927\u573a\u718f\uff08\u5927\u5a76\uff09\u3011</p> <p>\u4e3e\u8bc1\uff1a\u300c\u5728\uff12\u70b9\u591a\u7684\u65f6\u5019\uff0c\u6709\u4e2a\u7537\u4eba\u7ecf\u8fc7\u5927\u5a76\u6211\u7684\u773c\u524d\u3002\u300d\u4ee5\u53ca\u300c\u5c31\u662f\u8377\u661f\u5566\u3002\u6211\u770b\u5230\u4ed6\u671d\u7740\u6444\u5f71\u68da\u65b9\u5411\u8d70\u53bb\u3002\u300d\u65f6\u9009\u300c\u8377\u661f\uff08\uff1f\uff09\u7684\u7167\u7247\u300d</p> <p>\u8be2\u95ee \uff5e\u7167\u7247\u4e2d\u7684\u7537\u4eba\u5c31\u662f\u8377\u661f\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u5927\u573a\u718f\uff08\u5927\u5a76\uff09\u3011</p> <p>\u8ffd\u95ee\uff1a\u300c\u4e0a\u5348\u7684\u65f6\u5019\uff0c\u4ed6\u4eec\u5728\u5de5\u4f5c\u4eba\u5458\u4f5c\u4e1a\u533a\u5f00\u4f1a\u3002\u300d\u4ee5\u53ca\u300c\u5f00\u4f1a\u7684\u65f6\u5019\uff0c\u8377\u661f\u90a3\u5bb6\u4f19\u7adf\u7136\u4e0d\u5c0f\u5fc3\u8dcc\u5012\u3002\u300d</p> <p>\u8ffd\u95ee\uff1a\u300c\u91cd\u8981\u7684\u5c0f\u9053\u5177\u4e5f\u56e0\u6b64\u574f\u6389\uff0c\u7740\u5b9e\u60f9\u4e86\u4e9b\u9ebb\u70e6\u5462\u3002\u300d</p> <p>\uff08\u5ba1\u5224\u957f\u4f3c\u4e4e\u6709\u4e9b\u72b9\u8c6b\u2026\u2026\uff09</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u8be2\u95ee \uff5e\u7eed\u2027\u5173\u4e8e\u6848\u53d1\u5f53\u5929\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u5927\u573a\u718f\uff08\u5927\u5a76\uff09\u3011</p> <p>\u4e3e\u8bc1\uff1a\u300c\u5728\u90a3\u4e2a\u65f6\u95f4\u4e4b\u524d\uff0c\u5927\u5a76\u6211\u552f\u4e00\u770b\u5230\u7684\u4eba\uff0c\u5c31\u53ea\u6709\u8377\u661f\u3002\u300d\u300c\u6ca1\u6709\u5176\u4ed6\u4eba\u524d\u5f80\u6444\u5f71\u68da\u4e86\u3002\u300d\u300c\u5982\u679c\u8fd8\u6709\u5176\u4ed6\u4eba\uff0c\u5927\u5a76\u6211\u662f\u4e00\u5b9a\u4f1a\u770b\u5230\u7684\uff01\u300d\u7684\u4efb\u610f\u4e00\u9879\u9009\u62e9\u300c\u8377\u661f\uff08\uff1f\uff09\u7684\u7167\u7247\u300d</p> <p>\u8be2\u95ee \uff5e\u5173\u4e8e\u201c\u53e6\u4e00\u4e2a\u4eba\u7269\u201d\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u5927\u573a\u718f\uff08\u5927\u5a76\uff09\u3011</p> <p>\u8ffd\u95ee\uff1a\u300c\u73b0\u5728\u56de\u60f3\u8d77\u6765\uff0c\u6848\u53d1\u5f53\u5929\uff0c\u6211\u6709\u5220\u6389\uff11\u5f20\u7167\u7247\uff01\u300d</p> <p>\u9664\u4e86\u88ab\u544a\u8377\u661f\u5148\u751f\u4ee5\u5916\uff0c\u8fd8\u6709\u8c01\u53ef\u80fd\u72af\u6848\uff1f</p> <p>\u9009\u62e9\uff1a\u5927\u5a76</p> <p>\uff08\u597d\uff0c\u63a5\u4e0b\u6765\u8be5\u600e\u4e48\u529e\uff1f\u8981\u4e58\u80dc\u8ffd\u51fb\u5417\uff1f\uff09</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u8bf7\u95ee\u662f\u4ec0\u4e48\u8bc1\u636e\uff0c\u80fd\u8bc1\u660e\u5c11\u5e74\u5e76\u975e\u72af\u4eba\uff1f</p> <p>\u4e3e\u8bc1\uff1a\u300c\u8377\u661f\uff08\uff1f\uff09\u7684\u7167\u7247\u300d\u300c\u5c06\u519b\u957f\u67aa\u300d\u300c\u95e8\u7981\u5361\u300d\u7684\u5176\u4e2d\u4e4b\u4e00</p> <p>\u8be2\u95ee \uff5e\u88ab\u6307\u793a\u8981\u9690\u7792\u7684\u4e8b\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u5927\u573a\u718f\uff08\u5927\u5a76\uff09\u3011</p> <p>\u8ffd\u95ee\uff1a\u300c\u5176\u5b9e\u6848\u53d1\u5f53\u5929\uff0c\u5236\u7247\u5382\u4e2d\u8fd8\u6709\u5176\u4ed6\u4eba\u5728\u3002\u300d\u4ee5\u53ca\u300c\u53ef\u662f\u65e2\u7136\u5927\u5bb6\u90fd\u6000\u7591\u5927\u5a76\u6211\u662f\u72af\u4eba\uff0c\u90a3\u6211\u53ea\u597d\u628a\u4ed6\u4eec\u4e5f\u62d6\u4e0b\u6c34\u4e86\uff01\u300d</p> <p>\uff08\u6211\u89c9\u5f97\u8be5\u95ee\u7684\u5e94\u8be5\u90fd\u95ee\u8fc7\u4e86\uff0c\u8be5\u600e\u4e48\u529e\u5462\u2026\u2026\uff09</p> <p>\u9009\u62e9\uff1a\u4e0d\u95ee\u4e86</p> <p>\u6210\u6b69\u5802\u6cd5\u5f8b\u4e8b\u52a1\u6240</p> <p>\u5bf9\u8bdd</p> <p>\u5de5\u4f5c\u4eba\u5458\u4f5c\u4e1a\u533a</p> <p>\u8c03\u67e5\uff1a\u3010\u5de6\u5c4f\u5e55\u3011\u6392\u6c34\u53e3</p> <p>\uff08\u2026\u2026\u5443\u3002\u771f\u5bb5\u662f\u8ba4\u771f\u7684\u3002\u8be5\u600e\u4e48\u529e\u2026\u2026\uff09</p> <p>\u9009\u62e9\uff1a\u6253\u574f\u5427</p> <p>\u5236\u7247\u5382\u2027\u5927\u95e8\u524d</p> <p>\u7834\u574f\u5de5\u4f5c\u4eba\u5458\u4f5c\u4e1a\u533a\u7684\u6392\u6c34\u53e3\u540e\u524d\u5f80\u4f1a\u6709\u4e00\u4f4d\u5de5\u4f5c\u4eba\u5458\u3002</p> <p>\u5bf9\u8bdd\uff08\u5de5\u4f5c\u4eba\u5458\uff09\uff1a\u300c\u5173\u4e8e\u6444\u5f71\u68da\u300d\u300c\u513f\u7ae5\u7c89\u4e1d\u300d\u300c\u5173\u4e8e\u5bfc\u6f14\u7b49\u4eba\u300d</p> <p>\u6f14\u5458\u4f11\u606f\u5ba4</p> <p>\u7834\u574f\u5de5\u4f5c\u4eba\u5458\u4f5c\u4e1a\u533a\u7684\u6392\u6c34\u53e3</p> <p>\u548c\u5de5\u4f5c\u4eba\u5458\u5bf9\u8bdd\u300c\u5173\u4e8e\u5bfc\u6f14\u7b49\u4eba\u300d</p> <p>\u5bf9\u8bdd\uff08\u5b87\u5728\uff09\uff1a\u300c\u6848\u53d1\u5f53\u5929\u7684\u60c5\u51b5\u300d\u300c\u5236\u4f5c\u4eba\u300d\u300c\u5927\u4eba\u7269\u4eec\u300d</p> <p>\u7b2c\uff11\u6444\u5f71\u68da\u524d</p> <p>\u5bf9\u8bdd\u3002</p> <p>\u79fb\u52a8\uff1a\u7b2c\uff12\u6444\u5f71\u68da\u524d</p> <p>\u7b2c\uff12\u6444\u5f71\u68da\u524d</p> <p>\u7834\u574f\u5de5\u4f5c\u4eba\u5458\u4f5c\u4e1a\u533a\u7684\u6392\u6c34\u53e3\u540e\u524d\u5f80\u7b2c\uff12\u6444\u5f71\u68da\u524d\uff0c\u4ece\u5c0f\u6728\u5c4b\u53d1\u51fa\u58f0\u97f3\u3002</p> <p>\u5236\u7247\u5382\u2027\u5927\u95e8\u524d</p> <p>\u5728\u7b2c\uff12\u6444\u5f71\u68da\u524d\u542c\u5230\u58f0\u97f3\uff0c\u4e0e\u6f14\u5458\u4f11\u606f\u5ba4\u7684\u5b87\u5728\u5bf9\u8bdd\u540e\u51fa\u73b0\u5927\u5a76\u3002</p> <p>\u5bf9\u8bdd\uff08\u5927\u5a76\uff09\uff1a\u300c\u513f\u7ae5\u7c89\u4e1d\u300d\u300c\u5173\u4e8e\u5bfc\u6f14\u7b49\u4eba\u300d</p> <p>\u5de5\u4f5c\u4eba\u5458\u4f5c\u4e1a\u533a</p> <p>\u6b63\u95e8\u524d\u51fa\u73b0\u5c0f\u6728\u5c4b\u540e\uff0c\u524d\u5f80\u5de5\u4f5c\u4eba\u5458\u4f5c\u4e1a\u533a\uff0c\u51fa\u73b0\u4e5d\u592a\u3002</p> <p>\u5bf9\u8bdd\uff08\u4e5d\u592a\uff09\uff1a\u300c\u5c06\u519b\u8d85\u4eba\u300d\u300c\u5173\u4e8e\u4e8b\u4ef6\u300d</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u7a7a\u7684\u5c0f\u74f6\u5b50</p> <p>\u5236\u7247\u5382\u2027\u5927\u95e8\u524d</p> <p>\u83b7\u5f97\u300c\u7a7a\u7684\u5c0f\u74f6\u5b50\u300d\u540e\uff0c\u5927\u5a76\u5c31\u4e0d\u89c1\u4e86\u3002</p> <p>\u8c03\u67e5\uff1a\u8b66\u536b\u5ba4</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u5c0f\u6728\u5c4b\u7684\u94a5\u5319</p> <p>\u7b2c\uff12\u6444\u5f71\u68da\u524d</p> <p>\u8c03\u67e5\uff1a\u53f3\u4fa7\u5c0f\u6728\u5c4b\u7684\u95e8</p> <p>\u79fb\u52a8\uff1a\u5c0f\u6728\u5c4b\u5185</p> <p>\u5c0f\u6728\u5c4b\u5185</p> <p>\u5bf9\u8bdd\uff08\u59ec\u795e\uff09\uff1a\u300c\u6848\u53d1\u5f53\u5929\u7684\u60c5\u51b5\u300d\u300c\u5c06\u519b\u8d85\u4eba\u300d\u300c\u5173\u4e8e\u5bfc\u6f14\u300d</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u59ec\u795e\u7684\u5b57\u6761</p> <p>\u6f14\u5458\u4f11\u606f\u5ba4</p> <p>\u4e3e\u8bc1\uff1a\u59ec\u795e\u7684\u5b57\u6761</p> <p>\u7b2c\uff11\u6444\u5f71\u68da\u5185</p> <p>\u8c03\u67e5\uff1a\u6905\u5b50\u4e0a\u7684\u5267\u672c</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u5267\u672c</p> <p>\u5c0f\u6728\u5c4b\u5185</p> <p>\u4e3e\u8bc1\uff1a\u5267\u672c</p> <p>\u2192\u300c\u4ea4\u8c08\u300d\u4e2d\u8ffd\u52a0\u300c\u8def\u88ab\u5835\u4f4f\u300d</p> <p>\u5bf9\u8bdd\uff08\u59ec\u795e\uff09\uff1a\u300c\u8def\u88ab\u5835\u4f4f\u300d</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u53d1\u9afb\u7334\u6bbf\u4e0b\u7684\u5934</p> <p>\u6210\u6b69\u5802\u6cd5\u5f8b\u4e8b\u52a1\u6240</p> <p>\u5bf9\u8bdd\uff0c\u4e0e\u5343\u5bfb\u5408\u6d41\u3002</p> <p>\u5236\u7247\u5382\u2027\u5927\u95e8\u524d</p> <p>\u5bf9\u8bdd\uff08\u5927\u5a76\uff09\uff1a\u300c\u513f\u7ae5\u7c89\u4e1d\u300d\u300c\u5173\u4e8e\u5bfc\u6f14\u7b49\u4eba\u300d\u300c\u5173\u4e8e\u201c\u4eba\u8d28\u201d\u300d</p> <p>\u4e3e\u8bc1\uff1a\u95e8\u7981\u5361</p> <p>\uff08\u8be5\u600e\u4e48\u529e\uff1f\u501f\u7ed9\u5979\u4e4b\u540e\uff0c\u5c31\u65e0\u6cd5\u518d\u8fdb\u5165\u6444\u5f71\u68da\u4e86\u2026\u2026\uff1f\uff09</p> <p>\u9009\u62e9\uff1a\u501f\u5979\u95e8\u7981\u5361</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u5c06\u519b\u8d85\u4eba\u7684\u5361\u7247</p> <p>\u5de5\u4f5c\u4eba\u5458\u4f5c\u4e1a\u533a</p> <p>\u79fb\u52a8\uff1a\u6f14\u5458\u4f11\u606f\u5ba4</p> <p>\u6f14\u5458\u4f11\u606f\u5ba4</p> <p>\u5bf9\u8bdd\uff08\u4e5d\u592a\uff09\uff1a\u300c\u5c06\u519b\u8d85\u4eba\u300d\u300c\u5173\u4e8e\u4e8b\u4ef6\u300d</p> <p>\u4e3e\u8bc1\uff1a\u5c06\u519b\u8d85\u4eba\u7684\u5361\u7247</p> <p>\u5c0f\u6728\u5c4b\u5185</p> <p>\u5bf9\u8bdd\uff08\u5de5\u4f5c\u4eba\u5458\uff09\uff1a\u300c\u513f\u7ae5\u7c89\u4e1d\u300d\u300c\u8863\u888b\u5148\u751f\u300d\u300c\u5173\u4e8e\u201c\u90a3\u4ef6\u4e8b\u201d\u300d</p> <p>\u4e3e\u8bc1\uff1a\u5c06\u519b\u8d85\u4eba\u7684\u5361\u7247</p> <p>\uff08\u2026\u2026\u73b0\u5728\u5230\u5e95\u662f\u4ec0\u4e48\u60c5\u51b5\u554a\uff01\uff09</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u7a00\u6709\u5361</p> <p>\u6f14\u5458\u4f11\u606f\u5ba4</p> <p>\u4e3e\u8bc1\uff1a\u7a00\u6709\u5361</p> <p>\u5bf9\u8bdd\uff08\u4e5d\u592a\uff09\uff1a\u300c\u5c06\u519b\u8d85\u4eba\u300d\u300c\u5173\u4e8e\u4e8b\u4ef6\u300d\u300c\u76ee\u51fb\u5230\u4ec0\u4e48\u300d</p> <p>\u5bf9\u8bdd\u300c\u5c06\u519b\u8d85\u4eba\u300d\u7684\u9009\u9879</p> <p>\u90a3\u6211\u95ee\u4f60\uff0c\u4f60\u559c\u6b22\u5c06\u519b\u8d85\u4eba\u7684\u54ea\u91cc\uff1f</p> <p>\u9009\u62e9\uff1a\u6218\u6597\u7684\u82f1\u59ff</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u5149\u8363\u8db3\u8ff9</p> <p>\u4f60\u76f8\u4fe1\u8377\u661f\u5148\u751f\u7684\u6e05\u767d\u5417\uff1f</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u8be2\u95ee \uff5e\u6848\u53d1\u5f53\u5929\u7684\u4e8b\u60c5\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u5b87\u5728\u62d3\u4e5f\uff08\u5bfc\u6f14\uff09\u3011</p> <p>\u8ffd\u95ee\uff1a\u300c\u4f46\u662f\u6211\u8981\u53bb\u5c0f\u6728\u5c4b\u5f00\u4f1a\uff0c\u6240\u4ee5\u6ca1\u5403\u5230\u3002\u300d</p> <p>\u4f60\u600e\u4e48\u770b\u521a\u624d\u90a3\u756a\u8bdd\uff1f\u4e0d\u89c9\u5f97\u4e0d\u5bf9\u52b2\u5417\uff1f</p> <p>\u9009\u62e9\uff1a\u6709\u77db\u76fe</p> <p>\u8ffd\u95ee\uff1a\u300c\u4f1a\u8bae\u4e2d\u2026\u2026\u5443\uff0c\u6ca1\u6709\u4efb\u4f55\u4eba\uff0c\u90a3\u4e2a\uff0c\u79bb\u5e2d\u8fc7\u3002\u300d</p> <p>\uff08\u2026\u2026\u611f\u89c9\u602a\u602a\u7684\u2026\u2026\uff09</p> <p>\u9009\u62e9\uff1a\u66f4\u4e25\u5389\u5730\u8ffd\u95ee</p> <p>\u8be2\u95ee \uff5e\u5173\u4e8e\u201c\u4f11\u606f\u201d\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u5b87\u5728\u62d3\u4e5f\uff08\u5bfc\u6f14\uff09\u3011</p> <p>\u8ffd\u95ee\uff1a\u300c\u786e\u5b9e\u662f\u6709\u4f11\u606f\u8fc7\u6ca1\u9519\u5566\u2026\u2026\uff08\u7206\uff09\u300d\u300c\u600e\u4e48\u53ef\u80fd\u5728\u8fd9\u4e48\u77ed\u7684\u65f6\u95f4\u5185\u5230\u7b2c\uff11\u6444\u5f71\u68da\u6740\u4eba\u5462\u3002\uff08\u7b11\uff09\u300d</p> <p>\u8fa9\u65b9\u4e3b\u5f20\u5c0f\u6728\u5c4b\u91cc\u7684\u4eba\u66fe\u7ecf\u53bb\u8fc7\u7b2c\uff11\u6444\u5f71\u68da\u5417\uff1f</p> <p>\u9009\u62e9\uff1a\u5f53\u7136\u4e0d\u53ef\u80fd</p> <p>\u8be2\u95ee \uff5e\u6848\u53d1\u5f53\u5929\u7684\u4e8b\u60c5\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u5927\u6edd\u4e5d\u592a\uff08\u4e5d\u592a\uff09\u3011</p> <p>\u4e3e\u8bc1\uff1a\u300c\u8981\u662f\u6211\u6709\u5e26\u7740\u76f8\u673a\uff0c\u4e00\u5b9a\u4f1a\u628a\u90a3\u4e00\u5e55\u62cd\u4e0b\u6765\uff0c\u4e0d\u4f1a\u9519\u8fc7\u7684\u3002\u300d\u65f6\u9009\u300c\u4e5d\u592a\u7684\u6570\u7801\u76f8\u673a\u300d</p> <p>\u8be2\u95ee \uff5e\u6211\u6240\u770b\u5230\u7684\u60c5\u51b5\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u5927\u6edd\u4e5d\u592a\uff08\u4e5d\u592a\uff09\u3011</p> <p>\u8ffd\u95ee\uff1a\u300c\u7136\u540e\u2026\u2026\u574f\u86cb\u5c31\u518d\u4e5f\u4e0d\u52a8\u4e86\uff01\u300d</p> <p>\uff08\u2026\u2026\u8be5\u600e\u4e48\u529e\uff1f\uff09</p> <p>\u9009\u62e9\uff1a\u8fdb\u4e00\u6b65\u8ffd\u95ee</p> <p>\u4e3a\u4ec0\u4e48\u5374\u6ca1\u6709\u770b\u5230\u6218\u6597\u6700\u5173\u952e\u7684\u90e8\u5206\uff1f</p> <p>\u9009\u62e9\uff1a\u51fa\u793a\u8bc1\u7269</p> <p>\u201c\u4e3a\u4ec0\u4e48\u4e5d\u592a\u5c0f\u5f1f\u5c06\u76ee\u5149\u4ece\u6218\u6597\u573a\u9762\u4e2d\u79fb\u5f00\u201d\u2026\u2026\uff1f</p> <p>\u4e3e\u8bc1\uff1a\u4e5d\u592a\u7684\u6570\u7801\u76f8\u673a</p> <p>\u8be2\u95ee \uff5e\u201c\u6ca1\u6709\u62cd\u4e0b\u7167\u7247\u201d\uff1f\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u5927\u6edd\u4e5d\u592a\uff08\u4e5d\u592a\uff09\u3011</p> <p>\u8ffd\u95ee\uff1a\u300c\u7136\u540e\u5c31\u2026\u2026\u5c31\u8fd9\u6837\u7ed3\u675f\u4e86\u3002\u300d</p> <p>\uff08\u4ed6\u771f\u7684\u6ca1\u6709\u62cd\u5230\u7167\u7247\u5417\uff1f\uff09</p> <p>\u9009\u62e9\uff1a\u66f4\u4e25\u5389\u5730\u8ffd\u95ee</p> <p>\u2192\u8bc1\u8a00\u53d8\u66f4</p> <p>\u4e3e\u8bc1\uff1a\u300c\u5728\u90a3\u4e4b\u540e\u6211\u6709\u62cd\u8fc7\u51e0\u5f20\u7167\u7247\uff0c\u4f46\u662f\u5df2\u7ecf\u5220\u6389\u4e86\u3002\u300d\u65f6\u9009\u300c\u201c\u5149\u8363\u8db3\u8ff9\u201d\u300d</p> <p>\u4e3a\u4ec0\u4e48\u8fd9\u4f4d\u5c0f\u670b\u53cb\u8981\u5220\u6389\u7167\u7247\uff1f</p> <p>\u9009\u62e9\uff1a\u5c06\u519b\u8d85\u4eba\u5e76\u6ca1\u6709\u83b7\u80dc</p> <p>\u5230\u5e95\u662f\u54ea\u91cc\u8bef\u4f1a\u4e86\uff01</p> <p>\u9009\u62e9\uff1a\u88ab\u5bb3\u4eba\u662f\u5c06\u519b\u8d85\u4eba</p> <p>\uff08\u5229\u7528\u8fd9\u5f20\u7167\u7247\uff0c\u6307\u51fa\u77db\u76fe\u4e4b\u5904\u5427\uff01\uff09</p> <p>\u9009\u62e9\uff1a\u53f3\u4e0a\u95e8\u67f1\u7684\u6587\u5b57</p> <p>\uff08\u5c06\u771f\u6b63\u7684\u6848\u53d1\u73b0\u573a\u6307\u7ed9\u5ba1\u5224\u957f\u770b\u5427\uff01\uff09</p> <p>\u9009\u62e9\uff1a\u7b2c\uff12\u6444\u5f71\u68da</p> <p>\u8fd9\u5ea7\u7b2c\uff12\u6444\u5f71\u68da\uff0c\u6709\u4e2a\u5f88\u91cd\u8981\u7684\u5730\u65b9\u3002</p> <p>\u9009\u62e9\uff1a\u300c\u6709\u5c0f\u6728\u5c4b\u300d\u4ee5\u53ca\u300c\u8def\u88ab\u5835\u4f4f\u4e86\u300d</p> <p>\u80fd\u591f\u8bc1\u660e\u88ab\u5bb3\u4eba\u8863\u888b\u5148\u751f\u5077\u8d70\u5e03\u5076\u88c5\u7684\u8bc1\u636e\u662f\u4ec0\u4e48\uff01</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u8863\u888b\u5148\u751f\u5077\u8d70\u5c06\u519b\u8d85\u4eba\u5e03\u5076\u88c5\u7684\u8bc1\u636e\u5c31\u662f\uff01</p> <p>\u4e3e\u8bc1\uff1a\u7a7a\u7684\u5c0f\u74f6\u5b50</p> <p>\u5ba1\u5224\u957f\u3002\u2026\u2026\u6211\u6709\u4e00\u4e2a\u63d0\u6848\u3002</p> <p>\u9009\u62e9\uff1a\u8c03\u67e5\u74f6\u5b50\u4e0a\u7684\u6307\u7eb9</p> <p>\u6210\u6b69\u5802\u6cd5\u5f8b\u4e8b\u52a1\u6240</p> <p>\u5bf9\u8bdd</p> <p>\u62d8\u7559\u6240</p> <p>\u5bf9\u8bdd\uff08\u8377\u661f\uff09\uff1a\u300c\u59eb\u795e\u5236\u4f5c\u4eba\u300d\u300c\u5b87\u5728\u5bfc\u6f14\u300d\u300c\u8863\u888b\u5148\u751f\u300d</p> <p>\u5236\u7247\u5382\u2027\u5927\u95e8\u524d</p> <p>\u5bf9\u8bdd\uff08\u5927\u5a76\uff09\uff1a\u300c\u59eb\u795e\u5236\u4f5c\u4eba\u300d\u300c\u5b87\u5728\u5bfc\u6f14\u300d\u300c\u8863\u888b\u5148\u751f\u300d</p> <p>\u5de5\u4f5c\u4eba\u5458\u4f5c\u4e1a\u533a</p> <p>\u5bf9\u8bdd\uff08\u7cf8\u952f\uff09\uff1a\u300c\u76d8\u5b50\u300d\u300c\u5173\u4e8e\u641c\u67e5\u300d\u300c\u5fa1\u5251\u68c0\u5bdf\u5b98\u300d</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u725b\u6392\u7684\u76d8\u5b50\u3001\u5b89\u7720\u836f\u7684\u836f\u74f6</p> <p>\u6f14\u5458\u4f11\u606f\u5ba4</p> <p>\u5bf9\u8bdd\uff08\u5de5\u4f5c\u4eba\u5458\uff09\uff1a\u300c\u8863\u888b\u5148\u751f\u300d\u300c\u6700\u540e\u4e00\u96c6\u300d\u300c\u5236\u7247\u5382\u7684\u51b3\u5b9a\u300d\u300c\uff15\u5e74\u524d\u7684\u4e8b\u6545\u300d</p> <p>\u300c\u5236\u7247\u5382\u505a\u51fa\u7684\u51b3\u5b9a\u300d\u7684\u9009\u9879</p> <p>\u4e0d\u597d\u610f\u601d\u3002\u2026\u2026\u6709\u4e2a\u4e1c\u897f\u5e0c\u671b\u4f60\u80fd\u770b\u770b\u3002</p> <p>\u4e3e\u8bc1\uff1a\u201c\u5149\u8363\u8db3\u8ff9\u201d</p> <p>\u5bf9\u8bdd\uff08\u5de5\u4f5c\u4eba\u5458\uff09\uff1a\u300c\uff15\u5e74\u524d\u7684\u4e8b\u6545\u300d</p> <p>\u5236\u7247\u5382\u2027\u5927\u95e8\u524d</p> <p>\u5bf9\u8bdd\uff08\u5927\u5a76\uff09\uff1a\u300c\uff15\u5e74\u524d\u7684\u4e8b\u6545\u300d</p> <p>\uff08\u80fd\u8bc1\u660e\u8863\u888b\u5148\u751f\u5077\u8d70\u5e03\u5076\u88c5\u7684\u8bc1\u636e\uff0c\u4f1a\u6709\u8fd9\u79cd\u4e1c\u897f\u5417\u2026\u2026\uff1f\uff09</p> <p>\u9009\u62e9\uff1a\u6709\u8bc1\u636e</p> <p>\u80fd\u591f\u8bc1\u660e\u8863\u888b\u5148\u751f\u5077\u8d70\u5e03\u5076\u88c5\u7684\u8bc1\u636e\uff0c\u5c31\u662f\u2026\u2026</p> <p>\u4e3e\u8bc1\uff1a\u300c\u725b\u6392\u7684\u76d8\u5b50\u300d\u4ee5\u53ca\u300c\u5b89\u7720\u836f\u7684\u836f\u74f6\u300d</p> <p>\u300c\u5b89\u7720\u836f\u7684\u836f\u74f6\u300d\u51fa\u73b0\u540e\u7684\u9009\u9879</p> <p>\u4f60\u6709\u4ec0\u4e48\u8bc1\u636e\u53ef\u4ee5\u6307\u51fa\u963f\u888b\u7ed9\u8377\u661f\u4e0b\u4e86\u5b89\u7720\u836f\uff01</p> <p>\u4e3e\u8bc1\uff1a\u725b\u6392\u7684\u76d8\u5b50</p> <p>\u300c\u725b\u6392\u7684\u76d8\u5b50\u300d\u51fa\u73b0\u540e\u7684\u9009\u9879</p> <p>\u6211\u4eec\u6709\u8bc1\u636e\u80fd\u591f\u8bc1\u660e\uff0c\u5b89\u7720\u836f\u662f\u8863\u888b\u5148\u751f\u653e\u7684\u3002</p> <p>\u4e3e\u8bc1\uff1a\u5b89\u7720\u836f\u7684\u836f\u74f6</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\uff15\u5e74\u524d\u4e8b\u6545\u7684\u7167\u7247</p> <p>\u7b2c\uff12\u6444\u5f71\u68da\u524d</p> <p>\u5bf9\u8bdd\uff08\u59ec\u795e\uff09\uff1a\u300c\u8863\u888b\u5148\u751f\u300d\u300c\u5b87\u5728\u5bfc\u6f14\u300d\u300c\u5173\u4e8e\u8377\u661f\u300d</p> <p>\u4e3e\u8bc1\uff1a\uff15\u5e74\u524d\u4e8b\u6545\u7684\u7167\u7247</p> <p>\u79fb\u52a8\uff1a\u5c0f\u6728\u5c4b\u5185</p> <p>\u83b7\u5f97\u8bc1\u636e\uff1a\u53a2\u578b\u8f66</p> <p>\u8be2\u95ee \uff5e\u6848\u53d1\u5f53\u5929\u7684\u4e8b\u60c5\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u59ec\u795e\u6a31\uff08\u59ec\u795e\uff09\u3011</p> <p>\u4e3e\u8bc1\uff1a\u300c\u6211\u548c\u5b87\u5728\u4e00\u8d77\u5728\u5c0f\u6728\u5c4b\u524d\u5403\u4e86\u5e26\u9aa8\u725b\u6392\u3002\u300d\u65f6\u9009\u300c\u725b\u6392\u7684\u76d8\u5b50\u300d</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u4f60\u2026\u2026</p> <p>\u9009\u62e9\uff1a\u6839\u672c\u6ca1\u6709\u5403\u725b\u6392</p> <p>\u90a3\u8fd8\u7528\u8bf4\u5417\uff01</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u4f60\u89c9\u5f97\u6211\u6709\u529e\u6cd5\u81ea\u5982\u6325\u821e\u90a3\u67c4\u6c89\u91cd\u7684\u957f\u67aa\u5417\uff1f</p> <p>\u9009\u62e9\uff1a\u300c\u6211\u8ba4\u4e3a\u4e0d\u884c\u300d\u4ee5\u53ca\u300c\u6211\u4e0d\u77e5\u9053\u300d</p> <p>\u80fd\u8bc1\u660e\u201c\u5c06\u519b\u957f\u67aa\u201d\u5e76\u975e\u672c\u6848\u51f6\u5668\u7684\u8bc1\u636e\u662f\u2026\u2026\uff01</p> <p>\u4e3e\u8bc1\uff1a\u5c06\u519b\u957f\u67aa</p> <p>\u600e\u4e48\u6837\uff1f\u4f60\u6709\u529e\u6cd5\u6307\u51fa\u6740\u5bb3\u8863\u888b\u5148\u751f\u7684\u51f6\u5668\u662f\u4ec0\u4e48\u5417\uff1f</p> <p>\u9009\u62e9\uff1a\u5f53\u7136\u53ef\u4ee5</p> <p>\u90a3\u4e48\uff0c\u5c31\u8bf7\u4f60\u51fa\u793a\u8bc1\u636e\u3002\u6740\u5bb3\u8863\u888b\u5148\u751f\u7684\u51f6\u5668\u7a76\u7adf\u662f\u4ec0\u4e48\uff1f</p> <p>\u4e3e\u8bc1\uff1a\uff15\u5e74\u524d\u4e8b\u6545\u7684\u7167\u7247</p> <p>\u8fa9\u62a4\u4eba\u3002\u2026\u2026\u4f60\u5bf9\u8fd9\u4e2a\u95ee\u9898\u6709\u4f55\u770b\u6cd5\uff1f</p> <p>\u9009\u62e9\uff1a\u300c\u786e\u5b9e\u662f\u4e0d\u53ef\u80fd\u300d\u4ee5\u53ca\u300c\u8fd8\u6709\u5176\u4ed6\u65b9\u6cd5\u300d</p> <p>\u5c31\u8bf7\u4f60\u51fa\u793a\u642c\u8fd0\u9057\u4f53\u7684\u65b9\u6cd5\u3002</p> <p>\u4e3e\u8bc1\uff1a\u53a2\u578b\u8f66</p> <p>\u96be\u9053\u8fa9\u62a4\u4eba\u4e3b\u5f20\u5b87\u5728\u5bfc\u6f14\u4e5f\u662f\u5171\u72af\u5417\uff01</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\uff08\u53ef\u2026\u2026\u53ef\u6076\uff01\u2026\u2026\u8be5\u600e\u4e48\u529e\u2026\u2026\uff01\uff09</p> <p>\u9009\u62e9\uff1a\u300c\u8bf7\u518d\u6b21\u63d0\u4f9b\u8bc1\u8a00\uff01\u300d\u4ee5\u53ca\u300c\u6211\u60f3\u4e0d\u5230\u95ee\u9898\u300d</p> <p>\u8be2\u95ee \uff5e\u53d1\u73b0\u9057\u4f53\u540e\u7684\u4e8b\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u59ec\u795e\u6a31\uff08\u59ec\u795e\uff09\u3011</p> <p>\u8ffd\u95ee\uff1a\u300c\u7136\u540e\u5148\u56de\u5230\u5c0f\u6728\u5c4b\uff0c\u53bb\u62ff\u5267\u672c\u548c\u6f14\u51fa\u7b14\u8bb0\u3002\u300d</p> <p>\u7684\u786e\uff0c\u8bf4\u5f97\u4e5f\u662f\u3002</p> <p>\u9009\u62e9\uff1a\u8fdb\u4e00\u6b65\u8ffd\u95ee</p> <p>\u2192\u8bc1\u8a00\u53d8\u66f4</p> <p>\u4e3e\u8bc1\uff1a\u300c\u56e0\u4e3a\u8863\u888b\u53d7\u4f24\uff0c\u5e94\u8be5\u6ca1\u529e\u6cd5\u5f69\u6392\u52a8\u4f5c\u6865\u6bb5\uff0c\u6240\u4ee5\u6211\u624d\u6ca1\u5e26\u5267\u672c\u3002\u300d\u65f6\u9009\u300c\u8377\u661f\uff08\uff1f\uff09\u7684\u7167\u7247\u300d</p> <p>\u59ec\u795e\u5c0f\u59d0\uff01\u2026\u2026\u4f60\u2026\u2026</p> <p>\u9009\u62e9\uff1a\u770b\u5230\u8ddb\u811a\u7684\u8863\u888b</p> <p>\u4f60\u6709\u529e\u6cd5\u8bc1\u660e\u5979\u7684\u52a8\u673a\u5417\uff1f</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u80fd\u591f\u8bf4\u660e\u672c\u6b21\u4e8b\u4ef6\u201c\u52a8\u673a\u201d\u7684\u8bc1\u7269\u662f\u2026\u2026</p> <p>\u4e3e\u8bc1\uff1a\uff15\u5e74\u524d\u4e8b\u6545\u7684\u7167\u7247</p> <p>\u8bf7\u4f60\u8bf4\u51fa\u5979\u7684\u52a8\u673a\u3002</p> <p>\u9009\u62e9\uff1a\u6ca1\u6709\u52a8\u673a\u53ef\u8bf4\u660e</p> <p>\u4e3a\u4ec0\u4e48\u8863\u888b\u5148\u751f\u8981\u9677\u5bb3\u6211\u2026\u2026\uff1f</p> <p>\u9009\u62e9\uff1a\u51fa\u793a\u8bc1\u7269</p> <p>\u8863\u888b\u5148\u751f\u60f3\u8981\u9677\u5bb3\u4f60\u7684\u7406\u7531\u662f\u2026\u2026</p> <p>\u4e3e\u8bc1\uff1a\u300c\u201c\u5149\u8363\u8db3\u8ff9\u201d\u300d\u4ee5\u53ca\u300c\u8377\u661f\uff08\uff1f\uff09\u7684\u7167\u7247\u300d</p> <p>\u7b2c3\u8bdd\u7ed3\u675f\u3002</p>"},{"location":"game/aceattorney/#\u9006\u8f6c\u7136\u540e\u518d\u89c1","title":"\u9006\u8f6c\uff0c\u7136\u540e\u518d\u89c1","text":"\u6e38\u620f\u653b\u7565 \u7b2c\u4e00\u65e5\u2027\u8c03\u67e5\u7b2c\u4e8c\u65e5\u2027\u6cd5\u5ead\u7b2c\u4e8c\u65e5\u2027\u8c03\u67e5\u7b2c\u4e09\u65e5\u2027\u6cd5\u5ead\u7b2c\u4e09\u65e5\u2027\u8c03\u67e5\u6700\u7ec8\u65e5\u2027\u6cd5\u5ead <p>\u6210\u6b69\u5802\u6cd5\u5f8b\u4e8b\u52a1\u6240</p> <p>\u5bf9\u8bdd</p> <p>\u79fb\u52a8\uff1a\u62d8\u7559\u6240</p> <p>\u62d8\u7559\u6240</p> <p>\u4e3e\u8bc1\uff1a\u5f8b\u5e08\u5fbd\u7ae0</p> <p>\u5bf9\u8bdd\uff08\u5fa1\u5251\uff09\uff1a\u300c\u5173\u4e8e\u4e8b\u4ef6\u300d\u300c\u846b\u82a6\u6e56\u300d</p> <p>\u5bf9\u8bdd\uff08\u5fa1\u5251\uff09\uff1a\u300c\u662f\u4f60\u505a\u7684\u5417\u300d</p> <p>\u79fb\u52a8\uff1a\u846b\u82a6\u6e56\u516c\u56ed</p> <p>\u846b\u82a6\u6e56\u516c\u56ed</p> <p>\u5bf9\u8bdd\uff08\u7cf8\u952f\uff09\uff1a\u300c\u5173\u4e8e\u4e8b\u4ef6\u300d\u300c\u5173\u4e8e\u5fa1\u5251\u300d\u300c\u59d4\u6258\u8fa9\u62a4\u300d\u300c\u76ee\u51fb\u8005\u300d</p> <p>\u4f60\u4eec\u6709\u4ec0\u4e48\u60f3\u95ee\u7684\u5417\uff1f\u8d81\u73b0\u5728\u8d76\u5feb\u95ee\u5427\u3002</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u79fb\u52a8\uff1a\u516c\u56ed\u2027\u5e7f\u573a</p> <p>\u516c\u56ed\u2027\u5e7f\u573a</p> <p>\u8c03\u67e5\uff1a\u957f\u6905\u4e0a\u7684\u62c9\u70ae</p> <p>\uff08\u62c9\u70ae\u5417\u2026\u2026\u8be5\u600e\u4e48\u529e\u5462\uff1f\uff09</p> <p>\u9009\u62e9\uff1a\u6536\u8d77\u6765</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u62c9\u70ae</p> <p>\u79fb\u52a8\uff1a\u846b\u82a6\u68ee\u6797</p> <p>\u846b\u82a6\u68ee\u6797</p> <p>\u8c03\u67e5\uff1a\u3010\u5de6\u5c4f\u5e55\u3011\u76f8\u673a</p> <p>\uff0a\u83b7\u5f97\u300c\u62c9\u70ae\u300d\u540e\u8c03\u67e5\u76f8\u673a\uff0c\u590f\u7f8e\u51fa\u73b0\u3002</p> <p>\u2192\u590f\u7f8e\u767b\u573a</p> <p>\u2192\u8bc1\u636e\u6587\u4ef6\u4e2d\u6d88\u9664\u300c\u62c9\u70ae\u300d</p> <p>\u4e3e\u8bc1\uff1a\u5f8b\u5e08\u5fbd\u7ae0</p> <p>\u5bf9\u8bdd\uff08\u590f\u7f8e\uff09\uff1a\u300c\u5173\u4e8e\u4e8b\u4ef6\u300d\u300c\u5173\u4e8e\u590f\u7f8e\u300d</p> <p>\u5bf9\u8bdd\uff08\u590f\u7f8e\uff09\uff1a\u300c\u5173\u4e8e\u76f8\u673a\u300d</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u590f\u7f8e\u7684\u76f8\u673a</p> <p>\u4e3e\u8bc1\uff1a\u590f\u7f8e\u7684\u76f8\u673a</p> <p>\u5b8c\u6210\u4ee5\u4e0a\u5185\u5bb9\u540e\u300c\u8b66\u5bdf\u7f72\u2027\u5211\u4e8b\u79d1\u300d\u4e2d\u51fa\u73b0\u7cf8\u952f\u3002</p> <p>\u79fb\u52a8\uff1a\u516c\u56ed\u2027\u5e7f\u573a\u2192\u846b\u82a6\u6e56\u516c\u56ed\u2192\u8b66\u5bdf\u7f72\u2027\u5211\u4e8b\u79d1</p> <p>\u8b66\u5bdf\u7f72\u2027\u5211\u4e8b\u79d1</p> <p>\u5bf9\u8bdd\uff08\u7cf8\u952f\uff09\uff1a\u300c\u5173\u4e8e\u88ab\u5bb3\u4eba\u300d\u300c\u641c\u67e5\u4f1a\u8bae\u300d\u300c\u76f8\u4fe1\u5fa1\u5251\u7684\u7406\u7531\u300d\u300c\u89e3\u5256\u7eaa\u5f55\u300d</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u9057\u4f53\u7684\u89e3\u5256\u7eaa\u5f55</p> <p>\u6210\u6b69\u5802\u6cd5\u5f8b\u4e8b\u52a1\u6240</p> <p>\u83b7\u5f97\u300c\u9057\u4f53\u7684\u89e3\u5256\u7eaa\u5f55\u300d\u540e\uff0c\u548c\u771f\u5bb5\u5bf9\u8bdd\u3002</p> <p>\u846b\u82a6\u68ee\u6797</p> <p>\u5b8c\u6210\u4ee5\u4e0a\u5185\u5bb9\u540e\u524d\u5f80\u846b\u82a6\u68ee\u6797\uff0c\u81ea\u52a8\u548c\u590f\u7f8e\u5bf9\u8bdd\u3002</p> <p>\u6211\u662f\u4e0d\u662f\u5e94\u8be5\u53bb\u8ddf\u8b66\u5bdf\u8bf4\u8fd9\u4ef6\u4e8b\u554a\uff1f</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u83b7\u5f97\u8bc1\u636e\uff1a\u846b\u82a6\u6e56\u7684\u7167\u7247</p> <p>\u2192\u590f\u7f8e\u4e0d\u89c1\u4e86</p> <p>\u516c\u56ed\u2027\u5e7f\u573a</p> <p>\u5b8c\u6210\u4ee5\u4e0a\u5185\u5bb9\u540e\uff0c\u77e2\u5f20\u767b\u573a\u3002</p> <p>\u5bf9\u8bdd\uff08\u77e2\u5f20\uff09\uff1a\u300c\u5173\u4e8e\u4e8b\u4ef6\u300d\u300c\u5c06\u519b\u8d85\u4eba\u9992\u5934\u300d\u300c\u5173\u4e8e\u5fa1\u5251\u300d\u300c\u6c34\u602a\u846b\u897f\u300d</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u6c34\u602a\u846b\u897f\u7684\u62a5\u9053</p> <p>\u661f\u5f71\u6cd5\u5f8b\u4e8b\u52a1\u6240</p> <p>\u5b8c\u6210\u4ee5\u4e0a\u5185\u5bb9\u540e\uff0c\u661f\u5f71\u767b\u573a\u3002</p> <p>\u5bf9\u8bdd\uff08\u661f\u5f71\uff09\uff1a\u300c\u5173\u4e8e\u4e8b\u4ef6\u300d\u300c\u5173\u4e8e\u753b\u300d</p> <p>\u4e3e\u8bc1\uff1a\u300c\u9057\u4f53\u7684\u89e3\u5256\u7eaa\u5f55\u300d</p> <p>\u2192\u4ea4\u8c08\u300c\u751f\u4ed3\u5f8b\u5e08\u300d\u300c\uff24\uff2c\uff16\u53f7\u4e8b\u4ef6\u300d\u51fa\u73b0</p> <p>\u5bf9\u8bdd\uff08\u661f\u5f71\uff09\uff1a\u300c\u751f\u4ed3\u5f8b\u5e08\u300d\u300c\uff24\uff2c\uff16\u53f7\u4e8b\u4ef6\u300d</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u7eeb\u91cc\u821e\u5b50\u7684\u7167\u7247</p> <p>\u62d8\u7559\u6240 \u548c\u5fa1\u5251\u4ea4\u8c08</p> <p>\u4e3e\u8bc1\uff1a\u7eeb\u91cc\u821e\u5b50\u7684\u7167\u7247</p> <p>\u2192\u5bf9\u8bdd\u300c\uff24\uff2c\uff16\u53f7\u4e8b\u4ef6\u300d\u51fa\u73b0</p> <p>\u5bf9\u8bdd\uff08\u5fa1\u5251\uff09\uff1a\u300c\uff24\uff2c\uff16\u53f7\u4e8b\u4ef6\u300d\u300c\u5173\u4e8e\u201c\u5acc\u72af\u201d\u300d\u300c\u5173\u4e8e\u7236\u4eb2\u300d</p> <p>\u4e3e\u8bc1\uff1a\u846b\u82a6\u6e56\u7684\u7167\u7247</p> <p>\u5b8c\u6210\u4ee5\u4e0a\u5185\u5bb9\u540e\u5bf9\u8bdd</p> <p>\u2026\u2026\u662f\u5426\u53ef\u4ee5\u62dc\u6258\u4f60\u5462\uff1f</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u83b7\u5f97\u8bc1\u636e\uff1a\u5fa1\u5251\u601c\u4f8d\u7684\u59d4\u6258\u4e66</p> <p>\u8b66\u5bdf\u7f72\u2027\u5211\u4e8b\u79d1</p> <p>\u5bf9\u8bdd\uff08\u7cf8\u952f\uff09\uff1a\u300c\u590f\u7f8e\u7684\u8bc1\u8a00\u300d\u300c\u660e\u5929\u7684\u5ba1\u7406\u300d\u300c\u5173\u4e8e\u5fa1\u5251\u300d</p> <p>\u4e3e\u8bc1\uff1a\u5fa1\u5251\u601c\u4f8d\u7684\u59d4\u6258\u4e66</p> <p>\u83b7\u5f97\u8bc1\u636e\uff1a\u5e73\u9762\u56fe</p> <p>\u8be2\u95ee \uff5e\u5728\u902e\u6355\u5fa1\u5251\u524d\u53d1\u751f\u7684\u4e8b\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u7cf8\u952f\u572d\u4ecb\u3011</p> <p>\u8ffd\u95ee\uff1a\u300c\u4f46\u662f\u2026\u2026\u7b2c\u4e8c\u5929\u65e9\u4e0a\uff0c\u5374\u5728\u6e56\u9762\u53d1\u73b0\u4e86\u4e00\u5177\u7537\u5c38\u2026\u2026\u300d</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u624b\u67aa\u7684\u5b50\u5f39</p> <p>\u8ffd\u95ee\uff1a\u300c\u2026\u2026\u6240\u4ee5\u6211\u4eec\u53ea\u597d\u902e\u6355\u5fa1\u5251\u68c0\u5bdf\u5b98\u4e86\u2026\u2026\u300d</p> <p>\u2192\u8bc1\u8a00\u53d8\u66f4</p> <p>\u8ffd\u95ee\uff1a\u300c\u4ece\u5c0f\u8239\u4e0a\u627e\u5230\u7684\u51f6\u5668\uff0c\u6700\u540e\u6210\u4e3a\u5173\u952e\u8bc1\u636e\u3002\u300d</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u624b\u67aa</p> <p>\u6ca1\u6709\u59d0\u59d0\u7684\u8bdd\uff0c\u6211\u662f\u4e0d\u662f\u5c31\u6ca1\u6709\u5b58\u5728\u610f\u4e49\u5462\uff1f</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u521a\u521a\u7684\u8bc1\u8a00\u4e2d\uff0c\u4f60\u89c9\u5f97\u6709\u4ec0\u4e48\u77db\u76fe\u4e4b\u5904\u5417\uff1f</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u8be2\u95ee \uff5e\u6848\u53d1\u5f53\u665a\u6240\u76ee\u51fb\u5230\u7684\u4e8b\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u5927\u6cfd\u6728\u590f\u7f8e\uff08\u590f\u7f8e\uff09\u3011</p> <p>\u8ffd\u95ee\uff1a\u300c\u6211\u5f53\u65f6\u5728\u8f66\u91cc\u3002\u300d\u300c\u6211\u4ece\u8f66\u7a97\u770b\u5230\u5c0f\u8239\u4e0a\u6709\uff12\u4e2a\u7537\u4eba\u3002\u300d\u300c\u5c31\u5728\u8fd9\u4e2a\u65f6\u5019\uff0c\u53c8\u542c\u5230\u4e86\u4e00\u58f0\u67aa\u54cd\u3002\u300d\u300c\u6211\u5f88\u786e\u5b9a\u6e56\u4e0a\u53ea\u6709\u90a3\u8258\u8239\uff0c\u6ca1\u6709\u5176\u4ed6\u8239\u4e86\u3002\u300d</p> <p>\u5982\u679c\u51fa\u73b0\u9009\u9879\uff0c\u5168\u9009\u300c\u8fdb\u4e00\u6b65\u8ffd\u95ee\u300d</p> <p>\u2026\u2026\u662f\u5427\uff1f\u6210\u6b65\u5802\u9f99\u4e00\u5f8b\u5e08\uff01</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u8be2\u95ee \uff5e\u5173\u4e8e\u6700\u540e\u8fd9\u4e00\u6bb5\u53d1\u8a00\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u5927\u6cfd\u6728\u590f\u7f8e\uff08\u590f\u7f8e\uff09\u3011</p> <p>\uff0a\u8be2\u95ee\u4e2d\u5982\u679c\u5bf9\u8bc1\u8a00\u8fdb\u884c\u300c\u8ffd\u95ee\u300d\u5c31\u4f1a\u53d7\u5230\u60e9\u7f5a\u3002</p> <p>\u4e3e\u8bc1\uff1a\u300c\u6211\u5f88\u6e05\u695a\u5730\u770b\u5230\u4e86\u3002\u5728\u8239\u4e0a\u7684\u90a3\u4e2a\u7537\u4eba\uff0c\u786e\u5b9e\u5c31\u662f\u5fa1\u5251\u3002\u300d\u65f6\u9009\u300c\u846b\u82a6\u6e56\u7684\u7167\u7247\u300d</p> <p>\u8be2\u95ee \uff5e\u4e3a\u4f55\u5f53\u65f6\u6709\u529e\u6cd5\u76ee\u51fb\u5230\u5fa1\u5251\uff1f\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u5927\u6cfd\u6728\u590f\u7f8e\uff08\u590f\u7f8e\uff09\u3011</p> <p>\u4e3e\u8bc1\uff1a\u300c\u4f46\u662f\u554a\uff0c\u9664\u4e86\u76f8\u673a\u4ee5\u5916\uff0c\u6211\u8fd8\u5e26\u4e86\u671b\u8fdc\u955c\u3002\u300d\u65f6\u9009\u300c\u590f\u7f8e\u7684\u76f8\u673a\u300d\u4ee5\u53ca\u300c\u846b\u82a6\u6e56\u7684\u7167\u7247\u300d</p> <p>\u6b64\u5916</p> <p>\u8ffd\u95ee\uff1a\u300c\u4f46\u662f\u554a\uff0c\u9664\u4e86\u76f8\u673a\u4ee5\u5916\uff0c\u6211\u8fd8\u5e26\u4e86\u671b\u8fdc\u955c\u3002\u300d</p> <p>\u8981\u7ee7\u7eed\u8ffd\u95ee\u76f8\u673a\u7684\u95ee\u9898\u5417\uff1f</p> <p>\u9009\u62e9\uff1a\u8ffd\u7a76\u4e0b\u53bb</p> <p>\u2192\u8bc1\u8a00\u53d8\u66f4</p> <p>\u4e3e\u8bc1\uff1a\u300c\u8fd9\u4e2a\u76f8\u673a\u662f\u4e3a\u4e86\u62cd\u6444\u6d41\u661f\uff0c\u624d\u8bbe\u7f6e\u5728\u90a3\u91cc\u7684\u3002\u300d\u65f6\u9009\u300c\u590f\u7f8e\u7684\u76f8\u673a\u300d\u4ee5\u53ca\u300c\u846b\u82a6\u6e56\u7684\u7167\u7247\u300d</p> <p>\u90a3\u3001\u90a3\u4e48\u2026\u2026\u5979\u662f\u4e3a\u4e86\u62cd\u6444\u4ec0\u4e48\u5462\uff1f</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u590f\u7f8e\u5c0f\u59d0\u7a76\u7adf\u60f3\u8981\u62cd\u6444\u4ec0\u4e48\u4e1c\u897f\u5462\u2026\u2026\uff01</p> <p>\u4e3e\u8bc1\uff1a\u6c34\u602a\u846b\u897f\u7684\u62a5\u9053</p> <p>\u8bc1\u660e\u6211\u5f53\u65f6\u60f3\u62cd\u7684\u662f\u201c\u846b\u897f\u201d\uff01</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u8bf7\u4f60\u62ff\u51fa\u8bc1\u636e\uff0c\u8bc1\u660e\u8bc1\u4eba\u5f53\u65f6\u60f3\u62cd\u7684\u5176\u5b9e\u662f\u201c\u6c34\u602a\u846b\u897f\u201d\uff01</p> <p>\u4e3e\u8bc1\uff1a\u300c\u590f\u7f8e\u7684\u76f8\u673a\u300d\u4ee5\u53ca\u300c\u6c34\u602a\u846b\u897f\u7684\u62a5\u9053\u300d</p> <p>\u8be2\u95ee \uff5e\u5173\u4e8e\u590f\u7f8e\u7684\u4e8b\u548c\u6848\u53d1\u5f53\u665a\u7684\u4e8b\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u5927\u6cfd\u6728\u590f\u7f8e\uff08\u590f\u7f8e\uff09\u3011</p> <p>\u4e3e\u8bc1\uff1a\u300c\u6bd5\u7adf\u4e5f\u6ca1\u6709\u5176\u4ed6\u4e1c\u897f\u53ef\u770b\uff0c\u6240\u4ee5\u6211\u5c31\u4e13\u6ce8\u5730\u770b\u7740\u90a3\u8258\u8239\u3002\u300d\u65f6\u9009\u300c\u6c34\u602a\u846b\u897f\u7684\u62a5\u9053\u300d</p> <p>\uff08\u2026\u2026\u8be5\u600e\u4e48\u529e\u624d\u597d\u5462\u2026\u2026\uff01\uff09</p> <p>\u9009\u62e9\uff1a\u8ba9\u5979\u4ea4\u51fa\u653e\u5927\u540e\u7684\u7167\u7247/\u9759\u89c2\u5176\u53d8</p> <p>\uff0a\u9009\u62e9\u300c\u9759\u89c2\u5176\u53d8\u300d\u65f6\uff0c\u4e0b\u4e2a\u9009\u9879\u4e2d\u9009\u62e9\u300c\u91cd\u65b0\u601d\u8003\u300d\u4f1a\u7ee7\u7eed\u5267\u60c5\u3002\u800c\u9009\u62e9\u300c\u9759\u89c2\u5176\u53d8\u300d\u2192\u300c\u4ec0\u4e48\u90fd\u4e0d\u505a\u300d\u5c31\u4f1aGAME OVER\u3002</p> <p>\uff08\u53ef\u6076\uff01\u2026\u2026\u8be5\u600e\u4e48\u529e\u2026\u2026\uff01\uff09</p> <p>\u9009\u62e9\uff1a\u5bf9\u653e\u5927\u540e\u7684\u7167\u7247\u63d0\u51fa\u5f02\u8bae</p> <p>\uff0a\u9009\u62e9\u300c\u9759\u89c2\u5176\u53d8\u300d\u5c31\u4f1aGAME OVER\u3002</p> <p>\uff08\u628a\u5947\u602a\u7684\u5730\u65b9\u6307\u7ed9\u5ba1\u5224\u957f\u770b\u770b\u5427\uff01\uff09</p> <p>\u9009\u62e9\uff1a\u53f3\u4fa7\u4eba\u7269\u7684\u5de6\u624b</p> <p>\u548c\u7167\u7247\u4e2d\u7537\u4eba\u7684\u201c\u5de6\u624b\u201d\u5b58\u5728\u51b3\u5b9a\u6027\u77db\u76fe\u7684\u8bc1\u636e\uff01</p> <p>\u4e3e\u8bc1\uff1a\u624b\u67aa</p> <p>\u9664\u4e86\u88ab\u544a\u4ee5\u5916\uff0c\u8fd8\u6709\u8c01\u80fd\u5f00\u67aa\u6740\u6b7b\u88ab\u5bb3\u4eba\uff01</p> <p>\u9009\u62e9\uff1a\u88ab\u5bb3\u8005\u81ea\u8eab</p> <p>\u83b7\u5f97\u8bc1\u636e\uff1a\u590f\u7f8e\u7684\u8bc1\u8a00\u4e66</p> <p>\u62d8\u7559\u6240</p> <p>\u5bf9\u8bdd\uff08\u771f\u5bb5\uff09\uff1a\u300c\u8fdb\u884c\u8c03\u67e5\u300d\u300c\u5173\u4e8e\u5343\u5bfb\u300d</p> <p>\u846b\u82a6\u68ee\u6797</p> <p>\u5bf9\u8bdd\uff08\u7cf8\u952f\uff09\uff1a\u300c\u660e\u5929\u7684\u5ba1\u7406\u300d\u300c\u5fa1\u5251\u68c0\u5bdf\u5b98\u300d\u300c\u5173\u4e8e\u771f\u5bb5\u300d</p> <p>\u62d8\u7559\u6240</p> <p>\u5bf9\u8bdd\uff08\u771f\u5bb5\uff09\uff1a\u300c\u5546\u91cf\u770b\u770b\u300d\u300c\u662f\u5426\u5bdf\u89c9\u5230\u4ec0\u4e48\u300d</p> <p>\u846b\u82a6\u6e56\u516c\u56ed</p> <p>\u5bf9\u8bdd\uff08\u590f\u7f8e\uff09\uff1a\u300c\u4eca\u5929\u7684\u6cd5\u5ead\u300d\u300c\u6c34\u602a\u846b\u897f\u300d\u300c\u201c\u8d4e\u7f6a\u201d\u300d</p> <p>\u300c\u201c\u8d4e\u7f6a\u201d\u300d\u4e2d\u7684\u9009\u9879</p> <p>\u8be5\u2026\u2026\u8be5\u600e\u4e48\u529e\u5462\uff1f\u6210\u6b65\u5802\u54e5\u2026\u2026</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u8b66\u5bdf\u7f72\u2027\u5211\u4e8b\u79d1</p> <p>\u5bf9\u8bdd\uff08\u7cf8\u952f\uff09\uff1a\u300c\u5173\u4e8e\u641c\u67e5\u300d\u300c\u6c34\u602a\u846b\u897f\u300d\u300c\u501f\u9053\u5177\u300d</p> <p>\u300c\u501f\u9053\u5177\u300d\u540e\u9009\u62e9\u300c\u501f\u7528\u91d1\u5c5e\u63a2\u6d4b\u5668\u300d\u3002</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u91d1\u5c5e\u63a2\u6d4b\u5668</p> <p>\u516c\u56ed\u2027\u5e7f\u573a</p> <p>\u5bf9\u8bdd\uff08\u77e2\u5f20\uff09\uff1a\u300c\u5173\u4e8e\u5fa1\u5251\u300d\u300c\u80cc\u540e\u7684\u5c06\u519b\u8d85\u4eba\u300d</p> <p>\u79fb\u52a8\uff1a\u79df\u8239\u5c0f\u5c4b\u524d</p> <p>\u79df\u8239\u5c0f\u5c4b\u524d</p> <p>\u62e5\u6709\u300c\u91d1\u5c5e\u63a2\u6d4b\u5668\u300d\u65f6\u5bf9\u8bdd\u4f1a\u83b7\u5f97\u8bc1\u636e\u300c\u6c14\u74f6\u300d</p> <p>\u516c\u56ed\u2027\u5e7f\u573a</p> <p>\u4e3e\u8bc1\uff1a\u6c14\u74f6</p> <p>\u77e2\u5f20\u3002\u6211\u8bf4\u2026\u2026</p> <p>\u9009\u62e9\uff1a\u8fd9\u4e1c\u897f\u662f\u4e0d\u662f\u4f60\u7684\uff1f</p> <p>\u800c\u4e14\uff0c\u6211\u8981\u8fd9\u4e2a\u6c14\u74f6\u5e72\u4ec0\u4e48\u554a\uff01</p> <p>\u9009\u62e9\uff1a\u53ef\u80fd\u662f\u7528\u6765\u628a\u67d0\u4e2a\u4e1c\u897f\u5439\u5927</p> <p>\uff08\u679c\u7136\u662f\u8fd9\u6837\u2026\u2026\uff09</p> <p>\u9009\u62e9\uff1a\u95ee\u5f97\u518d\u66f4\u8be6\u7ec6\u4e00\u70b9</p> <p>\u5bf9\u8bdd\uff08\u77e2\u5f20\uff09\uff1a\u300c\u98de\u8d70\u7684\u6c14\u74f6\u300d</p> <p>\u846b\u82a6\u68ee\u6797</p> <p>\u5bf9\u8bdd\uff08\u590f\u7f8e\uff09\uff1a\u300c\u5173\u4e8e\u4e8b\u4ef6\u300d\u300c\u6c34\u602a\u846b\u897f\u300d</p> <p>\u300c\u6c34\u602a\u846b\u897f\u300d\u4e2d\u9009\u62e9</p> <p>\u600e\u4e48\u6837\uff1f\u4f60\u80fd\u627e\u5230\u6c34\u602a\u846b\u897f\u5417\uff1f</p> <p>\u9009\u62e9\uff1a\u300c\u5df2\u7ecf\u627e\u5230\u4e86\u300d\u4ee5\u53ca\u300c\u6c34\u602a\u846b\u897f\u5e76\u4e0d\u5b58\u5728\u300d</p> <p>\u9009\u62e9\u300c\u5df2\u7ecf\u627e\u5230\u4e86\u300d\u65f6</p> <p>\u600e\u3001\u600e\u4e48\u8bc1\u660e\u4f60\u627e\u5230\u4e86\uff1f\u2026\u2026\u4f60\u6709\u62cd\u5230\u7167\u7247\u5417\uff01</p> <p>\u9009\u62e9\uff1a\u6709\u8bc1\u636e</p> <p>\u8d76\u5feb\u5440\uff01\u8d76\u5feb\u628a\u4f60\u627e\u5230\u6c34\u602a\u846b\u897f\u7684\u8bc1\u636e\u62ff\u51fa\u6765\uff01</p> <p>\u4e3e\u8bc1\uff1a\u6c14\u74f6</p> <p>\u9009\u62e9\u300c\u6c34\u602a\u846b\u897f\u5e76\u4e0d\u5b58\u5728\u300d\u65f6</p> <p>\u80fd\u591f\u8bc1\u660e\u6c34\u602a\u846b\u897f\u4e0d\u5b58\u5728\u7684\u8bc1\u636e\u662f\u2026\u2026</p> <p>\u9009\u62e9\uff1a\u5f53\u7136\u6709</p> <p>\u80fd\u591f\u8bc1\u660e\u6c34\u602a\u846b\u897f\u4e0d\u5b58\u5728\u7684\u8bc1\u636e\u662f\u2026\u2026</p> <p>\u4e3e\u8bc1\uff1a\u6c14\u74f6</p> <p>\u5bf9\u8bdd\uff08\u590f\u7f8e\uff09\uff1a\u300c\u4e8b\u4ef6\u7684\u201c\u60c5\u62a5\u201d\u300d</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u53e6\u4e00\u5f20\u846b\u82a6\u6e56\u7684\u7167\u7247</p> <p>\u79df\u8239\u5c0f\u5c4b\u524d</p> <p>\u79fb\u52a8\uff1a\u7ba1\u7406\u5c0f\u5c4b\u5185</p> <p>\u7ba1\u7406\u5c0f\u5c4b\u5185</p> <p>\u8c03\u67e5\uff1a\u9e66\u9e49</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u9e66\u9e49</p> <p>\u4e3e\u8bc1\uff1a\u5f8b\u5e08\u5fbd\u7ae0</p> <p>\u8bf7\u4f60\u4eec\u7ee7\u627f\u957f\u5bff\u5eb5\u8fd9\u5bb6\u5e97\u3002</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u4e4b\u540e\u51fa\u793a\u300c\u5f8b\u5e08\u5fbd\u7ae0\u300d\u5e76\u9009\u62e9\u300c\u597d\uff0c\u8ddf\u4f60\u7ea6\u5b9a\u300d\u3002</p> <p>\u4e3e\u8bc1\uff1a\u846b\u82a6\u6e56\u7684\u7167\u7247</p> <p>\u5bf9\u8bdd\uff08\u5927\u53d4\uff09\uff1a\u300c\u835e\u9ea6\u9762\u5e97\u300d\u300c\u79df\u8239\u5c0f\u5c4b\u300d\u300c\u5c0f\u767e\u5408\u300d\u300c\u76ee\u51fb\u5230\u4ec0\u4e48\u300d</p> <p>\u8b66\u5bdf\u7f72\u2027\u5211\u4e8b\u79d1</p> <p>\u5bf9\u8bdd\uff08\u7cf8\u952f\uff09\uff1a\u300c\u79df\u8239\u5c0f\u5c4b\u7684\u5927\u53d4\u300d\u300c\uff24\uff2c\uff16\u53f7\u4e8b\u4ef6\u300d</p> <p>\u4e3e\u8bc1\uff1a\u9e66\u9e49</p> <p>\u79fb\u52a8\uff1a\u8b66\u5bdf\u7f72\u2027\u8d44\u6599\u5ba4</p> <p>\u8b66\u5bdf\u7f72\u2027\u8d44\u6599\u5ba4</p> <p>\u5bf9\u8bdd\uff08\u771f\u5bb5\uff09\uff1a\u300c\u6848\u60c5\u6982\u8981\u300d\u300c\u88ab\u5bb3\u4eba\u7684\u8d44\u6599\u300d\u300c\u5acc\u72af\u7684\u8d44\u6599\u300d</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\uff24\uff2c\uff16\u53f7\u4e8b\u4ef6\u2027\u8d44\u6599\u3001\uff24\uff2c\uff16\u53f7\u4e8b\u4ef6\u2027\u7167\u7247</p> <p>\uff08\u8fd9\u4f4d\u5927\u53d4\u5230\u5e95\u662f\u4ec0\u4e48\u4eba\u554a\u2026\u2026\uff09</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u6210\u3001\u6210\u6b65\u5802\u5f8b\u5e08\u3002\u2026\u2026\u4f60\u8ba4\u4e3a\u5462\uff1f</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u8be2\u95ee \uff5e\u6848\u53d1\u5f53\u665a\u770b\u5230\u4e86\u4ec0\u4e48\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u79df\u8239\u5c0f\u5c4b\u7684\u5927\u53d4\uff08\u5927\u53d4\uff09\u3011</p> <p>\u8ffd\u95ee\uff1a\u300c\u4e0d\u4e45\u4e4b\u540e\uff0c\u5c0f\u8239\u5212\u4e86\u56de\u6765\uff0c\u7136\u540e\u6709\uff11\u540d\u7537\u5b50\u4ece\u7a97\u5916\u7ecf\u8fc7\u3002\u300d</p> <p>\u2192\u8bc1\u8a00\u8ffd\u52a0</p> <p>\u8ffd\u95ee\uff1a\u300c\u90a3\u4e2a\u7537\u4eba\u5c31\u662f\u88ab\u544a\uff0c\u6211\u542c\u5230\u4ed6\u8bf4\u201c\u6ca1\u60f3\u5230\u7adf\u7136\u4f1a\u5f00\u67aa\u6253\u4eba\u201d\u3002\u300d</p> <p>\uff08\u5fc5\u987b\u60f3\u60f3\u529e\u6cd5\uff0c\u5426\u5219\u5ba1\u7406\u5c31\u8981\u7ed3\u675f\u4e86\uff01\uff09</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\uff08\u5ba1\u5224\u957f\u9677\u5165\u6c89\u601d\u4e86\u3002\u2026\u2026\u6211\u8be5\u600e\u4e48\u505a\uff01\uff09</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u8be2\u95ee \uff5e\u6848\u53d1\u5f53\u665a\u7684\u76ee\u51fb\u5185\u5bb9\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u77e2\u5f20\u653f\u5fd7\uff08\u77e2\u5f20\uff09\u3011</p> <p>\u4e3e\u8bc1\uff1a\u300c\u542c\u5230\u90a3\uff11\u58f0\u4e4b\u540e\u4e0d\u518d\u53d1\u751f\u4ec0\u4e48\u7279\u522b\u7684\u4e8b\uff0c\u6240\u4ee5\u6211\u5c31\u79bb\u5f00\u4e86\u3002\u300d\u65f6\u9009\u300c\u590f\u7f8e\u7684\u8bc1\u8a00\u4e66\u300d</p> <p>\u4f60\u8bf4\u5462\uff1f\u6210\u6b65\u5802\u5f8b\u5e08\u3002\u8981\u8bf7\u8bc1\u4eba\u7ee7\u7eed\u201c\u8bc1\u8a00\u201d\u5417\uff1f</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u8be2\u95ee \uff5e\u6848\u53d1\u5f53\u665a\u542c\u5230\u4e86\u4ec0\u4e48\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u77e2\u5f20\u653f\u5fd7\uff08\u77e2\u5f20\uff09\u3011</p> <p>\u8ffd\u95ee\uff1a\u300c\u800c\u4e14\uff0c\u5728\u542c\u5230\u67aa\u58f0\u7684\u77ac\u95f4\uff0c\u4e3b\u6301\u4eba\u8bf4\u4e86\u4ec0\u4e48\u6211\u90fd\u8fd8\u8bb0\u5f97\u3002\u300d</p> <p>\u5982\u679c\u95ee\u9898\u672c\u8eab\u5177\u6709\u7279\u522b\u7684\u610f\u4e49\uff0c\u90a3\u5c31\u53e6\u5f53\u522b\u8bba\u2026\u2026\uff1f</p> <p>\u9009\u62e9\uff1a\u6709\u610f\u4e49</p> <p>\u2192\u8bc1\u8a00\u8ffd\u52a0</p> <p>\u4e3e\u8bc1\uff1a\u300c\u201c\u5723\u8bde\u8282\u9a6c\u4e0a\u5c31\u8981\u5230\u4e86\u201d\u3002\u4e3b\u6301\u4eba\u8bf4\u8fd9\u53e5\u8bdd\u7684\u540c\u65f6\u4ed6\u542c\u5230\u4e86\u67aa\u58f0\u3002\u300d\u65f6\u9009\u300c\u846b\u82a6\u6e56\u7684\u7167\u7247\u300d\u4ee5\u53ca\u300c\u590f\u7f8e\u7684\u8bc1\u8a00\u4e66\u300d</p> <p>\u4f60\u89c9\u5f97\u77e2\u5f20\u5148\u751f\u8bf4\u7684\uff0c\u5728\uff11\uff12\u70b9\u524d\u542c\u5230\u67aa\u58f0\u662f\u600e\u4e48\u56de\u4e8b\u2026\u2026\uff1f</p> <p>\u9009\u62e9\uff1a\u77e2\u5f20\u662f\u6b63\u786e\u7684</p> <p>\u80fd\u591f\u8bc1\u660e\u5728\u6df1\u591c\uff11\uff12\u70b9\u524d\u542c\u5230\u67aa\u58f0\u7684\u8bc1\u636e\u662f\u4ec0\u4e48\uff01</p> <p>\u4e3e\u8bc1\uff1a\u300c\u624b\u67aa\u300d\u4ee5\u53ca\u300c\u53e6\u4e00\u5f20\u846b\u82a6\u6e56\u7684\u7167\u7247\u300d</p> <p>\u4e3e\u8bc1\u300c\u624b\u67aa\u300d\u7684\u573a\u5408\uff1a</p> <p>\u80fd\u591f\u8bc1\u660e\u77e2\u5f20\u5148\u751f\u7684\u4e3b\u5f20\uff0c\u201c\uff11\uff12\u70b9\u524d\u73b0\u573a\u6709\u8fc7\u67aa\u58f0\u201d\u7684\u8bc1\u636e\u3002</p> <p>\u4e3e\u8bc1\uff1a\u53e6\u4e00\u5f20\u846b\u82a6\u6e56\u7684\u7167\u7247</p> <p>\u4e3e\u8bc1\u300c\u53e6\u4e00\u5f20\u846b\u82a6\u6e56\u7684\u7167\u7247\u300d\u7684\u573a\u5408\uff1a</p> <p>\u80fd\u8bc1\u660e\uff11\uff11\u70b9\uff15\uff10\u5206\u54cd\u8d77\u7684\u201c\u7206\u88c2\u58f0\u201d\uff0c\u5c31\u662f\u67aa\u58f0\u7684\u8bc1\u636e\u2026\u2026</p> <p>\u4e3e\u8bc1\uff1a\u624b\u67aa</p> <p>\u7167\u4f60\u8fd9\u4e48\u8bf4\u7684\u8bdd\uff0c\u8239\u4e0a\u7684\u4eba\u5f71\u5230\u5e95\u662f\u8c01\uff01</p> <p>\u9009\u62e9\uff1a\u5fa1\u5251\u548c\u72af\u4eba</p> <p>\u72af\u4eba\u554a\u3002\u2026\u2026\u4ed6\u7684\u540d\u5b57\u662f\u2026\u2026\uff01</p> <p>\u9009\u62e9\uff1a\u6211\u4e0d\u77e5\u9053</p> <p>\uff08\u628a\u771f\u6b63\u7684\u547d\u6848\u73b0\u573a\u6307\u7ed9\u5ba1\u5224\u957f\u770b\u5427\uff01\uff09</p> <p>\u9009\u62e9\uff1a\u79df\u8239\u7ba1\u7406\u5c0f\u5c4b</p> <p>\u6210\u6b65\u5802\u5f8b\u5e08\uff0c\u90a3\u4e48\uff0c\u5728\u5c0f\u8239\u4e0a\u5f00\u67aa\u7684\u7a76\u7adf\u662f\u2026\u2026\uff1f</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u4e3a\u4ec0\u4e48\u72af\u4eba\u5f53\u65f6\u6709\u5fc5\u8981\u5c04\u51fa\uff12\u53d1\u5b50\u5f39\uff01</p> <p>\u9009\u62e9\uff1a\u56e0\u4e3a\u60f3\u8981\u5236\u9020\u76ee\u51fb\u8005</p> <p>\u6210\u6b69\u5802\u6cd5\u5f8b\u4e8b\u52a1\u6240</p> <p>\u5bf9\u8bdd\uff08\u77e2\u5f20\uff09\uff1a\u300c\u4eca\u5929\u7684\u6cd5\u5ead\u300d\u300c\u5173\u4e8e\u5fa1\u5251\u300d\u300c\u73ed\u7ea7\u5ba1\u5224\u300d\u300c\u5728\u90a3\u4e4b\u540e\u7684\u5fa1\u5251\u300d</p> <p>\u846b\u82a6\u6e56\u516c\u56ed</p> <p>\u548c\u7cf8\u952f\u5bf9\u8bdd</p> <p>\u79df\u8239\u5c0f\u5c4b\u524d</p> <p>\u548c\u661f\u5f71\u5bf9\u8bdd</p> <p>\u7ba1\u7406\u5c0f\u5c4b\u5185</p> <p>\u8c03\u67e5\uff1a\u624b\u63d0\u91d1\u5e93</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u624b\u63d0\u91d1\u5e93\u4e2d\u7684\u4fe1</p> <p>\u62d8\u7559\u6240</p> <p>\u5bf9\u8bdd\uff08\u5fa1\u5251\uff09\uff1a\u300c\u4e3a\u4f55\u5f53\u68c0\u5bdf\u5b98\uff1f\u300d\u300c\u72e9\u9b54\u68c0\u5bdf\u5b98\u300d</p> <p>\u4e3e\u8bc1\uff1a\u624b\u63d0\u91d1\u5e93\u4e2d\u7684\u4fe1</p> <p>\u5bf9\u8bdd\uff08\u5fa1\u5251\uff09\uff1a\u300c\u7070\u6839\u9ad8\u592a\u90ce\u300d\u300c\u201c\u6076\u68a6\u201d\u300d</p> <p>\u661f\u5f71\u6cd5\u5f8b\u4e8b\u52a1\u6240</p> <p>\u5bf9\u8bdd\uff08\u661f\u5f71\uff09\uff1a\u300c\u5fa1\u5251\u4fe1\u300d\u300c\u7075\u5a92\u300d</p> <p>\u4e3e\u8bc1\uff1a\u624b\u63d0\u91d1\u5e93\u4e2d\u7684\u4fe1</p> <p>\u4f60\u89c9\u5f97\u8fd9\u6709\u53ef\u80fd\u4f1a\u662f\u8c01\u5199\u7684\u5462\u2026\u2026\uff1f</p> <p>\u9009\u62e9\uff1a\u72e9\u9b54\u8c6a</p> <p>\u5bf9\u8bdd\uff08\u661f\u5f71\uff09\uff1a\u300c\u72e9\u9b54\u68c0\u5bdf\u5b98\u300d\u300c\u548c\u5fa1\u5251\u4fe1\u7684\u80dc\u8d1f\u300d</p> <p>\u8b66\u5bdf\u7f72\u2027\u5211\u4e8b\u79d1</p> <p>\u5bf9\u8bdd</p> <p>\u8b66\u5bdf\u7f72\u2027\u8d44\u6599\u5ba4</p> <p>\u8c03\u67e5\uff1a\u6253\u5f00\u7684\u67dc\u5b50</p> <p>\u72e9\u9b54\u8c6a\u767b\u573a\u3002</p> <p>\u5bf9\u8bdd\uff08\u72e9\u9b54\uff09\uff1a\u300c\u5173\u4e8e\u5fa1\u5251\u300d\u300c\u660e\u5929\u7684\u5ba1\u7406\u300d</p> <p>\u4e3e\u8bc1\uff1a\u624b\u63d0\u91d1\u5e93\u4e2d\u7684\u4fe1</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\uff24\uff2c\uff16\u53f7\u4e8b\u4ef6\u7684\u5b50\u5f39</p> <p>\u8be2\u95ee \uff5e\u9003\u79bb\u6cd5\u9662\u7684\u539f\u56e0\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u79df\u8239\u5c0f\u5c4b\u7684\u5927\u53d4\uff08\u5927\u53d4\uff09\u3011</p> <p>\u8ffd\u95ee\uff1a\u300c\u56e0\u4e3a\u6211\uff0c\u90a3\u4e2a\uff0c\u8ddf\u8fd9\u8d77\u6848\u4ef6\u6ca1\u6709\u5173\u7cfb\u554a\u3002\u300d\u300c\u8be5\u600e\u4e48\u8bf4\u5462\uff1f\u6211\u53c8\u6ca1\u6709\u52a8\u673a\u3002\u300d</p> <p>\u6210\u6b65\u5802\u5f8b\u5e08\u3002\u8bf7\u4f60\u544a\u8bc9\u672c\u9662\u8fd9\u540d\u8bc1\u4eba\u7684\u540d\u5b57\u3002</p> <p>\u9009\u62e9\uff1a\u7070\u6839\u9ad8\u592a\u90ce</p> <p>\u5982\u4f55\uff01\u5373\u4f7f\u5982\u6b64\uff0c\u4f60\u8fd8\u662f\u8981\u8fdb\u884c\u201c\u8baf\u95ee\u201d\u5417\uff1f</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879\uff08\u3082\u3061\u308d\u3093\u3059\u308b/\u8003\u3048\u306a\u304a\u3059\uff09</p> <p>\u8be2\u95ee \uff5e\u9972\u4e3b\u7684\u771f\u9762\u76ee\u662f\uff1f\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u9e66\u9e49\u5c0f\u767e\u5408\u3011</p> <p>\u8ffd\u95ee\uff1a\u300c\u201c\u65e9\u5b89\u3001\u65e9\u5b89\u3002\u201d\u300d</p> <p>\u55ef\uff0c\u597d\uff01\u2026\u2026\u90a3\u8981\u95ee\u5b83\u4ec0\u4e48\u5462\uff1f</p> <p>\u9009\u62e9\uff1a\u201c\u4f60\u7684\u540d\u5b57\u662f\uff1f\u201d</p> <p>\u8fd9\u548c\u7ba1\u7406\u5458\u7684\u771f\u9762\u76ee\u6709\u4ec0\u4e48\u5173\u7cfb\u5417\uff1f</p> <p>\u9009\u62e9\uff1a\u5f53\u7136\u6709</p> <p>\u4f60\u8bf4\u9e66\u9e49\u7684\u540d\u5b57\uff0c\u80fd\u591f\u8bc1\u660e\u7ba1\u7406\u5458\u7684\u771f\u9762\u76ee\uff01</p> <p>\u4e3e\u8bc1\uff1a\uff24\uff2c\uff16\u53f7\u4e8b\u4ef6\u2027\u8d44\u6599</p> <p>\u80fd\u591f\u901a\u8fc7\u9e66\u9e49\u7684\u540d\u5b57\u4e86\u89e3\u7ba1\u7406\u5458\u771f\u9762\u76ee\u7684\u8bc1\u636e\u662f\u2026\u2026</p> <p>\u9009\u62e9\uff1a\u201c\u5acc\u72af\u7684\u8d44\u6599\u201d</p> <p>\u518d\u6b21\u8ffd\u95ee\u300c\u201c\u65e9\u5b89\u3001\u65e9\u5b89\u3002\u201d\u300d\u3002</p> <p>\u55ef\uff0c\u597d\uff01\u2026\u2026\u90a3\u8981\u95ee\u5b83\u4ec0\u4e48\u5462\uff1f</p> <p>\u9009\u62e9\uff1a\u201c\u91d1\u5e93\u7684\u5bc6\u7801\u662f\uff1f\u201d</p> <p>\u8fd9\u4e2a\u5bc6\u7801\u8ddf\u7ba1\u7406\u5458\u7684\u771f\u9762\u76ee\u6709\u4ec0\u4e48\u5173\u7cfb\u5417\uff1f</p> <p>\u9009\u62e9\uff1a\u6709\u5173\u7cfb</p> <p>\u6709\u4ec0\u4e48\u8bc1\u636e\u53ef\u4ee5\u628a\u91d1\u5e93\u7684\u5bc6\u7801\u8ddf\u7ba1\u7406\u5458\u7684\u771f\u9762\u76ee\u8054\u7cfb\u5728\u4e00\u8d77\uff01</p> <p>\u4e3e\u8bc1\uff1a\uff24\uff2c\uff16\u53f7\u4e8b\u4ef6\u2027\u8d44\u6599</p> <p>\u8fd9\u4efd\u8d44\u6599\u7684\u54ea\u4e2a\u90e8\u5206\u548c\u91d1\u5e93\u7684\u5bc6\u7801\u6709\u5173\u7cfb\u5462\uff1f</p> <p>\u9009\u62e9\uff1a\u201c\u4e8b\u4ef6\u6982\u8981\u201d</p> <p>\uff08\u7cdf\u7cd5\uff01\u2026\u2026\u8be5\u600e\u4e48\u529e\uff01\uff09</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u8be2\u95ee \uff5e\uff24\uff2c\uff16\u53f7\u4e8b\u4ef6\u81ea\u8ff0\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u5fa1\u5251\u601c\u4f8d\uff08\u5fa1\u5251\uff09\u3011</p> <p>\u4e3e\u8bc1\uff1a\u300c\u5728\u4e0b\u4e00\u77ac\u95f4\uff0c\u6211\u542c\u5230\u4e86\uff11\u58f0\u67aa\u54cd\u3002\u63a5\u7740\u4f20\u6765\u4e86\u60e8\u53eb\u58f0\u3002\u300d\u65f6\u9009\u300c\uff24\uff2c\uff16\u53f7\u4e8b\u4ef6\u2027\u8d44\u6599\u300d\u4ee5\u53ca\u300c\uff24\uff2c\uff16\u53f7\u4e8b\u4ef6\u2027\u7167\u7247\u300d</p> <p>\u4e3e\u8bc1\u300c\uff24\uff2c\uff16\u53f7\u4e8b\u4ef6\u2027\u8d44\u6599\u300d\u65f6</p> <p>\u4e0e\u5fa1\u5251\u601c\u4f8d\u7684\u8bc1\u8a00\u76f8\u77db\u76fe\u7684\u8d44\u6599\u5728\u54ea\u4e00\u9875\uff1f</p> <p>\u9009\u62e9\uff1a\u201c\u88ab\u5bb3\u4eba\u7684\u8d44\u6599\u201d</p> <p>\u90a3\u4e48\uff0c\u4f60\u6709\u8bc1\u636e\u53ef\u4ee5\u6307\u51fa\u53e6\uff11\u53d1\u5b50\u5f39\u4e5f\u662f\u5728\u6848\u53d1\u5f53\u65f6\u51fb\u51fa\u7684\u5417\uff1f</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u51f6\u5668\u624b\u67aa\u662f\u5728\u6848\u53d1\u5f53\u65f6\u5f00\u4e86\uff12\u67aa\u7684\u8bc1\u636e\u662f\uff1f</p> <p>\u4e3e\u8bc1\uff1a\uff24\uff2c\uff16\u53f7\u4e8b\u4ef6\u2027\u7167\u7247</p> <p>\uff08\u628a\u5947\u602a\u7684\u5730\u65b9\u6307\u7ed9\u5ba1\u5224\u957f\u770b\u5427\uff01\uff09</p> <p>\u9009\u62e9\uff1a\u95e8\u4e0a\u7684\u5f39\u75d5</p> <p>\u4e3e\u8bc1\u300c\uff24\uff2c\uff16\u53f7\u4e8b\u4ef6\u2027\u7167\u7247\u300d\u65f6</p> <p>\uff08\u628a\u5947\u602a\u7684\u5730\u65b9\u6307\u7ed9\u5ba1\u5224\u957f\u770b\u5427\uff01\uff09</p> <p>\u9009\u62e9\uff1a\u95e8\u4e0a\u7684\u5f39\u75d5</p> <p>\u4f60\u6709\u8bc1\u636e\u53ef\u4ee5\u8bc1\u660e\uff0c\u7535\u68af\u95e8\u4e0a\u7684\u5f39\u5b54\u662f\u6848\u53d1\u5f53\u65f6\u5f62\u6210\u7684\u5417\uff01</p> <p>\u9009\u62e9\uff1a\u6709\u8bc1\u636e</p> <p>\u4ec0\u4e48\u8bc1\u636e\u53ef\u4ee5\u8bc1\u660e\uff0c\u7535\u68af\u95e8\u4e0a\u7684\u5f39\u5b54\u548c\u672c\u6848\u6709\u5173\u5462\uff1f</p> <p>\u4e3e\u8bc1\uff1a\uff24\uff2c\uff16\u53f7\u4e8b\u4ef6\u2027\u8d44\u6599</p> <p>\u54ea\u4e00\u9875\u80fd\u591f\u8bc1\u660e\u7535\u68af\u95e8\u4e0a\u7684\u5f39\u5b54\u548c\u672c\u6848\u6709\u5173\uff1f</p> <p>\u4e3e\u8bc1\uff1a\u201c\u88ab\u5bb3\u4eba\u7684\u8d44\u6599\u201d</p> <p>\u6210\u6b65\u5802\u5f8b\u5e08\u3002\u2026\u2026\u4f60\u6709\u5f02\u8bae\u5417\uff1f</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u72af\u4eba\u6709\u4ec0\u4e48\u5fc5\u8981\uff0c\u975e\u5f97\u627e\u51fa\u8fd9\u53d1\u5b50\u5f39\uff1f</p> <p>\u9009\u62e9\uff1a\u6ca1\u8fd9\u6837\u7684\u5fc5\u8981</p> <p>\uff08\u600e\u4e48\u529e\u2026\u2026\u6211\u8be5\u73b0\u5728\u5c31\u8bf4\u5417\u2026\u2026\uff01\uff09</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u5982\u4f55\uff1f\u4f60\u662f\u5426\u80fd\u591f\u8bc1\u660e\u6211\u5f53\u65f6\u53d7\u4e86\u67aa\u4f24\uff1f</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u80fd\u591f\u8bc1\u660e\u72e9\u9b54\u68c0\u5bdf\u5b98\u5f53\u65f6\u88ab\u5c04\u4f24\u7684\u8bc1\u7269\u5c31\u662f\u2026\u2026\uff01</p> <p>\u4e3e\u8bc1\uff1a\u91d1\u5c5e\u63a2\u6d4b\u5668</p> <p>\u5c31\u662f\u8fd9\u4ef6\uff0c\u6700\u540e\u7684\u8bc1\u636e\uff01</p> <p>\u4e3e\u8bc1\uff1a\uff24\uff2c\uff16\u53f7\u4e8b\u4ef6\u7684\u5b50\u5f39</p> <p>\uff08\u8ba9\u5931\u53bb\u81ea\u4fe1\u7684\u771f\u5bb5\uff0c\u770b\u770b\u8bc1\u636e\u5427\u3002\uff09</p> <p>\u4e3e\u8bc1\uff1a\uff24\uff2c\uff16\u53f7\u4e8b\u4ef6\u7684\u5b50\u5f39\uff08\uff0a\u9009\u9519\u4e5f\u4f1a\u7ee7\u7eed\uff09</p> <p>\u7b2c4\u8bdd\u7ed3\u675f\u3002</p>"},{"location":"game/aceattorney/#\u590d\u82cf\u7684\u9006\u8f6c","title":"\u590d\u82cf\u7684\u9006\u8f6c","text":"\u6e38\u620f\u653b\u7565 \u7b2c\u4e00\u65e5\u2027\u8c03\u67e5\u7b2c\u4e8c\u65e5\u2027\u6cd5\u5ead\u2027\u524d\u7bc7\u7b2c\u4e8c\u65e5\u2027\u6cd5\u5ead\u2027\u540e\u7bc7\u7b2c\u4e8c\u65e5\u2027\u8c03\u67e5\u7b2c\u4e09\u65e5\u2027\u6cd5\u5ead\u2027\u524d\u7bc7\u7b2c\u4e09\u65e5\u2027\u6cd5\u5ead\u2027\u540e\u7bc7\u7b2c\u4e09\u65e5\u2027\u8c03\u67e5\u6700\u7ec8\u65e5\u2027\u6cd5\u5ead\u2027\u524d\u7bc7\u6700\u7ec8\u65e5\u2027\u6cd5\u5ead\u2027\u540e\u7bc7\uff11\u6700\u7ec8\u65e5\u2027\u6cd5\u5ead\u2027\u540e\u7bc7\uff12 <p>\u6210\u6b69\u5802\u6cd5\u5f8b\u4e8b\u52a1\u6240</p> <p>\u5bf9\u8bdd\uff08\u831c\uff09\uff1a\u300c\u5173\u4e8e\u831c\u300d\u300c\u5173\u4e8e\u4e8b\u4ef6\u300d\u300c\u79d1\u5b66\u641c\u67e5\u5b98\u300d\u300c\u548c\u5343\u5bfb\u7684\u5173\u7cfb\u300d</p> <p>\u79fb\u52a8\uff1a\u62d8\u7559\u6240</p> <p>\u62d8\u7559\u6240</p> <p>\u5bf9\u8bdd\uff08\u5b9d\u6708\uff09\uff1a\u300c\u5173\u4e8e\u4e8b\u4ef6\u300d\u300c\u88ab\u5bb3\u8005\u300d\u300c\u5173\u4e8e\u5df4\u300d\u300c\u548c\u5343\u5bfb\u7684\u5173\u7cfb\u300d</p> <p>\u6210\u6b69\u5802\u6cd5\u5f8b\u4e8b\u52a1\u6240</p> <p>\u79fb\u52a8\uff1a\u68c0\u5bdf\u7f72\u2027\u5730\u4e0b\u505c\u8f66\u573a</p> <p>\u68c0\u5bdf\u7f72\u2027\u5730\u4e0b\u505c\u8f66\u573a</p> <p>\u5728\u53f3\u5c4f\u4e2d\u4efb\u610f\u90e8\u4f4d\u300c\u8c03\u67e5\u300d\u540e\uff0c\u51fa\u73b0\uff1f\uff1f\uff1f\uff08\u7f6a\u95e8\uff09</p> <p>\u8c03\u67e5\uff1a\u3010\u5de6\u5c4f\u5e55\u3011\u6389\u5728\u5730\u4e0a\u7684\u94b1\u5305</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u94b1\u5305</p> <p>\u8c03\u67e5\u94b1\u5305\u540e\u5f00\u59cb\u8bc1\u636e\u7684\u30ab\u30ac\u30af\u641c\u67e5\u3002</p> <p>\u2192\u8bc1\u636e\u300c\u94b1\u5305\u300d\u53d8\u66f4\u4e3a\u300c\u591a\u7530\u6577\u9053\u592b\u7684\uff29\uff24\u5361\u300d</p> <p>\u4ee5\u4e0a\u5168\u90e8\u7ed3\u675f\u540e\u54cd\u534e\u767b\u573a\u3002</p> <p>\u5bf9\u8bdd\uff08\u54cd\u534e\uff09\uff1a\u300c\u5173\u4e8e\u4e8b\u4ef6\u300d\u300c\u76ee\u51fb\u5230\u4ec0\u4e48\u300d\u300c\u5173\u4e8e\u54cd\u534e\u300d\u300c\u68c0\u5bdf\u7f72\u300d</p> <p>\u79fb\u52a8\uff1a\u9ad8\u7ea7\u68c0\u5bdf\u5b98\u529e\u516c\u5ba4</p> <p>\u9ad8\u7ea7\u68c0\u5bdf\u5b98\u529e\u516c\u5ba4</p> <p>\u54cd\u534e\u7684\u300c\u4ea4\u8c08\u300d\u7ed3\u675f\u540e\u524d\u5f80\u9ad8\u7ea7\u68c0\u5bdf\u5b98\u529e\u516c\u5ba4\uff0c\u5fa1\u5251\u51fa\u73b0\u3002</p> <p>\u5bf9\u8bdd\uff08\u5fa1\u5251\uff09\uff1a\u300c\u5173\u4e8e\u4e8b\u4ef6\u300d\u300c\u5173\u4e8e\u5fa1\u5251\u300d</p> <p>\u2192\u300c\u5173\u4e8e\u4e8b\u4ef6\u300d\u7ed3\u675f\u540e\u300c\u5b9d\u6708\u5df4\u300d\u51fa\u73b0\u3002</p> <p>\u5bf9\u8bdd\uff08\u5fa1\u5251\uff09\uff1a\u300c\u5b9d\u6708\u5df4\u300d</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u5fa1\u5251\u7684\u5c0f\u5200</p> <p>\u8c03\u67e5\uff1a\u6c99\u53d1\u4e0a\u7684\u5956\u676f</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u68c0\u5bdf\u5b98\u5956\u76fe</p> <p>\u4e3e\u8bc1\uff1a\u68c0\u5bdf\u5b98\u5956\u76fe</p> <p>\u4ee5\u4e0a\u7ed3\u675f\u540e\u51fa\u73b0\u5bf9\u8bdd\u300c\u6848\u53d1\u5f53\u5929\u7684\u60c5\u51b5\u300d\u3002</p> <p>\u5bf9\u8bdd\uff08\u5fa1\u5251\uff09\uff1a\u300c\u6848\u53d1\u5f53\u5929\u7684\u60c5\u51b5\u300d</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u5fa1\u5251\u7684\u505c\u8f66\u7eaa\u5f55</p> <p>\u4ee5\u4e0a\u7ed3\u675f\u540e\uff0c\u51fa\u73b0\uff1f\uff1f\uff1f\uff08\u539f\u7070\uff09\u5bf9\u8bdd\u3002</p> <p>\u53ef\u4ee5\u4ece\u300c\u68c0\u5bdf\u7f72\u2027\u5730\u4e0b\u505c\u8f66\u573a\u300d\u524d\u5f80\u300c\u8b66\u5bdf\u7f72\u2027\u5165\u53e3\u300d\u3002</p> <p>\u79fb\u52a8\uff1a\u68c0\u5bdf\u7f72\u2027\u5730\u4e0b\u505c\u8f66\u573a\u2192\u8b66\u5bdf\u7f72\u2027\u5165\u53e3</p> <p>\u8b66\u5bdf\u7f72\u2027\u5165\u53e3</p> <p>\u5bf9\u8bdd\uff08\u7cf8\u952f\uff09\uff1a\u300c\u5173\u4e8e\u4e8b\u4ef6\u300d\u300c\u5173\u4e8e\u641c\u67e5\u300d</p> <p>\u8c03\u67e5\uff1a\u902e\u6355\u541b</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u902e\u6355\u541b\u7684\u7acb\u724c</p> <p>\u4e3e\u8bc1\uff1a\u591a\u7530\u6577\u9053\u592b\u7684\uff29\uff24\u5361</p> <p>\u2192\u5bf9\u8bdd\u300c\u591a\u7530\u6577\u9053\u592b\u300d\u51fa\u73b0</p> <p>\u5bf9\u8bdd\uff08\u7cf8\u952f\uff09\uff1a\u300c\u591a\u7530\u6577\u9053\u592b\u300d</p> <p>\u4e3e\u8bc1\uff1a\u300c\u5fa1\u5251\u7684\u5c0f\u5200\u300d\u4ee5\u53ca\u300c\u5fa1\u5251\u7684\u505c\u8f66\u7eaa\u5f55\u300d</p> <p>\u4e3e\u8bc1\uff1a\u68c0\u5bdf\u5b98\u5956\u76fe</p> <p>\u2192\u4e3e\u8bc1\u540e\u51fa\u73b0\u300c\u5fa1\u5251\u7684\u4f20\u95fb\u300d</p> <p>\u5bf9\u8bdd\uff08\u7cf8\u952f\uff09\uff1a\u300c\u5fa1\u5251\u7684\u4f20\u95fb\u300d</p> <p>\u4ee5\u4e0a\u7ed3\u675f\u540e</p> <p>\u83b7\u5f97\u8bc1\u636e\uff1a\u4ecb\u7ecd\u4fe1</p> <p>\u68c0\u5bdf\u7f72\u2027\u5730\u4e0b\u505c\u8f66\u573a</p> <p>\u83b7\u5f97\u300c\u4ecb\u7ecd\u4fe1\u300d\u540e\uff0c\u7f6a\u95e8\u51fa\u73b0\uff0c\u5728\u4e3e\u8bc1\u300c\u4ecb\u7ecd\u4fe1\u300d\u524d\u65e0\u6cd5\u5bf9\u8bdd\u3002</p> <p>\u4e3e\u8bc1\uff1a\u4ecb\u7ecd\u4fe1</p> <p>\u2192\u53ef\u4ee5\u548c\u7f6a\u95e8\u5bf9\u8bdd\uff0c\u53f3\u5c4f\u53ef\u4ee5\u300c\u8c03\u67e5\u300d\u3002\u8bc1\u636e\u300c\u4ecb\u7ecd\u4fe1\u300d\u6d88\u5931\u3002</p> <p>\u5bf9\u8bdd\uff08\u7f6a\u95e8\uff09\uff1a\u300c\u5173\u4e8e\u88ab\u5bb3\u4eba\u300d\u300c\u5173\u4e8e\u7f6a\u95e8\u300d</p> <p>\u300c\u5173\u4e8e\u88ab\u5bb3\u4eba\u300d\u7ed3\u675f\u540e</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u591a\u7530\u6577\u9053\u592b\u7684\u89e3\u5256\u7eaa\u5f55</p> <p>\u8c03\u67e5\uff1a\uff08\u53f3\u5c4f\u5e55\uff09\u8f66\u5de6\u4e0b\u7684\u624b\u673a</p> <p>\uff08\u54ea\u91cc\u79d1\u5b66\u4e86\uff01\uff09\u603b\u4e4b\u6211\u4eec\u8c03\u67e5\u770b\u770b\u5427\u3002</p> <p>\u9009\u62e9\uff1a\u8c03\u67e5</p> <p>\u2192\u8fdb\u5165\u624b\u673a\u7684\u8be6\u7ec6\u753b\u9762\u3002</p> <p>\u8c03\u67e5\u624b\u673a\uff1a</p> <p>\u65cb\u8f6c\u540e\u8c03\u67e5\u624b\u673a\u6a2a\u5411\u84dd\u8272\u7684\u90e8\u4f4d\u2192\u8c03\u67e5\u84dd\u8272\u6309\u952e\u3002</p> <p>\u65cb\u8f6c\u540e\u4f7f\u7528\u53f3\u8fb9\u548c\u4e0b\u8fb9\u7684\u62e8\u53f7\u76d8\u3002</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u624b\u673a</p> <p>\u4ee5\u4e0a\u5b8c\u6210\u540e\uff0c\u5bf9\u8bdd\u300c\u5b9d\u6708\u5df4\u300d\u51fa\u73b0</p> <p>\u5bf9\u8bdd\uff08\u7f6a\u95e8\uff09\uff1a\u300c\u5b9d\u6708\u5df4\u300d\u300c\u68c0\u5bdf\u7f72\u7684\u6c14\u6c1b\u300d</p> <p>\u8c03\u67e5\uff1a\u3010\u53f3\u5c4f\u5e55\u3011\u8f66\u5b50\u540e\u5907\u7bb1\u4e2d</p> <p>\uff08\u8c03\u67e5\u540e\u53d1\u73b0\u5b57\u6761\u3002\uff09</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u591a\u7530\u6577\u7684\u5b57\u6761</p> <p>\u4ee5\u4e0a\u7ed3\u675f\u540e\u548c\u831c\u5bf9\u8bdd\u3002\u300c\u624b\u673a\u300d\u7684\u6570\u636e\u66f4\u65b0\u3002</p> <p>\u83b7\u5f97\u8bc1\u636e\uff1a\u5730\u4e0b\u505c\u8f66\u573a\u5e73\u9762\u56fe</p> <p>\u8be2\u95ee \uff5e\u76ee\u51fb\u5230\u4ec0\u4e48\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u5e02\u4e4b\u8c37\u54cd\u534e\uff08\u54cd\u534e\uff09\u3011</p> <p>\u8ffd\u95ee\uff1a\u300c\u6211\u5fc3\u91cc\u5176\u5b9e\u65e9\u5c31\u6709\u9884\u611f\u3002\u8fd9\u6837\u7684\u4e00\u5929\uff0c\u8fdf\u65e9\u4f1a\u6765\u2026\u2026\u300d\u300c\u5728\u94c1\u4e1d\u7f51\u7684\u53e6\u4e00\u8fb9\uff0c\u6211\u770b\u5230\u4e3b\u4efb\u68c0\u5bdf\u5b98\u7ad9\u5728\u90a3\u8f86\u6ca1\u54c1\u5473\u7684\u8f7f\u8f66\u65c1\u3002\u300d</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u73b0\u573a\u7167\u7247</p> <p>\u4e3e\u8bc1\uff1a\u300c\u4e3b\u4efb\u68c0\u5bdf\u5b98\u7684\u53f3\u624b\u8fd8\u4e3e\u7740\u4e00\u628a\u5c0f\u5200\u3002\u300d\u65f6\u9009\u300c\u73b0\u573a\u7167\u7247\u300d</p> <p>\uff08\u545c\u545c\u545c\u2026\u2026\u6211\u5e94\u8be5\u600e\u4e48\u529e\u2026\u2026\uff09</p> <p>\u9009\u62e9\uff1a\u5f02\u8bae\uff01</p> <p>\u2192\u8bc1\u8a00\u8ffd\u52a0</p> <p>\u4e3e\u8bc1\uff1a\u300c\u672c\u6b21\u6740\u4eba\u5b8c\u5168\u662f\u6709\u9884\u8c0b\u7684\u4f5c\u6848\uff01\u5426\u5219\u600e\u4e48\u4f1a\u51c6\u5907\u6a61\u80f6\u624b\u5957\u5462\u3002\u300d\u65f6\u9009\u300c\u5fa1\u5251\u7684\u5c0f\u5200\u300d</p> <p>\u8be2\u95ee \uff5e\u963f\u54cd\u7684\u63a8\u7406\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u5e02\u4e4b\u8c37\u54cd\u534e\uff08\u54cd\u534e\uff09\u3011</p> <p>\u4e3e\u8bc1\uff1a\u300c\u5982\u679c\u4e0d\u662f\u8fd9\u6837\uff0c\u90a3\u4e2a\u51b7\u8840\u673a\u5668\u4eba\u624d\u4e0d\u4f1a\u523a\u90a3\u4e48\u591a\u5200\uff01\u300d\u65f6\u9009\u300c\u591a\u7530\u6577\u9053\u592b\u7684\u89e3\u5256\u7eaa\u5f55\u300d</p> <p>\u2192\u8bc1\u8a00\u8ffd\u52a0</p> <p>\u4e3e\u8bc1\uff1a\u300c\u6211\u5c06\u4e3b\u4efb\u68c0\u5bdf\u5b98\u7684\u7ea2\u8272\u56f4\u5dfe\u770b\u6210\u4e86\u8840\u8ff9\u2026\u2026\u5979\u5f53\u65f6\u7684\u6837\u5b50\u6781\u4e3a\u53ef\u6015\u3002\u300d\u65f6\u9009\u300c\u73b0\u573a\u7167\u7247\u300d</p> <p>\u8be2\u95ee \uff5e\u902e\u6355\u4e86\u88ab\u544a\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u5e02\u4e4b\u8c37\u54cd\u534e\uff08\u54cd\u534e\uff09\u3011</p> <p>\u8ffd\u95ee\uff1a\u300c\u6211\u7acb\u523b\u8ffd\u4e86\u4e0a\u53bb\uff0c\u5bf9\u5979\u5ba3\u793a\u5acc\u7591\u4eba\u5e94\u6709\u7684\u6743\u5229\u540e\uff0c\u5c06\u5979\u902e\u6355\u2026\u2026\u300d</p> <p>\uff08\u600e\u4e48\u529e\u5462\u2026\u2026\u8981\u7ee7\u7eed\u8ffd\u95ee\u4e0b\u53bb\u5417\u2026\u2026\uff1f\uff09</p> <p>\u9009\u62e9\uff1a\u7ee7\u7eed\u8ffd\u95ee</p> <p>\u8ffd\u95ee\uff1a\u300c\u5c31\u5728\u6211\u902e\u6355\u5979\u7684\u77ac\u95f4\uff0c\u4ece\u5979\u53e3\u4e2d\u542c\u5230\u4e86\u201c\u56f4\u5dfe\u201d\u8fd9\u4e2a\u8bcd\uff01\u300d</p> <p>\uff08\u201c\u7535\u8bdd\u201d\u2026\u2026\u96be\u4e0d\u6210\uff0c\u662f\u6307\u90a3\u4e2a\u624b\u673a\u2026\u2026\uff1f\uff09</p> <p>\u9009\u62e9\uff1a\u8be6\u7ec6\u8ffd\u95ee</p> <p>\u2192\u8bc1\u8a00\u8ffd\u52a0</p> <p>\u2192\u8bc1\u636e\u300c\u5b9d\u6708\u5df4\u7684\u624b\u673a\u300d\u7684\u6570\u636e\u66f4\u65b0</p> <p>\u4e3e\u8bc1\uff1a\u300c\u4e4b\u540e\u5979\u653e\u5f03\u4e86\u5899\u4e0a\u7684\u7535\u8bdd\uff0c\u6539\u4e3a\u4f7f\u7528\u5979\u7684\u624b\u673a\u2026\u2026\u6211\u5168\u90fd\u770b\u5230\u4e86\uff01\u300d\u65f6\u9009\u300c\u5730\u4e0b\u505c\u8f66\u573a\u5e73\u9762\u56fe\u300d</p> <p>\u8bc1\u4eba\u7684\u201c\u8c0e\u8a00\u201d\uff0c\u90a3\u5c31\u662f\u2026\u2026</p> <p>\u9009\u62e9\uff1a\u76ee\u51fb\u7684\u201c\u5730\u70b9\u201d</p> <p>\u963f\u54cd\u5c0f\u59d0\u76ee\u51fb\u5230\u547d\u6848\u53d1\u751f\u7684\u5730\u70b9\u2026\u2026\u5c31\u662f\u8fd9\u4e2a\u5730\u65b9\uff01</p> <p>\u9009\u62e9\uff1a\u8b66\u536b\u5ba4</p> <p>\uff08\u6709\u6ca1\u6709\u4ec0\u4e48\u201c\u91cd\u8981\u7684\u5dee\u5f02\u201d\uff0c\u7531\u4e8e\u8fd9\u4e2a\u8c0e\u8a00\u800c\u53d1\u751f\u2026\u2026\uff1f\uff09</p> <p>\u9009\u62e9\uff1a\u4e0e\u73b0\u573a\u7684\u8ddd\u79bb</p> <p>\uff08\u53ef\u662f\u2026\u2026\u6211\u624b\u4e0a\u8fd8\u6709\u53cd\u9a73\u7684\u6750\u6599\u5417\uff1f\uff09</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u83b7\u5f97\u8bc1\u636e\uff1a\u88ab\u5bb3\u4eba\u7684\u978b</p> <p>\u8be2\u95ee \uff5e\u5173\u952e\u8bc1\u636e\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u5e02\u4e4b\u8c37\u54cd\u534e\uff08\u54cd\u534e\uff09\u3011</p> <p>\u8ffd\u95ee\uff1a\u300c\u8fd9\u53ea\u978b\u5b50\u2026\u2026\u6ca1\u6709\u4efb\u4f55\u77db\u76fe\uff0c\u662f\u6700\u5b8c\u7f8e\u7684\u8bc1\u7269\uff01\u300d</p> <p>\uff08\u73b0\u5728\u662f\u5173\u952e\u65f6\u523b\u3002\u88ab\u5bb3\u4eba\u7684\u978b\u2026\u2026\u6709\u95ee\u9898\u5417\uff1f\uff09</p> <p>\u9009\u62e9\uff1a\u6307\u51fa\u95ee\u9898</p> <p>\u8bf7\u6307\u51fa\u4f60\u8ba4\u4e3a\u6709\u95ee\u9898\u7684\u5730\u65b9\uff01</p> <p>\u6307\u6458\uff1a\u65cb\u8f6c\u978b\u5b50\uff0c\u6307\u8bc1\u978b\u5e95\u7684\u8840\u8ff9</p> <p>\u4f60\u8bf4\uff01\u978b\u5e95\u7684\u8840\u8ff9\uff0c\u5230\u5e95\u8ddf\u4ec0\u4e48\u4e1c\u897f\u4ea7\u751f\u77db\u76fe\u4e86\uff01</p> <p>\u4e3e\u8bc1\uff1a\u73b0\u573a\u7167\u7247 \u5e76\u4e14 \u4e3e\u8bc1\uff1a\u300c\u8fd9\u53ea\u978b\u5b50\u2026\u2026\u6ca1\u6709\u4efb\u4f55\u77db\u76fe\uff0c\u662f\u6700\u5b8c\u7f8e\u7684\u8bc1\u7269\uff01\u300d\u65f6\u9009\u300c\u73b0\u573a\u7167\u7247\u300d</p> <p>\u8bf7\u6307\u51fa\u4f60\u8ba4\u4e3a\u6709\u95ee\u9898\u7684\u5730\u65b9\uff01</p> <p>\u6307\u6458\uff1a\u65cb\u8f6c\u978b\u5b50\uff0c\u6307\u8bc1\u978b\u5e95\u7684\u8840\u8ff9</p> <p>\u8fd9\u5f20\u7167\u7247\u7684\u201c\u95ee\u9898\u201d\u2026\u2026\u7a76\u7adf\u5728\u54ea\u91cc\uff01</p> <p>\u9009\u62e9\uff1a\u8f66\u4e0a\u7684\u56f4\u5dfe\uff08\u6392\u6c14\u53e3\uff09</p> <p>\u6392\u6c14\u7ba1\u4e2d\u7684\u5e03\uff0c\u8ddf\u672c\u6b21\u547d\u6848\u6709\u5173\u7684\u8bc1\u636e\u662f\uff1f</p> <p>\u9009\u62e9\uff1a\u5b9d\u6708\u5df4\u7684\u624b\u673a</p> <p>\u5200\u7684\u79d1\u5b66\u641c\u67e5</p> <p>\u5149\u6807\u79fb\u52a8\u5230\u5200\u63e1\u67c4\u7684\u6309\u94ae\u5904\u2192\u8c03\u67e5</p> <p>\u83b7\u5f97\u8bc1\u636e\uff1a\u5200</p> <p>\u8be2\u95ee \uff5e\u8b66\u5bdf\u7f72\u7684\u201c\u5185\u60c5\u201d\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u5ca9\u5f92\u6d77\u6148\uff08\u5ca9\u5f92\uff09\u3011</p> <p>\u4e3e\u8bc1\uff1a\u300c\u9664\u975e\u4f60\u4eec\u80fd\u8bc1\u660e\u5c0f\u5200\u8ddf\u591a\u7530\u6577\u5c0f\u5f1f\u5f1f\u6709\u5173\u7cfb\uff0c\u90a3\u5c31\u53e6\u5f53\u522b\u8bba\u4e86\u3002\u300d\u65f6\u9009\u300c\u591a\u7530\u6577\u7684\u5b57\u6761\u300d</p> <p>\u2192\u8bc1\u8a00\u53d8\u66f4</p> <p>\u8ffd\u95ee\uff1a\u300c\u8fd9\u628a\u5c0f\u5200\u662f\u67d0\u8d77\u6848\u4ef6\u7684\u8bc1\u7269\u3002\u4ece\u8b66\u65b9\u7684\u8bc1\u7269\u4fdd\u7ba1\u5ba4\u88ab\u5077\u8d70\u4e86\u2026\u2026\u300d</p> <p>\u8ffd\u95ee\uff1a\u300c\u8b66\u5bdf\u7f72\u91cc\u4e5f\u6709\u4f4d\u641c\u67e5\u5b98\u906d\u5230\u4e86\u6740\u5bb3\u3002\u2026\u2026\u771f\u662f\u7684\u3002\u53ef\u4e0d\u662f\u4ef6\u5c0f\u4e8b\u554a\u3002\u300d</p> <p>\u90a3\uff0c\u7ed9\u4f60\u4e9b\u5956\u52b1\u5427\u3002\u6211\u53ef\u4ee5\u900f\u9732\u4e00\u4ef6\u4e8b\u7ed9\u4f60\u2026\u2026\u4f60\u60f3\u77e5\u9053\u4ec0\u4e48\uff1f</p> <p>\u9009\u62e9\uff1a\u53d1\u73b0\u88ab\u5bb3\u4eba\u7684\u573a\u6240</p> <p>\u8ffd\u95ee\uff1a\u300c\u4e0d\u8fc7\u6bd5\u7adf\u8ddf\u68c0\u5bdf\u7f72\u53d1\u751f\u7684\u6848\u5b50\u6ca1\u6709\u5173\u7cfb\uff0c\u6240\u4ee5\u6211\u4e0d\u80fd\u900f\u9732\u8be6\u60c5\u3002\u300d</p> <p>\u2192\u4ee5\u4e0a\u5b8c\u5168\u7ed3\u675f\u540e\u8ffd\u52a0\u8bc1\u8a00</p> <p>\u8ffd\u95ee\uff1a\u300c\u6211\u662f\u5f88\u60f3\u5e2e\u5fd9\u5566\u3002\u4e0d\u8fc7\u6211\u4e0d\u80fd\u544a\u8bc9\u4f60\u8b66\u5bdf\u7f72\u90a3\u8fb9\u7684\u88ab\u5bb3\u4eba\u59d3\u540d\u3002\u300d</p> <p>\uff08\u6ca1\u529e\u6cd5\u2026\u2026\u53ea\u597d\u9009\u62e9\u6027\u5730\u8be2\u95ee\u4e86\uff09</p> <p>\u9009\u62e9\uff1a\u88ab\u5bb3\u4eba\u7684\uff29\uff24\u53f7\u7801</p> <p>\uff08\u8b66\u5bdf\u7f72\u7684\u88ab\u5bb3\u4eba\uff29\uff24\u53f7\u7801\u2026\u2026\u201c\uff15\uff18\uff14\uff12\uff11\uff18\uff19\u201d\u2026\u2026\uff09</p> <p>\u9009\u62e9\uff1a\u5927\u6982\u80fd\u731c\u5230</p> <p>\u4f60\u8bf4\u7684\u201c\u5fc3\u91cc\u6709\u6570\u201d\u2026\u2026\u7a76\u7adf\u662f\u600e\u4e48\u56de\u4e8b\uff1f</p> <p>\u4e3e\u8bc1\uff1a\u591a\u7530\u6577\u9053\u592b\u7684\uff29\uff24\u5361</p> <p>\u68c0\u5bdf\u7f72\u2027\u5730\u4e0b\u505c\u8f66\u573a</p> <p>\u9c81\u7c73\u8bfa\u53cd\u5e94\uff1a\u5728\u5c38\u4f53\u5de6\u4fa7\u591a\u6b21\u70b9\u51fb\u5c4f\u5e55\uff0c\u5728\u8840\u8ff9\u5468\u56f4\u51fa\u73b0\u65b9\u6846\u65f6\u518d\u6b21\u70b9\u51fb</p> <p>\uff08\u201c\u5947\u602a\u7684\u5730\u65b9\u201d\u2026\u2026\u4ece\u79d1\u5b66\u7684\u89d2\u5ea6\u601d\u8003\u4e00\u4e0b\u5427\uff09</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u83b7\u5f97\u8bc1\u636e\uff1a\u9c81\u7c73\u8bfa\u8bd5\u5242</p> <p>\u54cd\u534e\u767b\u573a</p> <p>\u5bf9\u8bdd\uff08\u54cd\u534e\uff09\uff1a\u300c\u4eca\u5929\u7684\u6cd5\u5ead\u300d\u300c\u641c\u67e5\u5b98\u2027\u54cd\u534e\u300d</p> <p>\u4e3e\u8bc1\uff1a\u73b0\u573a\u7167\u7247</p> <p>\u4e3e\u8bc1\uff1a\u300c\u5200\u300d\u4ee5\u53ca\u300c\u591a\u7530\u6577\u7684\u5b57\u6761\u300d</p> <p>\u4ee5\u4e0a\u7ed3\u675f\u540e\u51fa\u73b0\u300c\uff33\uff2c\uff19\u53f7\u4e8b\u4ef6\u300d</p> <p>\u5bf9\u8bdd\uff08\u54cd\u534e\uff09\uff1a\u300c\uff33\uff2c\uff19\u53f7\u4e8b\u4ef6\u300d\u300c\u641c\u67e5\u5b98\u2027\u7f6a\u95e8\u300d</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u725b\u6392\u76d2\u996d</p> <p>\u79fb\u52a8\uff1a\u8b66\u5bdf\u7f72\u2027\u5165\u53e3\u2192\u8b66\u5bdf\u7f72\u2027\u8b66\u536b\u5ba4</p> <p>\u8b66\u5bdf\u7f72\u2027\u8b66\u536b\u5ba4</p> <p>\u8c03\u67e5\uff1a\u901a\u5f80\u4fdd\u7ba1\u5ba4\u7684\u95e8</p> <p>\u8b66\u5bdf\u7f72\u2027\u5165\u53e3</p> <p>\u83b7\u5f97\u8bc1\u636e\u300c\u725b\u6392\u76d2\u996d\u300d\uff0c\u5728\u300c\u8b66\u5bdf\u7f72\u2027\u8b66\u536b\u5ba4\u300d\u4e2d\u8c03\u67e5\u901a\u5f80\u4fdd\u7ba1\u5ba4\u7684\u95e8\u540e\u7cf8\u952f\u51fa\u73b0\u3002</p> <p>\u548c\u7cf8\u952f\u5bf9\u8bdd\u540e\uff0c\u62d8\u7559\u6240\u4f1a\u51fa\u73b0\u539f\u7070\u3002</p> <p>\u62d8\u7559\u6240</p> <p>\u5bf9\u8bdd\uff08\u539f\u7070\uff09\uff1a\u300c\u6848\u53d1\u5f53\u5929\u7684\u60c5\u51b5\u300d\u300c\u5173\u4e8e\u88ab\u5bb3\u4eba\u300d</p> <p>\u5bf9\u8bdd\uff08\u539f\u7070\uff09\uff1a\u300c\u624b\u4e0a\u7684\u7ef7\u5e26\u300d</p> <p>\u300c\u5173\u4e8e\u88ab\u5bb3\u4eba\u300d\u770b\u5b8c\u540e</p> <p>\u4e3e\u8bc1\uff1a\u591a\u7530\u6577\u9053\u592b\u7684\uff29\uff24\u5361</p> <p>\u2192\u5bf9\u8bdd\u300c\u72af\u6848\u7684\u8be6\u7ec6\u7ecf\u8fc7\u300d\u51fa\u73b0</p> <p>\u5bf9\u8bdd\uff08\u539f\u7070\uff09\uff1a\u300c\u72af\u6848\u7684\u8be6\u7ec6\u7ecf\u8fc7\u300d\uff08\u53d8\u66f4\u4e3a\u300c\u5173\u4e8e\u88ab\u5bb3\u4eba\u300d\uff09\u300c\u88ab\u902e\u6355\u7684\u7406\u7531\u300d</p> <p>\u8b66\u5bdf\u7f72\u2027\u5211\u4e8b\u79d1</p> <p>\u5728\u62d8\u7559\u6240\u548c\u539f\u7070\u5bf9\u8bdd\u300c\u88ab\u902e\u6355\u7684\u7406\u7531\u300d\uff0c\u8b66\u5bdf\u7f72\u2027\u5211\u4e8b\u79d1\u51fa\u73b0\u5ca9\u5f92\u3002</p> <p>\u5bf9\u8bdd\uff08\u5ca9\u5f92\uff09\uff1a\u300c\u5173\u4e8e\u5fa1\u5251\u300d\u300c\u4fdd\u7ba1\u5ba4\u7684\u4e8b\u4ef6\u300d</p> <p>\u4ea4\u8c08\u300c\u4fdd\u7ba1\u5ba4\u7684\u4e8b\u4ef6\u300d\u4e4b\u540e</p> <p>\u8c03\u67e5\uff1a\u79d1\u957f</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u591a\u7530\u6577\u7684\u62a5\u5931\u5355</p> <p>\u4ee5\u4e0a\u5b8c\u6210\u540e\uff0c\u5bf9\u8bdd\u300c\u641c\u67e5\u8bb8\u53ef\u300d\u51fa\u73b0</p> <p>\u5bf9\u8bdd\uff08\u5ca9\u5f92\uff09\uff1a\u300c\u641c\u67e5\u8bb8\u53ef\u300d</p> <p>\u8b66\u5bdf\u7f72\u2027\u8b66\u536b\u5ba4</p> <p>\u8c03\u67e5\uff1a\u901a\u5f80\u4fdd\u7ba1\u5ba4\u7684\u95e8</p> <p>\u2192\u4ece\u5ca9\u5f92\u5904\u83b7\u5f97\u300c\u641c\u67e5\u8bb8\u53ef\u300d\u65f6\uff0c\u7f6a\u95e8\u767b\u573a\u3002\u8ffd\u52a0\u79fb\u52a8\u573a\u6240\u300c\u8bc1\u7269\u4fdd\u7ba1\u5e93\u300d\u3002</p> <p>\u4e3e\u8bc1\uff1a\u725b\u6392\u76d2\u996d</p> <p>\u2192\u53ef\u4ee5\u548c\u7f6a\u95e8\u5bf9\u8bdd\uff0c\u8bc1\u636e\u300c\u725b\u6392\u76d2\u996d\u300d\u6d88\u5931\u3002</p> <p>\u5bf9\u8bdd\uff08\u7f6a\u95e8\uff09\uff1a\u300c\u6848\u53d1\u5f53\u65f6\u7684\u8b66\u536b\u5ba4\u300d\u300c\u5173\u4e8e\u7f6a\u95e8\u300d\u300c\u9632\u76d7\u7cfb\u7edf\u300d\u300c\u79fb\u9001\u300d</p> <p>\u5bf9\u8bdd\u300c\u9632\u76d7\u7cfb\u7edf\u300d\u540e</p> <p>\u4e3e\u8bc1\uff1a\u591a\u7530\u6577\u9053\u592b\u7684\uff29\uff24\u5361</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\uff29\uff24\u5361\u4f7f\u7528\u8bb0\u5f55</p> <p>\u79fb\u52a8\uff1a\u8bc1\u7269\u4fdd\u7ba1\u5e93</p> <p>\u8bc1\u7269\u4fdd\u7ba1\u5e93</p> <p>\u83b7\u5f97\u8bc1\u636e\uff1a\u8bc1\u7269\u4fdd\u7ba1\u5ba4\u5e73\u9762\u56fe</p> <p>\u5bf9\u8bdd\uff08\u7cf8\u952f\uff09\uff1a\u300c\uff11\u65e5\u7ec4\u957f\u300d\u300c\u5173\u4e8e\u5fa1\u5251\u300d\u300c\u8bc1\u7269\u4fdd\u7ba1\u5e93\u300d</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u8bc1\u7269\u4fdd\u7ba1\u5e93</p> <p>\u4e3e\u8bc1\uff1a\u300c\u591a\u7530\u6577\u7684\u5b57\u6761\u300d\u4ee5\u53ca\u300c\u5200\u300d</p> <p>\u2192\u4ea4\u8c08\u300c\uff33\uff2c\uff19\u53f7\u4e8b\u4ef6\u300d\u51fa\u73b0</p> <p>\u5bf9\u8bdd\uff08\u7cf8\u952f\uff09\uff1a\u300c\uff33\uff2c\uff19\u53f7\u4e8b\u4ef6\u300d</p> <p>\u4e3e\u8bc1\uff1a\uff29\uff24\u5361\u4f7f\u7528\u8bb0\u5f55</p> <p>\u2192\u8ffd\u52a0\u6570\u636e\u3002</p> <p>\u8c03\u67e5\uff1a\u3010\u53f3\u5c4f\u5e55\u3011\u67d3\u4e0a\u8840\u8ff9\u7684\u4fdd\u7ba1\u5e93\u3001\u6253\u5f00\u7684\u50a8\u7269\u67dc</p> <p>\u8c03\u67e5\uff1a\u3010\u53f3\u5c4f\u5e55\u3011\u5e26\u7ef3\u5b50\u7684\u624b\u5957</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u6a61\u80f6\u624b\u5957</p> <p>\u8c03\u67e5\uff1a\u3010\u53f3\u5c4f\u5e55\u3011\u51cc\u4e71\u7684\u5730\u9762</p> <p>\uff08\u53c8\u662f\u548c\u201c\uff33\uff2c\uff19\u53f7\u4e8b\u4ef6\u201d\u6709\u5173\u7684\u8bc1\u7269\u2026\u2026\uff09</p> <p>\u9009\u62e9\uff1a\u4ed4\u7ec6\u8c03\u67e5\u4e00\u4e0b</p> <p>\u2192\u58f6\u7684\u7ec4\u5408\u3002</p> <p>\u58f6\u7684\u7ec4\u5408\uff1a</p> <p>No.5\u2192No.4\u2192No.6\u2192No.1\u2192No.8\u2192No.3\u2192No.2\u2192No.7</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u7ad9\u4e0d\u7a33\u7684\u58f6</p> <p>\u9c81\u7c73\u8bfa\u53cd\u5e94\uff1a</p> <p>\u6cd5\u5ead\u7eaa\u5f55\u2192\u9c81\u7c73\u8bfa\u8bd5\u5242\u2192\u4e3e\u8bc1\u3002</p> <p>\u9c81\u7c73\u8bfa\u53cd\u5e94\u7684\u573a\u6240\uff1a</p> <p>\u3010\u53f3\u5c4f\u5e55\u3011\u67d3\u4e0a\u8840\u8ff9\u7684\u4fdd\u7ba1\u5e93\u3001\u5730\u9762\u788e\u7247\u9644\u8fd1</p> <p>\u3010\u5de6\u5c4f\u5e55\u3011\u9732\u51fa\u5e03\u7247\u7684\u4fdd\u7ba1\u5e93</p> <p>\uff08\u68c0\u6d4b\u8840\u8ff9\u540e\uff0c\u8bc1\u636e\u300c\u8bc1\u7269\u4fdd\u7ba1\u5ba4\u5e73\u9762\u56fe\u300d\u7684\u8be6\u7ec6\u753b\u9762\u4e0a\u4f1a\u6709\u5370\u8bb0\uff09</p> <p>\u5168\u90e8\u5de5\u4f5c\u7ed3\u675f\u540e\u7cf8\u952f\u6d88\u5931\u3002</p> <p>\u9ad8\u7ea7\u68c0\u5bdf\u5b98\u529e\u516c\u5ba4</p> <p>\u5bf9\u8bdd\uff08\u5fa1\u5251\uff09\uff1a\u300c\u67e5\u95ee\u59d4\u5458\u4f1a\u300d\u300c\u660e\u5929\u7684\u6cd5\u5ead\u300d</p> <p>\u4e3e\u8bc1\uff1a\u300c\u591a\u7530\u6577\u7684\u5b57\u6761\u300d\u4ee5\u53ca\u300c\u5200\u300d</p> <p>\u2192\u4ea4\u8c08\u300c\u4f2a\u9020\u5acc\u7591\u300d\u51fa\u73b0</p> <p>\u5bf9\u8bdd\uff08\u5fa1\u5251\uff09\uff1a\u300c\u4f2a\u9020\u5acc\u7591\u300d</p> <p>\u4e3e\u8bc1\uff1a\uff29\uff24\u5361\u4f7f\u7528\u8bb0\u5f55</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u87ba\u4e1d\u5200</p> <p>\u4ee5\u4e0a\u5168\u90e8\u5b8c\u6210\u540e\uff0c\u5fa1\u5251\u51fa\u73b0\u300c\u6307\u7eb9\u91c7\u96c6\u5de5\u5177\u7ec4\u300d\u5bf9\u8bdd\u3002</p> <p>\u83b7\u5f97\u8bc1\u636e\uff1a\u6307\u7eb9\u91c7\u96c6\u5de5\u5177\u7ec4</p> <p>\u8bc1\u7269\u4fdd\u7ba1\u5e93</p> <p>\u83b7\u5f97\u300c\u6307\u7eb9\u91c7\u96c6\u5de5\u5177\u7ec4\u300d\u540e\u4f1a\u81ea\u52a8\u5f00\u59cb\u91c7\u96c6\u6307\u7eb9\u3002</p> <p>\u91c7\u96c6\u6307\u7eb9\uff1a</p> <p>\u9009\u62e9\u624b\u6307\uff1a\u4efb\u610f\u624b\u6307\u5747\u53ef\u3002\u51fa\u73b0\u300c\u91c7\u96c6\u300d\u952e\u65f6\u70b9\u51fb\u3002</p> <p>\u6d12\u94dd\u7c89\uff1a\u70b9\u51fb\u5230\u5c06\u5c4f\u5e55\u51e0\u4e4e\u67d3\u6210\u7eaf\u767d\u7684\u7a0b\u5ea6\u3002</p> <p>\u5439\u6563\u591a\u4f59\u7684\u94dd\u7c89</p> <p>\u624b\u5957\u91c7\u96c6\u7ed3\u675f\uff0c\u8fdb\u884c\u4e0b\u4e00\u9879\u68c0\u6d4b</p> <p>\u9009\u62e9\u624b\u6307\uff1a\u6709\u9c81\u7c73\u8bfa\u53cd\u5e94\u7684\u624b\u6307</p> <p>\u6bd4\u7167\uff1a\u7cf8\u952f\u572d\u4ecb</p> <p>\u8c03\u67e5\uff1a\u3010\u5de6\u5c4f\u5e55\u3011\u4fdd\u7ba1\u5e93</p> <p>\uff08\u5979\u7684\u773c\u795e\u90fd\u53d8\u4e86\u3002\u6211\u6709\u4e0d\u597d\u7684\u9884\u611f\u2026\u2026\uff09</p> <p>\u9009\u62e9\uff1a\u68c0\u9a8c\u6307\u7eb9</p> <p>\u68c0\u9a8c\u6307\u7eb9\uff1a</p> <p>\u9009\u62e9\u624b\u6307\uff1a\u98df\u6307</p> <p>\u6bd4\u7167\uff1a\u7f6a\u95e8\u606d\u4ecb</p> <p>\u83b7\u5f97\u8bc1\u636e\uff1a\u7f6a\u95e8\u7684\u6307\u7eb9</p> <p>\u8be2\u95ee \uff5e\u6848\u53d1\u5f53\u5929\u7684\u72b6\u51b5\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u539f\u7070\u8fdb\uff08\u539f\u7070\uff09\u3011</p> <p>\u8ffd\u95ee\uff1a\u5168\u90e8</p> <p>\u2192\u300c\uff29\uff24\u5361\u4f7f\u7528\u8bb0\u5f55\u300d\u8ffd\u52a0\u6570\u636e\u3002</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u76d1\u63a7\u5f55\u50cf</p> <p>\u8be2\u95ee \uff5e\u5728\u73b0\u573a\u76ee\u51fb\u5230\u7684\u4eba\uff01\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u539f\u7070\u8fdb\uff08\u539f\u7070\uff09\u3011</p> <p>\u8ffd\u95ee\uff1a\u300c\u65e2\u7136\u8fd9\u4e2a\u4eba\u80fd\u6253\u5f00\u90a3\u4e2a\u4fdd\u7ba1\u5e93\u7684\u6307\u7eb9\u9501\uff0c\u8868\u793a\u4ed6\u5c31\u662f\u591a\u7530\u6577\u641c\u67e5\u5b98\uff01\u300d</p> <p>\uff08\u8fd9\u4efd\u76d1\u63a7\u5f55\u50cf\u2026\u2026\u6709\u6ca1\u6709\u95ee\u9898\uff1f\uff09</p> <p>\u9009\u62e9\uff1a\u6709\u95ee\u9898</p> <p>\u80fd\u6307\u51fa\u5f55\u50cf\u4e0a\u7684\u4eba\u5e76\u975e\u88ab\u5bb3\u4eba\u7684\u201c\u77db\u76fe\u201d\u5230\u5e95\u5728\u54ea\u91cc\uff1f</p> <p>\u9009\u62e9\uff1a17:14:30\uff5e31\u9644\u8fd1\u591a\u7530\u6577\u7684\u4fdd\u7ba1\u5e93\u95ea\u70c1\u7684\u706f</p> <p>\u4fdd\u7ba1\u5e93\u7684\u95e8\u6ca1\u6709\u4e0a\u9501\u2026\u2026\u8bf7\u4e3a\u6211\u4eec\u6307\u51fa\u201c\u539f\u56e0\u201d\uff01</p> <p>\u9009\u62e9\uff1a17:14:42\uff5e43\u9644\u8fd1\u591a\u7530\u6577\u7684\u4fdd\u7ba1\u5e93\u843d\u4e0b\u7684\u767d\u8272\u7269\u4f53</p> <p>\u88ab\u5939\u5728\u4fdd\u7ba1\u5e93\u95e8\u7f1d\u91cc\u9762\u7684\u201c\u7edd\u7f18\u4f53\u201d\u2026\u2026\u5230\u5e95\u662f\u4ec0\u4e48\uff1f</p> <p>\u9009\u62e9\uff1a\u6a61\u80f6\u624b\u5957</p> <p>\u8be2\u95ee \uff5e\u5728\u73b0\u573a\u76ee\u51fb\u5230\u7684\u4eba\uff01\u2461\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u539f\u7070\u8fdb\uff08\u539f\u7070\uff09\u3011</p> <p>\u4e3e\u8bc1\uff1a\u300c\u5c31\u5728\u4e8b\u60c5\u53d1\u751f\u7684\u90a3\u4e2a\u65f6\u523b\uff01\u591a\u7530\u6577\u641c\u67e5\u5b98\u4f7f\u7528\u4e86\u90a3\u5f20\u5361\u7247\u300d\u65f6\u9009\u300c\u591a\u7530\u6577\u9053\u592b\u7684\uff29\uff24\u5361\u300d\u4ee5\u53ca\u300c\u591a\u7530\u6577\u7684\u62a5\u5931\u5355\u300d</p> <p>\uff08\u2026\u2026\u6211\u8be5\u600e\u4e48\u529e\uff01\u8fd8\u6709\u8def\u80fd\u8d70\u5417\u2026\u2026\uff1f\uff09</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u4f60\u5fc3\u91cc\u6240\u60f3\u7684\u201c\u8bc1\u4eba\u201d\u2026\u2026\u7a76\u7adf\u662f\u54ea\u4f4d\uff1f</p> <p>\u9009\u62e9\uff1a\u7f6a\u95e8\u606d\u4ecb\uff0833\uff09</p> <p>\u83b7\u5f97\u8bc1\u636e\uff1a\uff33\uff2c\uff19\u53f7\u4e8b\u4ef6\u7684\u8d44\u6599</p> <p>\u8be2\u95ee \uff5e\u6848\u53d1\u5f53\u5929\u7684\u60c5\u51b5\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u7f6a\u95e8\u606d\u4ecb\uff08\u7f6a\u95e8\uff09\u3011</p> <p>\u4e3e\u8bc1\uff1a\u300c\u6211\u53ea\u662f\u4e2a\u65c5\u4eba\uff0c\u8ddf\u672c\u6848\u6beb\u65e0\u5173\u8054\u3002\u2026\u2026\u5982\u679c\u6ca1\u6709\u5b50\u5f39\uff0c\u6211\u5c31\u8981\u8d70\u4e86\u3002\u300d\u65f6\u9009\u300c\u7f6a\u95e8\u7684\u6307\u7eb9\u300d</p> <p>\u8be2\u95ee \uff5e\u67d3\u8840\u7684\u624b\u5370\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u7f6a\u95e8\u606d\u4ecb\uff08\u7f6a\u95e8\uff09\u3011</p> <p>\u8ffd\u95ee\uff1a\u300c\u4fdd\u7ba1\u5e93\u4e0a\u9762\u4f1a\u6709\u6211\u7684\u6307\u7eb9\uff0c\u662f\u518d\u6b63\u5e38\u4e0d\u8fc7\u7684\u4e8b\u4e86\u3002\u300d</p> <p>\u2192\u300c\u7f6a\u95e8\u7684\u6307\u7eb9\u300d\u7684\u6570\u636e\u66f4\u65b0</p> <p>\u8ffd\u95ee\uff1a\u300c\u518d\u8bf4\uff0c\u51f6\u624b\u5f53\u65f6\u6234\u4e86\u624b\u5957\u554a\u3002\u600e\u4e48\u4f1a\u8ddf\u6211\u6709\u5173\u7cfb\u5462\uff1f\u300d</p> <p>\u4ee5\u4e0a\u7ed3\u675f\u540e\u8ffd\u52a0\u8bc1\u8a00\u3002</p> <p>\u8ffd\u95ee\uff1a\u300c\u5982\u679c\u76d1\u63a7\u6444\u50cf\u5934\u5f53\u65f6\u62cd\u5230\u4e86\u6211\uff0c\u5c31\u4e0d\u7528\u50cf\u8fd9\u6837\u4e89\u8bba\u4e86\u2026\u2026\u300d</p> <p>\u91cc\u9762\u5230\u5e95\u6709\u6ca1\u6709\u62cd\u5230\u4e0e\u7f6a\u95e8\u606d\u4ecb\u6709\u5173\u7684\u201c\u7ebf\u7d22\u201d\uff1f</p> <p>\u9009\u62e9\uff1a\u6307\u51fa\u5f71\u50cf\u4e2d\u7684\u201c\u7ebf\u7d22\u201d</p> <p>\u8bf7\u4e3a\u6211\u4eec\u6307\u51fa\u2026\u2026\u8bc1\u4eba\u2500\u2500\u7f6a\u95e8\u606d\u4ecb\u7684\u201c\u8e2a\u5f71\u201d\uff01</p> <p>\u9009\u62e9\uff1a17:15:12\uff5e13\u9644\u8fd1\u7f6a\u95e8\u7684\u4fdd\u7ba1\u5e93\u51fa\u73b0\u7684\u5e03</p> <p>\u6709\u4ec0\u4e48\u8bc1\u636e\u53ef\u4ee5\u8bc1\u660e\uff0c\u90a3\u4e2a\u4fdd\u7ba1\u5e93\u662f\u6211\u6253\u5f00\u7684\u5417\uff01</p> <p>\u4e3e\u8bc1\uff1a\u8bc1\u7269\u4fdd\u7ba1\u5e93</p> <p>\u6848\u53d1\u5f53\u65f6\u2026\u2026\u7f6a\u95e8\u8b66\u5b98\u5230\u5e95\u5728\u54ea\u91cc\uff1f</p> <p>\u9009\u62e9\uff1a\u88ab\u5bb3\u4eba\u7684\u4f4d\u7f6e\uff08\u300c\u88ab\u300d\u5b57\u7684\u4f4d\u7f6e\uff09</p> <p>\u8bf7\u4f60\u4e3a\u6211\u4eec\u6307\u51fa\uff0c\u8bc1\u4eba\u5f53\u65f6\u903c\u4e0d\u5f97\u5df2\u6253\u5f00\u4fdd\u7ba1\u5e93\u7684\u201c\u7406\u7531\u201d\uff01</p> <p>\u9009\u62e9\uff1a17:14:56\uff5e57\u9644\u8fd1\u67d3\u8840\u7684\u5916\u5957\u7684\u8840\u8ff9\u90e8\u5206</p> <p>\u8be2\u95ee \uff5e\u7f6a\u95e8\u7684\u81ea\u767d\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u7f6a\u95e8\u606d\u4ecb\uff08\u7f6a\u95e8\uff09\u3011</p> <p>\u8ffd\u95ee\uff1a\u5168\u90e8</p> <p>\u2192\u8bc1\u8a00\u8ffd\u52a0</p> <p>\u4e3e\u8bc1\uff1a\u300c\u4e0d\u53ef\u5fd8\u8bb0\u201c\uff33\uff2c\uff19\u53f7\u4e8b\u4ef6\u201d\u2026\u2026\u5176\u7406\u7531\uff0c\u4f60\u5e94\u8be5\u77e5\u9053\u5427\uff1f\u300d\u65f6\u9009\u300c\uff33\uff2c\uff19\u53f7\u4e8b\u4ef6\u7684\u8d44\u6599\u300d</p> <p>\uff08\u8fd9\u4e0a\u9762\u2026\u2026\u662f\u5426\u6709\u4ec0\u4e48\u201c\u77db\u76fe\u201d\u4e4b\u5904\uff01\uff09</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u5e73\u9762\u56fe\u4e2d\u201c\u7f3a\u5c11\u7684\u90e8\u5206\u201d\u2026\u2026\u8bf7\u95ee\u5230\u5e95\u662f\u4ec0\u4e48\uff1f</p> <p>\u4e3e\u8bc1\uff1a\u902e\u6355\u541b\u7684\u7acb\u724c</p> <p>\uff08\u201c\u7b2c\uff11\u6b21\u7684\u4e8b\u4ef6\u201d\u53d1\u751f\u7684\u65f6\u95f4\u2026\u2026\uff09</p> <p>\u4e3e\u8bc1\uff1a\uff29\uff24\u5361\u4f7f\u7528\u8bb0\u5f55</p> <p>\u6210\u6b69\u5802\u6cd5\u5f8b\u4e8b\u52a1\u6240</p> <p>\u5bf9\u8bdd\uff08\u831c\uff09\uff1a\u300c\uff33\uff2c\uff19\u53f7\u4e8b\u4ef6\u300d\u300c\u4e8b\u4ef6\u4e4b\u540e\u300d\u300c\u65e0\u6cd5\u5fd8\u8bb0\u7684\u666f\u8c61\u300d\u300c\u73b0\u5728\u5728\u610f\u7684\u4e8b\u60c5\u300d</p> <p>\u62d8\u7559\u6240</p> <p>\u831c\u300c\u4ea4\u8c08\u300d\u7ed3\u675f\u540e\uff0c\u5df4\u51fa\u73b0\u3002</p> <p>\u5bf9\u8bdd\uff08\u5b9d\u6708\uff09\uff1a\u300c\u4eca\u5929\u7684\u6cd5\u5ead\u300d\u300c\u641c\u67e5\u5b98\u2027\u5b9d\u6708\u5df4\u300d\u300c\uff12\u5e74\u524d\u7684\u641c\u67e5\u300d\u300c\u7b2c\u4e00\u53d1\u73b0\u8005\u300d</p> <p>\u8b66\u5bdf\u7f72\u2027\u5165\u53e3</p> <p>\u5bf9\u8bdd\uff08\u7f6a\u95e8\uff09\uff1a\u300c\uff12\u5e74\u524d\u7684\u5ba1\u5224\u300d\u300c\u5f1f\u5f1f\u2027\u7f6a\u95e8\u76f4\u6597\u68c0\u5bdf\u5b98\u300d\u300c\u4e8b\u4ef6\u5e26\u6765\u7684\u521b\u4f24\u300d\u300c\u5ca9\u5f92\u4e0e\u5df4\u300d</p> <p>\u5168\u90e8\u5bf9\u8bdd\u7ed3\u675f\u540e\u7f6a\u95e8\u6d88\u5931\u3002</p> <p>\u8b66\u5bdf\u7f72\u2027\u5211\u4e8b\u79d1</p> <p>\u4ee5\u4e0a\u7ed3\u675f\u540e\u524d\u5f80\u8b66\u5bdf\u7f72\u2027\u5211\u4e8b\u79d1\uff0c\u548c\u79d1\u957f\u5bf9\u8bdd\u3002</p> <p>\u79fb\u52a8\uff1a\u8b66\u5bdf\u7f72\u957f\u5ba4</p> <p>\u8b66\u5bdf\u7f72\u957f\u5ba4</p> <p>\u83b7\u5f97\u8bc1\u636e\uff1a\uff12\u5e74\u524d\u7684\u7167\u7247</p> <p>\u5bf9\u8bdd\u540e\u81ea\u52a8\u79fb\u52a8\u5230\u300c\u8b66\u5bdf\u7f72\u2027\u5165\u53e3\u300d\u3002</p> <p>\u53ef\u4ee5\u4ece\u300c\u8b66\u5bdf\u7f72\u2027\u5211\u4e8b\u79d1\u300d\u79fb\u52a8\u5230\u300c\u8b66\u5bdf\u7f72\u957f\u5ba4\u300d\u4e86\u3002</p> <p>\u8b66\u5bdf\u7f72\u2027\u5211\u4e8b\u79d1</p> <p>\u5bf9\u8bdd\uff08\u7cf8\u952f\uff09\uff1a\u300c\u5fa1\u5251\u7684\u5371\u673a\u300d\u300c\u201c\uff33\uff2c\uff19\u53f7\u4e8b\u4ef6\u201d\u300d\u300c \u9752\u5f71\u7684\u72af\u7f6a\u884c\u4e3a\u300d</p> <p>\u4e3e\u8bc1\uff1a\u5200</p> <p>\u2192\u5bf9\u8bdd\u300c\u51f6\u5668\u300d\u51fa\u73b0</p> <p>\u5bf9\u8bdd\uff08\u7cf8\u952f\uff09\uff1a\u300c\u51f6\u5668\u300d</p> <p>\u2192\u300c\u5200\u300d\u7684\u6570\u636e\u66f4\u65b0</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u7f6a\u95e8\u76f4\u6597\u7684\u89e3\u5256\u7eaa\u5f55</p> <p>\u9ad8\u7ea7\u68c0\u5bdf\u5b98\u529e\u516c\u5ba4</p> <p>\u4ee5\u4e0a\u5168\u90e8\u5b8c\u6210\u540e\uff0c\u9ad8\u7ea7\u68c0\u5bdf\u5b98\u529e\u516c\u5ba4\u4e2d\u51fa\u73b0\u5fa1\u5251\u3002</p> <p>\u5bf9\u8bdd\uff08\u5fa1\u5251\uff09\uff1a\u300c\u201d\u4f2a\u9020\u201d\u7684\u771f\u76f8\u300d\u300c\u660e\u5929\u7684\u6cd5\u5ead\u300d\u300c\u6848\u53d1\u5f53\u5929\u7684\u60c5\u51b5\u300d</p> <p>\u4e3e\u8bc1\uff1a\uff12\u5e74\u524d\u7684\u7167\u7247</p> <p>\u2192\u5bf9\u8bdd\u300c\u68c0\u5bdf\u7f72\u5956\u7684\u7531\u6765\u300d\u51fa\u73b0</p> <p>\u5bf9\u8bdd\uff08\u5fa1\u5251\uff09\uff1a\u300c\u68c0\u5bdf\u7f72\u5956\u7684\u7531\u6765\u300d</p> <p>\u2192\u300c\u68c0\u5bdf\u5b98\u5956\u76fe\u300d\u7684\u6570\u636e\u66f4\u65b0</p> <p>\u8c03\u67e5\uff1a\u684c\u4e0b\u6563\u843d\u7684\u7eb8\u7247</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u5fa1\u5251\u7684\u8f9e\u5448</p> <p>\u68c0\u5bdf\u7f72\u2027\u5730\u4e0b\u505c\u8f66\u573a</p> <p>\u9ad8\u7ea7\u68c0\u5bdf\u5b98\u529e\u516c\u5ba4\u4e2d\u4e0e\u5fa1\u5251\u4f1a\u9762\u540e\uff0c\u54cd\u534e\u51fa\u73b0\u3002</p> <p>\u5bf9\u8bdd\uff08\u54cd\u534e\uff09\uff1a\u300c\uff12\u5e74\u524d\u7684\u641c\u67e5\u300d\u300c\u89e3\u51b3\u4e8b\u4ef6\u4e4b\u540e\u300d\u300c\u4f20\u8bf4\u7684\u642d\u6863\u300d\u300c\u201c\u53d7\u4eba\u64cd\u7eb5\u201d\u300d</p> <p>\u8b66\u5bdf\u7f72\u2027\u5211\u4e8b\u79d1</p> <p>\u4ee5\u4e0a\u5168\u90e8\u7ed3\u675f\u540e\uff0c\u7cf8\u952f\u518d\u6b21\u51fa\u73b0\u3002</p> <p>\u4e3e\u8bc1\uff1a\u5fa1\u5251\u7684\u8f9e\u5448</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u7cf8\u952f\u5211\u8b66\u7684\uff29\uff24\u5361</p> <p>\u8b66\u5bdf\u7f72\u957f\u5ba4</p> <p>\u8bc1\u636e\u300c\u7cf8\u952f\u5211\u8b66\u7684\uff29\uff24\u5361\u300d\u6d88\u5931\u3002</p> <p>\u5bf9\u8bdd\uff08\u7cf8\u952f\uff09\uff1a\u300c\u7f72\u957f\u7684\u529e\u516c\u5ba4\u300d\u300c\u5ca9\u5f92\u7f72\u957f\u300d</p> <p>\u8c03\u67e5\uff1a\u6709\u5c4f\u5e55\u7684\u684c\u5b50</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u8bc1\u7269\u6e05\u5355</p> <p>\u8c03\u67e5\uff1a\u53f3\u5c4f\u5e55\u91d1\u5e93</p> <p>\uff08\uff17\u4f4d\u6570\u7684\u6570\u5b57\u3002\u6211\u60f3\u60f3\u2026\u2026\uff09</p> <p>\u9009\u62e9\uff1a\u8f93\u5165\u6570\u5b57</p> <p>\u8f93\u5165\u300c\uff17\uff17\uff17\uff17\uff17\uff17\uff17\u300d</p> <p>\u8c03\u67e5\uff1a\u53f3\u5c4f\u5e55\u91d1\u5e93\u5185</p> <p>\u8c03\u67e5\u91d1\u5e93\u5185\u540e</p> <p>\u4e3e\u8bc1\uff1a\u7ad9\u4e0d\u7a33\u7684\u58f6</p> <p>\u6211\u597d\u50cf\u542c\u61c2\u4f60\u7684\u610f\u601d\u4e86\uff01\u8d76\u5feb\u8bd5\u8bd5\u770b\u5427\uff01</p> <p>\u9009\u62e9\uff1a\u5c06\u788e\u7247\u7ec4\u5408</p> <p>\u5c06\u788e\u7247\u7ec4\u5408\u8d77\u6765\u3002</p> <p>\u2192\u8bc1\u636e\u300c\u7ad9\u4e0d\u7a33\u7684\u58f6\u300d\u7684\u6570\u636e\u66f4\u65b0</p> <p>\u8c03\u67e5\u91d1\u5e93\u5185\u540e</p> <p>\u4e3e\u8bc1\uff1a\u6307\u7eb9\u91c7\u96c6\u5de5\u5177\u7ec4</p> <p>\u68c0\u6d4b\u6307\u7eb9\uff1a</p> <p>\u9009\u62e9\u624b\u6307\uff1a\u4e2d\u6307</p> <p>\u6bd4\u7167\uff1a\u5b9d\u6708\u831c\uff0816\uff09</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u5e03\u5757</p> <p>\u4ee5\u4e0a\u5b8c\u6210\u540e\u5ca9\u5f92\u767b\u573a\uff0c\u81ea\u52a8\u524d\u5f80\u62d8\u7559\u6240\u3002</p> <p>\u62d8\u7559\u6240</p> <p>\u5bf9\u8bdd\uff08\u5b9d\u6708\uff09\uff1a\u300c\u4fdd\u6301\u6c89\u9ed8\u7684\u7406\u7531\u300d</p> <p>\u4f60\u8bf4\u6211\u5728\u201c\u5bb3\u6015\u201d\u7684\u4eba\u2026\u2026\u5230\u5e95\u662f\u4f55\u65b9\u795e\u5723\u5462\uff1f</p> <p>\u9009\u62e9\uff1a\u5ca9\u5f92\u6d77\u6148\uff0865\uff09</p> <p>\u5bf9\u8bdd\uff08\u5b9d\u6708\uff09\uff1a\u300c\u5ca9\u5f92\u6d77\u6148\u300d</p> <p>\u5ca9\u5f92\u7f72\u957f\u5bf9\u90a3\u8d77\u6848\u4ef6\u7684\u8bc1\u7269\u505a\u51fa\u4e0d\u6cd5\u884c\u4e3a\u7684\u8bc1\u636e\u4f55\u5728\uff01</p> <p>\u4e3e\u8bc1\uff1a\u300c\u7ad9\u4e0d\u7a33\u7684\u58f6\u300d\u4ee5\u53ca\u300c\u8bc1\u7269\u6e05\u5355\u300d</p> <p>\u5bf9\u8bdd\uff08\u5b9d\u6708\uff09\uff1a\u300c\u201c\u547d\u4ee4\u201d\u300d\u300c\u9752\u5f71\u7684\u5200\u5b50\u300d</p> <p>\u8be2\u95ee \uff5e\uff12\u5e74\u524d\u7684\u4e8b\u4ef6\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u5b9d\u6708\u831c\uff08\u831c\uff09\u3011</p> <p>\u8ffd\u95ee\uff1a\u300c\u4f46\u662f\u90a3\u65f6\u5019\u770b\u5230\u7684\u666f\u8c61\uff0c\u6211\u8fd9\u8f88\u5b50\u90fd\u4e0d\u4f1a\u5fd8\u8bb0\uff01\u300d</p> <p>\uff08\u591a\u7530\u6577\u9053\u592b\u2026\u2026\u8fd9\u6b21\u7684\u88ab\u5bb3\u4eba\u2026\u2026\uff09</p> <p>\u9009\u62e9\uff1a\u7ee7\u7eed\u6253\u542c</p> <p>\u8fa9\u62a4\u4eba\uff0c\u4f60\u5bf9\u4ee5\u4e0a\u8bc1\u8a00\u6709\u4ec0\u4e48\u770b\u6cd5\uff1f</p> <p>\u9009\u62e9\uff1a\u8ffd\u95ee\u90a3\u5e45\u201c\u753b\u201d</p> <p>\u2192\u8bc1\u8a00\u8ffd\u52a0</p> <p>\u4e3e\u8bc1\uff1a\u300c\u6211\u66fe\u7ecf\u5c1d\u8bd5\u628a\u5f53\u65f6\u7684\u4e8b\u753b\u51fa\u6765\uff0c\u4e0d\u8fc7\u597d\u50cf\u5df2\u7ecf\u9057\u5931\u4e86\u5462\u2026\u2026\u300d\u65f6\u9009\u300c\u8bc1\u7269\u6e05\u5355\u300d</p> <p>\u8be2\u95ee \uff5e\u5c0f\u831c\u7684\u201c\u753b\u201d\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u5b9d\u6708\u831c\uff08\u831c\uff09\u3011</p> <p>\u4e3e\u8bc1\uff1a\u300c\u2026\u2026\u4e0d\u8fc7\u6211\u53ef\u4ee5\u4fdd\u8bc1\uff0c\u6211\u7684\u786e\u7167\u5b9e\u628a\u5f53\u65f6\u770b\u89c1\u7684\u60c5\u51b5\u753b\u4e86\u4e0b\u6765\u3002\u300d\u65f6\u9009\u300c\u7f6a\u95e8\u76f4\u6597\u7684\u89e3\u5256\u7eaa\u5f55\u300d</p> <p>\u8bc1\u4eba\u6240\u7559\u4e0b\u7684\u8fd9\u5f20\u201c\u753b\u201d\u2026\u2026\u8ddf\u89e3\u5256\u7eaa\u5f55\u7684\u77db\u76fe\u4e4b\u5904\u5728\u54ea\u91cc\uff01</p> <p>\u9009\u62e9\uff1a\u72af\u4eba\u6301\u6709\u7684\u51f6\u5668</p> <p>\uff08\u2026\u2026\u771f\u7684\u6709\u8fd9\u79cd\u53ef\u80fd\u6027\u5417\uff1f\uff09</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u2026\u2026\u8bf7\u5404\u4f4d\u770b\u597d\u4e86\u3002\u8fd9\u5c31\u662f\u201c\u51f6\u5668\u201d\u7684\u771f\u9762\u76ee\uff01</p> <p>\u9009\u62e9\uff1a\uff12\u5e74\u524d\u7684\u7167\u7247</p> <p>\u8be2\u95ee \uff5e\u60f3\u8d77\u4e86\u4ec0\u4e48\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u5b9d\u6708\u831c\uff08\u831c\uff09\u3011</p> <p>\u8ffd\u95ee\uff1a\u300c\u6211\u77e5\u9053\u529e\u516c\u5ba4\u5e94\u8be5\u6ca1\u6709\u902e\u6355\u541b\u2026\u2026\u53ef\u662f\u6211\u771f\u7684\u770b\u5230\u4e86\uff01\u300d</p> <p>\uff08\u90a3\u4e48\uff0c\u5c0f\u831c\u770b\u5230\u7684\u5230\u5e95\u662f\u4ec0\u4e48\uff1f\uff09</p> <p>\u9009\u62e9\uff1a\u5927\u6982\u80fd\u731c\u5230</p> <p>\u5b9d\u6708\u831c\u770b\u5230\u7684\u201c\u902e\u6355\u541b\u201d\uff0c\u771f\u9762\u76ee\u7a76\u7adf\u662f\u4ec0\u4e48\uff01</p> <p>\u4e3e\u8bc1\uff1a\u7ad9\u4e0d\u7a33\u7684\u58f6</p> <p>\uff08\u8be5\u4ece\u54ea\u4e2a\u201c\u89d2\u5ea6\u201d\u53bb\u770b\u8fd9\u4e2a\u58f6\uff0c\u51fa\u793a\u7ed9\u73b0\u573a\u6240\u6709\u4eba\u770b\u770b\u5427\u2026\u2026\uff01\uff09</p> <p>\u4ef0\u89c6\u8840\u8ff9\u7684\u90e8\u5206\u3002</p> <p>\u5728\u51f6\u624b\u4f5c\u6848\u7684\u77ac\u95f4\uff0c\u8bc1\u4eba\u770b\u5230\u4e86\u8fd9\u4e2a\u58f6\u2026\u2026\u5230\u5e95\u4f1a\u5e26\u6765\u4ec0\u4e48\u53d8\u5316\uff01</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u88ab\u5bb3\u4eba\u662f\u5426\u53ef\u80fd\u4e3a\u6211\u4eec\u7559\u4e0b\uff0c\u201c\u771f\u51f6\u7684\u540d\u5b57\u201d\u8fd9\u4e2a\u60c5\u62a5\u2026\u2026</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u6b7b\u8005\u9057\u7559\u4e0b\u6765\u7684\u201c\u4fe1\u606f\u201d\u2026\u2026\u5176\u5b9e\u5df2\u7ecf\u5728\u6211\u4eec\u624b\u4e2d\u4e86\u3002</p> <p>\u4e3e\u8bc1\uff1a\u7ad9\u4e0d\u7a33\u7684\u58f6</p> <p>\uff08\u2026\u2026\u4e00\u5b9a\u662f\u201c\u51f6\u624b\u7684\u540d\u5b57\u201d\uff01\uff09</p> <p>\u8fde\u63a5\u8840\u75d5\u7ec4\u6210\u300c\u831c\u300d\u5b57\u3002</p> <p>\u83b7\u5f97\u8bc1\u636e\uff1a\u8bc1\u636e\u6cd5\u5165\u95e8\u4e66</p> <p>\uff08\u73b0\u5728\u5c31\u662f\u6293\u51fa\u201c\u771f\u51f6\u201d\u7684\u65f6\u5019\uff01\uff09</p> <p>\u4e3e\u8bc1\uff1a\u5ca9\u5f92\u6d77\u6148\uff0865\uff09</p> <p>\u8be2\u95ee \uff5e\u201c\uff33\uff2c\uff19\u53f7\u4e8b\u4ef6\u201d\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u5ca9\u5f92\u6d77\u6148\uff08\u5ca9\u5f92\uff09\u3011</p> <p>\u4e3e\u8bc1\uff1a\u300c\u6240\u4ee5\u4e8b\u60c5\u5c31\u5f88\u6e05\u695a\u4e86\u3002\u201c\u4f2a\u9020\u201d\u8bc1\u636e\u8fd9\u79cd\u4e8b\uff0c\u6839\u672c\u6ca1\u6709\u6211\u7684\u4efd\u554a\u3002\u300d\u65f6\u9009\u300c\u7ad9\u4e0d\u7a33\u7684\u58f6\u300d\u6216\u300c\u8bc1\u7269\u6e05\u5355\u300d</p> <p>\u8be2\u95ee \uff5e\u201c\u8bc1\u7269\u201d\u4e0e\u201c\u4f2a\u9020\u201d\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u5ca9\u5f92\u6d77\u6148\uff08\u5ca9\u5f92\uff09\u3011</p> <p>\u8ffd\u95ee\uff1a\u300c\u4f2a\u9020\u73b0\u573a\u5bf9\u6211\u53c8\u6ca1\u6709\u4ec0\u4e48\u597d\u5904\u3002\u300d</p> <p>\u2192\u8bc1\u8a00\u53d8\u66f4</p> <p>\u8ffd\u95ee\uff1a\u300c\u5bf9\u6211\u53c8\u6ca1\u6709\u597d\u5904\uff0c\u6211\u600e\u4e48\u53ef\u80fd\u534f\u52a9\u522b\u4eba\u5462\uff1f\u300d</p> <p>\uff08\u2026\u2026\u81ea\u6211\u4e2d\u5fc3\u7684\u7f72\u957f\uff0c\u4f1a\u4e3a\u4e86\u534f\u52a9\u67d0\u4eba\u800c\u505a\u51fa\u201c\u4f2a\u9020\u201d\u884c\u4e3a\u5417\uff1f\uff09</p> <p>\u9009\u62e9\uff1a\u6307\u51fa\u201c\u67d0\u4eba\u201d\u662f\u8c01</p> <p>\u2026\u2026\u5ca9\u5f92\u7f72\u957f\u6709\u53ef\u80fd\u534f\u52a9\u201c\u4f2a\u9020\u201d\u7684\u4eba\uff0c\u7a76\u7adf\u662f\u8c01\uff1f</p> <p>\u4e3e\u8bc1\uff1a\u5b9d\u6708\u5df4\uff0829\uff09</p> <p>\u80fd\u8bc1\u660e\u5ca9\u5f92\u7f72\u957f\u6d89\u53ca\u641c\u67e5\u5b98\u547d\u6848\u7684\u5173\u952e\u8bc1\u636e\uff01</p> <p>\u4e3e\u8bc1\uff1a\uff29\uff24\u5361\u4f7f\u7528\u8bb0\u5f55</p> <p>\u80fd\u591f\u8bc1\u660e\u6848\u53d1\u5f53\u5929\uff0c\u88ab\u5bb3\u4eba\u548c\u7f72\u957f\uff0c\u4e24\u4eba\u66fe\u7ecf\u89c1\u8fc7\u9762\u7684\u8bc1\u636e\uff01</p> <p>\u4e3e\u8bc1\uff1a\u591a\u7530\u6577\u7684\u62a5\u5931\u5355</p> <p>\u5ca9\u5f92\u7f72\u957f\u4e3a\u4e86\u642c\u8fd0\u5c38\u4f53\u2026\u2026\u4f7f\u7528\u4e86\u8fd9\u79cd\u4e1c\u897f\uff01</p> <p>\u4e3e\u8bc1\uff1a\u300c\u5fa1\u5251\u7684\u505c\u8f66\u7eaa\u5f55\u300d\u4ee5\u53ca\u300c\u87ba\u4e1d\u5200\u300d</p> <p>\uff08\u8fd9\u79cd\u5173\u952e\u201c\u8bc1\u636e\u201d\u2026\u2026\u6211\u624b\u91cc\u6709\u5417\u2026\u2026\uff1f\uff09</p> <p>\u9009\u62e9\uff1a\u73b0\u5728\u8fd8\u6ca1\u529e\u6cd5\u51fa\u793a</p> <p>\u2026\u2026\u6211\u77e5\u9053\u4e86\u3002\u6211\u8981\u6c42\u4f20\u5524\u6700\u540e\u4e00\u4f4d\u8bc1\u4eba\uff01</p> <p>\u4e3e\u8bc1\uff1a\u5b9d\u6708\u5df4\uff0829\uff09</p> <p>\u8be2\u95ee \uff5e\u5ca9\u5f92\u7f72\u957f\u4e0e\u201c\u4f2a\u9020\u201d\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u5b9d\u6708\u5df4\uff08\u5b9d\u6708\uff09\u3011</p> <p>\u8ffd\u95ee\uff1a\u300c\u6211\u770b\u5230\u7f6a\u95e8\u68c0\u5bdf\u5b98\u7684\u5c38\u4f53\u540e\u2026\u2026\u5c31\u5f00\u59cb\u60f3\u529e\u6cd5\uff0c\u5e76\u4f2a\u9020\u4e86\u8bc1\u636e\u3002\u300d</p> <p>\u2192\u8bc1\u8a00\u53d8\u66f4</p> <p>\u8ffd\u95ee\uff1a\u300c\u6211\u628a\u9752\u5f71\u90a3\u628a\u5200\u7684\u5c16\u7aef\u6298\u65ad\u540e\uff0c\u585e\u5165\u4f24\u53e3\uff0c\u53c8\u79fb\u52a8\u4e86\u5c38\u4f53\u3002\u300d</p> <p>\uff08\u867d\u7136\u6211\u7684\u5934\u8111\u4e5f\u5f88\u597d\u2026\u2026\u4e0d\u8fc7\u4fdd\u9669\u8d77\u89c1\uff0c\u8fd8\u662f\u95ee\u4e00\u4e0b\uff1f\uff09</p> <p>\u9009\u62e9\uff1a\u4e3a\u4ec0\u4e48\u8981\u642c\u52a8\u5c38\u4f53\uff1f</p> <p>\u2192\u8bc1\u8a00\u8ffd\u52a0</p> <p>\u4e3e\u8bc1\uff1a\u300c\u90a3\u4e2a\u58f6\u662f\u6848\u53d1\u5f53\u65f6\u6253\u788e\u7684\uff0c\u56e0\u4e3a\u5b83\u7684\u788e\u7247\u5f88\u788d\u4e8b\u2026\u2026\u300d\u65f6\u9009\u300c\u7ad9\u4e0d\u7a33\u7684\u58f6\u300d</p> <p>\u8be2\u95ee \uff5e\u58f6\u548c\u8840\u4e66\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u5b9d\u6708\u5df4\uff08\u5b9d\u6708\uff09\u3011</p> <p>\u4e3e\u8bc1\uff1a\u5728\u300c\u6240\u4ee5\uff0c\u6211\u53ea\u597d\u62ff\u8d77\u5168\u90e8\u7684\u788e\u7247\uff0c\u5feb\u901f\u64e6\u62ed\u4e0a\u9762\u7684\u8840\u8ff9\u3002\u300d\u300c\u5e78\u597d\u6bcf\u4e2a\u788e\u7247\u90fd\u6bd4\u8f83\u5927\uff0c\u6211\u6ca1\u6709\u9057\u6f0f\u4efb\u4f55\u4e00\u7247\u3002\u300d\u300c\u201c\u88ab\u4eba\u770b\u5230\u4e4b\u524d\u8981\u8d76\u5feb\u9690\u7792\u8bc1\u636e\u201d\u2026\u2026\u6211\u6ee1\u8111\u5b50\u53ea\u6709\u8fd9\u4e2a\u5ff5\u5934\u3002\u300d\u4efb\u610f\u4e00\u5904\u4e3e\u8bc1\u300c\u7ad9\u4e0d\u7a33\u7684\u58f6\u300d</p> <p>\u6211\u60f3\uff0c\u90a3\u5f20\u7167\u7247\u4e00\u5b9a\u85cf\u5728\u67d0\u4e2a\u5730\u65b9\u624d\u5bf9\uff01</p> <p>\u9009\u62e9\uff1a\u8bc1\u636e\u6cd5\u5165\u95e8\u4e66\u2192\u300c\u8c03\u67e5\u300d\u67e5\u770b\u8be6\u60c5</p> <p>\u5bfb\u627e\u300c\u8bc1\u636e\u6cd5\u5165\u95e8\u4e66\u300d\u7684\u7167\u7247</p> <p>\u5149\u6807\u79fb\u52a8\u5230\u300c\u8bc1\u636e\u6cd5\u5165\u95e8\u4e66\u300d\u9875\u9762\u8c03\u67e5\u3002</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u5b9d\u6708\u5df4\u7684\u7167\u7247</p> <p>\uff08\u90a3\u4ef6\u6307\u51fa\u6740\u5bb3\u7f6a\u95e8\u68c0\u5bdf\u5b98\u7684\u201c\u771f\u51f6\u201d\u7684\u8bc1\u7269\u2026\u2026\uff09</p> <p>\u9009\u62e9\uff1a\u65e0\u6cd5\u51fa\u793a\u8bc1\u7269</p> <p>\uff08\u53ea\u8981\u522b\u505a\u51fa\u9519\u8bef\u7684\u5224\u65ad\u2026\u2026\u4e00\u5b9a\u53ef\u4ee5\u62ff\u4e0b\u80dc\u5229\uff01\uff09</p> <p>\u9009\u62e9\uff1a\u51fa\u793a\u8bc1\u7269</p> <p>\u80fd\u591f\u6307\u51fa\u6740\u5bb3\u7f6a\u95e8\u68c0\u5bdf\u5b98\u7684\u771f\u51f6\u7684\u201c\u5173\u952e\u8bc1\u636e\u201d\u662f\u4ec0\u4e48\uff01</p> <p>\u4e3e\u8bc1\uff1a\u5e03\u5757</p> <p>\u8fd9\u7247\u5e03\u4e0a\u7684\u6307\u7eb9\uff0c\u5176\u4e3b\u4eba\u662f\u2026\u2026\uff01</p> <p>\u4e3e\u8bc1\uff1a\u5b9d\u6708\u831c\uff0816\uff09</p> <p>\u5404\u4f4d\u770b\u597d\u4e86\u2026\u2026\uff01\u8fd9\u5c31\u662f\u548c\u5e03\u7247\u201c\u77db\u76fe\u201d\u7684\u8bc1\u636e\uff01</p> <p>\u4e3e\u8bc1\uff1a\u5b9d\u6708\u5df4\u7684\u7167\u7247</p> <p>\u4f60\u66fe\u7ecf\u523b\u610f\u60f3\u8981\u5c06\u201c\u5e03\u7247\u201d\u85cf\u533f\u8d77\u6765\u2026\u2026\uff01</p> <p>\u9009\u62e9\uff1a\u8bc1\u7269\u5e76\u4e0d\u8fdd\u6cd5</p> <p>\u5982\u679c\u6b64\u884c\u4e3a\u5e76\u672a\u201c\u8fdd\u6cd5\u201d\uff0c\u8bf7\u51fa\u793a\u4f60\u7684\u6839\u636e\uff01</p> <p>\u4e3e\u8bc1\uff1a\u8bc1\u636e\u6cd5\u5165\u95e8\u4e66</p> <p>\uff08\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u4eba\uff0c\u80af\u5b9a\u6ca1\u529e\u6cd5\u53d1\u73b0\u7684\u201c\u8bc1\u636e\u201d\u662f\u2026\u2026\uff09</p> <p>\u4e3e\u8bc1\uff1a\u8bc1\u7269\u6e05\u5355</p> <p>\u7b2c5\u8bdd\u7ed3\u675f\u3002</p>"},{"location":"game/aceattorney/#\u9006\u8f6c\u88c1\u52242","title":"\u9006\u8f6c\u88c1\u52242","text":""},{"location":"game/aceattorney/#\u5931\u843d\u7684\u9006\u8f6c","title":"\u5931\u843d\u7684\u9006\u8f6c","text":"\u6e38\u620f\u653b\u7565 \u6cd5\u5ead\u2027\u524d\u7bc7\u6cd5\u5ead\u2027\u540e\u7bc7 <p>\u6240\u4ee5\u5462\uff1f\u4f60\u51c6\u5907\u597d\u4e86\u5417\uff1f</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u83b7\u5f97\u8bc1\u636e\uff1a\u73b0\u573a\u7167\u7247\u2027\uff11</p> <p>\u4ece\u88ab\u5bb3\u4eba\u9057\u4f53\u4e0b\u9762\u53d1\u73b0\u7684\u8bc1\u7269\uff0c\u7a76\u7adf\u662f\u4ec0\u4e48\uff1f</p> <p>\u9009\u62e9\uff1a\u773c\u955c</p> <p>\u83b7\u5f97\u8bc1\u636e\uff1a\u73b0\u573a\u7167\u7247\u2027\uff12</p> <p>\u8be2\u95ee \uff5e\u5173\u952e\u8bc1\u636e\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u7cf8\u92f8\u572d\u4ecb\uff08\u7cf8\u952f\uff09\u3011</p> <p>\u4e3e\u8bc1\uff1a\u300c\u8fd9\u4e2a\u540d\u5b57\u5f88\u6e05\u695a\u5730\uff0c\u5c31\u662f\u201c\u94c3\u6728\u201d\u4e24\u4e2a\u5b57\u3002\u300d\u65f6\u9009\u300c\u96f6\u6728\u771f\u5b50\uff0822\uff09\u300d\u3010\uff0a\u4eba\u7269\u6863\u6848\u3011</p> <p>\u8be2\u95ee \uff5e\u88ab\u544a\u4e0e\u88ab\u5bb3\u4eba\u7684\u5173\u7cfb\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u7cf8\u952f\u572d\u4ecb\uff08\u7cf8\u952f\uff09\u3011</p> <p>\u8ffd\u95ee\uff1a\u300c\u800c\u4e14\u8fd9\u4efd\u793c\u7269\uff0c\u5979\u4ece\uff12\u4e2a\u6708\u524d\u5c31\u5f00\u59cb\u51c6\u5907\u4e86\u3002\u300d</p> <p>\uff08\uff08\u68d2\u7403\u624b\u5957\u2026\u2026\u662f\u5417\u2026\u2026\u600e\u4e48\u529e\uff1f\uff09\uff09</p> <p>\u9009\u62e9\uff1a\u7ee7\u7eed\u8ffd\u95ee</p> <p>\u7279\u522b\u8ba2\u505a\u7684\u68d2\u7403\u624b\u5957\uff0c\u8ddf\u6848\u60c5\u5230\u5e95\u6709\u6ca1\u6709\u5173\u7cfb\uff1f</p> <p>\u9009\u62e9\uff1a\u5f53\u7136\u6709\u5173</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u68d2\u7403\u624b\u5957</p> <p>\u8be2\u95ee \uff5e\u88ab\u5bb3\u4eba\u7559\u4e0b\u7684\u6587\u5b57\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u7cf8\u952f\u572d\u4ecb\uff08\u7cf8\u952f\uff09\u3011</p> <p>\u4e3e\u8bc1\uff1a\u300c\u6839\u636e\u4ee5\u4e0a\u51e0\u70b9\uff0c\u6211\u4eec\u5224\u65ad\u88ab\u5bb3\u4eba\u7684\u786e\u7528\u53f3\u624b\u5199\u4e0b\u4e86\u8fd9\u4e9b\u6587\u5b57\uff01\u300d\u65f6\u9009\u300c\u68d2\u7403\u624b\u5957\u300d</p> <p>\u83b7\u5f97\u8bc1\u636e\uff1a\u540d\u5355</p> <p>\u8be2\u95ee \uff5e\u6848\u53d1\u5f53\u5929\u76ee\u51fb\u5230\u7684\u4e8b\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u8bf8\u5e73\u91ce\u8d35\u96c5\uff08\u8bf8\u5e73\u91ce\uff09\u3011</p> <p>\u4e3e\u8bc1\uff1a\u300c\u8981\u8bf4\u73b0\u573a\u7684\u5176\u4ed6\u602a\u5f02\u4e4b\u5904\uff0c\u5927\u6982\u5c31\u662f\u5730\u4e0a\u6389\u4e86\u4e00\u4e32\u9999\u8549\u5427\u3002\u300d\u65f6\u9009\u300c\u68d2\u7403\u624b\u5957\u300d</p> <p>\u8fd9\u4f4d\u8bc1\u4eba\u2026\u2026</p> <p>\u9009\u62e9\uff1a\u89c6\u529b\u4e0d\u597d</p> <p>\u8be2\u95ee \uff5e\u76ee\u51fb\u4e8b\u4ef6\u4e4b\u540e\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u8bf8\u5e73\u91ce\u8d35\u96c5\uff08\u8bf8\u5e73\u91ce\uff09\u3011</p> <p>\u4e3e\u8bc1\uff1a\u300c\u7136\u540e\uff0c\u6211\u5c31\u9a6c\u4e0a\u62a5\u8b66\u4e86\u3002\u300d\u4ee5\u53ca\u300c\u6211\u6253\u7ed9\u8b66\u5bdf\u65f6\uff0c\u5927\u7ea6\u662f\uff16\u70b9\uff14\uff15\u5206\u3002\u300d\u65f6\u9009\u300c\u753a\u5c3e\u5b88\u7684\u89e3\u5256\u7eaa\u5f55\u300d</p> <p>\uff08\u6ca1\u60f3\u5230\u4f1a\u6709\u8fd9\u79cd\u4e8b\uff01\u2026\u2026\u8be5\u600e\u4e48\u529e\uff1f\uff09</p> <p>\u9009\u62e9\uff1a\u7ee7\u7eed\u8ffd\u95ee</p> <p>\u4f60\u600e\u4e48\u770b\uff1f\u8fa9\u62a4\u4eba\u3002\u8fd8\u6709\u6ca1\u6709\u95ee\u9898\uff1f</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u54ea\u4e00\u4ef6\u8bc1\u636e\u53ef\u4ee5\u8bc1\u660e\uff0c\u8bc1\u4eba\u4e0d\u53ef\u80fd\u5728\u73b0\u573a\u5bfb\u627e\u516c\u5171\u7535\u8bdd\uff1f</p> <p>\u4e3e\u8bc1\uff1a\u73b0\u573a\u7167\u7247\u2027\uff11</p> <p>\u5176\u5b9e\u4f60\u5fc3\u91cc\u5df2\u7ecf\u6709\u60f3\u6cd5\u4e86\u5427\uff1f</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u201c\u8bc1\u4eba\u4e3a\u4f55\u6ca1\u6709\u7acb\u523b\u62a5\u8b66\u2026\u2026\uff1f\u201d</p> <p>\u4e3e\u8bc1\uff1a\u773c\u955c</p> <p>\uff08\u8fd9\u5bb6\u4f19\u771f\u7684\u6ca1\u6709\u673a\u4f1a\u5f97\u77e5\u88ab\u544a\u7684\u540d\u5b57\u5417\uff1f\uff09</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u8fd9\u4f4d\u8bc1\u4eba\uff0c\u662f\u5982\u4f55\u4e8b\u5148\u77e5\u9053\u88ab\u544a\u59d3\u540d\u7684\uff1f</p> <p>\u4e3e\u8bc1\uff1a\u624b\u673a</p> <p>\u90a3\u4e48\uff0c\u8bf7\u4f60\u51fa\u793a\u8bc1\u636e\u3002\u80fd\u591f\u8bc1\u660e\u8bc1\u4eba\u201c\u52a8\u673a\u201d\u7684\u8bc1\u636e\uff01</p> <p>\u4e3e\u8bc1\uff1a\u300c\u540d\u5355\u300d\u4ee5\u53ca\u300c\u624b\u673a\u300d</p> <p>\u8fd9\u8fd8\u9700\u8981\u89e3\u91ca\u5417\uff01\u8bf8\u5e73\u91ce\u5148\u751f\u4ed6\u2026\u2026</p> <p>\u9009\u62e9\uff1a\u662f\u6b64\u8bc8\u9a97\u96c6\u56e2\u7684\u4e00\u4efd\u5b50</p> <p>\u4f60\u8bf4\u4ed6\u5728\u73b0\u573a\u770b\u5230\u201c\u4e0d\u5999\u7684\u4e1c\u897f\u201d\uff0c\u7a76\u7adf\u662f\u6307\u4ec0\u4e48\uff1f</p> <p>\u4e3e\u8bc1\uff1a\u753a\u5c3e\u5b88\uff0830\uff09\u3010\uff0a\u4eba\u7269\u6863\u6848\u3011</p> <p>\uff08\u4e00\u5b9a\u2026\u2026\uff01\u4e00\u5b9a\u8fd8\u6709\u4ec0\u4e48\u6211\u6ca1\u6ce8\u610f\u5230\u7684\u5730\u65b9\uff01\uff09</p> <p>\u9009\u62e9\uff1a\u8c03\u67e5\u624b\u673a\u4e0a\u7684\u6307\u7eb9</p> <p>\uff08\u2026\u2026\u600e\u4e48\u529e\uff01\u8fd9\u6837\u4e0b\u53bb\u597d\u5417\u2026\u2026\uff1f\uff09</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u8bf7\u51fa\u793a\u2026\u2026\u80fd\u591f\u8bc1\u660e\u4f60\u6240\u6709\u60f3\u6cd5\u7684\u8bc1\u7269\uff01</p> <p>\u4e3e\u8bc1\uff1a\u6210\u6b65\u5802\u7684\u540d\u7247</p> <p>\u8fd9\u5f20\u540d\u7247\u5230\u5e95\u54ea\u91cc\u91cd\u8981\uff1f\u7b54\u6848\u5c31\u662f\u2026\u2026</p> <p>\u9009\u62e9\uff1a\u540d\u7247\u80cc\u9762</p> <p>\u7b2c1\u8bdd\u7ed3\u675f\u3002</p>"},{"location":"game/aceattorney/#\u518d\u4f1a\u7136\u540e\u9006\u8f6c","title":"\u518d\u4f1a\uff0c\u7136\u540e\u9006\u8f6c","text":"\u6e38\u620f\u653b\u7565 \u7b2c\u4e00\u56de\u2027\u8c03\u67e5\u2027\u524d\u7bc7\u7b2c\u4e00\u56de\u2027\u8c03\u67e5\u2027\u540e\u7bc7\u7b2c\u4e00\u56de\u2027\u6cd5\u5ead\u2027\u524d\u7bc7\u7b2c\u4e00\u56de\u2027\u6cd5\u5ead\u2027\u540e\u7bc7\u7b2c\u4e8c\u56de\u2027\u8c03\u67e5\u2027\u524d\u7bc7\u7b2c\u4e8c\u56de\u2027\u8c03\u67e5\u2027\u540e\u7bc7\u7b2c\u4e8c\u56de\u2027\u6cd5\u5ead\u2027\u524d\u7bc7\u7b2c\u4e8c\u56de\u2027\u6cd5\u5ead\u2027\u540e\u7bc7 <p>\u4ed3\u9662\u4e4b\u6751</p> <p>\u5bf9\u8bdd\uff08\u771f\u5bb5\uff09\uff1a\u300c\u4eca\u5929\u7684\u59d4\u6258\u300d\u300c\u4ed3\u9662\u4e4b\u6751\u300d\u300c\u521a\u521a\u7684\u5973\u5b69\u300d</p> <p>\u5168\u90e8\u5b8c\u6210\u540e\u771f\u5bb5\u79bb\u5f00\u3002</p> <p>\u79fb\u52a8\uff1a\u4fee\u7ec3\u8005\u4e4b\u623f</p> <p>\u4fee\u7ec3\u8005\u4e4b\u623f</p> <p>\u83b7\u5f97\u8bc1\u636e\uff1a\u5e73\u9762\u56fe\uff08\u7eeb\u91cc\u5bb6\uff09</p> <p>\u5bf9\u8bdd\uff08\u96fe\u5d0e\uff09\uff1a\u300c\u4eca\u5929\u7684\u59d4\u6258\u300d\u300c\u5173\u4e8e\u771f\u5bb5\u300d</p> <p>\u79fb\u52a8\uff1a\u4f1a\u9762\u4e4b\u623f</p> <p>\u4f1a\u9762\u4e4b\u623f</p> <p>\u5bf9\u8bdd\uff08\u8d35\u7f8e\u5b50\uff09\uff1a\u300c\u5173\u4e8e\u771f\u5bb5\u300d\u300c\u4eca\u5929\u7684\u59d4\u6258\u300d\u300c\u5173\u4e8e\u4f1a\u9762\u4e4b\u623f\u300d</p> <p>\u79fb\u52a8\uff1a\u4fee\u7ec3\u8005\u4e4b\u623f\u2192\u8d70\u5eca\u2192\u4f11\u606f\u623f</p> <p>\u4f11\u606f\u623f</p> <p>\u6ca1\u4eba\u3002</p> <p>\u8d70\u5eca</p> <p>\u2027\u771f\u5bb5\u7684\u300c\u5bf9\u8bdd\u300d\u5168\u90e8\u5b8c\u6210</p> <p>\u2027\u8d35\u7f8e\u5b50\u7684\u300c\u5bf9\u8bdd\u300d\u5168\u90e8\u5b8c\u6210</p> <p>\u2027\u524d\u5f80\u300c\u4f11\u606f\u623f\u300d</p> <p>\u4ee5\u4e0a\u5168\u90e8\u5b8c\u6210\u540e\u79fb\u52a8\u5230\u300c\u8d70\u5eca\u300d\uff0c\u590f\u7f8e\u51fa\u73b0\u5bf9\u8bdd\u3002</p> <p>\u5443\uff0c\u8fd9\u4e2a\uff0c\u6211\u8bb0\u5f97\u4f60\u662f\u2026\u2026</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u79fb\u52a8\uff1a\u4fee\u7ec3\u8005\u4e4b\u623f</p> <p>\u4fee\u7ec3\u8005\u4e4b\u623f</p> <p>\uff08\u771f\u2026\u2026\u771f\u5bb5\u8fd8\u5728\u91cc\u9762\uff01\uff09</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u4ed3\u9662\u4e4b\u6751</p> <p>\u5bf9\u8bdd\uff08\u590f\u7f8e\uff09\uff1a\u300c\u76ee\u51fb\u5230\u7684\u72b6\u51b5\u300d\u300c\u5173\u4e8e\u96fe\u5d0e\u533b\u751f\u300d</p> <p>\u4fee\u7ec3\u8005\u4e4b\u623f</p> <p>\u5bf9\u8bdd\u3002</p> <p>\u4f11\u606f\u623f</p> <p>\u5bf9\u8bdd\uff08\u548c\u9999\uff09\uff1a\u300c\u5173\u4e8e\u548c\u9999\u300d\u300c\u5173\u4e8e\u4e8b\u4ef6\u300d\u300c\u5173\u4e8e\u88ab\u5bb3\u4eba\u300d</p> <p>\u8d70\u5eca</p> <p>\u300c\u4f11\u606f\u623f\u300d\u7684\u548c\u9999\u51fa\u73b0\u4e4b\u540e\u79fb\u52a8\u5230\u300c\u8d70\u5eca\u300d\uff0c\u6625\u7f8e\u51fa\u73b0\u3002</p> <p>\u4f1a\u9762\u4e4b\u623f</p> <p>\u5bf9\u8bdd\uff08\u7cf8\u952f\uff09\uff1a\u300c\u5173\u4e8e\u771f\u5bb5\u300d\u300c\u88ab\u5bb3\u4eba\u7684\u6b7b\u56e0\u300d</p> <p>\u4ed3\u9662\u4e4b\u6751</p> <p>\u300c\u4f11\u606f\u623f\u300d\u7684\u548c\u9999\u51fa\u73b0\u4e4b\u540e\u8fd4\u56de\u300c\u4ed3\u9662\u4e4b\u6751\u300d\uff0c\u590f\u7f8e\u7684\u300c\u5bf9\u8bdd\u300d\u65f6\u8ffd\u52a0\u300c\u662f\u5426\u5bdf\u89c9\u5230\u4ec0\u4e48\u300d\u3002</p> <p>\u5bf9\u8bdd\uff08\u590f\u7f8e\uff09\uff1a\u300c\u662f\u5426\u5bdf\u89c9\u5230\u4ec0\u4e48\u300d</p> <p>\u2192\u590f\u7f8e\u79bb\u5f00\u3002</p> <p>\u4fee\u7ec3\u8005\u4e4b\u623f</p> <p>\u2027\u548c\u9999\u7684\u300c\u5bf9\u8bdd\u300d\u5168\u90e8\u5b8c\u6210</p> <p>\u2027\u7cf8\u952f\u7684\u300c\u5bf9\u8bdd\u300d\u5168\u90e8\u5b8c\u6210</p> <p>\u2027\u590f\u7f8e\u7684\u5bf9\u8bdd\u300c\u662f\u5426\u5bdf\u89c9\u5230\u4ec0\u4e48\u300d\u5b8c\u6210</p> <p>\u4ee5\u4e0a\u5168\u90e8\u5b8c\u6210\u540e\uff0c\u79fb\u52a8\u5230\u300c\u4fee\u7ec3\u8005\u4e4b\u623f\u300d\u5bf9\u8bdd\u3002\u542c\u5b8c\u540e\u81ea\u52a8\u79fb\u52a8\u5230\u300c\u62d8\u7559\u6240\u300d\u3002</p> <p>\u62d8\u7559\u6240</p> <p>\u5bf9\u8bdd\uff08\u771f\u5bb5\uff09\uff1a\u300c\u5173\u4e8e\u7075\u5a92\u300d\u300c\u5173\u4e8e\u4e8b\u4ef6\u300d\u300c\u201d\u68a6\u201d\u300d</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u771f\u5bb5\u7684\u52fe\u7389</p> <p>\u6210\u6b65\u5802\u6cd5\u5f8b\u4e8b\u52a1\u6240</p> <p>\u83b7\u5f97\u8bc1\u636e\uff1a\u65b0\u95fb\u62a5\u9053\u2027\uff11</p> <p>\u4f1a\u9762\u4e4b\u623f</p> <p>\u5bf9\u8bdd\uff08\u8d35\u7f8e\u5b50\uff09\uff1a\u300c\u5173\u4e8e\u4e8b\u4ef6\u300d\u300c\u5173\u4e8e\u4f1a\u9762\u4e4b\u623f\u300d\u300c\u5173\u4e8e\u6625\u7f8e\u300d</p> <p>\u8c03\u67e5\uff1a\u3010\u53f3\u753b\u9762\u3011\u5c4f\u98ce</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u5c4f\u98ce</p> <p>\u4ee5\u4e0a\u5168\u90e8\u5b8c\u6210\u540e\u8d35\u7f8e\u5b50\u79bb\u5f00\u3002</p> <p>\u4f11\u606f\u623f</p> <p>\u5bf9\u8bdd\uff08\u548c\u9999\uff09\uff1a\u300c\u5173\u4e8e\u548c\u9999\u300d\u300c\u5173\u4e8e\u4e8b\u4ef6\u300d\u300c\u5173\u4e8e\u88ab\u5bb3\u4eba\u300d</p> <p>\u8d70\u5eca</p> <p>\u548c\u9999\u7684\u5bf9\u8bdd\u300c\u5173\u4e8e\u88ab\u5bb3\u4eba\u300d\u5b8c\u6210\uff0c\u8d35\u7f8e\u5b50\u4ece\u300c\u4f1a\u9762\u4e4b\u623f\u300d\u79bb\u5f00\u540e\uff0c\u6625\u7f8e\u51fa\u73b0\u3002</p> <p>\u4e3e\u8bc1\uff1a\u771f\u5bb5\u7684\u52fe\u7389</p> <p>\u2192\u53ef\u4ee5\u548c\u6625\u7f8e\u5bf9\u8bdd\u3002</p> <p>\u5bf9\u8bdd\uff08\u6625\u7f8e\uff09\uff1a\u300c\u5173\u4e8e\u6625\u7f8e\u300d\u300c\u624b\u4e0a\u62ff\u7740\u7684\u4e1c\u897f\u300d</p> <p>\u5bf9\u8bdd\u300c\u624b\u4e0a\u62ff\u7740\u7684\u4e1c\u897f\u300d\u65f6\u7684\u9009\u62e9</p> <p>\u554a\uff0c\u5982\u679c\u4f60\u60f3\u8981\u7684\u8bdd\uff0c\u53ef\u4ee5\u7ed9\u4f60\u5594\u2026\u2026\uff1f</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u9ed1\u8272\u94a5\u5319</p> <p>\u300c\u5bf9\u8bdd\u300d\u7ed3\u675f\u540e\uff0c\u6625\u7f8e\u540c\u884c\u3002</p> <p>\u4fee\u7ec3\u8005\u4e4b\u623f</p> <p>\u4ee5\u4e0a\u5168\u90e8\u7ed3\u675f\u540e\uff0c\u4fee\u7ec3\u8005\u4e4b\u623f\u51fa\u73b0\u7cf8\u952f\u3002</p> <p>\u5bf9\u8bdd\uff08\u7cf8\u952f\uff09\uff1a\u300c\u771f\u5bb5\u7684\u5acc\u7591\u300d\u300c\u5173\u4e8e\u88ab\u5bb3\u4eba\u300d\u300c\u5173\u4e8e\u5ba1\u7406\u300d\u300c\u7ee7\u627f\u4eba\u300d</p> <p>\u4e3e\u8bc1\uff1a\u65b0\u95fb\u62a5\u9053\u2027\uff11</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u65b0\u95fb\u62a5\u9053\u2027\uff12</p> <p>\u4f11\u606f\u623f</p> <p>\u5bf9\u8bdd\uff08\u548c\u9999\uff09\uff1a\u300c\u5173\u4e8e\u88ab\u5bb3\u4eba\u300d\uff08\u2192\u5fc3\u7075\u67b7\u9501\uff09</p> <p>\u53f6\u4e2d\u548c\u9999\u7684\u5fc3\u7075\u67b7\u9501\u89e3\u9664\uff08\u5f00\u59cb\u52fe\u7389\u4e3e\u8bc1\uff09 \uff5e\u5173\u4e8e\u88ab\u5bb3\u4eba\uff5e</p> <p>\uff08\u201c\u53f6\u4e2d\u548c\u9999\u201d\u53ca\u96fe\u5d0e\u533b\u751f\uff0c\u4e24\u4eba\u6709\u6240\u5173\u8054\u7684\u53ef\u80fd\u6027\u662f\u2026\u2026\uff09</p> <p>\u4e3e\u8bc1\uff1a\u65b0\u95fb\u62a5\u9053\u2027\uff12</p> <p>\u5bf9\u8bdd\uff08\u548c\u9999\uff09\uff1a\u300c\u5173\u4e8e\u88ab\u5bb3\u4eba\u300d</p> <p>\u2192\u548c\u9999\u79bb\u5f00\u3002</p> <p>\u4ee5\u4e0a\u5168\u90e8\u5b8c\u6210\u540e\u79fb\u52a8\u5230\u300c\u4ed3\u9662\u4e4b\u6751\u300d\uff0c\u548c\u6625\u7f8e\u5bf9\u8bdd\u3002\u300c\u62d8\u7559\u6240\u300d\u4e2d\u51fa\u73b0\u5343\u5bfb\u3002</p> <p>\u62d8\u7559\u6240</p> <p>\u5bf9\u8bdd\uff08\u5343\u5bfb\uff09\uff1a\u300c\u201c\u5b8c\u5168\u65e0\u7f6a\u201d\u300d\u300c\u660e\u5929\u7684\u7ebf\u7d22\uff1f\u300d</p> <p>\u4e3e\u8bc1\uff1a\u9ed1\u8272\u94a5\u5319</p> <p>\u83b7\u5f97\u8bc1\u636e\uff1a\u4e0a\u9762\u56f3\uff08\u4e8b\u4ef6\u73fe\u5834\uff09\u3001\u9727\u5d0e\u54f2\u90ce\u306e\u89e3\u5256\u8a18\u9332</p> <p>\u8be2\u95ee \uff5e\u88ab\u5bb3\u4eba\u7684\u6b7b\u56e0\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u7cf8\u952f\u572d\u4ecb\uff08\u7cf8\u952f\uff09\u3011</p> <p>\u8ffd\u95ee\uff1a\u5168\u90e8</p> <p>\u83b7\u5f97\u8bc1\u636e\uff1a\u624b\u67aa\u3001\u5200\u5b50</p> <p>\uff08\u2026\u2026\u8fd9\u662f\u975e\u5e38\u91cd\u5927\u7684\u51b3\u5b9a\u2026\u2026\u6211\u5f97\u614e\u91cd\u8003\u8651\u624d\u884c\uff01\uff09</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u83b7\u5f97\u8bc1\u636e\uff1a\u771f\u5bb5\u7684\u9053\u670d</p> <p>\u8be2\u95ee \uff5e\u8bc1\u660e\u771f\u5bb5\u72af\u6848\u7684\u8bc1\u636e\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u7cf8\u952f\u572d\u4ecb\uff08\u7cf8\u952f\uff09\u3011</p> <p>\u8ffd\u95ee\uff1a\u300c\u5982\u5404\u4f4d\u6240\u89c1\uff0c\u4e0a\u9762\u6cbe\u6709\u8840\u8ff9\u3002\u300d</p> <p>\uff08\u8f7b\u4e3e\u5984\u52a8\u6709\u70b9\u5371\u9669\u2026\u2026\u73b0\u5728\u5230\u5e95\u8be5\u600e\u4e48\u505a\u597d\u5462\uff1f\uff09</p> <p>\u9009\u62e9\uff1a\u7ee7\u7eed\u8ffd\u95ee</p> <p>\uff08\u53ef\u6076\uff01\u6211\u62d6\u592a\u4e45\u4e86\u5417\uff1f\u8fd9\u4ef6\u9053\u670d\u2026\u2026\uff09</p> <p>\u9009\u62e9\uff1a\u6709\u95ee\u9898</p> <p>\u8fd9\u4ef6\u9053\u670d\u4e0a\u6709\u201c\u95ee\u9898\u201d\u7684\u5730\u65b9\uff0c\u5c31\u662f\u8fd9\u91cc\uff01</p> <p>\u9009\u62e9\uff1a\u8896\u5b50\u4e0a\u7684\u6d1e</p> <p>\u2192\u8bc1\u636e\u300c\u771f\u5bb5\u7684\u9053\u670d\u300d\u6570\u636e\u66f4\u65b0</p> <p>\u4e3e\u8bc1\uff1a\u300c\u8fd9\u8868\u793a\uff0c\u88ab\u544a\u5f53\u573a\u6740\u5bb3\u4e86\u6beb\u65e0\u62b5\u6297\u80fd\u529b\u7684\u88ab\u5bb3\u4eba\u3002\u300d\u65f6\u9009\u300c\u771f\u5bb5\u7684\u9053\u670d\u300d</p> <p>\u8be2\u95ee \uff5e\u6839\u636e\u63a8\u6d4b\u8fd8\u539f\u6848\u53d1\u7ecf\u8fc7\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u7cf8\u952f\u572d\u4ecb\uff08\u7cf8\u952f\uff09\u3011</p> <p>\u4e3e\u8bc1\uff1a\u300c\u867d\u7136\u88ab\u5bb3\u4eba\u8bd5\u56fe\u5f00\u67aa\u62b5\u6297\uff0c\u4f46\u56e0\u4e3a\u8ddd\u79bb\u8fc7\u8fd1\uff0c\u6ca1\u6709\u51fb\u4e2d\u3002\u300d\u65f6\u9009\u300c\u771f\u5bb5\u7684\u9053\u670d\u300d</p> <p>\uff08\u6211\u5f97\u597d\u597d\u60f3\u60f3\u624d\u884c\uff01\uff09</p> <p>\u9009\u62e9\uff1a\u6709\u77db\u76fe</p> <p>\uff08\u2026\u2026\u80fd\u8bc1\u660e\u4ee5\u4e0a\u8bf4\u6cd5\u548c\u5b9e\u9645\u60c5\u51b5\u6709\u201c\u77db\u76fe\u201d\u7684\u8bc1\u7269\u5c31\u662f\u90a3\u4e2a\uff01\uff09</p> <p>\u4e3e\u8bc1\uff1a\u5c4f\u98ce</p> <p>\u5728\u90a3\u4e2a\u77ac\u95f4\u2026\u2026\u88ab\u544a\u7684\u4f4d\u7f6e\uff0c\u5e94\u8be5\u662f\u5728\u8fd9\u91cc\u624d\u5bf9\u3002</p> <p>\u9009\u62e9\uff1a\u5c4f\u98ce\u6d1e\u5de6\u4e0a\u7684\u56db\u89d2\u9644\u8fd1</p> <p>\u53ef\u662f\uff0c\u88ab\u544a\u7684\u5904\u5883\u5e76\u4e0d\u4f1a\u56e0\u6b64\u800c\u6709\u6240\u6539\u53d8\u5427\u2026\u2026\uff1f</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u83b7\u5f97\u8bc1\u636e\uff1a\u590f\u7f8e\u7684\u7167\u7247</p> <p>\u8be2\u95ee \uff5e\u6848\u53d1\u5f53\u5929\u7684\u7ecf\u8fc7\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u5927\u6cfd\u6728\u590f\u7f8e\uff08\u590f\u7f8e\uff09\u3011</p> <p>\u8ffd\u95ee\uff1a\u5168\u90e8</p> <p>\u9014\u4e2d\u7684\u9009\u9879\u4efb\u610f\u5373\u53ef</p> <p>\uff08\u6211\u6709\u529e\u6cd5\u8bc1\u660e\u201c\u7167\u7247\u4e0a\u7684\u4eba\uff0c\u5e76\u4e0d\u662f\u771f\u5bb5\u201d\u5417\uff1f\uff09</p> <p>\u9009\u62e9\uff1a\u6682\u65f6\u6ca1\u6709\u8bc1\u636e</p> <p>\u8be2\u95ee \uff5e\u6848\u53d1\u5f53\u5929\u7684\u7ecf\u8fc7\u2027\uff12\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u5927\u6cfd\u6728\u590f\u7f8e\uff08\u590f\u7f8e\uff09\u3011</p> <p>\u8ffd\u95ee\uff1a\u300c\u4e4b\u540e\uff0c\u6211\u5c31\u5bf9\u7740\u771f\u5bb5\u6309\u5feb\u95e8\u4e86\u3002\u300d</p> <p>\uff08\u7adf\u7136\u60f3\u8981\u6e6e\u706d\u8bc1\u636e\u2026\u2026\uff01\uff09</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u83b7\u5f97\u8bc1\u636e\uff1a\u590f\u7f8e\u7684\u7167\u7247\u2027\uff12</p> <p>\uff08\u662f\u5426\u8be5\u4e3b\u5f20\u7167\u7247\u4e0a\u7684\u4eba\u201c\u5e76\u975e\u771f\u5bb5\u201d\u5462\uff1f\uff09</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\uff08\u6211\u80fd\u591f\u8bc1\u660e\u8fd9\u4e2a\u4eba\u6709\u53ef\u80fd\u4e0d\u662f\u771f\u5bb5\u5417\u2026\u2026\uff1f\uff09</p> <p>\u9009\u62e9\uff1a\u53ef\u4ee5\u8bc1\u660e</p> <p>\u90a3\u4f60\u5012\u662f\u8bf4\u8bf4\u770b\uff0c\u8fd9\u5f20\u7167\u7247\u5230\u5e95\u54ea\u91cc\u6709\u95ee\u9898\uff1f</p> <p>\u9009\u62e9\uff1a\u88c5\u675f\u5de6\u624b\u4fa7\u9644\u8fd1</p> <p>\u8fd9\u5f20\u7167\u7247\u544a\u8bc9\u6211\u4eec\uff11\u4ef6\u4e8b\uff01</p> <p>\u9009\u62e9\uff1a\u5f00\u67aa\u7684\u53e6\u6709\u5176\u4eba</p> <p>\u2026\u2026\u5728\u6211\u4eec\u62b5\u8fbe\u73b0\u573a\u4e4b\u524d\uff0c\u201c\u4f1a\u9762\u4e4b\u95f4\u201d\u91cc\u2026\u2026</p> <p>\u9009\u62e9\uff1a\u771f\u5bb5\u5df2\u7ecf\u79bb\u5f00\u4e86\u623f\u95f4</p> <p>\u4ece\u6848\u53d1\u4e4b\u540e\u5230\u88ab\u902e\u6355\u7684\u671f\u95f4\uff0c\u88ab\u544a\u4ece\u623f\u95f4\u5185\u79bb\u5f00\u8fc7\u7684\u8bc1\u636e\uff01</p> <p>\u4e3e\u8bc1\uff1a\u9ed1\u8272\u94a5\u5319</p> <p>\u4ed3\u9662\u4e4b\u6751</p> <p>\u5bf9\u8bdd\uff08\u6625\u7f8e\uff09\uff1a\u300c\u4eca\u5929\u7684\u5ba1\u7406\u300d\u300c\u68c0\u5bdf\u5b98\u300d\u300c\u5173\u4e8e\u72af\u4eba\u300d\u300c\u6625\u7f8e\u7684\u884c\u8e2a\u300d\uff08\u2192\u5fc3\u7075\u67b7\u9501\uff09</p> <p>\u4e3e\u8bc1\uff1a\u9ed1\u8272\u94a5\u5319</p> <p>\u8d70\u5eca</p> <p>\u5411\u6625\u7f8e\u4e3e\u8bc1\u300c\u9ed1\u8272\u94a5\u5319\u300d\u540e\uff0c\u79fb\u52a8\u5230\u300c\u8d70\u5eca\u300d\u4f1a\u9047\u5230\u548c\u9999\u3002</p> <p>\u5bf9\u8bdd\uff08\u548c\u9999\uff09\uff1a\u300c\u5173\u4e8e\u58f6\u300d\u300c\u5173\u4e8e\u4e8b\u4ef6\u300d\u300c\u4ea4\u901a\u4e8b\u6545\u300d\uff08\u2192\u5fc3\u7075\u67b7\u9501\uff09</p> <p>\u8c03\u67e5\uff1a\u711a\u70e7\u7089</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u5e03\u5757</p> <p>\u8c03\u67e5\uff1a\u7f50\u5b50</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u4ed3\u9662\u4e4b\u58f6</p> <p>\u4f1a\u9762\u4e4b\u623f</p> <p>\u5bf9\u8bdd\uff08\u8d35\u7f8e\u5b50\uff09\uff1a\u300c\u5173\u4e8e\u4e8b\u4ef6\u300d\u300c\u4fee\u7ec3\u8005\u7684\u4fee\u884c\u300d\u300c\u5173\u4e8e\u5f53\u5bb6\u300d</p> <p>\u62d8\u7559\u6240</p> <p>\u4ee5\u4e0a\u5168\u90e8\u5b8c\u6210\u540e\u79fb\u52a8\u5230\u300c\u62d8\u7559\u6240\u300d\u4f1a\u9047\u5230\u771f\u5bb5\u3002</p> <p>\u5bf9\u8bdd\uff08\u771f\u5bb5\uff09\uff1a\u300c\u4eca\u5929\u7684\u5ba1\u7406\u300d\u300c\u201d\u5b8c\u5168\u65e0\u7f6a\u201d\u300d\u300c\u6625\u7f8e\u7684\u884c\u8e2a\u300d\u300c\u97a0\u7403\u300d</p> <p>\u4ed3\u9662\u4e4b\u6751</p> <p>\u548c\u62d8\u7559\u6240\u7684\u771f\u5bb5\u5bf9\u8bdd\u300c\u97a0\u7403\u300d\u540e\u79fb\u52a8\u5230\u300c\u4ed3\u9662\u4e4b\u6751\u300d\uff0c\u4f1a\u9047\u5230\u590f\u7f8e\uff08\u9003\u8d70\uff09</p> <p>\u4fee\u7ec3\u8005\u4e4b\u623f</p> <p>\u9047\u5230\u590f\u7f8e\uff08\u9003\u8d70\uff09</p> <p>\u4f11\u606f\u623f</p> <p>\u8c03\u67e5\uff1a\u97a0\u7403\u3001\u8863\u7bb1</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u6625\u7f8e\u7684\u97a0\u7403\u3001\u88c5\u8863\u7bb1</p> <p>\u4fee\u7ec3\u8005\u4e4b\u623f</p> <p>\u83b7\u5f97\u8bc1\u636e\u300c\u88c5\u8863\u7bb1\u300d\u540e\uff0c\u300c\u4fee\u7ec3\u8005\u4e4b\u623f\u300d\u4f1a\u51fa\u73b0\u6625\u7f8e\u3002</p> <p>\u6b64\u5916\u5728\u300c\u62d8\u7559\u6240\u300d\u4f1a\u51fa\u73b0\u5343\u5bfb\uff08\u867d\u7136\u5f53\u524d\u65f6\u95f4\u70b9\u5e76\u4e0d\u9700\u8981\u53bb\uff0c\u4f46\u901a\u8fc7\u5bf9\u8bdd\u300c\u4ed3\u9662\u6d41\u7075\u5a92\u9053\u300d\u53ef\u4ee5\u83b7\u5f97\u6625\u7f8e\u7684\u5fc3\u7075\u67b7\u9501\u89e3\u9664\u63d0\u793a\uff09\u3002</p> <p>\u7eeb\u91cc\u6625\u7f8e\u7684\u5fc3\u7075\u67b7\u9501\u89e3\u9664\uff08\u52fe\u7389\u4e3e\u8bc1\u5f00\u59cb\uff09 \uff5e\u6625\u7f8e\u7684\u884c\u8e2a\uff5e</p> <p>\u300c\u6848\u53d1\u5f53\u65f6\uff0c\u6625\u7f8e\u5728\u8fd9\u91cc\u5427\uff1f\u300d</p> <p>\u9009\u62e9\uff1a\u8d70\u5eca</p> <p>\u300c\u90a3\u4e2a\u65f6\u5019\uff0c\u6625\u7f8e\u5230\u5e95\u5728\u8d70\u5eca\u505a\u4ec0\u4e48\u5462\uff1f\u300d</p> <p>\u4e3e\u8bc1\uff1a\u6625\u7f8e\u7684\u97a0\u7403</p> <p>\u300c\u4f60\u73a9\u97a0\u7403\u7684\u65f6\u5019\u2026\u2026\u5230\u5e95\u53d1\u751f\u4e86\u4ec0\u4e48\u4e8b\uff1f\u300d</p> <p>\u4e3e\u8bc1\uff1a\u4ed3\u9662\u4e4b\u58f6</p> <p>\u300c\u4f60\u4e3a\u4ec0\u4e48\u4f1a\u77e5\u9053\u58f6\u66fe\u7ecf\u7834\u8fc7\uff01\u300d</p> <p>\u4e3e\u8bc1\uff1a\u7eeb\u91cc\u4f9b\u5b50\u3010\uff0a\u4eba\u7269\u6863\u6848\u3011</p> <p>\u5bf9\u8bdd\uff08\u6625\u7f8e\uff09\uff1a\u300c\u6625\u7f8e\u7684\u884c\u8e2a\u300d\u300c\u5173\u4e8e\u58f6\u300d</p> <p>\u2192\u8bc1\u636e\u300c\u4ed3\u9662\u4e4b\u58f6\u300d\u7684\u6570\u636e\u66f4\u65b0</p> <p>\u4ed3\u9662\u4e4b\u6751</p> <p>\u6625\u7f8e\u7684\u5bf9\u8bdd\u300c\u5173\u4e8e\u58f6\u300d\u5b8c\u6210\u540e\uff0c\u590f\u7f8e\u51fa\u73b0\u3002</p> <p>\u5bf9\u8bdd\uff08\u590f\u7f8e\uff09\uff1a\u300c\u4eca\u5929\u7684\u5ba1\u7406\u300d\u300c\u5173\u4e8e\u72af\u4eba\u300d</p> <p>\u5bf9\u8bdd\u300c\u4eca\u5929\u7684\u5ba1\u7406\u300d\u7684\u9009\u62e9\uff1a</p> <p>\uff08\u53ef\u4e0d\u53ef\u4ee5\u539f\u8c05\u6211\u554a\uff1f\uff09</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u4e3e\u8bc1\uff1a\u53f6\u4e2d\u548c\u9999\uff0821\uff09\u3010\uff0a\u4eba\u7269\u6863\u6848\u3011</p> <p>\u4ee5\u4e0a\u5b8c\u6210\u540e\uff0c\u51fa\u73b0\u5bf9\u8bdd\u300c\u548c\u9999\u7684\u60c5\u62a5\u300d\u3002</p> <p>\u5bf9\u8bdd\uff08\u590f\u7f8e\uff09\uff1a\u300c\u548c\u9999\u7684\u60c5\u62a5\u300d</p> <p>\u2192\u8ffd\u52a0\u79fb\u52a8\u573a\u6240\u300c\u5800\u7530\u8bca\u6240\u300d\u3002</p> <p>\u79fb\u52a8\uff1a\u5800\u7530\u8bca\u6240</p> <p>\u5800\u7530\u8bca\u6240</p> <p>\u4e3e\u8bc1\uff1a\u5f8b\u5e08\u5fbd\u7ae0</p> <p>\u2192\u66f4\u65b0\u5bf9\u8bdd\u300c\u5173\u4e8e\u548c\u9999\u300d\u3002</p> <p>\u5bf9\u8bdd\uff08\u5800\u7530\uff09\uff1a\u300c\u5800\u7530\u8bca\u6240\u300d\u300c\u5173\u4e8e\u548c\u9999\u300d</p> <p>\u2192\u5bf9\u8bdd\u300c\u5173\u4e8e\u624b\u672f\u300d\u300c\u5173\u4e8e\u610f\u5916\u300d\u51fa\u73fe\u3002</p> <p>\u5bf9\u8bdd\uff08\u5800\u7530\uff09\uff1a\u300c\u5173\u4e8e\u624b\u672f\u300d</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u8bc1\u4ef6\u7167</p> <p>\u5bf9\u8bdd\uff08\u5800\u7530\uff09\uff1a\u300c\u5173\u4e8e\u610f\u5916\u300d</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u65b0\u95fb\u62a5\u9053\u2027\uff12</p> <p>\u4ee5\u4e0a\u5b8c\u6210\u540e\uff0c\u5800\u7530\u79bb\u5f00\u3002</p> <p>\u4ed3\u9662\u4e4b\u6751</p> <p>\u5bf9\u8bdd\uff08\u590f\u7f8e\uff09\uff1a\u300c\u5173\u4e8e\u8d35\u7f8e\u5b50\u300d\u300c\u5f53\u5bb6\u5b9d\u5ea7\u300d\u300c\u5173\u4e8e\u548c\u9999\u300d</p> <p>\u8d70\u5eca</p> <p>\u53f6\u4e2d\u548c\u9999\u7684\u5fc3\u7075\u67b7\u9501\u89e3\u9664\uff08\u52fe\u7389\u4e3e\u8bc1\u5f00\u59cb\uff09 \uff5e\u4ea4\u901a\u4e8b\u6545\uff5e</p> <p>\u300c\u5176\u4ed6\u4eba\u7684\u2026\u2026\u8f66\u7978\uff1f\u4f60\u5230\u5e95\u662f\u5728\u6307\u8c01\u554a\uff1f\u300d</p> <p>\u4e3e\u8bc1\uff1a\u53f6\u4e2d\u548c\u9999\uff0821\uff09\u3010\uff0a\u4eba\u7269\u6863\u6848\u3011</p> <p>\u300c\u8fd8\u662f\u8bf4\u4f60\u6709\u8bc1\u636e\uff0c\u53ef\u4ee5\u8bc1\u660e\u6211\u9047\u5230\u8fc7\u8f66\u7978\uff1f\u300d</p> <p>\u4e3e\u8bc1\uff1a\u65b0\u95fb\u62a5\u9053\u2027\uff12</p> <p>\u300c\u96be\u9053\u8bf4\u4f60\u6709\u8bc1\u636e\uff1f\u6211\u4f4f\u8fc7\u9662\u7684\u8bc1\u636e\u3002\u300d</p> <p>\u4e3e\u8bc1\uff1a\u8bc1\u4ef6\u7167</p> <p>\u300c\u56e0\u4e3a\u8f66\u7978\u800c\u6b7b\u4ea1\u7684\u5973\u6027\uff0c\u4f1a\u4e0d\u4f1a\u5c31\u662f\u8fd9\u4e2a\u4eba\u2026\u2026\uff1f\u300d</p> <p>\u4e3e\u8bc1\uff1a\u53f6\u4e2d\u672a\u5b9e\uff08\u5df2\u6545\uff09\u3010\uff0a\u4eba\u7269\u6863\u6848\u3011</p> <p>\u5bf9\u8bdd\uff08\u548c\u9999\uff09\uff1a\u300c\u4ea4\u901a\u4e8b\u6545\u300d\u300c\u5173\u4e8e\u96fe\u5d0e\u533b\u751f\u300d</p> <p>\u4ed3\u9662\u4e4b\u6751</p> <p>\u548c\u9999\u7684\u5bf9\u8bdd\u300c\u5173\u4e8e\u96fe\u5d0e\u533b\u751f\u300d\u7ed3\u675f\u540e\uff0c\u4f1a\u51fa\u73b0\u300c\u4ed3\u9662\u4e4b\u6751\u300d\u7684\u5bf9\u8bdd\u3002</p> <p>\u5bf9\u8bdd\uff08\u6625\u7f8e\uff09\uff1a\u300c\u5173\u4e8e\u8d35\u7f8e\u5b50\u300d\u300c\u5173\u4e8e\u771f\u5bb5\u300d</p> <p>\u62d8\u7559\u6240</p> <p>\u5bf9\u8bdd\uff08\u5343\u5bfb\uff09\uff1a\u300c\u5173\u4e8e\u72af\u4eba\u300d\uff08\u2192\u5fc3\u7075\u67b7\u9501\uff09\u300c\u660e\u5929\u7684\u5ba1\u7406\u300d\u300c\u4ed3\u9662\u6d41\u7075\u5a92\u9053\u300d</p> <p>\u7eeb\u91cc\u5343\u5bfb\u7684\u5fc3\u7075\u67b7\u9501\u89e3\u9664\uff08\u52fe\u7389\u4e3e\u8bc1\u5f00\u59cb\uff09 -\u5173\u4e8e\u72af\u4eba-</p> <p>\u300c\u90a3\u4f60\u8bf4\u8bf4\u770b\uff0c\u6211\u5230\u5e95\u5728\u5305\u5e87\u8c01\uff1f\u300d</p> <p>\u4e3e\u8bc1\uff1a\u7eeb\u91cc\u8d35\u7f8e\u5b50\uff08\uff1f\uff1f\uff09\u3010\uff0a\u4eba\u7269\u6863\u6848\u3011</p> <p>\u300c\u65e2\u7136\u5982\u6b64\uff0c\u4f60\u628a\u8d35\u7f8e\u5b50\u963f\u59e8\u6709\u53ef\u80fd\u6d89\u6848\u7684\u8bc1\u636e\u62ff\u51fa\u6765\u7ed9\u6211\u770b\u5427\u3002\u300d</p> <p>\u4e3e\u8bc1\uff1a\u300c\u5e03\u5757\u300d\u6216\u300c\u9ed1\u8272\u94a5\u5319\u300d</p> <p>\u300c\u9ed1\u8272\u94a5\u5319\u300d\u4e3e\u8bc1\u65f6\uff1a</p> <p>\u300c\u9664\u4e86\u94a5\u5319\u4ee5\u5916\uff0c\u8fd8\u6709\u5176\u4ed6\u80fd\u6307\u51fa\u8d35\u7f8e\u5b50\u963f\u59e8\u8ddf\u6848\u60c5\u6709\u5173\u7684\u8bc1\u636e\u5417\uff1f\u300d</p> <p>\u4e3e\u8bc1\uff1a\u5e03\u5757</p> <p>\u300c\u5e03\u5757\u300d\u4e3e\u8bc1\u65f6\uff1a</p> <p>\u300c\u60f3\u60f3\u770b\uff0c\u6211\u4eec\u6709\u6ca1\u6709\u529e\u6cd5\u8bc1\u660e\u8fd9\u5757\u5e03\u6765\u81ea\u771f\u5bb5\u7684\u9053\u670d\u2026\u2026\uff1f\u300d</p> <p>\u4e3e\u8bc1\uff1a\u9ed1\u8272\u94a5\u5319</p> <p>\u300c\u5982\u679c\u8d35\u7f8e\u5b50\u963f\u59e8\u60f3\u6740\u5bb3\u96fe\u5d0e\u533b\u751f\uff0c\u5979\u8fd8\u9700\u8981\u4ec0\u4e48\u4e1c\u897f\u2026\u2026\uff1f\u300d</p> <p>\u4e3e\u8bc1\uff1a\u53f6\u4e2d\u548c\u9999\uff0821\uff09\u3010\uff0a\u4eba\u7269\u6863\u6848\u3011</p> <p>\u5bf9\u8bdd\uff08\u5343\u5bfb\uff09\uff1a\u300c\u5173\u4e8e\u72af\u4eba\u300d</p> <p>\u8be2\u95ee \uff5e\u771f\u5bb5\u9003\u8d70\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u7eeb\u91cc\u8d35\u7f8e\u5b50\uff08\u8d35\u7f8e\u5b50\uff09\u3011</p> <p>\u8ffd\u95ee\uff1a\u300c\u4e4b\u540e\uff0c\u6211\u8bf7\u6210\u6b65\u5802\u5148\u751f\u4ed6\u4eec\u53bb\u6253\u7535\u8bdd\u62a5\u8b66\u3002\u300d\u300c\u5f53\u65f6\u771f\u5bb5\u5927\u4eba\u5df2\u7ecf\u628a\u67aa\u653e\u4e0b\uff0c\u5448\u73b0\u865a\u8131\u72b6\u6001\u2026\u2026\u300d\u300c\u4e0d\u8fc7\u6ca1\u60f3\u5230\u5979\u5374\u5ffd\u7136\u653b\u51fb\u6211\uff0c\u8fd8\u8dd1\u5230\u4e86\u623f\u95f4\u5916\u9762\u3002\u300d\u300c\u6240\u4ee5\u6211\u4e0d\u6e05\u695a\u771f\u5bb5\u5927\u4eba\u5f53\u65f6\u53bb\u4e86\u54ea\u91cc\u3002\u300d</p> <p>\u9014\u4e2d\u7684\u9009\u9879\u4efb\u610f\u5373\u53ef</p> <p>\u8be2\u95ee \uff5e\u6848\u53d1\u540e\u76ee\u51fb\u5230\u4ec0\u4e48\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u53f6\u4e2d\u548c\u9999\uff08\u548c\u9999\uff09\u3011</p> <p>\u8ffd\u95ee\uff1a\u300c\u6211\u65e2\u6000\u5ff5\u53c8\u5f00\u5fc3\uff0c\u4e0d\u8fc7\u2026\u2026\u300d</p> <p>\uff08\u8fd9\u6bb5\u8bc1\u8a00\u2026\u2026\u6709\u5947\u602a\u7684\u5730\u65b9\u5417\u2026\u2026\uff1f\uff09</p> <p>\u9009\u62e9\uff1a\u7ee7\u7eed\u8ffd\u95ee</p> <p>\u2026\u2026\u8fd9\u4ef6\u4e8b\uff0c\u771f\u7684\u6709\u90a3\u4e48\u91cd\u8981\u5417\uff1f</p> <p>\u9009\u62e9\uff1a\u5f53\u7136\u5f88\u91cd\u8981</p> <p>\u2192\u8bc1\u8a00\u53d8\u66f4</p> <p>\u4e3e\u8bc1\uff1a\u300c\u5f53\u65f6\u6211\u5b8c\u5168\u4e0d\u89c9\u5f97\u5bb3\u6015\u3002\u5979\u7684\u9053\u670d\u4e5f\u6ca1\u6709\u5947\u602a\u7684\u5730\u65b9\u3002\u300d\u65f6\u9009\u300c\u771f\u5bb5\u7684\u9053\u670d\u300d\u4ee5\u53ca\u300c\u590f\u7f8e\u7684\u7167\u7247\u2027\uff12\u300d</p> <p>\u8be2\u95ee \uff5e\u4e8e\u6848\u53d1\u540e\u76ee\u51fb\u5230\u4ec0\u4e48\u2027\uff12\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u53f6\u4e2d\u548c\u9999\uff08\u548c\u9999\uff09\u3011</p> <p>\u8ffd\u95ee\uff1a\u300c\u5f53\u65f6\u6211\u5c1d\u8bd5\u8fc7\u8bf4\u670d\u59d0\u59d0\uff0c\u8ddf\u5979\u8bf4\u201c\u4e0d\u80fd\u8fd9\u6837\u201d\u3002\u300d\u300c \u4e4b\u540e\u2026\u2026\u6211\u5c31\u5e26\u7740\u59d0\u59d0\u524d\u5f80\u201c\u4f1a\u9762\u4e4b\u623f\u201d\u4e86\u3002\u300d</p> <p>\u4ec0\u3001\u4ec0\u4e48\u65f6\u5019\u554a\u2026\u2026\uff1f</p> <p>\u9009\u62e9\uff1a\u524d\u5f80\u73b0\u573a\u9014\u4e2d</p> <p>\uff08\u88ab\u5979\u968f\u4fbf\u5e94\u4ed8\u8fc7\u53bb\u4e86\u2026\u2026\u8be5\u600e\u4e48\u529e\u5462\u2026\u2026\uff09</p> <p>\u9009\u62e9\uff1a\u7ee7\u7eed\u8ffd\u95ee</p> <p>\u8fd9\u4ef6\u4e8b\u60c5\u5f88\u91cd\u8981\u5417\uff1f</p> <p>\u9009\u62e9\uff1a\u5f53\u7136\u5f88\u91cd\u8981</p> <p>\u2192\u8bc1\u8a00\u8ffd\u52a0</p> <p>\u4e3e\u8bc1\uff1a\u300c\u6211\u4eec\u524d\u5f80\u201c\u4f1a\u9762\u4e4b\u623f\u201d\u7684\u9014\u4e2d\uff0c\u6ca1\u6709\u9047\u5230\u4efb\u4f55\u4eba\u54df\u3002\u300d\u65f6\u9009\u300c\u4ed3\u9662\u4e4b\u58f6\u300d\u4ee5\u53ca\u300c\u7eeb\u91cc\u6625\u7f8e\uff088\uff09\u300d\u3010\uff0a\u4eba\u7269\u6863\u6848\u3011</p> <p>\u300c\u4ed3\u9662\u4e4b\u58f6\u300d\u4e3e\u8bc1\u65f6\uff1a</p> <p>\u5374\u6ca1\u6709\u5728\u8d70\u5eca\u9047\u5230\u8fd9\u4e2a\u4eba\uff0c\u8fd9\u662f\u975e\u5e38\u4e0d\u81ea\u7136\u7684\uff01</p> <p>\u4e3e\u8bc1\uff1a\u7eeb\u91cc\u6625\u7f8e\uff088\uff09\u3010\uff0a\u4eba\u7269\u6863\u6848\u3011</p> <p>\u300c\u7eeb\u91cc\u6625\u7f8e\uff088\uff09\u300d\u4e3e\u8bc1\u65f6\uff1a</p> <p>\u8981\u7ecf\u8fc7\u8d70\u5eca\u800c\u4e0d\u6ce8\u610f\u5230\u6625\u7f8e\uff0c\u8fd9\u662f\u4e0d\u53ef\u80fd\u53d1\u751f\u7684\uff01</p> <p>\u4e3e\u8bc1\uff1a\u4ed3\u9662\u4e4b\u58f6</p> <p>\uff08\u2026\u2026\u5979\u8bf4\u5728\u201c\u4f11\u606f\u623f\u201d\u91cc\u7761\u89c9\uff01\u771f\u7684\u662f\u8fd9\u6837\u5417\u2026\u2026\uff1f\uff09</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u77db\u76fe\u2026\u2026\uff01\u4f60\u5012\u662f\u8bf4\u8bf4\u770b\uff0c\u5230\u5e95\u54ea\u91cc\u6709\u77db\u76fe\u4e86\uff01</p> <p>\u9009\u62e9\uff1a\u521a\u624d\u7684\u8bc1\u8a00</p> <p>\u6848\u53d1\u5f53\u65f6\uff0c\u8bc1\u4eba\u8eab\u5728\u4f55\u5904\u2026\u2026\uff1f</p> <p>\u9009\u62e9\uff1a\u4f1a\u9762\u4e4b\u623f</p> <p>\u6211\u8eb2\u5728\u54ea\u91cc\uff01\u4f60\u8bf4\u8bf4\u770b\u6211\u8eb2\u5728\u54ea\u91cc\u554a\uff01</p> <p>\u9009\u62e9\uff1a\u5c4f\u98ce\u540e\u9762</p> <p>\u8bc1\u4eba\u5f53\u65f6\u786e\u5b9e\u5c31\u662f\u8eb2\u5728\u5c4f\u98ce\u540e\u9762\u3002\u2026\u2026\u7528\u8fd9\u4e2a\u4e1c\u897f\uff01</p> <p>\u4e3e\u8bc1\uff1a\u88c5\u8863\u7bb1</p> <p>\u4f60\u80fd\u591f\u8bc1\u660e\uff0c\u547d\u6848\u53d1\u751f\u65f6\uff0c\u88c5\u8863\u7bb1\u7684\u6240\u5728\u4f4d\u7f6e\u5417\uff1f</p> <p>\u9009\u62e9\uff1a\u51fa\u793a\u8bc1\u636e</p> <p>\u6848\u53d1\u5f53\u65f6\uff0c\u88c5\u8863\u7bb1\u5c31\u653e\u5728\u547d\u6848\u73b0\u573a\u7684\u8bc1\u636e\uff01</p> <p>\u4e3e\u8bc1\uff1a\u300c\u5c4f\u98ce\u300d\u4ee5\u53ca\u300c\u88c5\u8863\u7bb1\u300d</p> <p>\u2026\u2026\u5979\u4e0d\u53ef\u80fd\u72ec\u529b\u5b8c\u6210\u8fd9\u4e00\u7cfb\u5217\u7684\u884c\u52a8\uff01</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u2026\u2026\u4f60\u5176\u5b9e\u8fd8\u6709\u5171\u72af\uff01</p> <p>\u4e3e\u8bc1\uff1a\u7eeb\u91cc\u8d35\u7f8e\u5b50\uff08\uff1f\uff1f\uff09\u3010\uff0a\u4eba\u7269\u6863\u6848\u3011</p> <p>\u4f60\u4e4b\u6240\u4ee5\u6740\u5bb3\u96fe\u5d0e\u533b\u751f\u7684\u7406\u7531\u662f\u2026\u2026\uff01</p> <p>\u4e3e\u8bc1\uff1a\u300c\u65b0\u95fb\u62a5\u9053\u2027\uff12\u300d\u4ee5\u53ca\u300c\u53f6\u4e2d\u672a\u5b9e\uff08\u5df2\u6545\uff09\u300d\u3010\uff0a\u4eba\u7269\u6863\u6848\u3011</p> <p>\uff08\u2026\u2026\u6211\u529e\u5f97\u5230\u5417\u2026\u2026\uff1f\uff09</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u8be2\u95ee \uff5e\uff11\u5e74\u524d\u7684\u8f66\u7978\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u53f6\u4e2d\u548c\u9999\uff08\u548c\u9999\uff09\u3011</p> <p>\u8ffd\u95ee\uff1a\u300c\u5979\u90a3\u5929\u665a\u4e0a\u5f00\u8f66\u7684\u65f6\u5019\uff0c\u663e\u5f97\u975e\u5e38\u75b2\u52b3\u3002\u300d</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u4ee5\u5979\u5f53\u65f6\u7684\u8eab\u5fc3\u72b6\u6001\uff0c\u5c31\u7b97\u53d1\u751f\u8f66\u7978\u4e5f\u4e0d\u5947\u602a\uff0c\u662f\u5427\uff1f</p> <p>\u9009\u62e9\uff1a\u7ee7\u7eed\u8ffd\u95ee</p> <p>\u2192\u8bc1\u8a00\u8ffd\u52a0</p> <p>\u4e3e\u8bc1\uff1a\u300c\u56e0\u4e3a\u6211\u6ca1\u6709\u9a7e\u7167\uff0c\u6240\u4ee5\u6ca1\u6709\u529e\u6cd5\u5e2e\u5fd9\u5f00\u8f66\u3002\u300d\u65f6\u9009\u300c\u8bc1\u4ef6\u7167\u300d</p> <p>\u8be2\u95ee \uff5e\u59d0\u59d0\u4e0d\u8ba9\u6211\u5f00\u8f66\u7684\u539f\u56e0\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u53f6\u4e2d\u548c\u9999\uff08\u548c\u9999\uff09\u3011</p> <p>\u8ffd\u95ee\uff1a\u300c\u90a3\u662f\u5979\u521a\u4e70\u7684\u65b0\u8f66\u5594\u3002\u662f\u4e00\u53f0\u9c9c\u7ea2\u7684\u8dd1\u8f66\u3002\u300d</p> <p>\uff08\u559c\u6b22\u8f66\u7684\u4eba\u4e00\u5b9a\u5f88\u559c\u6b22\u8fd9\u4e2a\u8bdd\u9898\u3002\uff09</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u2192\u8bc1\u8a00\u53d8\u66f4</p> <p>\u4e3e\u8bc1\uff1a\u300c\u59d0\u59d0\u7684\u8f66\u662f\u7f8e\u56fd\u5236\u7684\u9650\u91cf\u6b3e\u65b0\u8f66\u3002\u300d\u4ee5\u53ca\u300c\u4e5f\u662f\u56e0\u4e3a\u8fd9\u6837\uff0c\u90a3\u5929\u665a\u4e0a\u6211\u624d\u4f1a\u5750\u5728\u526f\u9a7e\u9a76\u5ea7\u4e0a\u3002\u300d\u65f6\u9009\u300c\u65b0\u95fb\u62a5\u9053\u2027\uff12\u300d</p> <p>\u95ee\u9898\u7684\u91cd\u70b9\u662f\u2026\u2026\u5f53\u65f6\u5f00\u8f66\u7684\u7a76\u7adf\u662f\u8c01\uff1f</p> <p>\u9009\u62e9\uff1a\u59d0\u59d0\u672a\u5b9e</p> <p>\u8ba9\u6211\u6765\u63ed\u6653\u7b54\u6848\u5427\u3002\u2026\u2026\u8fd9\u4f4d\u8bc1\u4eba\u771f\u6b63\u7684\u540d\u5b57\u662f\uff01</p> <p>\u4e3e\u8bc1\uff1a\u53f6\u4e2d\u672a\u5b9e\uff08\u5df2\u6545\uff09\u3010\uff0a\u4eba\u7269\u6863\u6848\u3011</p> <p>\uff08\u201c\u53f6\u4e2d\u672a\u5b9e\u201d\u60f3\u8ba9\u81ea\u5df1\u4ece\u4e16\u4e0a\u6d88\u5931\u7684\u7406\u7531\u662f\u2026\u2026\uff09</p> <p>\u4e3e\u8bc1\uff1a\u65b0\u95fb\u62a5\u9053\u2027\uff11</p> <p>\uff08\u8d35\u7f8e\u5b50\u5973\u58eb\u613f\u610f\u534f\u52a9\u201c\u53f6\u4e2d\u672a\u5b9e\u201d\u7684\u7406\u7531\u662f\u2026\u2026\uff09</p> <p>\u4e3e\u8bc1\uff1a\u7eeb\u91cc\u6625\u7f8e\uff088\uff09\u3010\uff0a\u4eba\u7269\u6863\u6848\u3011</p> <p>\u7b2c2\u8bdd\u7ed3\u675f\u3002</p>"},{"location":"game/aceattorney/#\u9006\u8f6c\u9a6c\u620f\u56e2","title":"\u9006\u8f6c\u9a6c\u620f\u56e2","text":"\u6e38\u620f\u653b\u7565 \u7b2c\u4e00\u56de\u2027\u8c03\u67e5\u2027\u524d\u7bc7\u7b2c\u4e00\u56de\u2027\u8c03\u67e5\u2027\u540e\u7bc7\u7b2c\u4e00\u56de\u2027\u6cd5\u5ead\u2027\u524d\u7bc7\u7b2c\u4e00\u56de\u2027\u6cd5\u5ead\u2027\u540e\u7bc7\u7b2c\u4e8c\u56de\u2027\u8c03\u67e5\u2027\u524d\u7bc7\u7b2c\u4e8c\u56de\u2027\u8c03\u67e5\u2027\u540e\u7bc7\u7b2c\u4e8c\u56de\u2027\u6cd5\u5ead\u2027\u524d\u7bc7\u7b2c\u4e8c\u56de\u2027\u6cd5\u5ead\u2027\u540e\u7bc7 <p>\u6210\u6b65\u5802\u6cd5\u5f8b\u4e8b\u52a1\u6240</p> <p>\u79fb\u52a8\uff1a\u62d8\u7559\u6240</p> <p>\u62d8\u7559\u6240</p> <p>\u5bf9\u8bdd\uff08\u9a6c\u514b\u65af\uff09\uff1a\u300c\u5173\u4e8e\u9a6c\u514b\u65af\u300d\u300c\u7acb\u89c1\u9a6c\u620f\u56e2\u300d\u300c\u5173\u4e8e\u4e8b\u4ef6\u300d\u300c\u5173\u4e8e\u548c\u56e2\u957f\u89c1\u9762\u300d\uff08\u2192\u5fc3\u7075\u67b7\u9501\uff09</p> <p>\u4e3e\u8bc1\uff1a\u5f8b\u5e08\u5fbd\u7ae0</p> <p>\u4ee5\u4e0a\u7ed3\u675f\u540e\u8ffd\u52a0\u79fb\u52a8\u5730\u70b9\u300c\u9a6c\u620f\u56e2\u2027\u6b63\u95e8\u524d\u300d\u3002</p> <p>\u79fb\u52a8\uff1a\u9a6c\u620f\u56e2\u2027\u6b63\u95e8\u524d</p> <p>\u9a6c\u620f\u56e2\u2027\u6b63\u95e8\u524d</p> <p>\u79fb\u52a8\uff1a\u9a6c\u620f\u56e2\u2027\u5e10\u7bf7\u5185</p> <p>\u9a6c\u620f\u56e2\u2027\u5e10\u7bf7\u5185</p> <p>\u5bf9\u8bdd\uff08\u7f8e\u4e3d\u4f73\uff09\uff1a\u300c\u5173\u4e8e\u4e8b\u4ef6\u300d</p> <p>\u2192\u4eba\u7269\u6863\u6848\u4e2d\u767b\u5f55\u300c\u7acb\u89c1\u4e03\u767e\u4eba\uff0852\uff09\u300d\u3002</p> <p>\u5bf9\u8bdd\uff08\u7f8e\u4e3d\u4f73\uff09\uff1a\u300c\u5173\u4e8e\u7f8e\u4e3d\u4f73\u300d</p> <p>\u4e3e\u8bc1\uff1a\u9a6c\u514b\u65af\uff0821\uff09\u3010\uff0a\u4eba\u7269\u6863\u6848\u3011</p> <p>\u2192\u5bf9\u8bdd\u300c\u70e6\u607c\u7684\u4e8b\u300d\u51fa\u73b0</p> <p>\u5bf9\u8bdd\uff08\u7f8e\u4e3d\u4f73\uff09\uff1a\u300c\u70e6\u607c\u7684\u4e8b\u300d</p> <p>\u2192\u300c\u9a6c\u620f\u56e2\u2027\u6b63\u95e8\u524d\u300d\u4e2d\u73ed\u51fa\u73b0\u3002</p> <p>\u4e3e\u8bc1\uff1a\u7acb\u89c1\u4e03\u767e\u4eba\uff0852\uff09\u3010\uff0a\u4eba\u7269\u6863\u6848\u3011</p> <p>\u2192\u79fb\u52a8\u5730\u70b9\u8ffd\u52a0\u300c\u5e10\u7bf7\u5185\u2027\u56e2\u957f\u5ba4\u300d\u3002</p> <p>\u79fb\u52a8\uff1a\u5e10\u7bf7\u5185\u2027\u56e2\u957f\u5ba4</p> <p>\u5e10\u7bf7\u5185\u2027\u56e2\u957f\u5ba4</p> <p>\u8c03\u67e5\uff1a\u753b\u9762\u5de6\u4e0b\u684c\u5b50\u4e0a</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u56e2\u957f\u7684\u6587\u4ef6</p> <p>\u8c03\u67e5\uff1a\u5899\u4e0a\u7684\u6d77\u62a5</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u9a6c\u514b\u65af\u7684\u6d77\u62a5</p> <p>\u8fd4\u56de\u300c\u9a6c\u620f\u56e2\u2027\u6b63\u95e8\u524d\u300d\uff0c\u79fb\u52a8\u5230\u300c\u5bbf\u820d\u524d\u2027\u5e7f\u573a\u300d\u3002</p> <p>\u5bbf\u820d\u524d\u2027\u5e7f\u573a</p> <p>\u5bf9\u8bdd\uff08\u7cf8\u952f\uff09\uff1a\u300c\u660e\u5929\u7684\u5ba1\u7406\u300d\u300c\u5173\u4e8e\u4e8b\u4ef6\u300d</p> <p>\u2192\u300c\u5173\u4e8e\u4e8b\u4ef6\u300d\u5bf9\u8bdd\u540e\u8ffd\u52a0\u300c\u602a\u5f02\u4e4b\u5904\u300d\u3002</p> <p>\u5bf9\u8bdd\uff08\u7cf8\u952f\uff09\uff1a\u300c\u602a\u5f02\u4e4b\u5904\u300d</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u73b0\u573a\u7167\u7247</p> <p>\u4e3e\u8bc1\uff1a\u9a6c\u514b\u65af\uff0821\uff09\u3010\uff0a\u4eba\u7269\u6863\u6848\u3011</p> <p>\u2192\u5bf9\u8bdd\u300c\u76ee\u51fb\u8005\u300d\u51fa\u73fe</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u5927\u793c\u5e3d</p> <p>\u5bf9\u8bdd\uff08\u7cf8\u952f\uff09\uff1a\u300c\u76ee\u51fb\u8005\u300d</p> <p>\u2192\u8ffd\u52a0\u79fb\u52a8\u5730\u70b9\u300c\u6c64\u7c73\u7684\u623f\u95f4\u300d\u3002</p> <p>\u9a6c\u620f\u56e2\u2027\u6b63\u95e8\u524d</p> <p>\u4ee5\u4e0a\u5b8c\u6210\u540e\uff0c\u300c\u9a6c\u620f\u56e2\u2027\u6b63\u95e8\u524d\u300d\u4e2d\u73ed\u51fa\u73b0\u3002</p> <p>\u5bf9\u8bdd\uff08\u73ed\uff09\uff1a\u300c\u5173\u4e8e\u4e8b\u4ef6\u300d\u300c\u5173\u4e8e\u9a6c\u514b\u65af\u300d\u300c\u5173\u4e8e\u8179\u8bed\u672f\u300d</p> <p>\u548c\u73ed\u5728\u300c\u9a6c\u620f\u56e2\u2027\u6b63\u95e8\u524d\u300d\u89c1\u9762\u540e\uff0c\u300c\u6c64\u7c73\u7684\u623f\u95f4\u300d\u4e2d\u6c64\u7c73\u51fa\u73b0\u3002</p> <p>\u79fb\u52a8\uff1a\u5bbf\u820d\u524d\u2027\u5e7f\u573a\u2192\u6c64\u7c73\u7684\u623f\u95f4</p> <p>\u6c64\u7c73\u7684\u623f\u95f4</p> <p>\u5bf9\u8bdd\uff08\u6c64\u7c73\uff09\uff1a\u300c\u7acb\u89c1\u9a6c\u620f\u56e2\u300d\u300c\u5173\u4e8e\u4e8b\u4ef6\u300d\u300c\u5173\u4e8e\u56e2\u957f\u300d\u300c\u76ee\u51fb\u5230\u7684\u72b6\u51b5\u300d</p> <p>\u4e3e\u8bc1\uff1a\u9a6c\u514b\u65af\uff0821\uff09\u3010\uff0a\u4eba\u7269\u6863\u6848\u3011</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u9a6c\u620f\u56e2\u7684\u5e73\u9762\u56fe</p> <p>\u2192\u300c\u9a6c\u620f\u56e2\u2027\u5e10\u7bf7\u5185\u300d\u8ffd\u52a0\u79fb\u52a8\u5730\u70b9\u300c\u5e10\u7bf7\u5185\u2027\u98df\u5802\u300d\u3002</p> <p>\u79fb\u52a8\uff1a\u5bbf\u820d\u524d\u2027\u5e7f\u573a\u2192\u9a6c\u620f\u56e2\u2027\u6b63\u95e8\u524d\u2192\u9a6c\u620f\u56e2\u2027\u5e10\u7bf7\u5185\u2192\u5e10\u7bf7\u5185\u2027\u98df\u5802</p> <p>\u5e10\u7bf7\u5185\u2027\u98df\u5802</p> <p>\u8c03\u67e5\uff1a\u5730\u677f\u4e0a\u788e\u88c2\u7684\u74f6\u5b50</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u7834\u6389\u7684\u74f6\u5b50</p> <p>\u62d8\u7559\u6240</p> <p>\u4ee5\u4e0a\u90fd\u5b8c\u6210\u540e\uff0c\u62d8\u7559\u6240\u5185\u9a6c\u514b\u65af\u51fa\u73b0\u3002</p> <p>\u5bf9\u8bdd\uff08\u9a6c\u514b\u65af\uff09\uff1a\u300c\u5173\u4e8e\u9a6c\u514b\u65af\u300d\u300c\u5173\u4e8e\u4e8b\u4ef6\u300d</p> <p>\u9a6c\u514b\u65af\u7684\u5fc3\u7075\u67b7\u9501\u89e3\u9664\uff08\u52fe\u7389\u4e3e\u8bc1\u5f00\u59cb\uff09 \uff5e\u5173\u4e8e\u548c\u56e2\u957f\u89c1\u9762\uff5e</p> <p>\u4f60\u6709\u4ec0\u4e48\u8bc1\u636e\u53ef\u4ee5\u8bc1\u660e\uff0c\u6211\u6ca1\u6709\u8ddf\u56e2\u957f\u4ea4\u6d89\u916c\u52b3\u5417\uff1f</p> <p>\u4e3e\u8bc1\uff1a\u56e2\u957f\u7684\u6587\u4ef6</p> <p>\uff08\u88ab\u56e2\u957f\u53eb\u53bb\u2026\u2026\u4ed6\u662f\u5f15\u8d77\u4ec0\u4e48\u95ee\u9898\u4e86\u5417\uff1f\uff09</p> <p>\u4e3e\u8bc1\uff1a\u300c\u7834\u6389\u7684\u74f6\u5b50\u300d\u4ee5\u53ca\u300c\u73ed\uff0831\uff09\u300d\u3010\uff0a\u4eba\u7269\u6863\u6848\u3011</p> <p>\u300c\u7834\u6389\u7684\u74f6\u5b50\u300d\u4e3e\u8bc1\u65f6\uff1a</p> <p>\u300c\u8fd9\u4e1c\u897f\u5e76\u4e0d\u662f\u88ab\u6454\u7834\u7684\u3002\u800c\u662f\u4f60\u7528\u8fd9\u4e2a\u74f6\u5b50\u2026\u2026\u300d</p> <p>\u4e3e\u8bc1\uff1a\u73ed\uff0831\uff09\u3010\uff0a\u4eba\u7269\u6863\u6848\u3011</p> <p>\u300c\u73ed\uff0831\uff09\u300d\u4e3e\u8bc1\u65f6\uff1a</p> <p>\u300c\u96be\u9053\u4f60\u6709\u6211\u4eec\u6253\u67b6\u7684\u8bc1\u636e\uff1f\u300d</p> <p>\u4e3e\u8bc1\uff1a\u7834\u6389\u7684\u74f6\u5b50</p> <p>\u5bf9\u8bdd\uff08\u9a6c\u514b\u65af\uff09\uff1a\u300c\u5173\u4e8e\u548c\u56e2\u957f\u89c1\u9762\u300d\u300c\u201c\u8ba9\u4ed6\u95ed\u5634\u201d\u300d</p> <p>\u5e10\u7bf7\u5185\u2027\u56e2\u957f\u5ba4</p> <p>\u8c03\u67e5\uff1a\u753b\u9762\u5de6\u4fa7\u7684\u67b6\u5b50</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u91cc\u7f57</p> <p>\u5e10\u7bf7\u5185\u2027\u98df\u5802</p> <p>\u4e3e\u8bc1\uff1a\u91cc\u7f57</p> <p>\u2192\u53ef\u4ee5\u548c\u73ed\uff06\u91cc\u7f57\u5bf9\u8bdd\u4e86\u3002</p> <p>\u5bf9\u8bdd\uff08\u73ed\uff06\u91cc\u7f57\uff09\uff1a\u300c\u5173\u4e8e\u4e8b\u4ef6\u300d\u300c\u88c5\u6a21\u4f5c\u6837\u7684\u5bb6\u4f19\u300d\u300c\u7acb\u89c1\u9a6c\u620f\u56e2\u300d\u300c\u7ed3\u5a5a\u300d</p> <p>\u5bf9\u8bdd\u7ed3\u675f\u540e\uff0c\u73ed\uff06\u91cc\u7f57\u79bb\u5f00\u3002</p> <p>\u9a6c\u620f\u56e2\u2027\u5e10\u7bf7\u5185</p> <p>\u548c\u73ed\uff06\u91cc\u7f57\u5bf9\u8bdd\u7ed3\u675f\u540e\uff0c\u7f8e\u4e3d\u4f73\u51fa\u73b0\u3002</p> <p>\u8bc1\u636e\u6863\u6848\u4e2d\u300c\u5f8b\u5e08\u5fbd\u7ae0\u300d\u6d88\u5931\u3002</p> <p>\u5bf9\u8bdd\uff08\u7f8e\u4e3d\u4f73\uff09\uff1a\u300c\u5362\u745f\u300d\u300c\u73ed\u548c\u91cc\u7f57\u300d\u300c\u6c42\u5a5a\u300d</p> <p>\u6c64\u7c73\u7684\u623f\u95f4</p> <p>\u5bf9\u8bdd\uff08\u6c64\u7c73\uff09\uff1a\u300c\u5173\u4e8e\u7f8e\u4e3d\u4f73\u300d\u300c\u5362\u745f\u300d</p> <p>\u5bf9\u8bdd\u300c\u5362\u745f\u300d\u7684\u9009\u9879\uff1a</p> <p>\uff08\u8fd8\u6709\u6ca1\u6709\u5176\u4ed6\u8981\u95ee\u6c64\u7c73\u5148\u751f\u7684\u4e8b\u5462\uff1f\uff09</p> <p>\u9009\u62e9\uff1a\u8bf7\u4ed6\u5e26\u6211\u4eec\u53bb</p> <p>\u2192\u79fb\u52a8\u5230\u300c\u963f\u514b\u7f57\u7684\u623f\u95f4\u300d\u3002</p> <p>\u963f\u514b\u7f57\u7684\u623f\u95f4</p> <p>\u83b7\u5f97\u8bc1\u636e\uff1a\u5362\u745f</p> <p>\u8c03\u67e5\uff1a\u753b\u9762\u5de6\u4fa7\u7684\u7834\u70c2</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u5f8b\u5e08\u5fbd\u7ae0\u3001\u6212\u6307</p> <p>\u83b7\u5f97\u8bc1\u636e\uff1a\u7acb\u89c1\u4e03\u767e\u4eba\u7684\u89e3\u5256\u7eaa\u5f55</p> <p>\u8be2\u95ee \uff5e\u6848\u53d1\u7684\u7ecf\u8fc7\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u7cf8\u952f\u572d\u4ecb\uff08\u7cf8\u952f\uff09\u3011</p> <p>\u8ffd\u95ee\uff1a\u300c\u88ab\u5bb3\u4eba\u5012\u5367\u5728\u5927\u6728\u7bb1\u4e0a\u6b7b\u4ea1\u3002\u300d</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u6728\u7bb1</p> <p>\uff08\u673a\u4f1a\u96be\u5f97\uff0c\u5c31\u95ee\u95ee\u770b\u5427\u2026\u2026\uff09</p> <p>\u9009\u62e9\uff1a\u5173\u4e8e\u5185\u5bb9\u7269</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u8c03\u5473\u6599\u5c0f\u74f6\u5b50</p> <p>\u8ffd\u95ee\uff1a\u300c\u6848\u53d1\u5f53\u665a\uff0c\u76f4\u5230\uff19\u70b9\uff14\uff10\u5206\u4e4b\u524d\u90fd\u5728\u4e0b\u96ea\uff0c\u771f\u7684\u975e\u5e38\u5bd2\u51b7\u3002\u300d\u300c\u6b7b\u56e0\u662f\u906d\u5230\u5f3a\u529b\u6bb4\u6253\u9020\u6210\u9888\u690e\u9aa8\u6298\u3002\u300d</p> <p>\u8be2\u95ee \uff5e\u6848\u53d1\u5f53\u665a\u76ee\u51fb\u5230\u7684\u4e8b\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u6728\u4f4f\u52c9\uff08\u73ed\uff09\uff06\u91cc\u7f57\u3011</p> <p>\u8ffd\u95ee\uff1a\u300c\u4ece\u6211\u773c\u524d\u8d70\u8fc7\u7684\u4eba\uff0c\u5c31\u53ea\u6709\u90a3\u5bb6\u4f19\u3002\u6240\u4ee5\uff0c\u51f6\u624b\u9664\u4e86\u4ed6\uff0c\u6ca1\u6709\u522b\u4eba\u4e86\uff01\u300d</p> <p>\uff08\u5ba1\u5224\u957f\u63a5\u53d7\u8fd9\u79cd\u8bf4\u8bcd\u4e86\u2026\u2026\u662f\u5426\u8981\u6311\u70b9\u6bdb\u75c5\uff1f\uff09</p> <p>\u9009\u62e9\uff1a\u53ea\u770b\u5230\uff11\u4e2a\u4eba\u8fd9\u70b9\u5f88\u5947\u602a</p> <p>\u8fd9\u4f4d\u8bc1\u4eba\u9664\u4e86\u88ab\u544a\u4ee5\u5916\uff0c\u8fd8\u5e94\u8be5\u770b\u5230\u8c01\uff01</p> <p>\u4e3e\u8bc1\uff1a\u7acb\u89c1\u4e03\u767e\u4eba\uff0852\uff09\u3010\uff0a\u4eba\u7269\u6863\u6848\u3011</p> <p>\u8ffd\u95ee\uff1a\u300c\u4e4b\u540e\u8b66\u5bdf\u5c31\u6765\u5566\uff0c\u90a3\u65f6\u6211\u624d\u77e5\u9053\u51fa\u4e8b\u4e86\u3002\u300d</p> <p>\u672c\u9662\u95ee\u4f60\uff0c\u4f60\u8ba4\u4e3a\u8fd9\u4f4d\u8bc1\u4eba\u662f\u5728\u5927\u95e8\u524d\u7b49\u8c01\uff1f</p> <p>\u4e3e\u8bc1\uff1a\u7f8e\u4e3d\u4f73\uff0816\uff09\u3010\uff0a\u4eba\u7269\u6863\u6848\u3011</p> <p>\u8be2\u95ee \uff5e\u5173\u4e8e\u6c42\u5a5a\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u6728\u4f4f\u52c9\uff08\u73ed\uff09\uff06\u91cc\u7f57\u3011</p> <p>\u8ffd\u95ee\uff1a\u300c\u6211\u6709\u4e1c\u897f\u60f3\u4ea4\u7ed9\u7f8e\u4e3d\u4f73\u3002\u300d</p> <p>\uff08\u6211\u662f\u5426\u8be5\u5192\u7740\u6328\u97ad\u5b50\u7684\u98ce\u9669\uff0c\u8ffd\u7a76\u8fd9\u4ef6\u4e8b\u2026\u2026\uff1f\uff09</p> <p>\u9009\u62e9\uff1a\u8fd8\u662f\u8981\u8ffd\u95ee</p> <p>\u2192\u8bc1\u8a00\u53d8\u66f4</p> <p>\u4e3e\u8bc1\uff1a\u5728\u300c\u6211\u8fd9\u9635\u5b50\u90fd\u628a\u90a3\u4e1c\u897f\u653e\u5728\u53e3\u888b\u91cc\uff0c\u4e00\u76f4\u5728\u7b49\u5f85\u673a\u4f1a\u3002\u300d\u300c\u5f53\u7136\uff0c\u90a3\u5929\u665a\u4e0a\u4e5f\u968f\u8eab\u5e26\u7740\u2026\u2026\u90a3\u4e2a\u793c\u7269\u3002\u300d\u300c\u4e0d\u8fc7\u5230\u6700\u540e\u90fd\u6ca1\u673a\u4f1a\u7ed9\u5979\uff0c\u6240\u4ee5\u73b0\u5728\u8fd8\u5728\u6211\u624b\u4e0a\u3002\u300d\u4efb\u610f\u4e00\u5904\u4e3e\u8bc1\u300c\u6212\u6307\u300d</p> <p>\u8bc1\u2026\u2026\u8bc1\u5b9e\u2026\u2026\uff1f\u4f60\u6307\u7684\u662f\u4ec0\u4e48\u4e8b\uff01</p> <p>\u9009\u62e9\uff1a\u8bc1\u8a00\u4e2d\u6709\u77db\u76fe</p> <p>\u8be2\u95ee \uff5e\u76ee\u51fb\u5230\u9a6c\u514b\u65af\u65f6\u7684\u60c5\u51b5\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u6728\u4f4f\u52c9\uff08\u73ed\uff09\uff06\u91cc\u7f57\u3011</p> <p>\u4e3e\u8bc1\uff1a\u300c\u6211\u8ddf\u4ed6\u8bf4\u665a\u4e0a\u597d\uff01\u7ed3\u679c\u4ed6\u7adf\u7136\u65e0\u89c6\u6211\uff01\u300d\u65f6\u9009\u300c\u7834\u6389\u7684\u74f6\u5b50\u300d\u4ee5\u53ca\u300c\u7f8e\u4e3d\u4f73\uff0816\uff09\u300d\u3010\uff0a\u4eba\u7269\u6863\u6848\u3011</p> <p>\u4f60\u600e\u4e48\u770b\u8fd9\u4f4d\u8bc1\u4eba\u521a\u624d\u8bf4\u7684\u201c\u66fe\u770b\u5230\u88ab\u544a\u201d\u8fd9\u6bb5\u8bc1\u8a00\uff1f</p> <p>\u9009\u62e9\uff1a\u4ed6\u770b\u5230\u7684\u662f\u522b\u4eba</p> <p>\u8bc1\u4eba\u4f1a\u4e3b\u52a8\u201c\u6253\u62db\u547c\u201d\u7684\u4eba\u2026\u2026\u7a76\u7adf\u662f\u8c01\uff1f</p> <p>\u4e3e\u8bc1\uff1a\u7acb\u89c1\u4e03\u767e\u4eba\uff0852\uff09\u3010\uff0a\u4eba\u7269\u6863\u6848\u3011</p> <p>\u8be2\u95ee \uff5e\u6848\u53d1\u5f53\u665a\u76ee\u51fb\u5230\u7684\u4e8b\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u5bcc\u7530\u677e\u592b\uff08\u6c64\u7c73\uff09\u3011</p> <p>\u8ffd\u95ee\uff1a\u300c\u6211\u6b63\u6253\u7b97\u7761\u89c9\u65f6\uff0c\u4e0d\u7ecf\u610f\u95f4\u770b\u4e86\u4e00\u4e0b\u7a97\u5916\u3002\u300d</p> <p>\uff08\u600e\u4e48\u529e\u2026\u2026\uff1f\u8981\u8fdb\u4e00\u6b65\u8ffd\u95ee\u4e0b\u53bb\u5417\u2026\u2026\uff09</p> <p>\u9009\u62e9\uff1a\u8fdb\u4e00\u6b65\u8ffd\u95ee</p> <p>\u2192\u8bc1\u8a00\u53d8\u66f4</p> <p>\u8ffd\u95ee\uff1a\u300c\u5c31\u5728\u6211\u770b\u7740\u4ed6\u4eec\u7684\u65f6\u5019\u2026\u2026\u9a6c\u514b\u65af\u7a81\u7136\u6253\u4e86\u56e2\u957f\uff01\u300d</p> <p>\u4f60\u6709\u8bc1\u4eba\u6ca1\u770b\u5230\u72af\u6848\u77ac\u95f4\u7684\u660e\u786e\u6839\u636e\u5417\uff1f</p> <p>\u9009\u62e9\uff1a\u5f53\u7136\u6709</p> <p>\u8be2\u95ee \uff5e\u5173\u4e8e\u76ee\u51fb\u5230\u7684\u201c\u4eba\u5f71\u201d\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u5bcc\u7530\u677e\u592b\uff08\u6c64\u7c73\uff09\u3011</p> <p>\u4e3e\u8bc1\uff1a\u300c\u56e0\u4e3a\u6211\u6e05\u695a\u770b\u89c1\u4ed6\u90a3\u4e9b\u88c5\u6a21\u4f5c\u6837\u7684\u8c61\u5f81\u7269\u3002\u300d\u4ee5\u53ca\u300c\u5927\u793c\u5e3d\u548c\u9ed1\u6597\u7bf7\u3002\u4ed6\u7684\u8c61\u5f81\u7269\u5168\u90fd\u9f50\u4e86\u3002\u300d\u65f6\u9009\u300c\u9a6c\u514b\u65af\u7684\u6d77\u62a5\u300d</p> <p>\u8be2\u95ee \uff5e\u5173\u4e8e\u76ee\u51fb\u5230\u7684\u201c\u4eba\u5f71\u201d\u2027\uff12\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u5bcc\u7530\u677e\u592b\uff08\u6c64\u7c73\uff09\u3011</p> <p>\u4e3e\u8bc1\uff1a\u300c\u5230\u4ed6\u79bb\u5f00\u73b0\u573a\u4e3a\u6b62\uff0c\u90fd\u4e00\u76f4\u6234\u7740\u5927\u793c\u5e3d\uff01\u300d\u65f6\u9009\u300c\u5927\u793c\u5e3d\u300d</p> <p>\u83ab\u975e\u4f60\u6709\u8bc1\u636e\u8bc1\u660e\u201c\u51f6\u624b\u6ca1\u6709\u79bb\u5f00\u73b0\u573a\u201d\u5417\uff1f</p> <p>\u4e3e\u8bc1\uff1a\u73b0\u573a\u7167\u7247</p> <p>\u8fd9\u4f4d\u8bc1\u4eba\u7684\u76ee\u51fb\u60c5\u62a5\u2026\u2026\u8fa9\u62a4\u4eba\uff0c\u4f60\u600e\u4e48\u770b\uff1f</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u6210\u6b65\u5802\u6cd5\u5f8b\u4e8b\u52a1\u6240</p> <p>\u5bf9\u8bdd</p> <p>\u62d8\u7559\u6240</p> <p>\u5bf9\u8bdd\uff08\u9a6c\u514b\u65af\uff09\uff1a\u300c\u5173\u4e8e\u6848\u53d1\u5f53\u665a\u300d\u300c\u4eca\u5929\u7684\u6cd5\u5ead\u300d</p> <p>\u2192\u300c\u4eca\u5929\u7684\u6cd5\u5ead\u300d\u7ed3\u675f\u540e\uff0c\u300c\u83b7\u5f97\u51a0\u519b\u300d\u51fa\u73fe\u3002</p> <p>\u5bf9\u8bdd\uff08\u9a6c\u514b\u65af\uff09\uff1a\u300c\u83b7\u5f97\u51a0\u519b\u300d</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u5f97\u51a0\u519b\u65f6\u7684\u7167\u7247</p> <p>\u9a6c\u620f\u56e2\u2027\u6b63\u95e8\u524d</p> <p>\u5bf9\u8bdd\uff08\u73ed\uff06\u91cc\u7f57\uff09\uff1a\u300c\u4eca\u5929\u7684\u6cd5\u5ead\u300d\u300c\u5173\u4e8e\u7ed3\u5a5a\u300d\u300c\u5173\u4e8e\u8179\u8bed\u672f\u300d</p> <p>\u5bbf\u820d\u524d\u2027\u5e7f\u573a</p> <p>\u548c\u7cf8\u952f\u5bf9\u8bdd\uff0c\u7136\u540e\u7cf8\u952f\u79bb\u5f00\u3002</p> <p>\u5e10\u7bf7\u5185\u2027\u98df\u5802</p> <p>\u4ee5\u4e0a\u5b8c\u6210\u540e\u524d\u5f80\u300c\u5e10\u7bf7\u5185\u2027\u98df\u5802\u300d\uff0c\u9047\u89c1\u6c64\u7c73\u3002</p> <p>\u5bf9\u8bdd\uff08\u6c64\u7c73\uff09\uff1a\u300c\u4eca\u5929\u7684\u6cd5\u5ead\u300d\u300c\u76ee\u51fb\u5230\u7684\u72b6\u51b5\u300d</p> <p>\u4e3e\u8bc1\uff1a\u5f97\u51a0\u519b\u65f6\u7684\u7167\u7247</p> <p>\u2192\u5bf9\u8bdd\u300c\u9a6c\u514b\u65af\u7684\u534a\u8eab\u50cf\u300d\u51fa\u73b0</p> <p>\u5bf9\u8bdd\uff08\u6c64\u7c73\uff09\uff1a\u300c\u9a6c\u514b\u65af\u7684\u534a\u8eab\u50cf\u300d</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u9a6c\u514b\u65af\u7684\u534a\u8eab\u50cf</p> <p>\u2192\u5bf9\u8bdd\u300c\u5947\u602a\u7684\u4e8b\u300d\u51fa\u73b0</p> <p>\u5bf9\u8bdd\uff08\u6c64\u7c73\uff09\uff1a\u300c\u5947\u602a\u7684\u4e8b\u300d</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u8d34\u5728\u5899\u4e0a\u7684\u7eb8</p> <p>\u62d8\u7559\u6240</p> <p>\u4e3e\u8bc1\uff1a\u8d34\u5728\u5899\u4e0a\u7684\u7eb8</p> <p>\u5e10\u7bf7\u5185\u2027\u56e2\u957f\u5ba4</p> <p>\u5bf9\u62d8\u7559\u6240\u7684\u9a6c\u514b\u65af\u4e3e\u8bc1\u300c\u8d34\u5728\u5899\u4e0a\u7684\u7eb8\u300d\u540e\u8c03\u67e5\u71d5\u5c3e\u670d\u3002</p> <p>\u8c03\u67e5\uff1a\u71d5\u5c3e\u670d</p> <p>\u2192\u8bc1\u636e\u300c\u8d34\u5728\u5899\u4e0a\u7684\u7eb8\u300d\u7684\u6570\u636e\u66f4\u65b0</p> <p>\u5bbf\u820d\u524d\u2027\u5e7f\u573a</p> <p>\u4ee5\u4e0a\u5168\u90e8\u5b8c\u6210\u540e\uff0c\u300c\u5bbf\u820d\u524d\u2027\u5e7f\u573a\u300d\u518d\u6b21\u51fa\u73b0\u7cf8\u952f\uff0c\u5bf9\u8bdd\u3002</p> <p>\u5bf9\u8bdd\uff08\u72e9\u9b54\uff09\uff1a\u300c\u660e\u5929\u7684\u5ba1\u7406\u300d\u300c\u201c\u590d\u4ec7\u201d\u300d</p> <p>\u2192\u300c\u201c\u590d\u4ec7\u201d\u300d\u5bf9\u8bdd\u7ed3\u675f\u540e\uff0c\u51fa\u73b0\u300c\u5fa1\u5251\u601c\u4f8d\u300d\u7684\u5bf9\u8bdd</p> <p>\u5bf9\u8bdd\uff08\u72e9\u9b54\uff09\uff1a\u300c\u5fa1\u5251\u601c\u4f8d\u300d\u300c\u5fa1\u5251\u4e4b\u6b7b\u300d</p> <p>\u5168\u90e8\u8bf4\u5b8c\u540e\uff0c\u72e9\u9b54\u51a5\u79bb\u5f00\u3002</p> <p>\u79fb\u52a8\uff1a\u963f\u514b\u7f57\u7684\u623f\u95f4</p> <p>\u963f\u514b\u7f57\u7684\u623f\u95f4</p> <p>\u4ee5\u4e0a\u5168\u90e8\u5b8c\u6210\u540e\uff0c\u300c\u963f\u514b\u7f57\u7684\u623f\u95f4\u300d\u4e2d\u963f\u514b\u7f57\u51fa\u73b0\u3002</p> <p>\u5bf9\u8bdd\uff08\u963f\u514b\u7f57\uff09\uff1a\u300c\u7acb\u89c1\u9a6c\u620f\u56e2\u300d\u300c\u5173\u4e8e\u8f6e\u6905\u300d\uff08\u2192\u5fc3\u7075\u67b7\u9501\u51fa\u73fe\uff09\u300c\u5173\u4e8e\u4e8b\u4ef6\u300d</p> <p>\u2192\u300c\u5173\u4e8e\u4e8b\u4ef6\u300d\u7ed3\u675f\u540e\u51fa\u73b0\u5bf9\u8bdd\u300c\u76ee\u51fb\u5230\u7684\u72b6\u51b5\u300d</p> <p>\u5bf9\u8bdd\uff08\u963f\u514b\u7f57\uff09\uff1a\u300c\u76ee\u51fb\u5230\u7684\u72b6\u51b5\u300d</p> <p>\u9a6c\u620f\u56e2\u2027\u5e10\u7bf7\u5185</p> <p>\u300c\u963f\u514b\u7f57\u7684\u623f\u95f4\u300d\u7684\u5bf9\u8bdd\u7ed3\u675f\u540e\uff0c\u300c\u9a6c\u620f\u56e2\u2027\u5e10\u7bf7\u5185\u300d\u4e2d\u7f8e\u4e3d\u4f73\u51fa\u73b0\u3002</p> <p>\u5bf9\u8bdd\uff08\u7f8e\u4e3d\u4f73\uff09\uff1a\u300c\u5173\u4e8e\u56e2\u957f\u300d\u300c\u5362\u745f\u300d</p> <p>\u5bf9\u8bdd\u300c\u5362\u745f\u300d\u7684\u9009\u62e9\uff1a</p> <p>\u56e0\u4e3a\u90a3\u662f\u7f8e\u4e3d\u4f73\u5f88\u91cd\u8981\u7684\u4e1c\u897f\u3002\u2026\u2026\u597d\u5417\uff1f</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u4e3e\u8bc1\uff1a\u8d34\u5728\u5899\u4e0a\u7684\u7eb8</p> <p>\u2192\u8bc1\u636e\u300c\u8d34\u5728\u5899\u4e0a\u7684\u7eb8\u300d\u7684\u6570\u636e\u66f4\u65b0</p> <p>\u6c64\u7c73\u7684\u623f\u95f4</p> <p>\u4ee5\u4e0a\u5b8c\u6210\u540e\uff0c\u300c\u6c64\u7c73\u7684\u623f\u95f4\u300d\u4e2d\u5362\u745f\u51fa\u73b0\u3002</p> <p>\uff08\u2026\u2026\u597d\uff01\u8eab\u4e3a\u4e00\u4e2a\u5f8b\u5e08\uff0c\u6211\u8981\u8ddf\u7334\u5b50\u4e00\u51b3\u9ad8\u4e0b\u4e86\u2026\u2026\uff01\uff09</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u821e\u53f0\u88c5</p> <p>\u9a6c\u620f\u56e2\u2027\u5e10\u7bf7\u5185</p> <p>\u4e3e\u8bc1\uff1a\u821e\u53f0\u88c5</p> <p>\u2192\u5bf9\u8bdd\u300c\u96f7\u6069\u300d\u51fa\u73b0</p> <p>\u5bf9\u8bdd\uff08\u7f8e\u4e3d\u4f73\uff09\uff1a\u300c\u96f7\u6069\u300d</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u96f7\u6069</p> <p>\u5e10\u7bf7\u5185\u2027\u98df\u5802</p> <p>\u83b7\u5f97\u8bc1\u636e\u300c\u96f7\u6069\u300d\u540e\u524d\u5f80\u300c\u5e10\u7bf7\u5185\u2027\u98df\u5802\u300d\uff0c\u6c64\u7c73\u51fa\u73b0\u3002</p> <p>\u5bf9\u8bdd\uff08\u6c64\u7c73\uff09\uff1a\u300c\u76ee\u51fb\u5230\u7684\u72b6\u51b5\u300d\u300c\u7acb\u89c1\u9a6c\u620f\u56e2\u300d</p> <p>\u2192\u300c\u7acb\u89c1\u9a6c\u620f\u56e2\u300d\u540e\u51fa\u73b0\u5bf9\u8bdd\u300c\u201c\u90a3\u4ef6\u4e8b\u201d\u662f\u6307\u4ec0\u4e48\u300d</p> <p>\u5bf9\u8bdd\uff08\u6c64\u7c73\uff09\uff1a\u300c\u201c\u90a3\u4ef6\u4e8b\u201d\u662f\u6307\u4ec0\u4e48\u300d\uff08\u2192\u5fc3\u7075\u67b7\u9501\uff09</p> <p>\u6c64\u7c73\u7684\u5fc3\u7075\u67b7\u9501\u89e3\u9664\uff08\u52fe\u7389\u4e3e\u8bc1\u5f00\u59cb\uff09 \uff5e\u201c\u90a3\u4ef6\u4e8b\u201d\u662f\u6307\u4ec0\u4e48\uff5e</p> <p>\u300c\u90a3\u8d77\u4e8b\u6545\u7684\u539f\u56e0\u2026\u2026\u8be5\u4e0d\u4f1a\u662f\u8fd9\u4e2a\u5427\u2026\u2026\uff1f\u300d</p> <p>\u4e3e\u8bc1\uff1a\u96f7\u6069</p> <p>\u300c\u6c64\u7c73\u5148\u751f\uff0c\u62dc\u6258\u4f60\u4fdd\u5bc6\u7684\uff0c\u662f\u8fd9\u4e2a\u4eba\u5427\u2026\u2026\uff1f\u300d</p> <p>\u4e3e\u8bc1\uff1a\u963f\u514b\u7f57\uff0826\uff09\u3010\uff0a\u4eba\u7269\u6863\u6848\u3011</p> <p>\u5bf9\u8bdd\uff08\u6c64\u7c73\uff09\uff1a\u300c\u201d\u90a3\u4ef6\u4e8b\u201d\u662f\u6307\u4ec0\u4e48\u300d\u300c\u963f\u514b\u7f57\u7684\u5f1f\u5f1f\u300d</p> <p>\u2192\u4eba\u7269\u6863\u6848\u306b\u300c\u5df4\u7279\uff0822\uff09\u300d\u767b\u9332</p> <p>\u963f\u514b\u7f57\u7684\u623f\u95f4</p> <p>\u963f\u514b\u7f57\u7684\u5fc3\u7075\u67b7\u9501\u89e3\u9664\uff08\u52fe\u7389\u4e3e\u8bc1\u5f00\u59cb\uff09 \uff5e\u5173\u4e8e\u8f6e\u6905\uff5e</p> <p>\u300c\u963f\u514b\u7f57\u5148\u751f\uff0c\u4f60\u4f1a\u53d7\u4f24\u5176\u5b9e\u662f\u56e0\u4e3a\u8fd9\u4e2a\u5427\u2026\u2026\uff1f\u300d</p> <p>\u4e3e\u8bc1\uff1a\u96f7\u6069</p> <p>\u300c\u4f60\u4e0d\u5f97\u4e0d\u8fd9\u4e48\u505a\u3002\u4e3a\u4e86\u8fd9\u4e2a\u4eba\u3002\u300d</p> <p>\u4e3e\u8bc1\uff1a\u5df4\u7279\uff0822\uff09\u3010\uff0a\u4eba\u7269\u6863\u6848\u3011</p> <p>\u300c\u963f\u514b\u7f57\u5148\u751f\u5bf9\u8fd9\u4e2a\u4eba\uff0c\u6000\u6709\u67d0\u79cd\u7c7b\u4f3c\u201c\u6068\u610f\u201d\u7684\u611f\u60c5\u2026\u2026\u300d</p> <p>\u4e3e\u8bc1\uff1a\u7f8e\u4e3d\u4f73\uff0816\uff09\u3010\uff0a\u4eba\u7269\u6863\u6848\u3011</p> <p>\u300c\u2026\u2026\u4f60\u5bf9\u7f8e\u4e3d\u4f73\u6000\u6709\u6068\u610f\u7684\u8bc1\u636e\u5c31\u662f\u2026\u2026\uff01\u300d</p> <p>\u4e3e\u8bc1\uff1a\u8d34\u5728\u5899\u4e0a\u7684\u7eb8</p> <p>\u5bf9\u8bdd\uff08\u963f\u514b\u7f57\uff09\uff1a\u300c\u5173\u4e8e\u8f6e\u6905\u300d\u300c\u7f8e\u4e3d\u4f73\u548c\u5df4\u7279\u300d</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u6728\u4e0b\u5927\u4f5c\uff08\u963f\u514b\u7f57\uff09\u3011</p> <p>\u8ffd\u95ee\uff1a\u300c\u867d\u7136\u53ea\u662f\u80cc\u5f71\uff0c\u4f46\u662f\u770b\u8d77\u6765\u2026\u2026\u5c31\u662f\u9a6c\u514b\u65af\u2027\u51ef\u62c9\u514b\u72c4\u5361\u3002\u300d</p> <p>\uff08\u8be5\u600e\u4e48\u770b\u5f85\u521a\u624d\u7684\u53d1\u8a00\u2026\u2026\uff1f\uff09</p> <p>\u9009\u62e9\uff1a\u6709\u77db\u76fe</p> <p>\u4f60\u6709\u4ec0\u4e48\u8bc1\u636e\u80fd\u591f\u8bc1\u660e\u521a\u624d\u7684\u53d1\u8a00\u4e2d\u6709\u77db\u76fe\uff1f</p> <p>\u4e3e\u8bc1\uff1a\u5927\u793c\u5e3d</p> <p>\u8fd9\u4f4d\u8bc1\u4eba\u4e3a\u4f55\u8981\u8bf4\u8c0e\u2026\u2026\uff1f</p> <p>\u9009\u62e9\uff1a\u963f\u514b\u7f57\u5c31\u662f\u771f\u51f6</p> <p>\u5982\u4f55\u5462\uff0c\u8fa9\u62a4\u4eba\uff01\u8fd9\u8d77\u72af\u884c\uff0c\u662f\u5426\u6709\u5171\u72af\u2026\u2026\uff1f</p> <p>\u9009\u62e9\uff1a\u5f53\u7136\u6ca1\u6709</p> <p>\u6848\u53d1\u5f53\u65f6\uff0c\u963f\u514b\u7f57\u5148\u751f\u5728\u54ea\u91cc\uff1f</p> <p>\u9009\u62e9\uff1a\u963f\u514b\u7f57\u7684\u623f\u95f4</p> <p>\u90a3\u4e48\uff0c\u8bf7\u544a\u8bc9\u6211\u4eec\u963f\u514b\u7f57\u5148\u751f\u662f\u5982\u4f55\u72af\u6848\u7684\uff01</p> <p>\u9009\u62e9\uff1a\u8a3c\u62e0\u54c1\u3092\u63d0\u51fa\u3059\u308b</p> <p>\u963f\u514b\u7f57\u5148\u751f\u5230\u5e95\u662f\u7528\u4ec0\u4e48\u65b9\u6cd5\u6740\u5bb3\u88ab\u5bb3\u4eba\u7684\uff1f</p> <p>\u4e3e\u8bc1\uff1a\u9a6c\u514b\u65af\u7684\u534a\u8eab\u50cf</p> <p>\u8be2\u95ee \uff5e\u963f\u514b\u7f57\u7684\u4f53\u80fd\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u6728\u4e0b\u5927\u4f5c\uff08\u963f\u514b\u7f57\uff09\u3011</p> <p>\u4e3e\u8bc1\uff1a\u300c\u6240\u4ee5\u6211\u6839\u672c\u4e0d\u53ef\u80fd\u77e5\u9053\u56e2\u957f\u7684\u5934\u5728\u54ea\u4e2a\u4f4d\u7f6e\u3002\u300d\u4ee5\u53ca\u300c\u6211\u662f\u529e\u4e0d\u5230\u8fd9\u79cd\u4e8b\u7684\u3002\u8fd9\u6837\u53ef\u4ee5\u4e86\u89e3\u4e86\u5417\uff1f\u300d\u65f6\u9009\u300c\u73b0\u573a\u7167\u7247\u300d\u4ee5\u53ca\u300c\u6728\u7bb1\u300d</p> <p>\u6ca1\u9519\uff01\u5f53\u7136\u5c31\u662f\u2026\u2026</p> <p>\u9009\u62e9\uff1a\u300c\u6728\u7bb1\u7684\u5c3a\u5bf8\u300d\u4ee5\u53ca\u300c\u6728\u7bb1\u7684\u91cd\u91cf\u300d</p> <p>\u2026\u2026\u6210\u6b65\u5802\u5148\u751f\u77e5\u9053\u8fd9\u5c0a\u534a\u8eab\u50cf\u539f\u672c\u653e\u5728\u54ea\u91cc\u5417\uff1f</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u534a\u8eab\u50cf\u662f\u600e\u4e48\u4ece\u98df\u5802\u79fb\u52a8\u5230\u8bc1\u4eba\u623f\u95f4\u7684\uff1f</p> <p>\u4e3e\u8bc1\uff1a\u5362\u745f</p> <p>\u5c0f\u4e11\u770b\u5230\u7684\u51f6\u624b\uff0c\u90a3\u4e2a\u4eba\u5f71\u5230\u5e95\u662f\u8c01\uff01</p> <p>\u4e3e\u8bc1\uff1a\u9a6c\u514b\u65af\u7684\u534a\u8eab\u50cf</p> <p>\u7a76\u7adf\u662f\u8c01\u2026\u2026\u201c\u628a\u6597\u7bf7\u6302\u5728\u534a\u8eab\u50cf\u4e0a\u7684\u201d\uff01</p> <p>\u4e3e\u8bc1\uff1a\u7acb\u89c1\u4e03\u767e\u4eba\uff0852\uff09\u3010\uff0a\u4eba\u7269\u6863\u6848\u3011</p> <p>\u80fd\u591f\u8bc1\u660e\u4f60\u7684\u4e3b\u5f20\u5c31\u662f\u201c\u771f\u76f8\u201d\u7684\u8bc1\u636e\u2026\u2026\uff01</p> <p>\u4e3e\u8bc1\uff1a\u300c\u9a6c\u514b\u65af\u7684\u6d77\u62a5\u300d\u4ee5\u53ca\u300c\u5927\u793c\u5e3d\u300d</p> <p>\uff08\u5982\u679c\u8fd8\u4e0d\u77e5\u9053\u5177\u4f53\u539f\u56e0\uff0c\u8fd9\u53ef\u80fd\u5c31\u662f\u6700\u540e\u7684\u673a\u4f1a\u4e86\u3002\uff09</p> <p>\u9009\u62e9\uff1a\u5f53\u7136\u8981\u8fdb\u884c\u8baf\u95ee</p> <p>\u9009\u62e9\u300c\u5f53\u7136\u4e0d\u8fdb\u884c\u8baf\u95ee\u300d\u65f6\uff0c\u8df3\u8fc7\u8be2\u95ee\u300c\u5173\u4e8e\u88ab\u5bb3\u4eba\u7acb\u89c1\u56e2\u957f\u300d\uff0c\u524d\u5f80\u300c\u8bc1\u660e\u963f\u514b\u7f57\u5148\u751f\u6740\u5bb3\u7acb\u89c1\u56e2\u957f\u7684\u52a8\u673a\uff1f\u300d\u3002</p> <p>\u8be2\u95ee \uff5e\u5173\u4e8e\u88ab\u5bb3\u4eba\u7acb\u89c1\u56e2\u957f\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u6728\u4e0b\u5927\u4f5c\uff08\u963f\u514b\u7f57\uff09\u3011</p> <p>\u8ffd\u95ee\uff1a\u5168\u90e8</p> <p>\u8bc1\u660e\u963f\u514b\u7f57\u5148\u751f\u6740\u5bb3\u7acb\u89c1\u56e2\u957f\u7684\u52a8\u673a\uff1f</p> <p>\u9009\u62e9\uff1a\u5f53\u7136\u6ca1\u529e\u6cd5</p> <p>\u4f60\u5230\u5e95\u5728\u8bf4\u8c01\uff01\u963f\u514b\u7f57\u5148\u751f\u60f3\u6740\u7684\u4eba\u662f\u8c01\uff01</p> <p>\u4e3e\u8bc1\uff1a\u7f8e\u4e3d\u4f73\uff0816\uff09\u3010\uff0a\u4eba\u7269\u6863\u6848\u3011</p> <p>\u963f\u514b\u7f57\u5148\u751f\u5bf9\u8fd9\u540d\u5c11\u5973\u6000\u6709\u6740\u610f\u7684\u8bc1\u636e\u7a76\u7adf\u662f\u4ec0\u4e48\uff01</p> <p>\u4e3e\u8bc1\uff1a\u8d34\u5728\u5899\u4e0a\u7684\u7eb8</p> <p>\uff08\u534a\u5e74\u524d\u53d1\u751f\u7684\u201c\u4e8b\u4ef6\u201d\u2026\u2026\uff09</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u201c\u534a\u5e74\u524d\u7684\u4e8b\u4ef6\u201d\uff0c\u7eb8\u4e0a\u5199\u7684\u201c\u5173\u952e\u8bc1\u636e\u201d\u6307\u7684\u5c31\u662f\u2026\u2026</p> <p>\u4e3e\u8bc1\uff1a\u8c03\u5473\u6599\u5c0f\u74f6\u5b50</p> <p>\u5728\u7acb\u89c1\u91cc\u9999\u624b\u4e0b\u727a\u7272\u7684\u4eba\uff0c\u7a76\u7adf\u662f\u8c01\uff1f</p> <p>\u4e3e\u8bc1\uff1a\u5df4\u7279\uff0822\uff09\u3010\uff0a\u4eba\u7269\u6863\u6848\u3011</p> <p>\u5df4\u7279\u5148\u751f\u7684\u4e8b\u2026\u2026\u771f\u7684\u53ea\u662f\u610f\u5916\u4e8b\u6545\u5417\uff1f</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u72ee\u5b50\u4f1a\u54ac\u4e0a\u5df4\u7279\u5148\u751f\u7684\u539f\u56e0\u786e\u5b9e\u662f\u7f8e\u4e3d\u4f73\u5c0f\u59d0\u9020\u6210\u7684\uff01</p> <p>\u4e3e\u8bc1\uff1a\u9886\u5dfe</p> <p>\uff08\u8fd9\u662f\u6700\u540e\uff11\u6b65\u4e86\u2026\u2026\u53ea\u8981\u5f80\u6b63\u786e\u65b9\u5411\u8e0f\u51fa\uff0c\u5c31\u8d62\u4e86\uff01\uff09</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u4f60\u8bf4\u51f6\u5668\u2026\u2026\u9a6c\u514b\u65af\u7684\u534a\u8eab\u50cf\uff0c\u73b0\u5728\u5230\u5e95\u5728\u54ea\u91cc\uff01</p> <p>\u9009\u62e9\uff1a\u6cd5\u5ead\u5185\u67d0\u5904</p> <p>\uff0a\u5982\u679c\u9009\u62e9\u300c\u5bbf\u820d\u5185\u67d0\u5904\u300d\u300c\u9a6c\u620f\u56e2\u5e10\u68da\u5185\u67d0\u5904\u300d\u7684\u8bdd\u4f1a\u51fa\u73b0\u9009\u62e9\u652f\uff0c\u65e0\u8bba\u9009\u54ea\u4e2a\u90fd\u4f1a\u56de\u5230\u300c\u4f60\u8bf4\u51f6\u5668\u2026\u2026\u9a6c\u514b\u65af\u7684\u534a\u8eab\u50cf\uff0c\u73b0\u5728\u5230\u5e95\u5728\u54ea\u91cc\uff01\u300d\u3002</p> <p>\u5982\u679c\u8981\u8bf4\u5f97\u66f4\u6e05\u695a\u4e00\u70b9\uff0c\u90a3\u5c31\u662f\u8fd9\u91cc\uff01</p> <p>\u9009\u62e9\uff1a\u8bc1\u4eba\u5e2d</p> <p>\u662f\u8fd8\u6253\u7b97\u5bf9\u7f8e\u4e3d\u4f73\u590d\u4ec7\uff0c\u5bf9\u4e0d\u5bf9\uff01</p> <p>\u9009\u62e9\uff1a\u4e0d\u662f\u8fd9\u6837\u7684</p> <p>\u544a\u8bc9\u6211\uff0c\u4e3a\u4ec0\u4e48\u963f\u514b\u7f57\u4f1a\u8bf4\u90a3\u79cd\u8bdd\uff01</p> <p>\u4e3e\u8bc1\uff1a\u5df4\u7279\uff0822\uff09\u3010\uff0a\u4eba\u7269\u6863\u6848\u3011</p> <p>\u7b2c3\u8bdd\u7ed3\u675f\u3002</p>"},{"location":"game/aceattorney/#\u518d\u89c1\u9006\u8f6c","title":"\u518d\u89c1\uff0c\u9006\u8f6c","text":"\u6e38\u620f\u653b\u7565 \u7b2c\u4e00\u56de\u2027\u8c03\u67e5\u2027\u524d\u7bc7\u7b2c\u4e00\u56de\u2027\u8c03\u67e5\u2027\u540e\u7bc7\uff11\u7b2c\u4e00\u56de\u2027\u8c03\u67e5\u2027\u540e\u7bc7\uff12\u7b2c\u4e00\u56de\u2027\u6cd5\u5ead\u2027\u524d\u7bc7\u7b2c\u4e00\u56de\u2027\u6cd5\u5ead\u2027\u540e\u7bc7\u7b2c\u4e8c\u56de\u2027\u8c03\u67e5\u2027\u524d\u7bc7\u7b2c\u4e8c\u56de\u2027\u8c03\u67e5\u2027\u540e\u7bc7\u7b2c\u4e8c\u56de\u2027\u6cd5\u5ead\u2027\u524d\u7bc7\u7b2c\u4e8c\u56de\u2027\u6cd5\u5ead\u2027\u540e\u7bc7\uff11\u7b2c\u4e8c\u56de\u2027\u6cd5\u5ead\u2027\u540e\u7bc7\uff12 <p>\u83eb\u4e4b\u5385</p> <p>\u5bf9\u8bdd\uff08\u8377\u661f\uff09\uff1a\u300c\u5173\u4e8e\u8377\u661f\u300d\u300c\u5c06\u519b\u8d85\u4eba\u2027\u4e19\uff01\u300d\u300c\u5409\u4ed6\u5fcd\u8005\u300d</p> <p>\u79fb\u52a8\uff1a\u4f11\u606f\u5ba4\u524d\u2027\u8d70\u5eca</p> <p>\u4f11\u606f\u5ba4\u524d\u2027\u8d70\u5eca</p> <p>\u6ca1\u6709\u53d1\u751f\u4efb\u4f55\u4e8b\uff08\u4e0d\u8fc7\u5fc5\u987b\u79fb\u52a8\u5230\u6b64\u5904\uff09</p> <p>\u83eb\u4e4b\u5385</p> <p>\u2027\u548c\u8377\u661f\u7684\u300c\u5bf9\u8bdd\u300d\u5168\u90e8\u7ed3\u675f</p> <p>\u2027\u79fb\u52a8\u5230\u300c\u4f11\u606f\u5ba4\u524d\u2027\u8d70\u5eca\u300d</p> <p>\u7ed3\u675f\u540e\u53bb\u83eb\u4e4b\u5385\u5bf9\u8bdd\u3002</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u8bb0\u8005\u4f1a\u7684\u53f7\u7801\u724c</p> <p>\u8ffd\u52a0\u79fb\u52a8\u573a\u6240\u300c\u9152\u5e97\u2027\u5927\u5385\u300d\u3002</p> <p>\u9152\u5e97\u2027\u5927\u5385</p> <p>\u5bf9\u8bdd\uff08\u5927\u5a76\uff09\uff1a\u300c\u5173\u4e8e\u5927\u5a76\u300d\u300c\u53d1\u751f\u4ec0\u4e48\u4e8b\uff1f\u300d</p> <p>\u83eb\u4e4b\u5385</p> <p>\u79fb\u52a8\u5230\u300c\u9152\u5e97\u2027\u5927\u5385\u300d\u540e\uff0c\u8fd4\u56de\u300c\u83eb\u4e4b\u5385\u300d\u5bf9\u8bdd\u3002\u4e0e\u771f\u5bb5\u5206\u5f00\u3002</p> <p>\u4f11\u606f\u5ba4\u524d\u2027\u8d70\u5eca</p> <p>\u4e0e\u771f\u5bb5\u5206\u5f00\u540e\u79fb\u52a8\u81f3\u6b64\u5bf9\u8bdd\u3002</p> <p>\u5bf9\u8bdd\uff08\u7cf8\u952f\uff09\uff1a\u300c\u5173\u4e8e\u4e8b\u4ef6\u300d\u300c\u5173\u4e8e\u590f\u7f8e\u300d\u300c\u5173\u4e8e\u88ab\u5bb3\u4eba\u300d</p> <p>\u2192\u300c\u5173\u4e8e\u88ab\u5bb3\u4eba\u300d\u5b8c\u6210\u540e\uff0c\u4eba\u7269\u6863\u6848\u4e2d\u8ffd\u52a0\u300c\u85e4\u89c1\u91ce\u52cb\uff0821\uff09\u300d\u300c\u738b\u90fd\u697c\u771f\u609f\uff0821\uff09\u300d\u3002</p> <p>\u4e3e\u8bc1\uff1a\u738b\u90fd\u697c\u771f\u609f\uff0821\uff09\u3010\uff0a\u4eba\u7269\u6863\u6848\u3011</p> <p>\u2192\u5bf9\u8bdd\u300c\u7d27\u6025\u902e\u6355\u300d\u51fa\u73b0</p> <p>\u5bf9\u8bdd\uff08\u7cf8\u952f\uff09\uff1a\u300c\u7d27\u6025\u902e\u6355\u300d</p> <p>\u9152\u5e97\u2027\u5927\u5385</p> <p>\u5b8c\u6210\u4ee5\u4e0a\u5185\u5bb9\u540e\u524d\u5f80\u300c\u9152\u5e97\u2027\u5927\u5385\u300d\u4e0e\u8377\u661f\u5bf9\u8bdd\u3002</p> <p>\u83b7\u5f97\u8bc1\u636e\uff1a\u5bf9\u8bb2\u673a</p> <p>\u5bf9\u8bdd\uff08\u8377\u661f\uff09\uff1a\u300c\u738b\u90fd\u697c\u548c\u85e4\u89c1\u91ce\u300d\u300c\u8bb0\u8005\u4f1a\u300d</p> <p>\u5b8c\u6210\u4ee5\u4e0a\u5185\u5bb9\u540e\u5bf9\u8bdd\uff0c\u81ea\u52a8\u79fb\u52a8\u5230\u300c\u6210\u6b65\u5802\u6cd5\u5f8b\u4e8b\u52a1\u6240\u300d\u3002</p> <p>\u6210\u6b65\u5802\u6cd5\u5f8b\u4e8b\u52a1\u6240</p> <p>\u5bf9\u8bdd\uff08\u6625\u7f8e\uff09\uff1a\u300c\u5546\u91cf\u770b\u770b\u300d\u300c\u5173\u4e8e\u771f\u5bb5\u300d</p> <p>\u79fb\u52a8\uff1a\u62d8\u7559\u6240</p> <p>\u62d8\u7559\u6240</p> <p>\u5bf9\u8bdd\uff08\u738b\u90fd\u697c\uff09\uff1a\u300c\u5173\u4e8e\u738b\u90fd\u697c\u300d\u300c\u5173\u4e8e\u4e8b\u4ef6\u300d</p> <p>\u4e3e\u8bc1\uff1a\u300c\u8bb0\u8005\u4f1a\u7684\u53f7\u7801\u724c\u300d\u300c\u5bf9\u8bb2\u673a\u300d</p> <p>\u4ee5\u4e0a\u5b8c\u6210\u540e\u5bf9\u8bdd\u3002</p> <p>\u5bf9\u8bdd\uff08\u738b\u90fd\u697c\uff09\uff1a\u300c\u5173\u4e8e\u738b\u90fd\u697c\u300d\u300c\u5173\u4e8e\u4e8b\u4ef6\u300d\u300c\u5173\u4e8e\u88ab\u5bb3\u4eba\u300d\u300c\u6740\u4eba\u5acc\u7591\u300d</p> <p>\u6210\u6b65\u5802\u6cd5\u5f8b\u4e8b\u52a1\u6240</p> <p>\u5bf9\u8bdd\uff08\u6625\u7f8e\uff09\uff1a\u300c\u5546\u91cf\u770b\u770b\u300d\u300c\u662f\u5426\u5bdf\u89c9\u5230\u4ec0\u4e48\u300d</p> <p>\u4e4b\u540e\u5c31\u53ef\u4ee5\u5728\u65c5\u9986\u91cc\u81ea\u7531\u63a2\u7d22\u4e86\uff0c\u4f46\u6bd4\u8f83\u6709\u6548\u7387\u7684\u79fb\u52a8\u8def\u7ebf\u5982\u4e0b\u3002</p> <p>\u6210\u6b65\u5802\u6cd5\u5f8b\u4e8b\u52a1\u6240\u2192\u9152\u5e97\u2027\u5927\u5385\u2192\u83eb\u4e4b\u5385\u2192\u4f11\u606f\u5ba4\u524d\u2027\u8d70\u5eca\u2192\u738b\u90fd\u697c\u7684\u4f11\u606f\u5ba4</p> <p>\u738b\u90fd\u697c\u7684\u4f11\u606f\u5ba4</p> <p>\u5bf9\u8bdd\uff08\u96fe\u7eea\uff09\uff1a\u300c\u5173\u4e8e\u6848\u53d1\u5f53\u665a\u300d\u300c\u548c\u738b\u90fd\u697c\u7684\u5173\u7cfb\u300d</p> <p>\u2192\u300c\u548c\u738b\u90fd\u697c\u7684\u5173\u7cfb\u300d\u7ed3\u675f\u540e\uff0c\u4eba\u7269\u6863\u6848\u300c\u534e\u5bab\u96fe\u7eea\uff0823\uff09\u300d\u767b\u5f55</p> <p>\u4e3e\u8bc1\uff1a\u85e4\u89c1\u91ce\u52cb\uff0821\uff09\u3010\uff0a\u4eba\u7269\u6863\u6848\u3011</p> <p>\u2192\u5bf9\u8bdd\u300c\u6740\u4eba\u7684\u52a8\u673a\u300d\u51fa\u73fe</p> <p>\u5bf9\u8bdd\uff08\u96fe\u7eea\uff09\uff1a\u300c\u6740\u4eba\u7684\u52a8\u673a\u300d\uff08\u2192\u5fc3\u7075\u67b7\u9501\uff09</p> <p>\u79fb\u52a8\uff1a\u4f11\u606f\u5ba4\u524d\u2027\u8d70\u5eca\u2192\u85e4\u89c1\u91ce\u7684\u4f11\u606f\u5ba4</p> <p>\u85e4\u89c1\u91ce\u7684\u4f11\u606f\u5ba4</p> <p>\u83b7\u5f97\u8bc1\u636e\uff1a\u9152\u5e97\u7684\u5e73\u9762\u56fe</p> <p>\u5bf9\u8bdd\uff08\u7cf8\u952f\uff09\uff1a\u300c\u88ab\u5bb3\u4eba\u7684\u6b7b\u56e0\u300d\u300c\u88ab\u902e\u6355\u7684\u7406\u7531\u300d</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u73b0\u573a\u7167\u7247</p> <p>\u8c03\u67e5\uff1a\u3010\u53f3\u753b\u9762\u3011\u68b3\u5986\u53f0\u4e0a\u7684\u676f\u5b50</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u676f\u5b50</p> <p>\u8c03\u67e5\uff1a\u3010\u53f3\u753b\u9762\u3011\u5409\u4ed6\u7bb1</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u5409\u4ed6\u76d2</p> <p>\u4e3e\u8bc1\uff1a\u676f\u5b50</p> <p>\u4ee5\u4e0a\u5b8c\u6210\u540e\uff0c\u72e9\u9b54\u51a5\u767b\u573a\u3002</p> <p>\u8c03\u67e5\uff1a\u3010\u5de6\u753b\u9762\u3011\u684c\u4e0a\u7684\u8272\u7eb8</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u7b7e\u540d\u677f</p> <p>\u83eb\u4e4b\u5385</p> <p>\u79fb\u52a8\u5230\u300c\u738b\u90fd\u697c\u7684\u4f11\u606f\u5ba4\u300d\u9047\u89c1\u8377\u661f</p> <p>\u5bf9\u8bdd\uff08\u8377\u661f\uff09\uff1a\u300c\u5c06\u519b\u8d85\u4eba\u2027\u4e19\uff01\u300d\u300c\u5409\u4ed6\u5fcd\u8005\u300d</p> <p>\u4e3e\u8bc1\uff1a\u534e\u5bab\u96fe\u7eea\uff0823\uff09\u3010\uff0a\u4eba\u7269\u6863\u6848\u3011</p> <p>\u2192\u5bf9\u8bdd\u300c\u96fe\u7eea\u7684\u4f20\u95fb\u300d\u51fa\u73fe</p> <p>\u5bf9\u8bdd\uff08\u8377\u661f\uff09\uff1a\u300c\u96fe\u7eea\u7684\u4f20\u95fb\u300d</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u6742\u5fd7\u62a5\u9053</p> <p>\u4f11\u606f\u5ba4\u524d\u2027\u8d70\u5eca</p> <p>\u5bf9\u8bdd\uff08\u590f\u7f8e\uff09\uff1a\u300c\u76f8\u673a\u300d\u300c\u5173\u4e8e\u4e8b\u4ef6\u300d</p> <p>\u2192\u300c\u76f8\u673a\u300d\u540e\uff0c\u83b7\u5f97\u8bc1\u636e\uff1a\u590f\u7f8e\u7684\u76f8\u673a</p> <p>\u2192\u300c\u5173\u4e8e\u4e8b\u4ef6\u300d\u540e\uff0c\u51fa\u73b0\u5bf9\u8bdd\u300c\u72ec\u5bb6\u65b0\u95fb\u300d</p> <p>\u5bf9\u8bdd\uff08\u590f\u7f8e\uff09\uff1a\u300c\u72ec\u5bb6\u65b0\u95fb\u300d\uff08\u2192\u5fc3\u7075\u67b7\u9501\uff09</p> <p>\u5927\u6cfd\u6728\u590f\u7f8e\u7684\u5fc3\u7075\u67b7\u9501\u89e3\u9664\uff08\u52fe\u7389\u4e3e\u8bc1\u5f00\u59cb\uff09 \uff5e\u72ec\u5bb6\u65b0\u95fb\uff5e</p> <p>\u300c\u5c31\u662f\u88ab\u5bb3\u4eba\u85e4\u89c1\u91ce\u5148\u751f\u548c\u8fd9\u4e2a\u4eba\u7684\u7eef\u95fb\u5427\uff1f\u300d</p> <p>\u4e3e\u8bc1\uff1a\u534e\u5bab\u96fe\u7eea\uff0823\uff09\u3010\uff0a\u4eba\u7269\u6863\u6848\u3011</p> <p>\u300c\u5982\u679c\u85e4\u89c1\u91ce\u8ddf\u534e\u5bab\u96fe\u7eea\u4e4b\u95f4\u771f\u6709\u4e0d\u53ef\u544a\u4eba\u7684\u5173\u7cfb\uff0c\u5c31\u62ff\u51fa\u8bc1\u636e\u6765\u554a\uff01\u300d</p> <p>\u4e3e\u8bc1\uff1a\u6742\u5fd7\u62a5\u9053</p> <p>\u5bf9\u8bdd\uff08\u590f\u7f8e\uff09\uff1a\u300c\u72ec\u5bb6\u65b0\u95fb\u300d</p> <p>\u2192\u8bc1\u636e\u300c\u590f\u7f8e\u7684\u76f8\u673a\u300d\u7684\u6570\u636e\u66f4\u65b0</p> <p>\u9152\u5e97\u2027\u5927\u5385</p> <p>\u5bf9\u8bdd\uff08\u5927\u5a76\uff09\uff1a\u300c\u5173\u4e8e\u88ab\u5bb3\u4eba\u300d\u300c\u5173\u4e8e\u4e8b\u4ef6\u300d</p> <p>\u2192\u300c\u5173\u4e8e\u4e8b\u4ef6\u300d\u540e\uff0c\u300c\u76ee\u51fb\u5230\u7684\u72b6\u51b5\u300d\u51fa\u73b0\u3002</p> <p>\u5bf9\u8bdd\uff08\u5927\u5a76\uff09\uff1a\u300c\u76ee\u51fb\u5230\u7684\u72b6\u51b5\u300d\uff08\u2192\u5fc3\u7075\u67b7\u9501\uff09</p> <p>\u5927\u5a76\u7684\u5fc3\u7075\u67b7\u9501\u89e3\u9664\uff08\u52fe\u7389\u4e3e\u8bc1\u5f00\u59cb\uff09 \uff5e\u76ee\u51fb\u5230\u7684\u72b6\u51b5\uff5e</p> <p>\u300c\u6ca1\u529e\u6cd5\uff0c\u53ea\u597d\u62ff\u51fa\u5927\u5a76\u53ef\u80fd\u60f3\u8981\u7684\u4e1c\u897f\u8bd5\u8bd5\u770b\u4e86\u2026\u2026\u300d</p> <p>\u4e3e\u8bc1\uff1a\u7b7e\u540d\u677f</p> <p>\u2192\u8bc1\u636e\u300c\u7b7e\u540d\u677f\u300d\u6d88\u5931\u3002</p> <p>\u5bf9\u8bdd\uff08\u5927\u5a76\uff09\uff1a\u300c\u76ee\u51fb\u5230\u7684\u72b6\u51b5\u300d\u300c\u738b\u90fd\u697c\u7684\u884c\u4e3a\u300d</p> <p>\u79fb\u52a8\uff1a\u9152\u5e97\u2027\u5927\u5385\u2192\u8b66\u5bdf\u5c40\u2027\u5211\u4e8b\u79d1</p> <p>\u8b66\u5bdf\u5c40\u2027\u5211\u4e8b\u79d1</p> <p>\u4ee5\u4e0a\u5168\u90e8\u5b8c\u6210\u540e\uff0c\u300c\u8b66\u5bdf\u5c40\u2027\u5211\u4e8b\u79d1\u300d\u4e2d\u7cf8\u952f\u51fa\u73b0\u3002</p> <p>\u5bf9\u8bdd\uff08\u7cf8\u952f\uff09\uff1a\u300c\u5b8c\u7f8e\u7684\u8bc1\u636e\u300d\u300c\u5b8c\u7f8e\u7684\u8bc1\u8a00\u300d</p> <p>\u4e3e\u8bc1\uff1a\u6742\u5fd7\u62a5\u9053</p> <p>\u2192\u5bf9\u8bdd\u300c\u5929\u91ce\u7531\u5229\u6075\u300d\u51fa\u73b0</p> <p>\u5bf9\u8bdd\uff08\u7cf8\u952f\uff09\uff1a\u300c\u5929\u91ce\u7531\u5229\u6075\u300d</p> <p>\u72e9\u9b54\u51a5\u3001\u5fa1\u5251\u767b\u573a</p> <p>\u5bf9\u8bdd\uff08\u5fa1\u5251\uff09\uff1a\u300c\u660e\u65e5\u306e\u6cd5\u5ef7\u300d\u300c\u201c\u72e9\u9b54\u201d\u7684\u8bc1\u660e\u300d\u300c\u7ad9\u4e0a\u6cd5\u5ead\u7684\u7406\u7531\u300d</p> <p>\u4e3e\u8bc1\uff1a\u5929\u91ce\u7531\u5229\u6075\uff08\u6545\u4eba\uff09\u3010\uff0a\u4eba\u7269\u6863\u6848\u3011</p> <p>\u2192\u5bf9\u8bdd\u300c\u6d88\u5931\u7684\u9057\u4e66\u300d\u51fa\u73b0</p> <p>\u5bf9\u8bdd\uff08\u5fa1\u5251\uff09\uff1a\u300c\u6d88\u5931\u7684\u9057\u4e66\u300d</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u81ea\u6740\u62a5\u544a\u4e66</p> <p>\u4e3e\u8bc1\uff1a\u81ea\u6740\u62a5\u544a\u4e66</p> <p>\u2192\u5bf9\u8bdd\u300c\u201c\u4f9d\u5b58\u201d\u300d\u51fa\u73b0</p> <p>\u5bf9\u8bdd\uff08\u5fa1\u5251\uff09\uff1a\u300c\u201c\u4f9d\u5b58\u201d\u300d</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u81ea\u6740\u672a\u9042\u62a5\u544a\u4e66</p> <p>\u738b\u90fd\u697c\u7684\u4f11\u606f\u5ba4</p> <p>\u534e\u5bab\u96fe\u7eea\u7684\u5fc3\u7075\u67b7\u9501\u89e3\u9664\uff08\u52fe\u7389\u4e3e\u8bc1\u5f00\u59cb\uff09 \uff5e\u9047\u5bb3\u7684\u7406\u7531\uff5e</p> <p>\u300c\u4f60\u8bf4\u4e0d\u559c\u6b22\u8ddf\u5176\u4ed6\u4eba\u8fc7\u592a\u4eb2\u5bc6\uff0c\u2026\u2026\u771f\u7684\u662f\u8fd9\u6837\u5417\uff1f\u300d</p> <p>\u4e3e\u8bc1\uff1a\u6742\u5fd7\u62a5\u9053</p> <p>\u300c\u4f60\u662f\u4e3a\u4e86\u8fd9\u4e2a\u4eba\uff0c\u624d\u53bb\u63a5\u8fd1\u85e4\u89c1\u91ce\u5148\u751f\u7684\u5427\uff1f\u300d</p> <p>\u4e3e\u8bc1\uff1a\u5929\u91ce\u7531\u5229\u6075\uff08\u6545\u4eba\uff09\u3010\uff0a\u4eba\u7269\u6863\u6848\u3011</p> <p>\u300c\u7531\u5229\u60e0\u5973\u58eb\u81ea\u6740\u8eab\u4ea1\u2026\u2026\u4e00\u5b9a\u4ee4\u4f60\u611f\u5230\u975e\u5e38\u4e0d\u7518\u5fc3\uff01\u300d</p> <p>\u4e3e\u8bc1\uff1a\u81ea\u6740\u62a5\u544a\u4e66</p> <p>\u300c\u5929\u91ce\u7531\u5229\u60e0\u5973\u58eb\u5bf9\u4f60\u6765\u8bf4\uff0c\u662f\u4e2a\u975e\u5e38\u7279\u522b\u7684\u4eba\u2026\u2026\u300d</p> <p>\u4e3e\u8bc1\uff1a\u81ea\u6740\u672a\u9042\u62a5\u544a\u4e66</p> <p>\u5bf9\u8bdd\uff08\u738b\u90fd\u697c\uff09\uff1a\u300c\u6740\u4eba\u7684\u52a8\u673a\u300d</p> <p>\u4ee5\u4e0a\u5b8c\u6210\u540e\uff0c\u96fe\u7eea\u79bb\u5f00\u3002</p> <p>\u300c\u79fb\u52a8\u300d\u5411\u6210\u6b65\u5802\u6cd5\u5f8b\u4e8b\u52a1\u6240\u79fb\u52a8\uff08\u4f11\u606f\u5ba4\u524d\u2027\u8d70\u5eca\u2192\u83eb\u4e4b\u5385\u2192\u9152\u5e97\u2027\u5927\u5385\u2192\u6210\u6b65\u5802\u6cd5\u5f8b\u4e8b\u52a1\u6240\uff09\u3002</p> <p>\u6210\u6b65\u5802\u6cd5\u5f8b\u4e8b\u52a1\u6240</p> <p>\u5bf9\u8bdd\uff08\u5343\u5bfb\uff09\uff1a\u300c\u5173\u4e8e\u771f\u5bb5\u300d\u300c\u5173\u4e8e\u7ed1\u67b6\u72af\u300d</p> <p>\uff1f\uff1f\uff1f\uff1f\uff08\u9152\u7a96\uff09</p> <p>\u8c03\u67e5\uff1a\u95e8\u3001\u843d\u4e0b\u7684\u5361\u7247</p> <p>\u8be2\u95ee \uff5e\u672c\u6848\u7684\u91cd\u70b9\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u7cf8\u952f\u572d\u4ecb\uff08\u7cf8\u952f\uff09\u3011</p> <p>\u8ffd\u95ee\uff1a\u300c\u867d\u7136\u9a8c\u8bc1\u6b7b\u56e0\u82b1\u4e86\u4e00\u70b9\u65f6\u95f4\uff0c\u4e0d\u8fc7\u53ef\u4ee5\u786e\u5b9a\u8fd9\u662f\u4e00\u8d77\u4ed6\u6740\u6848\u4ef6\u3002\u300d</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u85e4\u89c1\u91ce\u52cb\u7684\u89e3\u5256\u7eaa\u5f55</p> <p>\u8ffd\u95ee\uff1a\u300c\u8b66\u65b9\u539f\u672c\u8ba4\u4e3a\uff0c\u653e\u5409\u4ed6\u7684\u7a7a\u76d2\u5b50\u76f8\u5f53\u53ef\u7591\uff0c\u300d</p> <p>\u2192\u8bc1\u636e\u300c\u5409\u4ed6\u76d2\u300d\u7684\u6570\u636e\u66f4\u65b0</p> <p>\u8ffd\u95ee\uff1a\u300c\u4e0d\u8fc7\u7ecf\u8fc7\u8c03\u67e5\u53d1\u73b0\uff0c\u5409\u4ed6\u76d2\u548c\u672c\u6848\u7684\u6848\u60c5\u65e0\u5173\u3002\u300d</p> <p>\u8be2\u95ee \uff5e\u902e\u6355\u738b\u90fd\u697c\u7684\u7406\u7531\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u7cf8\u952f\u572d\u4ecb\uff08\u7cf8\u952f\uff09\u3011</p> <p>\u83b7\u5f97\u8bc1\u636e\uff1a\u5200\u5b50\u3001\u5409\u4ed6\u5fcd\u8005\u7684\u94ae\u6263</p> <p>\u4e3e\u8bc1\uff1a\u300c\u88ab\u544a\u4e8b\u5148\u5c31\u4e70\u597d\u90a3\u628a\u5200\uff0c\u505a\u597d\u51c6\u5907\u3002\u2026\u2026\u8fd9\u662f\u4e00\u8d77\u6709\u9884\u8c0b\u7684\u51f6\u6740\u6848\uff01\u300d\u65f6\u9009\u300c\u5200\u5b50\u300d</p> <p>\u8fa9\u62a4\u4eba\uff0c\u4f60\u80fd\u4e3a\u6211\u4eec\u51fa\u793a\u9700\u8981\u5ba1\u7406\u7684\u91cd\u8981\u8bc1\u7269\u5417\uff1f</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u8fd8\u9700\u8981\u5ba1\u7406\u7684\u91cd\u8981\u8bc1\u7269\uff0c\u5230\u5e95\u662f\u4ec0\u4e48\uff1f</p> <p>\u4e3e\u8bc1\uff1a\u676f\u5b50</p> <p>\uff08\u90a3\u4e2a\u676f\u5b50\u2026\u2026\u662f\u534e\u5bab\u96fe\u7eea\u968f\u624b\u653e\u5728\u90a3\u91cc\u7684\u5417\u2026\u2026\uff1f\uff09</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u8bc1\u636e\u300c\u676f\u5b50\u300d\u7684\u6570\u636e\u66f4\u65b0</p> <p>\u8be2\u95ee \uff5e\u76ee\u51fb\u5230\u7684\u72b6\u51b5\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u5927\u573a\u718f\uff08\u5927\u5a76\uff09\u3011</p> <p>\u8ffd\u95ee\uff1a\u300c\u5c31\u662f\u738b\u90fd\u697c\u5566\uff0c\u738b\u90fd\u697c\u771f\u609f\u3002\u6211\u770b\u5230\u4ed6\u5077\u5077\u6478\u6478\u5730\u8d70\u51fa\u6765\u5566\uff01\u300d</p> <p>\uff08\u2026\u2026\u4e5f\u8bb8\u6211\u5e94\u8be5\u9488\u5bf9\u5979\u76ee\u51fb\u5230\u7684\u4eba\u7269\uff0c\u7ee7\u7eed\u8ffd\u95ee\u4e0b\u53bb\u2026\u2026\uff09</p> <p>\u9009\u62e9\uff1a\u8fd9\u4e2a\u4eba\u7269\u7684\u670d\u88c5</p> <p>\u8fd9\u3001\u8fd9\u4e2a\u561b\u2026\u2026</p> <p>\u9009\u62e9\uff1a\u5f53\u7136\u5f88\u91cd\u8981</p> <p>\u2192\u8bc1\u8a00\u8ffd\u52a0</p> <p>\u4e3e\u8bc1\uff1a\u300c\u4ed6\u8eab\u4e0a\u7a7f\u9a91\u673a\u8f66\u7528\u7684\u5939\u514b\u3002\u771f\u7684\u662f\u5f88\u7231\u800d\u5e05\u5462\u3002\u300d\u65f6\u9009\u300c\u5409\u4ed6\u5fcd\u8005\u7684\u94ae\u6263\u300d</p> <p>\u8be2\u95ee \uff5e\u5173\u4e8e\u76ee\u51fb\u5230\u7684\u4eba\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u5927\u573a\u718f\uff08\u5927\u5a76\uff09\u3011</p> <p>\u4e3e\u8bc1\uff1a\u300c\u6240\u4ee5\u4ed6\u4ece\u62ff\u5200\u523a\u6740\u963f\u52cb\u7684\u65f6\u5019\u5f00\u59cb\uff0c\u8eab\u4e0a\u5c31\u5df2\u7ecf\u7a7f\u7740\u5c06\u519b\u8d85\u4eba\u7684\u670d\u88c5\u4e86\u3002\u300d\u65f6\u9009\u300c\u5200\u5b50\u300d</p> <p>\uff08\u2026\u2026\u8fd9\u4e2a\u4e3b\u5f20\u548c\u5fa1\u5251\u539f\u672c\u7684\u4e3e\u8bc1\uff0c\u662f\u5426\u6709\u77db\u76fe\uff1f\uff09</p> <p>\u9009\u62e9\uff1a\u6709\u77db\u76fe</p> <p>\u90a3\u4e48\u201c\u5f53\u72af\u4eba\u524d\u5f80\u4f11\u606f\u5ba4\u7684\u65f6\u5019\uff0c\u4e0d\u53ef\u80fd\u6ca1\u6000\u7740\u6740\u610f\u201d\uff01</p> <p>\u4e3e\u8bc1\uff1a\u5200\u5b50</p> <p>\u53ef\u662f\u2026\u2026\u72af\u4eba\u7a76\u7adf\u662f\u4e3a\u4e86\u4ec0\u4e48\uff01</p> <p>\u9009\u62e9\uff1a\u4e3a\u4e86\u8ba9\u738b\u90fd\u697c\u80cc\u9ed1\u9505</p> <p>\u4f60\u5f53\u65f6\u662f\u4e0d\u662f\u5728\u7b49\u8fd9\u4e2a\u4eba\u51fa\u6765\u5462\uff1f</p> <p>\u4e3e\u8bc1\uff1a\u534e\u5bab\u96fe\u7eea\uff0823\uff09\u3010\uff0a\u4eba\u7269\u6863\u6848\u3011</p> <p>\u8be2\u95ee \uff5e\u673a\u5bc6\u60c5\u62a5\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u5927\u573a\u718f\uff08\u5927\u5a76\uff09\u3011</p> <p>\u8ffd\u95ee\uff1a\u300c\u2026\u2026\u554a\u3002\u8fd9\u4ef6\u4e8b\u60c5\u662f\u673a\u5bc6\u60c5\u62a5\u5594\u3002\u8fd8\u6ca1\u6709\u4efb\u4f55\u4eba\u77e5\u9053\u3002\u300d</p> <p>\uff08\u5927\u5a76\u7a76\u7adf\u662f\u4ece\u54ea\u91cc\u62ff\u5230\u8fd9\u4e2a\u60c5\u62a5\u7684\u2026\u2026\uff1f\uff09</p> <p>\u9009\u62e9\uff1a\u51fa\u793a\u8bc1\u7269</p> <p>\u2026\u2026\u4f60\u4e00\u5b9a\u662f\u56e0\u4e3a\u8fd9\u4e2a\u4e1c\u897f\u624d\u5f97\u5230\u60c5\u62a5\u7684\uff01</p> <p>\u4e3e\u8bc1\uff1a\u590f\u7f8e\u7684\u76f8\u673a</p> <p>\uff08\u8981\u4e0d\u8981\u5c31\u8fd9\u6837\u539f\u8c05\u5979\u5462\uff1f\uff09</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u4f60\u5077\u8d70\u7684\u4e1c\u897f\uff0c\u5e76\u4e0d\u53ea\u6709\u90a3\u5f20\u7b14\u8bb0\u800c\u5df2\uff01</p> <p>\u4e3e\u8bc1\uff1a\u590f\u7f8e\u7684\u76f8\u673a</p> <p>\u83b7\u5f97\u8bc1\u636e\uff1a\u590f\u7f8e\u7684\u7167\u7247</p> <p>\u2026\u2026\u590f\u7f8e\u5c0f\u59d0\u62cd\u4e0b\u7684\u8fd9\u5f20\u7167\u7247\u2026\u2026</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u8fd9\u5f20\u7167\u7247\u7a76\u7adf\u5b58\u5728\u7740\u4ec0\u4e48\u6837\u7684\u5173\u952e\u77db\u76fe\u5462\u2026\u2026\uff01</p> <p>\u9009\u62e9\uff1a\u88e4\u817f\u7684\u957f\u5ea6</p> <p>\u8bf7\u95ee\u8fd9\u5f20\u7167\u7247\u4e2d\u62cd\u5230\u7684\u4eba\u2026\u2026\u7a76\u7adf\u662f\u8c01\u5462\uff1f</p> <p>\u9009\u62e9\uff1a\u534e\u5bab\u96fe\u7eea\uff0823\uff09\u3010\uff0a\u4eba\u7269\u6863\u6848\u3011</p> <p>\uff08\u600e\u2026\u2026\u600e\u4e48\u529e\uff01\u5ba1\u7406\u8981\u7ed3\u675f\u4e86\u2026\u2026\uff01\uff09</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u8be2\u95ee \uff5e\u53d1\u73b0\u547d\u6848\u5f53\u65f6\u7684\u72b6\u51b5\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u534e\u5bab\u96fe\u7eea\uff08\u96fe\u7eea\uff09\u3011</p> <p>\u8ffd\u95ee\uff1a\u300c\u7ed3\u679c\u5c31\u770b\u5230\u85e4\u89c1\u91ce\u5df2\u7ecf\u6b7b\u4e86\u3002\u8ba9\u6211\u611f\u5230\u975e\u5e38\u9707\u60ca\u2026\u2026\u300d\u300c\u5f53\u65f6\u6211\u5dee\u70b9\u5c31\u8981\u660f\u5012\u4e86\uff0c\u6240\u4ee5\u5c31\u5728\u676f\u5b50\u91cc\u5012\u4e86\u679c\u6c41\u3002\u300d</p> <p>\uff08\u5979\u539f\u6765\u60f3\u8bf4\u4ec0\u4e48\u2026\u2026\uff1f\uff09</p> <p>\u9009\u62e9\uff1a\u7ee7\u7eed\u8ffd\u95ee</p> <p>\u2192\u8bc1\u8a00\u8ffd\u52a0</p> <p>\u4e3e\u8bc1\uff1a\u300c\u6253\u7834\u82b1\u74f6\u7684\u4eba\u662f\u6211\u3002\u6211\u4e0d\u5c0f\u5fc3\u78b0\u5012\u82b1\u74f6\uff0c\u6389\u5728\u5409\u4ed6\u76d2\u4e0a\u2026\u2026\u300d\u65f6\u9009\u300c\u5409\u4ed6\u76d2\u300d\u4ee5\u53ca\u300c\u73b0\u573a\u7167\u7247\u300d</p> <p>\u4f60\u600e\u4e48\u770b\uff1f\u9488\u5bf9\u8fd9\u4e2a\u5409\u4ed6\u76d2\uff0c\u8fd8\u9700\u8981\u66f4\u8be6\u7ec6\u7684\u8bc1\u8a00\u5417\uff1f</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u8be2\u95ee \uff5e\u5173\u4e8e\u5409\u4ed6\u76d2\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u534e\u5bab\u96fe\u7eea\uff08\u96fe\u7eea\uff09\u3011</p> <p>\u4e3e\u8bc1\uff1a\u5728\u300c\u5409\u4ed6\u76d2\u6216\u8bb8\u662f\u6211\u2026\u2026\u6253\u7834\u82b1\u74f6\u4e4b\u540e\u5f00\u7684\u5427\u3002\u300d\u300c\u4e0d\u8fc7\u6211\u4e0d\u8ba4\u4e3a\u8fd9\u662f\u4ec0\u4e48\u5927\u95ee\u9898\u3002\u6bd5\u7adf\u76d2\u5b50\u662f\u7a7a\u7684\u3002\u300d\u300c\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u6211\u8981\u6253\u5f00\u90a3\u4e2a\u76d2\u5b50\u2026\u2026\u6211\u81ea\u5df1\u4e5f\u4e0d\u6e05\u695a\u3002\u300d\u4efb\u610f\u5904\u4e3e\u8bc1\u300c\u5409\u4ed6\u76d2\u300d</p> <p>\u8fa9\u62a4\u4eba\uff0c\u4f60\u600e\u4e48\u770b\uff1f\u8bc1\u4eba\u8bf4\u5f53\u65f6\u6234\u7740\u624b\u5957\u3002</p> <p>\u9009\u62e9\uff1a\u4e0d\u53ef\u80fd</p> <p>\u8fd8\u662f\u8bf4\u4f60\u624b\u4e0a\u6709\u8bc1\u636e\uff0c\u80fd\u8bc1\u660e\u5f53\u65f6\u6211\u6ca1\u6709\u6234\u624b\u5957\u2026\u2026\uff1f</p> <p>\u4e3e\u8bc1\uff1a\u676f\u5b50</p> <p>\u5728\u547d\u6848\u53d1\u751f\u7684\u65f6\u5019\uff0c\u8fd9\u4e2a\u7bb1\u5b50\u91cc\u7a76\u7adf\u653e\u4e86\u4ec0\u4e48\uff01</p> <p>\u4e3e\u8bc1\uff1a\u300c\u590f\u7f8e\u7684\u7167\u7247\u300d\u4ee5\u53ca\u300c\u5c06\u519b\u8d85\u4eba\u2027\u4e19\uff01\u300d</p> <p>\u5409\u4ed6\u76d2\u5f53\u65f6\u4e0d\u662f\u7a7a\u7684\u5417\u2026\u2026\uff1f</p> <p>\u9009\u62e9\uff1a\u5979\u51c6\u5907\u4e86\u53e6\u4e00\u4ef6\u5e03\u5076\u88c5</p> <p>\u88ab\u5bb3\u4eba\u643a\u5e26\u5c06\u519b\u8d85\u4eba\u7684\u5e03\u5076\u88c5\u5230\u4f1a\u573a\u53bb\uff0c\u7406\u7531\u662f\u2026\u2026</p> <p>\u4e3e\u8bc1\uff1a\u8bb0\u8005\u4f1a\u7684\u53f7\u7801\u724c</p> <p>\u8be2\u95ee \uff5e\u8892\u62a4\u738b\u90fd\u697c\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u534e\u5bab\u96fe\u7eea\uff08\u96fe\u7eea\uff09\u3011</p> <p>\u8ffd\u95ee\uff1a\u300c\u4f46\u6700\u91cd\u8981\u7684\u8fd8\u662f\u94ae\u6263\u548c\u5200\u5b50\u2026\u2026\u8fd9\u4e24\u4ef6\u8bc1\u7269\u3002\u300d</p> <p>\u2192\u8bc1\u8a00\u53d8\u66f4</p> <p>\u4e3e\u8bc1\uff1a\u300c\u94ae\u6263\u662f\u738b\u90fd\u697c\u548c\u88ab\u5bb3\u4eba\u53d1\u751f\u4e89\u6267\u7684\u65f6\u5019\u88ab\u626f\u4e0b\u6765\u7684\u3002\u300d\u65f6\u9009\u300c\u85e4\u89c1\u91ce\u52cb\u7684\u89e3\u5256\u7eaa\u5f55\u300d</p> <p>\u96be\u9053\u4f60\u2026\u2026\u77e5\u9053\u72af\u4eba\u7684\u201c\u76ee\u7684\u201d\u5417\uff01</p> <p>\u9009\u62e9\uff1a\u72af\u4eba\u60f3\u683d\u8d43\u7ed9\u522b\u4eba</p> <p>\u60f3\u628a\u7f6a\u884c\u683d\u8d43\u7ed9\u738b\u90fd\u697c\u5148\u751f\u7684\u771f\u51f6\u662f\u2026\u2026\uff01</p> <p>\u4e3e\u8bc1\uff1a\u534e\u5bab\u96fe\u7eea\uff0823\uff09\u3010\uff0a\u4eba\u7269\u6863\u6848\u3011</p> <p>\u8be2\u95ee \uff5e\u53d1\u73b0\u5c38\u4f53\u65f6\u7684\u7ecf\u8fc7\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u534e\u5bab\u96fe\u7eea\uff08\u96fe\u7eea\uff09\u3011</p> <p>\u4e3e\u8bc1\uff1a\u300c\u6211\u5f53\u65f6\u5b9e\u5728\u6ca1\u6709\u60f3\u5230\uff0c\u4ed6\u7adf\u7136\u5df2\u7ecf\u65ad\u6c14\u3002\u300d\u300c\u6211\u4ee5\u4e3a\u4ed6\u53ea\u662f\u5931\u53bb\u610f\u8bc6\u800c\u5df2\u2026\u2026\u6240\u4ee5\u624d\u4f1a\u4e3a\u4ed6\u5012\u4e86\u679c\u6c41\u3002\u300d\u300c\u540e\u6765\u53d1\u73b0\u4ed6\u5176\u5b9e\u5df2\u7ecf\u6b7b\u4e86\u2026\u2026\u6211\u5f88\u9707\u60ca\uff0c\u4e8e\u662f\u6253\u7834\u4e86\u82b1\u74f6\u3002\u300d\u5bf9\u4efb\u610f\u4e00\u53e5\u51fa\u793a\u300c\u73b0\u573a\u7167\u7247\u300d</p> <p>\u597d\u4e86\uff01\u8bf4\u51fa\u4f60\u7684\u7ed3\u8bba\u5427\u2026\u2026\u6210\u6b65\u5802\u9f99\u4e00\uff01</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u8be2\u95ee \uff5e\u96fe\u7eea\u7684\u201c\u7f6a\u201d\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u534e\u5bab\u96fe\u7eea\uff08\u96fe\u7eea\uff09\u3011</p> <p>\u8ffd\u95ee\uff1a\u5168\u90e8</p> <p>\u6210\u6b65\u5802\u6cd5\u5f8b\u4e8b\u52a1\u6240</p> <p>\u5bf9\u8bdd\uff08\u7cf8\u952f\uff09\uff1a\u300c\u4eca\u540e\u7684\u6253\u7b97\u300d\u300c\u5fa1\u5251\u68c0\u5bdf\u5b98\u300d\u300c\u72e9\u9b54\u68c0\u5bdf\u5b98\u300d</p> <p>\u2192\u300c\u72e9\u9b54\u68c0\u5bdf\u5b98\u300d\u540e\u8ffd\u52a0\u79fb\u52a8\u573a\u6240\u300c\u5800\u7530\u8bca\u6240\u300d\u3002</p> <p>\u79fb\u52a8\uff1a\u5800\u7530\u8bca\u6240</p> <p>\u5800\u7530\u8bca\u6240</p> <p>\u5bf9\u8bdd\uff08\u72e9\u9b54\uff09\uff1a\u300c\u72d9\u51fb\u300d\u300c\u4ea4\u6613\u300d</p> <p>\u72e9\u9b54\u51a5\u79bb\u5f00\u3002\u548c\u5fa1\u5251\u5bf9\u8bdd</p> <p>\u5bf9\u8bdd\uff08\u5fa1\u5251\uff09\uff1a\u300c\u4eca\u5929\u7684\u6cd5\u5ead\u300d\u300c\u96fe\u7eea\u7684\u5361\u7247\u300d</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u5361\u7247</p> <p>\u2192\u300c\u96fe\u7eea\u7684\u5361\u7247\u300d\u540e\u51fa\u73b0\u300c\u6740\u624b\u300d</p> <p>\u5bf9\u8bdd\uff08\u5fa1\u5251\uff09\uff1a\u300c\u6740\u624b\u300d\u300c\u5173\u4e8e\u771f\u5bb5\u300d</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u5fa1\u5251\u7684\u4ecb\u7ecd\u4fe1</p> <p>\uff1f\uff1f\uff1f\uff1f\uff08\u9152\u7a96\uff09</p> <p>\u79fb\u52a8\uff1a\uff1f\uff1f\uff1f\uff1f</p> <p>\uff1f\uff1f\uff1f\uff1f\uff08\u79c1\u5ba4\uff09</p> <p>\u8c03\u67e5\uff1a\u95e8\u3001\u6c99\u53d1\u3001\u684c\u5b50\u3001\u5f55\u50cf\u673a\u4ee5\u53ca\u5929\u7ebf</p> <p>\u5800\u7530\u8bca\u6240</p> <p>\u548c\u6625\u7f8e\u5bf9\u8bdd</p> <p>\u62d8\u7559\u6240</p> <p>\u83b7\u5f97\u8bc1\u636e\uff1a\u738b\u90fd\u697c\u7684\u5b57\u6761</p> <p>\u2192\u53ef\u4ee5\u4ece\u300c\u9152\u5e97\u2027\u5927\u5385\u300d\u79fb\u52a8\u5230\u300c\u738b\u90fd\u697c\u5bb6\u2027\u5ba2\u5385\u300d\u3002</p> <p>\u79fb\u52a8\uff1a\u9152\u5e97\u2027\u5927\u5385\u2192\u738b\u90fd\u697c\u5bb6\u2027\u5ba2\u5385</p> <p>\u738b\u90fd\u697c\u5bb6\u2027\u5ba2\u5385</p> <p>\u5bf9\u8bdd\uff08\u7530\u4e2d\uff09\uff1a\u300c\u5173\u4e8e\u738b\u90fd\u697c\u300d\u300c\u5173\u4e8e\u7530\u4e2d\u300d\u300c\u5173\u4e8e\u5c0f\u54bb\u300d</p> <p>\u2192\u300c\u5173\u4e8e\u5c0f\u54bb\u300d\u540e\uff0c\u8bc1\u636e\u300c\u738b\u90fd\u697c\u7684\u5b57\u6761\u300d\u6d88\u5931</p> <p>\u9152\u5e97\u2027\u5927\u5385</p> <p>\u4e3e\u8bc1\uff1a\u5fa1\u5251\u7684\u4ecb\u7ecd\u4fe1</p> <p>\u2192\u53ef\u4ee5\u5728\u677f\u4e1c\u9152\u5e97\u5185\u79fb\u52a8\uff0c\u8bc1\u636e\u300c\u5fa1\u5251\u7684\u4ecb\u7ecd\u4fe1\u300d\u6d88\u5931</p> <p>\u4f11\u606f\u5ba4\u524d\u2027\u8d70\u5eca</p> <p>\u5bf9\u8bdd\uff08\u590f\u7f8e\uff09\uff1a\u300c\u5173\u4e8e\u6848\u53d1\u5f53\u665a\u300d\u300c\u7eef\u95fb\u300d\u300c\u76f8\u673a\u300d</p> <p>\u5168\u90e8\u5bf9\u8bdd\u540e\u590f\u7f8e\u79bb\u5f00\u3002</p> <p>\u85e4\u89c1\u91ce\u7684\u4f11\u606f\u5ba4</p> <p>\u5bf9\u8bdd\uff08\u5927\u5a76\uff09\uff1a\u300c\u5173\u4e8e\u6848\u53d1\u5f53\u665a\u300d\u300c\u88ab\u5bb3\u8005\u306e\u601d\u3044\u51fa\u300d\u300c\u793c\u7269\u300d</p> <p>\u00b7\u300c\u738b\u90fd\u697c\u5bb6\u2027\u5ba2\u5385\u300d\u4e2d\u5bf9\u8bdd\u300c\u5173\u4e8e\u5c0f\u54bb\u300d</p> <p>\u00b7\u300c\u4f11\u606f\u5ba4\u524d\u2027\u8d70\u5eca\u300d\u4e2d\u4e0e\u590f\u7f8e\u5bf9\u8bdd\u7ed3\u675f</p> <p>\u00b7\u300c\u85e4\u89c1\u91ce\u7684\u4f11\u606f\u5ba4\u300d\u4e2d\u4e0e\u5927\u5a76\u5bf9\u8bdd\u7ed3\u675f</p> <p>\u4ee5\u4e0a\u5168\u90e8\u7ed3\u675f\u540e\u524d\u5f80\u300c\u85e4\u89c1\u91ce\u7684\u4f11\u606f\u5ba4\u300d\u5bf9\u8bdd\u3002\u4e0e\u5bf9\u8bb2\u673a\u901a\u8bdd\u3002</p> <p>\u6210\u6b65\u5802\u6cd5\u5f8b\u4e8b\u52a1\u6240</p> <p>\u4e3e\u8bc1\uff1a\u5bf9\u8bb2\u673a</p> <p>\u2192\u5bf9\u8bdd\u300c\u7535\u6ce2\u5e72\u6270\u300d\u51fa\u73fe</p> <p>\u5bf9\u8bdd\uff08\u7cf8\u952f\uff09\uff1a\u300c\u7535\u6ce2\u5e72\u6270\u300d</p> <p>\u85e4\u89c1\u91ce\u7684\u4f11\u606f\u5ba4</p> <p>\u4ee5\u7535\u6ce2\u63a2\u6d4b\u5668\u8c03\u67e5</p> <p>\u8c03\u67e5\uff1a\u3010\u5de6\u753b\u9762\u3011\u5927\u718a\u7684\u773c\u775b</p> <p>\u5bf9\u8bdd\uff08\u7cf8\u952f\uff09\uff1a\u300c\u76f8\u673a\u300d\u300c\u53d1\u4fe1\u5668\u300d\u300c\u73a9\u5076\u300d</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u9488\u5b54\u6444\u5f71\u673a\u3001\u53d1\u4fe1\u5668\u3001\u73a9\u5076</p> <p>\u300c\u9488\u5b54\u6444\u5f71\u673a\u300d\u300c\u53d1\u4fe1\u5668\u300d\u7ed9\u7cf8\u952f\u3002\u300c\u73a9\u5076\u300d\u7ed9\u5fa1\u5251\u3002</p> <p>\u85e4\u89c1\u91ce\u7684\u4f11\u606f\u5ba4</p> <p>\u5bf9\u8bdd\uff08\u6625\u7f8e\uff09\uff1a\u300c\u771f\u72af\u4eba\u300d\u300c\u6740\u624b\u7684\u59d4\u6258\u4eba\u300d\u300c\u662f\u738b\u90fd\u697c\u5417\uff1f\u300d\u300c\u662f\u5426\u5bdf\u89c9\u5230\u4ec0\u4e48\u300d</p> <p>\u83eb\u4e4b\u5385</p> <p>\u5bf9\u8bdd\uff08\u5927\u5a76\uff09\uff1a\u300c\u7535\u6ce2\u63a2\u6d4b\u5668\u300d\u300c\u85e4\u89c1\u91ce\u548c\u96fe\u7eea\u300d\u300c\u7531\u5229\u60e0\u7684\u81ea\u6740\u300d</p> <p>\u8b66\u5bdf\u5c40\u2027\u5211\u4e8b\u79d1</p> <p>\u548c\u79d1\u957f\u5bf9\u8bdd\u540e\u5373\u53ef\u5728\u62d8\u7559\u6240\u4f1a\u9762\u3002</p> <p>\u62d8\u7559\u6240</p> <p>\uff08\u2026\u2026\u5148\u627e\u8c01\u95ee\u8bdd\u5462\uff1f\uff09</p> <p>\u9009\u62e9\uff1a\u738b\u90fd\u697c\u771f\u609f/\u534e\u5bab\u96fe\u7eea</p> <p>\u9009\u62e9\uff1a\u738b\u90fd\u697c\u771f\u609f</p> <p>\u5bf9\u8bdd\uff08\u738b\u90fd\u697c\uff09\uff1a\u300c\u738b\u90fd\u697c\u7684\u79d8\u5bc6\u300d\uff08\u2192\u5fc3\u7075\u67b7\u9501\uff09\u300c\u85e4\u89c1\u91ce\u548c\u96fe\u7eea\u300d</p> <p>\u9009\u62e9\uff1a\u534e\u5bab\u96fe\u7eea</p> <p>\u5bf9\u8bdd\uff08\u96fe\u7eea\uff09\uff1a\u300c\u5173\u4e8e\u738b\u90fd\u697c\u300d\u300c\u5929\u91ce\u7531\u5229\u6075\u300d\u300c\u5ac1\u7978\u7ed9\u4ed6\u7684\u7406\u7531\u300d\uff08\u2192\u5fc3\u7075\u67b7\u9501\uff09</p> <p>\u8b66\u5bdf\u5c40\u2027\u5211\u4e8b\u79d1</p> <p>\u5728\u85e4\u89c1\u91ce\u7684\u4f11\u606f\u5ba4\u4e2d\u548c\u6625\u7f8e\u300c\u5bf9\u8bdd\u300d\uff0c\u5728\u83eb\u4e4b\u5385\u548c\u5927\u5a76\u300c\u5bf9\u8bdd\u300d\u3001\u4e0e\u96fe\u7eea\u89c1\u9762\u7ed3\u675f\u540e\uff0c\u8377\u661f\u51fa\u73b0</p> <p>\u5bf9\u8bdd\uff08\u8377\u661f\uff09\uff1a\u300c\u660e\u5929\u7684\u8bc1\u8a00\u300d\u300c\u5173\u4e8e\u738b\u90fd\u697c\u300d\u300c\u516b\u5366\u300d\u300c\u7531\u5229\u60e0\u7684\u81ea\u6740\u300d</p> <p>\u62d8\u7559\u6240</p> <p>\u5bf9\u8bdd\u3002</p> <p>\u6210\u6b65\u5802\u6cd5\u5f8b\u4e8b\u52a1\u6240</p> <p>\u5bf9\u8bdd\uff08\u7cf8\u952f\uff09\uff1a\u300c\u73a9\u5076\u300d</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u4fe1\u7528\u5361\u7684\u6536\u636e</p> <p>\u5bf9\u8bdd\uff08\u7cf8\u952f\uff09\uff1a\u300c\u9488\u5b54\u6444\u5f71\u673a\u300d</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u9488\u5b54\u6444\u5f71\u673a\u3001\u53d1\u4fe1\u5668\u3001\u73a9\u5076</p> <p>\u62d8\u7559\u6240</p> <p>\u738b\u90fd\u697c\u771f\u609f\u7684\u5fc3\u7075\u67b7\u9501\u89e3\u9664\uff08\u52fe\u7389\u4e3e\u8bc1\u5f00\u59cb\uff09 \uff5e\u738b\u90fd\u697c\u7684\u79d8\u5bc6\uff5e</p> <p>\u300c\u4f60\u5176\u5b9e\u5f88\u5728\u610f\u85e4\u89c1\u91ce\u5148\u751f\u3002\u7279\u522b\u662f\u9881\u5956\u5178\u793c\u5f53\u5929\u665a\u4e0a\u2026\u2026\u300d</p> <p>\u4e3e\u8bc1\uff1a\u300c\u9488\u5b54\u6444\u5f71\u673a\u300d\u300c\u53d1\u4fe1\u5668\u300d\u300c\u73a9\u5076\u300d\u4efb\u610f\u4e00\u9879</p> <p>\u300c\u9488\u5b54\u6444\u5f71\u673a\u300d\u4ee5\u53ca\u300c\u53d1\u4fe1\u5668\u300d\u3092\u4e3e\u8bc1\u5834\u5408\uff1a</p> <p>\u300c\u5594\u2026\u2026\u53ef\u662f\u90a3\u53f0\u6444\u5f71\u673a\u53c8\u662f\u5b89\u88c5\u5728\u54ea\u91cc\u7684\u5462\uff1f\u300d</p> <p>\u4e3e\u8bc1\uff1a\u73a9\u5076</p> <p>\u4e3e\u8bc1\u300c\u73a9\u5076\u300d\u65f6\uff1a</p> <p>\u300c\u2026\u2026\u6bd5\u7adf\u8fd8\u6709\u8fd9\u6837\u7684\u529f\u80fd\u561b\uff01\u300d</p> <p>\u4e3e\u8bc1\uff1a\u300c\u9488\u5b54\u6444\u5f71\u673a\u300d\u4ee5\u53ca\u300c\u53d1\u4fe1\u5668\u300d</p> <p>\u300c\u628a\u8fd9\u53ea\u73a9\u5076\u718a\u9001\u7ed9\u85e4\u89c1\u91ce\u5148\u751f\u7684\u4eba\u662f\u2026\u2026\u300d</p> <p>\u4e3e\u8bc1\uff1a\u738b\u90fd\u697c\u771f\u609f\uff0821\uff09\u3010\uff0a\u4eba\u7269\u6863\u6848\u3011</p> <p>\u300c\u80fd\u591f\u8bc1\u660e\u4f60\u5b89\u88c5\u6444\u5f71\u673a\u7684\u8bc1\u636e\uff0c\u90a3\u5c31\u662f\u2026\u2026\u300d</p> <p>\u4e3e\u8bc1\uff1a\u4fe1\u7528\u5361\u7684\u6536\u636e</p> <p>\u300c\u4f60\u5077\u62cd\u85e4\u89c1\u91ce\u5148\u751f\u623f\u95f4\u7684\u7406\u7531\u662f\u2026\u2026\u300d</p> <p>\u4e3e\u8bc1\uff1a\u5361\u7247</p> <p>\u300c\u4f60\u5728\u85e4\u89c1\u91ce\u5148\u751f\u7684\u4f11\u606f\u5ba4\u5b89\u88c5\u9488\u5b54\u6444\u5f71\u673a\u7684\u7406\u7531\u662f\u2026\u2026\u300d</p> <p>\u9009\u62e9\uff1a\u4f60\u662f\u59d4\u6258\u4eba</p> <p>\u5bf9\u8bdd\uff08\u738b\u90fd\u697c\uff09\uff1a\u300c\u738b\u90fd\u697c\u7684\u79d8\u5bc6\u300d\u300c\u6740\u4eba\u7684\u52a8\u673a\u300d</p> <p>\u8b66\u5bdf\u5c40\u2027\u5211\u4e8b\u79d1</p> <p>\u5bf9\u8bdd\uff08\u5fa1\u5251\uff09\uff1a\u300c\u5173\u4e8e\u738b\u90fd\u697c\u300d\u300c\u5173\u4e8e\u771f\u5bb5\u300d\u300c\u6218\u6597\u7684\u7406\u7531\u300d</p> <p>\u5168\u90e8\u5b8c\u6210\u540e\u5bf9\u8bdd\u3002</p> <p>\u79fb\u52a8\uff1a\u9152\u5e97\u2027\u5927\u5385\u2192\u738b\u90fd\u697c\u5bb6\u2027\u5ba2\u5385</p> <p>\u738b\u90fd\u697c\u5bb6\u2027\u5ba2\u5385</p> <p>\u8c03\u67e5\uff1a\u95e8\u524d\u7684\u718a</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u6728\u5236\u5a03\u5a03</p> <p>\u738b\u90fd\u697c\u5bb6\u2027\u79c1\u4eba\u623f\u95f4</p> <p>\u79fb\u52a8\uff1a\u738b\u90fd\u697c\u5bb6\u2027\u9152\u7a96</p> <p>\u738b\u90fd\u697c\u5bb6\u2027\u9152\u7a96</p> <p>\u8c03\u67e5\uff1a\u697c\u68af\u4e0b\u7167\u7247</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u7531\u5229\u60e0\u7684\u7167\u7247</p> <p>\u62d8\u7559\u6240</p> <p>\u534e\u5bab\u96fe\u7eea\u7684\u5fc3\u7075\u67b7\u9501\u89e3\u9664\uff08\u52fe\u7389\u4e3e\u8bc1\u5f00\u59cb\uff09 \uff5e\u5ac1\u7978\u7ed9\u4ed6\u7684\u7406\u7531\uff5e</p> <p>\uff08\u7edd\u5bf9\u53d1\u751f\u8fc7\u4ec0\u4e48\u4e8b\u60c5\uff0c\u624d\u8ba9\u5979\u51b3\u5b9a\u8981\u590d\u4ec7\u2026\u2026\uff09</p> <p>\u4e3e\u8bc1\uff1a\u300c\u5929\u91ce\u7531\u5229\u6075\uff08\u6545\u4eba\uff09\u300d\u3010\uff0a\u4eba\u7269\u6863\u6848\u3011\u4ee5\u53ca\u300c\u81ea\u6740\u62a5\u544a\u4e66\u300d</p> <p>\u300c\u7531\u5229\u60e0\u524d\u8f88\u2026\u2026\u8ddf\u738b\u90fd\u697c\u5e76\u6ca1\u6709\u5173\u8054\uff01\u96be\u4e0d\u6210\u2026\u2026\u4f60\u6709\u4ec0\u4e48\u8bc1\u636e\u53ef\u4ee5\u8bc1\u660e\uff1f\u300d</p> <p>\u4e3e\u8bc1\uff1a\u7531\u5229\u60e0\u7684\u7167\u7247</p> <p>\u5bf9\u8bdd\uff08\u96fe\u7eea\uff09\uff1a\u300c\u5ac1\u7978\u7ed9\u4ed6\u7684\u7406\u7531\u300d\u300c\u590d\u4ec7\u300d</p> <p>\u8be2\u95ee \uff5e\u524d\u5f80\u4f11\u606f\u5ba4\u7684\u60c5\u5f62\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u8377\u661f\u4e09\u90ce\uff08\u8377\u661f\uff09\u3011</p> <p>\u8ffd\u95ee\uff1a\u300c\u6211\u7b49\u4e86\u4ed6\u4eec\uff12\u4eba\u4e00\u6bb5\u65f6\u95f4\uff0c\u6700\u540e\u8fd8\u662f\u653e\u5f03\u79bb\u5f00\u4e86\u3002\u300d\u300c\u4ed6\u5f53\u65f6\u5728\u8ddf\u67d0\u4eba\u8bf4\u8bdd\u3002\u6211\u8d77\u521d\u4ee5\u4e3a\u2026\u2026\u90a3\u662f\u9152\u5e97\u7684\u670d\u52a1\u751f\u3002\u300d\u6309\u7167\u8fd9\u6837\u7684\u987a\u5e8f</p> <p>\u2192\u8bc1\u8a00\u53d8\u66f4</p> <p>\u8ffd\u95ee\uff1a\u300c\u738b\u90fd\u697c\u8fd8\u6709\u62ff\u5c0f\u8d39\u7ed9\u670d\u52a1\u751f\u5594\u3002\u300d</p> <p>\uff08\u6211\u8be5\u95ee\u54ea\u4e00\u4ef6\u4e8b\u2026\u2026\uff1f\uff09</p> <p>\u9009\u62e9\uff1a\u738b\u90fd\u697c\u7ed9\u7684\u5c0f\u8d39</p> <p>\uff08\u5ba1\u5224\u957f\u6b63\u7528\u6000\u7591\u7684\u773c\u795e\u770b\u6211\u2026\u2026\uff09</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u8be2\u95ee \uff5e\u7b2c\u4e8c\u6b21\u7684\u76ee\u51fb\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u8377\u661f\u4e09\u90ce\uff08\u8377\u661f\uff09\u3011</p> <p>\u8ffd\u95ee\uff1a\u300c\u73b0\u5728\u60f3\u60f3\uff0c\u90a3\u4e2a\u670d\u52a1\u751f\u771f\u7684\u633a\u5947\u602a\u7684\uff01\u300d</p> <p>\uff08\u8be5\u600e\u4e48\u529e\u624d\u597d\u5462\uff1f\u662f\u5426\u8981\u8ba4\u540c\u8377\u661f\u5148\u751f\u7684\u8fd9\u53e5\u8bc1\u8a00\u2026\u2026\uff1f\uff09</p> <p>\u9009\u62e9\uff1a\u6311\u6bdb\u75c5\u51fa\u6765</p> <p>\u2192\u8bc1\u8a00\u53d8\u66f4</p> <p>\u4e3e\u8bc1\uff1a\u300c\u4ece\u5ba2\u4eba\u7684\u623f\u95f4\u7a7a\u624b\u8d70\u51fa\u6765\uff0c\u662f\u4e00\u4ef6\u5f88\u5947\u602a\u7684\u4e8b\u60c5\u5427\uff01\u300d\u65f6\u9009\u300c\u73b0\u573a\u7167\u7247\u300d</p> <p>\u8be2\u95ee \uff5e\u88ab\u544a\u4e0e\u670d\u52a1\u751f\u7684\u7b2c\u4e8c\u6b21\u63a5\u89e6\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u8377\u661f\u4e09\u90ce\uff08\u8377\u661f\uff09\u3011</p> <p>\u8ffd\u95ee\uff1a\u300c\u628a\u624b\u4e0a\u7684\u67d0\u4ef6\u4e1c\u897f\uff0c\u4ea4\u7ed9\u4e86\u623f\u95f4\u91cc\u7684\u4eba\u3002\u300d</p> <p>\uff08\u8377\u661f\u5148\u751f\u7684\u8111\u888b\uff0c\u6ca1\u6709\u529e\u6cd5\u540c\u65f6\u5904\u7406\u4e24\u4ef6\u4e8b\u60c5\uff01\uff09</p> <p>\u9009\u62e9\uff1a\u9488\u5bf9\u201c\u91cc\u9762\u7684\u4eba\u201d\u8fdb\u884c\u8be2\u95ee</p> <p>\u518d\u6b21\u8ffd\u95ee\uff1a\u300c\u628a\u624b\u4e0a\u7684\u67d0\u4ef6\u4e1c\u897f\uff0c\u4ea4\u7ed9\u4e86\u623f\u95f4\u91cc\u7684\u4eba\u3002\u300d</p> <p>\uff08\u8377\u661f\u5148\u751f\u7684\u8111\u888b\uff0c\u6ca1\u6709\u529e\u6cd5\u540c\u65f6\u5904\u7406\u4e24\u4ef6\u4e8b\u60c5\uff01\uff09</p> <p>\u9009\u62e9\uff1a\u9488\u5bf9\u201c\u67d0\u4ef6\u4e1c\u897f\u201d\u8fdb\u884c\u8be2\u95ee</p> <p>\u2192\u9009\u62e9\u300c\u9488\u5bf9\u201c\u91cc\u9762\u7684\u4eba\u201d\u8fdb\u884c\u8be2\u95ee\u300d\u300c\u9488\u5bf9\u201c\u67d0\u4ef6\u4e1c\u897f\u201d\u8fdb\u884c\u8be2\u95ee\u300d\uff08\u987a\u5e8f\u4e0d\u540c\uff09\u540e\u8bc1\u8a00\u8ffd\u52a0</p> <p>\u4e3e\u8bc1\uff1a\u300c\u53ef\u80fd\u8981\u518d\u770b\u4e00\u6b21\u624d\u80fd\u786e\u5b9a\u2026\u2026\u4e0d\u8fc7\uff0c\u6211\u8bb0\u5f97\u597d\u50cf\u662f\u4e2a\u6728\u5236\u7684\u88c5\u9970\u54c1\u3002\u300d\u65f6\u9009\u300c\u6728\u5236\u5a03\u5a03\u300d</p> <p>\u4f60\u8bf4\u8fd8\u6709\u53ef\u7591\u7684\u90e8\u5206\u2026\u2026\u8bf7\u95ee\u662f\u6307\u54ea\u91cc\u5462\uff1f</p> <p>\u9009\u62e9\uff1a\u300c\u6536\u4e0b\u4e1c\u897f\u7684\u4eba\u5f88\u53ef\u7591\u300d\u548c\u300c\u90a3\u53ea\u718a\u5f88\u53ef\u7591\u300d\u95ee2\u6b21\uff0c\u987a\u5e8f\u4e0d\u540c</p> <p>\uff08\u2026\u2026\u8be5\u600e\u4e48\u529e\u5462\uff1f\u8981\u63a5\u53d7\u8fd9\u4e2a\u7ed3\u679c\u5417\u2026\u2026\uff1f\uff09</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u4f60\u8bf4\u7684\u201c\u771f\u51f6\u201d\u2026\u2026\u7a76\u7adf\u662f\u8c01\uff1f</p> <p>\u4e3e\u8bc1\uff1a\u534e\u5bab\u96fe\u7eea\uff0823\uff09\u3010\uff0a\u4eba\u7269\u6863\u6848\u3011</p> <p>\u8be2\u95ee \uff5e\u718a\u7684\u88c5\u9970\u54c1\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u534e\u5bab\u96fe\u7eea\uff08\u96fe\u7eea\uff09\u3011</p> <p>\u8ffd\u95ee\uff1a\u5168\u90e8</p> <p>\u83b7\u5f97\u8bc1\u636e\uff1a\u7531\u5229\u60e0\u7684\u9057\u4e66</p> <p>\uff08\u5230\u5e95\u662f\u9057\u4e66\uff01\u8fd8\u662f\u88c5\u9970\u54c1\uff01\u2026\u2026\u53ef\u7591\u7684\u7a76\u7adf\u662f\u54ea\u4e00\u4ef6\u2026\u2026\uff09</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\uff08\u6211\u6709\u529e\u6cd5\u6307\u51fa\u6765\u5417\u2026\u2026\uff1f\uff09</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u8fd9\u4ef6\u8bc1\u7269\u5fc5\u987b\u7ecf\u8fc7\u67d0\u79cd\u201c\u68c0\u67e5\u201d\uff0c\u4f46\u662f\u2026\u2026\u4f60\u5374\u6ca1\u6709\u6267\u884c\uff01</p> <p>\u4e3e\u8bc1\uff1a\u7531\u5229\u60e0\u7684\u9057\u4e66</p> <p>\uff08\u6709\u65b9\u6cd5\u80fd\u591f\u77e5\u9053\u4ed6\u73b0\u5728\u7684\u4f4d\u7f6e\u5417\u2026\u2026\uff01\uff09</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u9009\u62e9\u300c\u5f53\u7136\u6709\u300d\u540e\u7ee7\u7eed</p> <p>\u7cf8\u952f\u5211\u8b66\u73b0\u5728\u7684\u4f4d\u7f6e\u2026\u2026\u5e94\u8be5\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a\u4e1c\u897f\u5f97\u77e5\uff01</p> <p>\u9009\u62e9\uff1a\u72e9\u9b54\u51a5\uff0818\uff09\u3010\uff0a\u4eba\u7269\u6863\u6848\u3011</p> <p>\uff08\u8fd9\u4e2a\u4e3b\u5f20\u2026\u2026\u597d\u50cf\u6709\u70b9\u77db\u76fe\uff1f\uff09</p> <p>\u9009\u62e9\uff1a\u51fa\u793a\u8bc1\u636e</p> <p>\u9009\u62e9\u300c\u7b97\u4e86\u300d\u540e\u63a5\u53d7\u60e9\u7f5a\u8be2\u95ee\u864e\u72fc\u6b7b\u5bb6\u300c\u5173\u4e8e\u201c\u59d4\u6258\u4eba\u201d\u300d\u3002</p> <p>\u738b\u90fd\u697c\u771f\u609f\u5c31\u4e00\u5b9a\u77e5\u9053\u9057\u4e66\u662f\u5047\u7684\uff01</p> <p>\u4e3e\u8bc1\uff1a\u300c\u9488\u5b54\u6444\u5f71\u673a\u300d\u300c\u53d1\u4fe1\u5668\u300d\u300c\u73a9\u5076\u300d\u4efb\u610f</p> <p>\u8be2\u95ee \uff5e\u5173\u4e8e\u201c\u59d4\u6258\u4eba\u201d\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u864e\u72fc\u6b7b\u5bb6\u6d77\u87ba\u536b\u95e8\uff08\u864e\u72fc\u6b7b\u5bb6\uff09\u3011</p> <p>\u8ffd\u95ee\uff1a\u300c\u6740\u624b\u8fd9\u79cd\u804c\u4e1a\uff0c\u6700\u91cd\u89c6\u4e0e\u59d4\u6258\u4eba\u4e4b\u95f4\u7684\u4fe1\u8d56\u5173\u7cfb\u3002\u300d\u300c\u6b63\u56e0\u5982\u6b64\uff0c\u6211\u4eca\u5929\u624d\u51b3\u5b9a\u7ad9\u4e0a\u8bc1\u8a00\u53f0\u3002\u300d\u300c\u6740\u624b\u8fd9\u79cd\u804c\u4e1a\uff0c\u6700\u91cd\u89c6\u4e0e\u59d4\u6258\u4eba\u4e4b\u95f4\u7684\u4fe1\u8d56\u5173\u7cfb\u3002\u300d\u6309\u987a\u5e8f\u8ffd\u95ee</p> <p>\u2192\u8bc1\u8a00\u53d8\u66f4</p> <p>\u8ffd\u95ee\uff1a\u300c\u90a3\u4e48\u2026\u2026\u6211\u5dee\u4e0d\u591a\u8be5\u5f00\u59cb\u9488\u5bf9\u59d4\u6258\u4eba\u7684\u540d\u5b57\u8fdb\u884c\u8bc1\u8a00\u4e86\u3002\u300d</p> <p>\uff08\u2026\u2026\u6211\u8be5\u600e\u4e48\u529e\uff01\uff09</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u8be2\u95ee \uff5e\u5173\u4e8e\u201c\u59d4\u6258\u4eba\u201d\u2027\uff12\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u864e\u72fc\u6b7b\u5bb6\u6d77\u87ba\u536b\u95e8\uff08\u864e\u72fc\u6b7b\u5bb6\uff09\u3011</p> <p>\u4e3e\u8bc1\uff1a\u300c\u4f46\u662f\u59d4\u6258\u4eba\u65e9\u5c31\u77e5\u9053\u85e4\u89c1\u91ce\u5148\u751f\u5f53\u65f6\u5df2\u7ecf\u4e27\u547d\u3002\u300d\u65f6\u9009\u300c\u676f\u5b50\u300d</p> <p>\u8be2\u95ee \uff5e\u5173\u4e8e\u63a5\u53d7\u59d4\u6258\u7684\u4e8b\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u864e\u72fc\u6b7b\u5bb6\u6d77\u87ba\u536b\u95e8\uff08\u864e\u72fc\u6b7b\u5bb6\uff09\u3011</p> <p>\u8ffd\u95ee\uff1a\u300c\u59d4\u6258\u4eba\u8868\u793a\u5e0c\u671b\u53ef\u4ee5\u5728\u9881\u5956\u5178\u793c\u5f53\u665a\u8fdb\u884c\u6697\u6740\u3002\u300d</p> <p>\uff08\u201c\u60f3\u8c61\u201d\u662f\u5427\u2026\u2026\uff09</p> <p>\u9009\u62e9\uff1a\u7ee7\u7eed\u8ffd\u95ee</p> <p>\u5982\u4f55\u5462\uff1f\u8fa9\u62a4\u4eba\u3002\u521a\u521a\u8fd9\u6bb5\u8bc1\u8a00\u91cd\u8981\u5417\uff1f</p> <p>\u9009\u62e9\uff1a\u5f53\u7136\u5f88\u91cd\u8981</p> <p>\u8ffd\u95ee\uff1a\u300c\u56e0\u6b64\u6211\u4eec\u5728\u9881\u5956\u5178\u793c\u7684\u524d\u51e0\u5929\uff0c\u5728\u67d0\u95f4\u9152\u5427\u4f1a\u9762\uff0c\u8fdb\u884c\u5546\u8c08\u3002\u300d</p> <p>\uff08\u600e\u4e48\u56de\u4e8b\uff1f\u611f\u89c9\u4ed6\u521a\u521a\u597d\u50cf\u6709\u70b9\u72b9\u8c6b\u2026\u2026\uff09</p> <p>\u9009\u62e9\uff1a\u7ee7\u7eed\u8ffd\u95ee</p> <p>\u5982\u4f55\u5462\uff1f\u8fa9\u62a4\u4eba\u3002\u521a\u521a\u8fd9\u6bb5\u8bc1\u8a00\u91cd\u8981\u5417\uff1f</p> <p>\u9009\u62e9\uff1a\u4e0d\u91cd\u8981</p> <p>\u2026\u2026\u5982\u4f55\u5462\uff1f\u8fa9\u62a4\u4eba\u3002\u521a\u521a\u8fd9\u6bb5\u8bc1\u8a00\u91cd\u8981\u5417\uff1f</p> <p>\u9009\u62e9\uff1a\u5f53\u7136\u5f88\u91cd\u8981</p> <p>\u2192\u8bc1\u8a00\u8ffd\u52a0</p> <p>\u4e3e\u8bc1\uff1a\u300c\u201c\u4ed6\u662f\u4e2a\u53ef\u4ee5\u4fe1\u8d56\u7684\u7537\u4eba\u201d\u2026\u2026\u8fd9\u662f\u6211\u5b9e\u9645\u89c1\u9762\u540e\u7684\u611f\u60f3\u3002\u300d\u65f6\u9009\u300c\u534e\u5bab\u96fe\u7eea\uff0823\uff09\u300d\u3010\uff0a\u4eba\u7269\u6863\u6848\u3011</p> <p>\u8be2\u95ee \uff5e\u5173\u4e8e\u63a5\u53d7\u59d4\u6258\u7684\u4e8b\u2027\uff12\uff5e</p> <p>\u3010\u8bc1\u8a00\u8005\uff1a\u864e\u72fc\u6b7b\u5bb6\u6d77\u87ba\u536b\u95e8\uff08\u864e\u72fc\u6b7b\u5bb6\uff09\u3011</p> <p>\u8ffd\u95ee\uff1a\u300c\u59d4\u6258\u4eba\u59d4\u6258\u6211\u6697\u6740\u85e4\u89c1\u91ce\u52cb\u4ee5\u53ca\u5176\u4ed6\uff12\u3001\uff13\u4ef6\u5c0f\u4e8b\u3002\u300d</p> <p>\uff08\u4e0d\u5c0f\u5fc3\u523a\u6fc0\u5230\u4ed6\uff0c\u8ba9\u4ed6\u751f\u6c14\u4e5f\u4e0d\u597d\u2026\u2026\uff09</p> <p>\u9009\u62e9\uff1a\u7ee7\u7eed\u8ffd\u95ee</p> <p>\uff08\u9664\u975e\u8fd9\u4ef6\u4e8b\u771f\u7684\u975e\u5e38\u91cd\u8981\uff0c\u5426\u5219\u4e0d\u5e94\u8be5\u6df1\u5165\u8ffd\u7a76\u2026\u2026\uff09</p> <p>\u9009\u62e9\uff1a\u7ee7\u7eed\u8ffd\u95ee</p> <p>\u2192\u8bc1\u8a00\u8ffd\u52a0</p> <p>\u4e3e\u8bc1\uff1a\u300c\u6211\u5c06\u718a\u7684\u88c5\u9970\u54c1\u627e\u51fa\u6765\uff0c\u7136\u540e\u4ea4\u7ed9\u4e86\u534e\u5bab\u5973\u58eb\u3002\u300d\u65f6\u9009\u300c\u7531\u5229\u60e0\u7684\u9057\u4e66\u300d</p> <p>\uff0a\u6216\u8005</p> <p>\u8ffd\u95ee\uff1a\u300c\u6211\u5c06\u718a\u7684\u88c5\u9970\u54c1\u627e\u51fa\u6765\uff0c\u7136\u540e\u4ea4\u7ed9\u4e86\u534e\u5bab\u5973\u58eb\u3002\u300d</p> <p>\u5982\u4f55\u5462\uff1f\u8fa9\u62a4\u4eba\u3002\u521a\u521a\u8fd9\u6bb5\u8bc1\u8a00\u2026\u2026</p> <p>\u9009\u62e9\uff1a\u6709\u77db\u76fe</p> <p>\uff08\u6ca1\u9519\u3002\u8be5\u600e\u4e48\u529e\u624d\u597d\u5462\uff0c\u6210\u6b65\u5802\u9f99\u4e00\uff01\uff09</p> <p>\u9009\u62e9\uff1a\u51fa\u793a\u8bc1\u7269</p> <p>\u96fe\u7eea\u5c0f\u59d0\u4e0d\u53ef\u80fd\u4ece\u4f60\u624b\u4e2d\u63a5\u4e0b\u718a\u7684\u88c5\u9970\u54c1\u3002</p> <p>\u4e3e\u8bc1\uff1a\u7531\u5229\u60e0\u7684\u9057\u4e66</p> <p>\u2026\u2026\u6211\u7684\u59d4\u6258\u4eba\u738b\u90fd\u697c\u771f\u609f\u2026\u2026</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\uff08\u864e\u72fc\u6b7b\u5bb6\u7684\u624b\u67aa\u554a\u3002\u8fd9\u4f1a\u8ddf\u672c\u6848\u6709\u5173\u5417\u2026\u2026\uff1f\uff09</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u624b\u67aa</p> <p>\uff08\u60f3\u5fc5\u2026\u2026\u662f\u4ece\u738b\u90fd\u697c\u5bb6\u62ff\u8d70\u7684\u5f55\u5f71\u5e26\u5427\u2026\u2026\uff09</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u5f55\u5f71\u5e26</p> <p>\uff08\u8bb0\u5f97\u90a3\u662f\u2026\u2026\u5728\u677f\u4e1c\u9152\u5e97\u770b\u5230\u7684\u5236\u670d\u2026\u2026\uff09</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\u2192\u83b7\u5f97\u8bc1\u636e\uff1a\u7537\u670d\u52a1\u751f\u7684\u5236\u670d</p> <p>\u4f60\u60f3\u5bf9\u8c01\u63d0\u51fa\u8bc1\u7269\uff1f</p> <p>\u4e3e\u8bc1\uff1a\u864e\u72fc\u6b7b\u5bb6\u6d77\u87ba\u536b\u95e8\u3010\uff0a\u4eba\u7269\u6863\u6848\u3011</p> <p>\u4f60\u60f3\u5bf9\u8fd9\u4e2a\u4eba\uff0c\u51fa\u793a\u54ea\u4e00\u4ef6\u8bc1\u7269\uff01</p> <p>\u4e3e\u8bc1\uff1a\u5f55\u5f71\u5e26</p> <p>\u4f60\u7684\u201c\u59d4\u6258\u4eba\u201d\u62cd\u4e0b\u72af\u6848\u73b0\u573a\u7684\u7406\u7531\uff0c\u53ea\u6709\uff11\u4e2a\u3002</p> <p>\u9009\u62e9\uff1a\u4ed6\u60f3\u638c\u63e1\u4f60\u7684\u628a\u67c4</p> <p>\u2026\u2026\u77e5\u9053\u4e86\u3002</p> <p>\u9009\u62e9\uff1a\u4efb\u610f\u9009\u9879</p> <p>\uff08\u6211\u662f\u4e0d\u662f\u8be5\u628a\u4ec0\u4e48\u4e1c\u897f\u4ea4\u7ed9\u4ed6\u5462\u2026\u2026\uff1f\uff09</p> <p>\u4e3e\u8bc1\uff1a\u97ad\u5b50</p> <p>\u7b2c4\u8bdd\u7ed3\u675f\u3002</p>"},{"location":"game/aceattorney/#\u9006\u8f6c\u88c1\u52243","title":"\u9006\u8f6c\u88c1\u52243","text":""},{"location":"game/aceattorney/#\u9006\u8f6c\u88c1\u5224456-\u738b\u6ce5\u559c\u7cbe\u9009\u96c6","title":"\u9006\u8f6c\u88c1\u5224456 \u738b\u6ce5\u559c\u7cbe\u9009\u96c6","text":""},{"location":"game/aceattorney/#\u9006\u8f6c\u88c1\u52244","title":"\u9006\u8f6c\u88c1\u52244","text":""},{"location":"game/aceattorney/#\u9006\u8f6c\u88c1\u52245","title":"\u9006\u8f6c\u88c1\u52245","text":""},{"location":"game/aceattorney/#\u9006\u8f6c\u88c1\u52246","title":"\u9006\u8f6c\u88c1\u52246","text":""},{"location":"game/mahjong/","title":"\u9ebb\u5c06","text":""},{"location":"game/mahjong/#\u9ebb\u5c06","title":"\u9ebb\u5c06","text":""},{"location":"game/mahjong/#\u9ebb\u5c06\u724c","title":"\u9ebb\u5c06\u724c","text":"0 1 2 3 4 5 6 7 8 9 A B C D E F U+1F00x \ud83c\udc00 \ud83c\udc01 \ud83c\udc02 \ud83c\udc03 \ud83c\udc04\ufe0e \ud83c\udc05 \ud83c\udc06 \ud83c\udc07 \ud83c\udc08 \ud83c\udc09 \ud83c\udc0a \ud83c\udc0b \ud83c\udc0c \ud83c\udc0d \ud83c\udc0e \ud83c\udc0f U+1F01x \ud83c\udc10 \ud83c\udc11 \ud83c\udc12 \ud83c\udc13 \ud83c\udc14 \ud83c\udc15 \ud83c\udc16 \ud83c\udc17 \ud83c\udc18 \ud83c\udc19 \ud83c\udc1a \ud83c\udc1b \ud83c\udc1c \ud83c\udc1d \ud83c\udc1e \ud83c\udc1f U+1F02x \ud83c\udc20 \ud83c\udc21 \ud83c\udc22 \ud83c\udc23 \ud83c\udc24 \ud83c\udc25 \ud83c\udc26 \ud83c\udc27 \ud83c\udc28 \ud83c\udc29 \ud83c\udc2a \ud83c\udc2b"},{"location":"game/persona/","title":"\u5973\u795e\u5f02\u95fb\u5f55","text":""},{"location":"game/persona/#\u5973\u795e\u5f02\u95fb\u5f55","title":"\u5973\u795e\u5f02\u95fb\u5f55","text":""},{"location":"game/persona/#\u5973\u795e\u5f02\u95fb\u5f55-5-\u7687\u5bb6\u7248","title":"\u5973\u795e\u5f02\u95fb\u5f55 5 \u7687\u5bb6\u7248","text":""},{"location":"game/galgame/","title":"Galgame","text":""},{"location":"game/galgame/#galgame","title":"Galgame","text":"<p>\u7f8e\u5c11\u5973\u6e38\u620f\uff08\u7f8e\u5c11\u5973\u30b2\u30fc\u30e0\uff09\uff0c\u6216 Galgame\uff08\u30ae\u30e3\u30eb\u30b2\u30fc\u30e0\u3001\u30ae\u30e3\u30eb\u30b2\u30fc\uff09\uff0c\u662f\u4e00\u79cd\u53ef\u4ee5\u4e0e\u7f8e\u5c11\u5973\u8fdb\u884c\u4e92\u52a8\u7684\u7535\u5b50\u6e38\u620f\u3002</p>"},{"location":"game/galgame/#\u6982\u8981","title":"\u6982\u8981","text":"<p>\u5728\u4e2d\u6587\u4e92\u8054\u7f51\u4e0a\uff0c\u8bb8\u591a\u4eba\u5c06 Galgame \u7c97\u66b4\u5730\u7b49\u540c\u4e8e\u8272\u60c5\u6e38\u620f\uff08\u30a8\u30ed\u30b2\u30fc\u30e0\u3001\u30a8\u30ed\u30b2\u30fc\u3001\u201c\u9ec4\u6cb9\u201d\uff09\uff0c\u8fd9\u662f\u4e0d\u6b63\u786e\u7684\u3002</p> <p>Galgame \u662f\u4e00\u79cd\u53ef\u4ee5\u4e0e\u7f8e\u5c11\u5973\u8fdb\u884c\u4e92\u52a8\u7684\u7535\u5b50\u6e38\u620f\uff0c\u5b83\u7684\u4e3b\u8981\u7279\u5f81\u662f\u6e38\u620f\u4e2d\u7684\u5973\u4e3b\u89d2\u662f\u7f8e\u5c11\u5973\u3002\u800c\u8272\u60c5\u6e38\u620f\u5219\u662f\u4e00\u79cd\u4ee5\u8272\u60c5\u4e3a\u4e3b\u9898\u7684\u7535\u5b50\u6e38\u620f\uff0c\u5b83\u7684\u4e3b\u8981\u7279\u5f81\u662f\u6e38\u620f\u4e2d\u7684\u5185\u5bb9\u5305\u542b\u8272\u60c5\u5185\u5bb9\u3002\u867d\u7136\u73b0\u5728\u5927\u591a\u6570 Galgame \u90fd\u5305\u542b\u8272\u60c5\u5185\u5bb9\uff0c\u4f46\u662f\u5e76\u4e0d\u662f\u6240\u6709 Galgame \u90fd\u662f\u8272\u60c5\u6e38\u620f\u3002</p> <p>Galgame \u5927\u81f4\u53ef\u5206\u4e3a\u4e24\u79cd\u7c7b\u578b<sup>1</sup>\uff1aTAVG\uff08\u6587\u5b57\u5192\u9669\u6e38\u620f\uff09\u548c VNG\uff08\u89c6\u89c9\u5c0f\u8bf4\u6e38\u620f\uff09\u3002\u524d\u8005\u4e3b\u8981\u662f\u4ee5\u4eba\u7269\u4e4b\u95f4\u7684\u5bf9\u8bdd\u4ee5\u53ca\u5bf9\u8bdd\u8fc7\u7a0b\u4e2d\u51fa\u73b0\u7684\u5206\u652f\u9009\u9879\u6765\u5c55\u73b0\u6545\u4e8b\uff0c\u800c\u540e\u8005\u5219\u662f\u4ee5\u5c0f\u8bf4\u5f62\u5f0f\u5448\u73b0\u6545\u4e8b\u7684\u53d1\u5c55\uff0c\u9009\u9879\u4e0d\u5f71\u54cd\u5267\u60c5\u6216\u8005\u6839\u672c\u6ca1\u6709\u9009\u9879\u3002\u4e24\u8005\u7684\u5171\u540c\u70b9\u662f\u90fd\u6709\u5927\u91cf\u7684 CG \u4f9b\u73a9\u5bb6\u6b23\u8d4f\u3002</p>"},{"location":"game/galgame/#\u6e38\u73a9","title":"\u6e38\u73a9","text":"<p>\u968f\u7740\u65f6\u4ee3\u7684\u53d1\u5c55\u4e0e\u8fdb\u6b65\uff0c\u8bb8\u591a Galgame \u63a8\u51fa\u4e86\u5b98\u65b9\u4e2d\u6587\u7248\uff0c\u5728  Steam\u3001DLsite\u3001HIKARI FIELD \u7b49\u5e73\u53f0\u4e0a\u53d1\u552e\u3002</p> <ol> <li> <p>\u6709\u7684\u5730\u65b9\u53ef\u80fd\u4f1a\u6709\u66f4\u591a\u5206\u7c7b\uff0c\u4f46\u662f\u7b14\u8005\u5bf9\u6b64\u4e0d\u8ba4\u53ef\u3002\u00a0\u21a9</p> </li> </ol>"},{"location":"game/galgame/yuzusoft/","title":"YUZU SOFT","text":""},{"location":"game/galgame/yuzusoft/#yuzu-soft","title":"YUZU SOFT","text":"<p>YUZU SOFT \u662f\u65e5\u672c\u682a\u5f0f\u4f1a\u793e JUNOS \u65d7\u4e0b\u7684\u4e00\u5bb6\u5236\u4f5c Galgame \u7684\u6e38\u620f\u516c\u53f8\u3002</p>"},{"location":"game/galgame/yuzusoft/#\u9b54\u5973\u7684\u591c\u5bb4","title":"\u9b54\u5973\u7684\u591c\u5bb4","text":"<p>(2015, <sub>EN</sub> 2018, <sub>ZH</sub> 2023)</p> <p><sub>JA</sub> <sub>EN</sub> <sub>ZH</sub> <sub>EN</sub> <sub>ZH</sub> <sub>EN</sub> <sub>ZH</sub> </p> \u6e38\u620f\u653b\u7565 \u7eeb\u5730\u5b81\u5b81\u56e0\u5e61\u5de1\u690e\u53f6\u4337\u6237\u9690\u61a7\u5b50\u5047\u5c4b\u548c\u594f <ul> <li>\u518d\u8001\u5b9e\u5730\u5938\u4e00\u6b21</li> <li>\u62dc\u6258\u7eeb\u5730</li> <li>\u6539\u53d8\u89c2\u5f71\u65f6\u95f4</li> <li>\u7ee7\u7eed\u8ddf\u5927\u5bb6\u4e00\u8d77\u884c\u52a8</li> <li>\u4e5f\u8bb8\u5427</li> <li>\u6b63\u5e38\u8bf4\u8bdd</li> <li>\u5b9e\u8bdd\u5b9e\u8bf4</li> <li>\u653e\u5f03\u5b66\u4e60\uff0c\u6362\u6362\u5fc3\u60c5</li> <li>\u62dc\u6258\u5979\u518d\u63e1\u4e00\u6b21</li> <li>\u79fb\u5f00\u76ee\u5149</li> <li>\u6211\u6bd4\u8f83\u503e\u5411\u7eeb\u5730</li> <li>\u5b81\u5b81 END</li> <li>\u6e38\u620f\u6807\u9898\u754c\u9762\u9009\u62e9\u201c\u91cd\u65b0\u5f00\u59cb\u201d</li> <li>\u5b81\u5b81 TRUE END</li> </ul> <ul> <li>\u518d\u8001\u5b9e\u5730\u5938\u4e00\u6b21</li> <li>\u5c31\u8fd9\u6837\u548c\u56e0\u5e61\u7ee7\u7eed\u4e0b\u53bb</li> <li>\u2026\u2026\u7ea0\u7ed3</li> <li>\u2026\u2026\u8fd9\u4e5f\u7b97\u6f14\u7ec3\u7684\u4e00\u73af</li> <li>\u6ca1\u4ec0\u4e48\u5427</li> <li>\u6b63\u5e38\u8bf4\u8bdd</li> <li>\u5c94\u5f00\u8bdd\u9898</li> <li>\u673a\u4f1a\u96be\u5f97\uff0c\u627e\u4e2a\u4eba\u8bf7\u6559\u4e00\u4e0b\u5427</li> <li>\u8fd9\u79cd\u8bdd\u6211\u5b9e\u5728\u662f\u8bf4\u4e0d\u51fa\u53e3</li> <li>\u5938\u5979</li> <li>\u53ef\u80fd\u4f1a\u6295\u7ed9\u56e0\u5e61\u5427</li> <li>\u5de1 END</li> </ul> <ul> <li>\u518d\u8001\u5b9e\u5730\u5938\u4e00\u6b21</li> <li>\u62dc\u6258\u7eeb\u5730</li> <li>\u6539\u53d8\u89c2\u5f71\u65f6\u95f4</li> <li>\u7ee7\u7eed\u8ddf\u5927\u5bb6\u4e00\u8d77\u884c\u52a8</li> <li>\u4e5f\u8bb8\u5427</li> <li>\u6b63\u5e38\u8bf4\u8bdd</li> <li>\u5b9e\u8bdd\u5b9e\u8bf4</li> <li>\u653e\u5f03\u5b66\u4e60\uff0c\u6362\u6362\u5fc3\u60c5</li> <li>\u62dc\u6258\u5979\u518d\u63e1\u4e00\u6b21</li> <li>\u79fb\u5f00\u76ee\u5149</li> <li>\u73b0\u5728\u6211\u6ee1\u8111\u5b50\u90fd\u662f\u4e50\u961f\u7684\u4e8b\uff0c\u6ca1\u7a7a\u60f3\u8fd9\u4e2a</li> <li>\u4337 END</li> </ul> <ul> <li>\u518d\u8001\u5b9e\u5730\u5938\u4e00\u6b21</li> <li>\u5c31\u8fd9\u6837\u548c\u56e0\u5e61\u7ee7\u7eed\u4e0b\u53bb</li> <li>\u2026\u2026\u7ea0\u7ed3</li> <li>\u2026\u2026\u8fd9\u4e5f\u7b97\u6f14\u7ec3\u7684\u4e00\u73af</li> <li>\u6ca1\u4ec0\u4e48\u5427</li> <li>\u6b63\u5e38\u8bf4\u8bdd</li> <li>\u5c94\u5f00\u8bdd\u9898</li> <li>\u673a\u4f1a\u96be\u5f97\uff0c\u627e\u4e2a\u4eba\u8bf7\u6559\u4e00\u4e0b\u5427</li> <li>\u8fd9\u79cd\u8bdd\u6211\u5b9e\u5728\u662f\u8bf4\u4e0d\u51fa\u53e3</li> <li>\u5938\u5979</li> <li>\u90a3\u5f53\u7136\u662f\u2026\u2026\u6237\u9690\u5b66\u59d0\uff1f</li> <li>\u61a7\u5b50 END</li> </ul> <p>\uff08\u901a\u5173\u4efb\u610f\u4e00\u4eba\u8def\u7ebf\u540e\uff09</p> <ul> <li>\u518d\u8001\u5b9e\u5730\u5938\u4e00\u6b21</li> <li>\u62dc\u6258\u7eeb\u5730</li> <li>\u6539\u53d8\u89c2\u5f71\u65f6\u95f4</li> <li>\u5148\u586b\u9971\u809a\u5b50</li> <li>\u4e5f\u8bb8\u5427</li> <li>\u8bd5\u7740\u5f00\u4e2a\u73a9\u7b11</li> <li>\u5c94\u5f00\u8bdd\u9898</li> <li>\u673a\u4f1a\u96be\u5f97\uff0c\u627e\u4e2a\u4eba\u8bf7\u6559\u4e00\u4e0b\u5427</li> <li>\u548c\u594f END</li> </ul>"},{"location":"game/galgame/yuzusoft/#\u5343\u604b\u4e07\u82b1","title":"\u5343\u604b*\u4e07\u82b1","text":"<p>(2016,  2020,  2022)</p> <p><sub>JA</sub> <sub>ZH</sub> </p> \u6e38\u620f\u653b\u7565 \u671d\u6b66\u82b3\u4e43\u5e38\u9646\u8309\u5b50\u4e1b\u96e8\u857e\u5a1c\u00b7\u5217\u652f\u6566\u7459\u5c14\u5c0f\u6625 &amp; \u82a6\u82b1 <ul> <li>\u6577\u884d\u8fc7\u53bb</li> <li>\u4e0d\u597d\u8bf4</li> <li>\u770b\u7740\u4e0d\u5947\u602a</li> <li>\u9493\u9c7c</li> <li>\u4e0d\u884c</li> <li>\u7528\u8bed\u8a00\u611f\u8c22</li> <li>\u6709\u70b9\u62c5\u5fc3</li> <li>\u8ba9\u5979\u653e\u5fc3</li> <li>\u82b3\u4e43 END</li> </ul> <ul> <li>\u6577\u884d\u8fc7\u53bb</li> <li>\u4e0d\u597d\u8bf4</li> <li>\u770b\u7740\u4e0d\u5947\u602a</li> <li>\u6316\u91ce\u83dc</li> <li>\u7528\u8bed\u8a00\u611f\u8c22</li> <li>\u6709\u70b9\u62c5\u5fc3</li> <li>\u5c11\u8bf4\u4e24\u53e5</li> <li>\u8309\u5b50 END</li> </ul> <ul> <li>\u6577\u884d\u8fc7\u53bb</li> <li>\u4e0d\u597d\u8bf4</li> <li>\u770b\u7740\u4e0d\u5947\u602a</li> <li>\u5355\u72ec\u884c\u52a8</li> <li>\u6478\u5934</li> <li>\u6709\u70b9\u62c5\u5fc3</li> <li>\u5c11\u8bf4\u4e24\u53e5</li> <li>\u4e1b\u96e8 END</li> </ul> <ul> <li>\u6577\u884d\u8fc7\u53bb</li> <li>\u4e0d\u597d\u8bf4</li> <li>\u6211\u89c9\u5f97\u5f88\u53ef\u7231</li> <li>\u9493\u9c7c</li> <li>\u597d\u5427</li> <li>\u7528\u8bed\u8a00\u611f\u8c22</li> <li>\u6709\u70b9\u62c5\u5fc3</li> <li>\u8ba9\u5979\u653e\u5fc3</li> <li>\u857e\u5a1c END</li> </ul> <p>\uff08\u901a\u5173\u4efb\u610f\u4e00\u4eba\u8def\u7ebf\u540e\uff09</p> <ul> <li>\u8bf4\u5b9e\u8bdd</li> <li>\u4e0d\u597d\u8bf4</li> <li>\u770b\u7740\u4e0d\u5947\u602a</li> <li>\u5355\u72ec\u884c\u52a8</li> <li>\u7528\u8bed\u8a00\u611f\u8c22</li> <li>\u5c0f\u6625 &amp; \u82a6\u82b1 END</li> </ul>"},{"location":"game/galgame/yuzusoft/#riddle-joker","title":"RIDDLE JOKER","text":"<p>(2018,  2020)</p> <p><sub>JA</sub> <sub>ZH</sub> </p> \u6e38\u620f\u653b\u7565 \u4e09\u53f8\u7eeb\u6fd1\u5728\u539f\u4e03\u6d77\u5f0f\u90e8\u8309\u4f18\u4e8c\u6761\u9662\u7fbd\u6708\u58ec\u751f\u5343\u54b2 <ul> <li>\u7ee7\u7eed\u5b9e\u9a8c</li> <li>\u60f3\u770b\u770b\u4e8c\u6761\u9662\u540c\u5b66\u7684\u6cf3\u88c5</li> <li>\u7b97\u4e86</li> <li>\u5148\u53bb\u5b66\u751f\u4f1a\u529e\u516c\u5ba4</li> <li>\u8ddf\u5e73\u65f6\u4e00\u6837</li> <li>\u8309\u4f18\u5b66\u59d0</li> <li>\u7eeb\u6fd1 END</li> </ul> <ul> <li>\u5411\u4e03\u6d77\u642d\u8bdd</li> <li>\u60f3\u770b\u4e03\u6d77\u7684\u6cf3\u88c5</li> <li>\u8fd8\u662f\u522b\u804a\u4e86</li> <li>\u597d\u597d\u5938\u5979\u4e24\u53e5</li> <li>\u5148\u53bb\u5b66\u751f\u4f1a\u529e\u516c\u5ba4</li> <li>\u5076\u5c14\u6362\u6362\u53e3\u5473</li> <li>\u8309\u4f18\u5b66\u59d0</li> <li>\u4e03\u6d77 END</li> </ul> <ul> <li>\u7ee7\u7eed\u5b9e\u9a8c</li> <li>\u60f3\u770b\u770b\u4e8c\u6761\u9662\u540c\u5b66\u7684\u6cf3\u88c5</li> <li>\u7b97\u4e86</li> <li>\u5148\u53bb\u7814\u7a76\u5ba4</li> <li>\u8ddf\u5e73\u65f6\u4e00\u6837</li> <li>\u8309\u4f18\u5b66\u59d0</li> <li>\u8309\u4f18 END</li> </ul> <ul> <li>\u7ee7\u7eed\u5b9e\u9a8c</li> <li>\u60f3\u770b\u770b\u4e8c\u6761\u9662\u540c\u5b66\u7684\u6cf3\u88c5</li> <li>\u7b97\u4e86</li> <li>\u5148\u53bb\u5b66\u751f\u4f1a\u529e\u516c\u5ba4</li> <li>\u8ddf\u5e73\u65f6\u4e00\u6837</li> <li>\u4e8c\u6761\u9662\u540c\u5b66</li> <li>\u7fbd\u6708 END</li> </ul> <p>\uff08\u901a\u5173\u4efb\u610f\u4e00\u4eba\u8def\u7ebf\u540e\uff09</p> <ul> <li>\u7ee7\u7eed\u5b9e\u9a8c</li> <li>\u60f3\u770b\u4e03\u6d77\u7684\u6cf3\u88c5</li> <li>\u8ffd\u95ee</li> <li>\u7b97\u4e86</li> <li>\u5148\u53bb\u7814\u7a76\u5ba4</li> <li>\u5076\u5c14\u6362\u6362\u53e3\u5473</li> <li>\u58ec\u751f\u540c\u5b66</li> <li>\u5343\u54b2 END</li> </ul>"},{"location":"game/galgame/yuzusoft/#\u661f\u5149\u5496\u5561\u9986\u4e0e\u6b7b\u795e\u4e4b\u8776","title":"\u661f\u5149\u5496\u5561\u9986\u4e0e\u6b7b\u795e\u4e4b\u8776","text":"<p>(2019,  2022)</p> <p><sub>JA</sub> <sub>ZH</sub> </p> \u6e38\u620f\u653b\u7565 \u660e\u6708\u681e\u90a3\u56db\u5b63\u590f\u76ee\u58a8\u67d3\u5e0c\u706b\u6253\u8c37\u7231\u8863\u6c50\u5c71\u51c9\u97f3 <ul> <li>\u4ea4\u51fa\u8bb0\u5fc6</li> <li>\u63a5\u53d7\u9080\u8bf7</li> <li>\u54c1\u5c1d\u86cb\u5305\u996d</li> <li>\u966a\u681e\u90a3\u7ec3\u4e60</li> <li>\u7167\u5e38\u7ec3\u4e60</li> <li>\u5148\u53bb\u4f11\u606f</li> <li>\u548c\u51c9\u97f3\u59d0\u4e00\u8d77\u56de\u53bb</li> <li>\u660e\u6708\u681e\u90a3 END</li> </ul> <ul> <li>\u4ea4\u51fa\u8bb0\u5fc6</li> <li>\u63a5\u53d7\u9080\u8bf7</li> <li>\u54c1\u5c1d\u7ea2\u8336</li> <li>\u966a\u5c0f\u5e0c\u7ec3\u4e60</li> <li>\u5148\u4f11\u606f\u4e00\u4f1a\u513f</li> <li>\u8ba9\u51c9\u97f3\u59d0\u5148\u4f11\u606f</li> <li>\u548c\u51c9\u97f3\u59d0\u4e00\u8d77\u56de\u53bb</li> <li>\u56db\u5b63\u590f\u76ee END</li> </ul> <ul> <li>\u4ea4\u51fa\u8bb0\u5fc6</li> <li>\u63a5\u53d7\u9080\u8bf7</li> <li>\u54c1\u5c1d\u7ea2\u8336</li> <li>\u966a\u5c0f\u5e0c\u7ec3\u4e60</li> <li>\u63a5\u5f85\u4e5f\u9700\u8981\u7ec3\u4e60</li> <li>\u5148\u53bb\u4f11\u606f</li> <li>\u9001\u5c0f\u5e0c\u56de\u53bb</li> <li>\u58a8\u67d3\u5e0c END</li> </ul> <ul> <li>\u4ea4\u51fa\u8bb0\u5fc6</li> <li>\u63a5\u53d7\u9080\u8bf7</li> <li>\u54c1\u5c1d\u86cb\u5305\u996d</li> <li>\u966a\u7231\u8863\u7ec3\u4e60</li> <li>\u53bb\u7528\u9910\u533a\u770b\u770b</li> <li>\u5148\u53bb\u4f11\u606f</li> <li>\u548c\u51c9\u97f3\u59d0\u4e00\u8d77\u56de\u53bb</li> <li>\u706b\u6253\u8c37\u7231\u8863 END</li> </ul> <p>\uff08\u901a\u5173\u4efb\u610f\u4e00\u4eba\u8def\u7ebf\u540e\uff09</p> <ul> <li>\u4ea4\u51fa\u8bb0\u5fc6</li> <li>\u63a5\u53d7\u9080\u8bf7</li> <li>\u54c1\u5c1d\u7ea2\u8336</li> <li>\u966a\u5c0f\u5e0c\u7ec3\u4e60</li> <li>\u7167\u5e38\u7ec3\u4e60</li> <li>\u5148\u53bb\u4f11\u606f</li> <li>\u548c\u51c9\u97f3\u59d0\u4e00\u8d77\u56de\u53bb</li> <li>\u6c50\u5c71\u51c9\u97f3END</li> </ul>"},{"location":"game/galgame/yuzusoft/#\u5929\u4f7f\u56a3\u56a3-re-boot","title":"\u5929\u4f7f\u2606\u56a3\u56a3 RE-BOOT!","text":"<p>(2023)</p> <p><sub>JA</sub> <sub>ZH</sub> </p>"},{"location":"hardware/","title":"\u786c\u4ef6 - \u76ee\u5f55","text":""},{"location":"hardware/#\u786c\u4ef6---\u76ee\u5f55","title":"\u786c\u4ef6 - \u76ee\u5f55","text":"<ul> <li>\u5fae\u63a7\u5236\u5668<ul> <li> Arduino</li> <li> ESP32</li> <li> STM32</li> <li> Raspberry Pi</li> </ul> </li> <li>\u6570\u7801\u4ea7\u54c1</li> </ul>"},{"location":"os/","title":"\u64cd\u4f5c\u7cfb\u7edf - \u76ee\u5f55","text":""},{"location":"os/#\u64cd\u4f5c\u7cfb\u7edf---\u76ee\u5f55","title":"\u64cd\u4f5c\u7cfb\u7edf - \u76ee\u5f55","text":"<ul> <li> Windows<ul> <li> Windows 11</li> <li> Windows Terminal</li> <li>Windows Subsystem for Linux</li> <li>Windows Subsystem for Android</li> </ul> </li> <li> macOS</li> <li> Linux<ul> <li> Alpine Linux</li> <li> Arch Linux</li> <li> Debian</li> <li> SteamOS</li> <li> Ubuntu</li> </ul> </li> <li> iOS</li> <li> Android</li> <li> HarmonyOS</li> </ul>"},{"location":"os/android/","title":"Android","text":""},{"location":"os/android/#android","title":"Android","text":"<p>Android\uff08/\u02c8\u00e6n\u02ccdr\u0254\u026ad/\uff09\u662f\u4e00\u4e2a\u57fa\u4e8e Linux \u6838\u5fc3\u4e0e\u5176\u4ed6\u5f00\u6e90\u8f6f\u4ef6\u7684\u5f00\u653e\u6e90\u4ee3\u7801\u7684\u79fb\u52a8\u64cd\u4f5c\u7cfb\u7edf\uff0c\u7531\u8c37\u6b4c\u6210\u7acb\u7684\u5f00\u653e\u624b\u6301\u8bbe\u5907\u8054\u76df\u6301\u7eed\u9886\u5bfc\u4e0e\u5f00\u53d1\u3002</p> <p>\u76f8\u8f83\u4e8e iOS \u548c HarmonyOS\uff0cAndroid \u6700\u4e3a\u5f00\u653e\uff0c\u8fd9\u4e3a\u73a9\u673a\u63d0\u4f9b\u4e86\u5f88\u5927\u7684\u4fbf\u5229\u3002</p> <p>\u7136\u800c\uff0c\u5728\u5404\u5927\u624b\u673a\u5382\u5546\u548c\u8f6f\u4ef6\u5382\u5546\u7684\u201c\u52aa\u529b\u201d\u4e0b\uff0cAndroid \u7684\u5f00\u653e\u6027\u8d8a\u6765\u8d8a\u5dee\uff0c\u7559\u7ed9\u7528\u6237\u7684\u81ea\u7531\u8d8a\u6765\u8d8a\u5c11\u3002\u5bf9\u4e8e\u559c\u6b22\u73a9\u673a\u7684\u7528\u6237\u6765\u8bf4\uff0c\u8fd9\u662f\u4e00\u4ef6\u975e\u5e38\u75db\u82e6\u7684\u4e8b\u60c5\u3002\u65f6\u81f3\u4eca\u65e5\uff0c\u6700\u9002\u5408\u73a9\u673a\u7684 Android \u624b\u673a\u662f Google Pixel \u7cfb\u5217\u3002\u4f46\u662f\uff0cGoogle Pixel \u7cfb\u5217\u5728\u4e2d\u56fd\u5927\u9646\u5730\u533a\u5e76\u6ca1\u6709\u9500\u552e\u3002\u5728\u4e2d\u56fd\u5927\u9646\u5730\u533a\u9500\u552e\u7684 Android \u624b\u673a\u4e2d\uff0c\u5982\u679c\u6709\u73a9\u673a\u9700\u6c42\uff0c\u6700\u597d\u9009\u62e9  \u5c0f\u7c73\u624b\u673a\u548c  \u4e00\u52a0\u624b\u673a\u3002</p> <p>Warning</p> <p>\u672c\u6587\u4e2d\u7684\u6240\u6709\u64cd\u4f5c\u90fd\u6709\u53ef\u80fd\u9700\u8981\u6e05\u7a7a\u624b\u673a\u4e2d\u7684\u6570\u636e\u3002\u5728\u64cd\u4f5c\u524d\uff0c\u8bf7\u52a1\u5fc5\u59a5\u5584\u5904\u7406\u624b\u673a\u4e2d\u7684\u6570\u636e\u3002</p>"},{"location":"os/android/#\u89e3\u9501-bootloader","title":"\u89e3\u9501 Bootloader","text":"<p>\u73a9\u673a\u7684\u7b2c\u4e00\u6b65\u662f\u83b7\u53d6 Root \u6743\u9650\u3002\u800c\u83b7\u53d6 Root \u6743\u9650\u7684\u7b2c\u4e00\u6b65\u662f\u89e3\u9501 Bootloader\u3002</p> <p>\u9700\u8981\u5148\u7535\u8111\u4e2d\u5b89\u88c5 SDK Platform-Tools\uff0c\u5373 ADB \u548c fastboot \u5de5\u5177\u5305\u3002\u5728 Windows \u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7\u5b98\u65b9\u6559\u7a0b\u5b89\u88c5\uff1b\u5728 Linux \u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7\u5305\u7ba1\u7406\u5668\u5b89\u88c5\uff0c\u5982 Arch Linux \u4e2d\u7684 <code>android-tools</code> \u5305\u3002</p>"},{"location":"os/android/#\u5c0f\u7c73\u624b\u673a","title":"\u5c0f\u7c73\u624b\u673a","text":"<p>Xiaomi 14 \u53d1\u552e\u4ee5\u6765\uff0c\u7533\u8bf7\u89e3\u9501 Bootloader \u9700\u8981\u8fbe\u5230\u4ee5\u4e0b\u8981\u6c42\uff1a</p> <ul> <li>\u5c0f\u7c73\u793e\u533a\u7b49\u7ea7\u8fbe\u5230 5 \u7ea7</li> <li>\u5b8c\u6210\u5b9e\u540d\u9a8c\u8bc1</li> <li>\u53c2\u4e0e\u7b54\u9898\uff08\u7b54\u9898\u4e0d\u5408\u683c\u9700\u8981\u7b49\u5f85 7 \u5929\u540e\u518d\u6b21\u7b54\u9898\uff09</li> <li>\u6bcf\u5e74\u6bcf\u7528\u6237\u6700\u591a\u89e3\u9501 3 \u53f0\u8bbe\u5907</li> <li>\u89e3\u9501\u7b49\u5f85\u671f\u4e3a 72 \u5c0f\u65f6</li> </ul> <p>\u6ee1\u8db3\u8981\u6c42\u540e\uff0c\u53ef\u4ee5\u70b9\u51fb\u201c\u8bbe\u7f6e\u201d\u2192\u201c\u66f4\u591a\u8bbe\u7f6e\u201d\u2192\u201c\u5f00\u53d1\u8005\u9009\u9879\u201d\u2192\u201c\u7ed1\u5b9a\u8d26\u53f7\u548c\u8bbe\u5907\u201d\u3002\u4e00\u5468\u540e\uff0c\u53ef\u4ee5\u7528\u5b98\u65b9\u89e3\u9501\u5de5\u5177\u7533\u8bf7\u89e3\u9501 Bootloader\u3002</p>"},{"location":"os/android/#\u5176\u4ed6\u624b\u673a","title":"\u5176\u4ed6\u624b\u673a","text":"<p>\u5176\u4ed6\u54c1\u724c\u7684\u89e3\u9501\u65b9\u6cd5\u5927\u540c\u5c0f\u5f02\u3002\u65f6\u81f3\u4eca\u65e5\uff0c\u9664 vivo \u53ca\u5176\u6240\u6709\u5b50\u54c1\u724c\u4ee5\u53ca\u72ec\u7acb\u4e4b\u540e\u7684\u8363\u8000\u4ee5\u5916\uff0c\u4e3b\u6d41\u54c1\u724c\u51e0\u4e4e\u90fd\u53ef\u4ee5\u89e3\u9501\u3002\u534e\u4e3a\u7684\u642d\u8f7d EMUI \u7684\u673a\u578b\u4ee5\u53ca\u642d\u8f7d\u517c\u5bb9 AOSP \u7684 HarmonyOS \u7684\u3001\u4f7f\u7528\u9ad8\u901a\u9a81\u9f99 SOC \u7684\u673a\u578b\u4e5f\u53ef\u4ee5\u901a\u8fc7\u7279\u6b8a\u6e20\u9053\u89e3\u9501\u3002</p>"},{"location":"os/android/#\u83b7\u53d6-root-\u6743\u9650","title":"\u83b7\u53d6 Root \u6743\u9650","text":"<p>\u83b7\u53d6 Root \u6743\u9650\u7684\u65b9\u6cd5\u6709\u5f88\u591a\u79cd\uff0c\u76ee\u524d\u5bf9\u4e8e\u6700\u65b0\u7684 Android \u7248\u672c\u6709\u4e24\u79cd\u4e3b\u6d41\u7684\u65b9\u6cd5\uff1a Magisk \u548c KernelSU\u3002</p>"},{"location":"os/android/#magisk","title":"Magisk","text":"<p>Note</p> <p>Magisk \u7684 GitHub \u4ed3\u5e93\u5df2\u5f52\u6863\u3002</p> <p>Magisk \u662f\u4e00\u6b3e\u5f00\u6e90\u7684 Android Root \u89e3\u51b3\u65b9\u6848\uff0c\u7531 topjohnwu \u5f00\u53d1\u3002\u5b83\u53ef\u4ee5\u901a\u8fc7\u4fee\u6539 <code>boot.img</code> \u6765\u83b7\u53d6 Root \u6743\u9650\u3002</p> <p> </p> <p>Magisk \u7684\u539f\u7406\u662f\u5c06 <code>boot.img</code> \u4e2d\u7684 <code>init</code> \u8fdb\u7a0b\u66ff\u6362\u4e3a Magisk \u7684 <code>init</code> \u8fdb\u7a0b\uff0c\u4ece\u800c\u505a\u5230\u5728\u542f\u52a8\u65f6\u901a\u8fc7\u6dfb\u52a0\u6302\u8f7d\u70b9\u7684\u65b9\u5f0f\u4fee\u6539\u7cfb\u7edf\u5206\u533a\uff0c\u4ece\u800c\u83b7\u53d6 Root \u6743\u9650\u3002Magisk \u7684\u4f18\u70b9\u662f\u4e0d\u9700\u8981\u4fee\u6539\u7cfb\u7edf\u5206\u533a\uff0c\u4e0d\u4f1a\u5bfc\u81f4 OTA \u66f4\u65b0\u5931\u8d25\u3002</p> <p>\u76ee\u524d\u5e38\u7528\u7684 Magisk \u6709\u4e09\u79cd\uff0c\u5206\u522b\u662f\u7531 topjohnwu \u5f00\u53d1\u7684 Magisk \u3001\u5728 Telegram \u7fa4\u6d41\u4f20\u7684 Magisk Alpha  \u548c HuskyDG \u4fee\u6539\u7684 Magisk Delta \u3002\u73b0\u5728\uff0c\u7531\u4e8e\u8bb8\u591a\u8f6f\u4ef6\u6dfb\u52a0\u4e86\u8f83\u4e3a\u4e25\u683c\u7684\u9488\u5bf9 Magisk \u7684\u68c0\u6d4b\uff0c\u6240\u4ee5\u5982\u679c\u8981\u9690\u85cf Root \u6743\u9650\uff0c\u9700\u8981\u4f7f\u7528 Magisk Alpha \u6216 Magisk Delta\u3002\u4f46\u662f\uff0cMagisk Alpha \u53ef\u80fd\u66f4\u4e0d\u7a33\u5b9a\uff0cMagisk Delta \u53ef\u80fd\u66f4\u5371\u9669\u3002</p> <p>\u5728\u5237\u673a\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u5148\u770b\u770b\u624b\u673a\u5185\u6838\u7248\u672c\u4fe1\u606f\u3002\u6253\u5f00\u201c\u8bbe\u7f6e\u201d\u2192\u201c\u5173\u4e8e\u624b\u673a\u201d\uff0c\u627e\u5230\u201c\u5185\u6838\u7248\u672c\u201d\u4e00\u680f\uff0c\u67e5\u770b\u5185\u6838\u7248\u672c\u4fe1\u606f\u3002\u8fd9\u662f\u56e0\u4e3a Android 13 \u4ee5\u6765\uff0cramdisk \u4ece <code>boot.img</code> \u6620\u50cf\u4e2d\u79fb\u9664\uff0c\u653e\u5728\u5355\u72ec\u7684 <code>init_boot.img</code> \u6620\u50cf\u4e2d\uff0c\u6545\u800c\u9700\u8981\u4e0d\u540c\u7684\u5237\u673a\u65b9\u6cd5\u3002</p> \u5185\u6838\u7248\u672c\u4fe1\u606f\u7684\u4f4d\u7f6e Redmi K50 (rubens) - Android 12Xiaomi 14 Pro (shennong) - Android 14 <p></p> <p></p> \u5185\u6838\u7248\u672c\u4e3a Android 12 \u53ca\u4ee5\u4e0b\u5185\u6838\u7248\u672c\u4e3a Android 13 \u53ca\u4ee5\u4e0a <p>\u5728\u5b89\u88c5 Magisk \u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u5148\u83b7\u53d6 <code>boot.img</code>\u3002</p> <p>\u5bf9\u4e8e\u5c0f\u7c73\u624b\u673a\u6765\u8bf4\uff0c\u53ef\u4ee5\u8bbf\u95ee XiaomiROM.com \u4e0b\u8f7d\u5bf9\u5e94\u673a\u578b\u3001\u5bf9\u5e94\u7248\u672c\uff08\u5373\u5f53\u524d\u624b\u673a\u8fd0\u884c\u7684\u7cfb\u7edf\u7248\u672c\uff09\u7684\u7ebf\u5237\u5305\uff08<code>.tgz</code> \u683c\u5f0f\uff09\u6216\u5361\u5237\u5305\uff08<code>.zip</code> \u683c\u5f0f\uff09\uff0c\u7136\u540e\u89e3\u538b\uff0c\u627e\u5230 <code>boot.img</code>\u3002\u4e5f\u53ef\u4ee5\u5728\u624b\u673a\u7684\u201c\u7cfb\u7edf\u66f4\u65b0\u201d\u4e2d\u9009\u62e9\u201c\u4e0b\u8f7d\u6700\u65b0\u5b8c\u6574\u5305\u201d\uff0c\u518d\u5728\u624b\u673a\u76ee\u5f55\u4e2d\u7684 <code>Download/download_rom</code> \u6587\u4ef6\u5939\u4e2d\u627e\u5230\u5bf9\u5e94\u7248\u672c\u7684 ROM\uff0c\u5c06\u5b83\u4f20\u8f93\u5230\u7535\u8111\u4e2d\uff0c\u7136\u540e\u89e3\u538b\uff0c\u627e\u5230 <code>boot.img</code>\u3002</p> <p>\u5982\u679c\u5728\u89e3\u538b\u540e\u7684\u6587\u4ef6\u5939\u4e2d\u627e\u4e0d\u5230 <code>boot.img</code>\uff0c\u627e\u5230\u4e86 <code>payload.bin</code>\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>payload_dumper</code>  \u6765\u89e3\u538b <code>payload.bin</code>\uff0c\u7136\u540e\u627e\u5230 <code>boot.img</code>\u3002</p> <code>payload_dumper</code> \u7684\u4f7f\u7528\u65b9\u6cd5 <p>\u786e\u4fdd\u7535\u8111\u4e2d\u5b89\u88c5\u4e86 Python 3\uff0c\u7136\u540e\u5c06\u4ed3\u5e93\u514b\u9686\u5230\u672c\u5730\u3002</p> <pre><code>git clone https://github.com/vm03/payload_dumper.git\n</code></pre> <p>\u7136\u540e\uff0c\u8fdb\u5165\u4ed3\u5e93\u76ee\u5f55\uff0c\u5b89\u88c5\u4f9d\u8d56\u3002</p> <pre><code>cd payload_dumper\npip install -r requirements.txt\n</code></pre> <p>\u5c06 <code>payload.bin</code> \u653e\u5230\u4ed3\u5e93\u76ee\u5f55\u4e2d\uff0c\u7136\u540e\u6267\u884c <code>payload_dumper.py</code>\u3002</p> <pre><code>python payload_dumper.py payload.bin\n</code></pre> <p>\u7b49\u5f85\u6267\u884c\u5b8c\u6210\u540e\uff0c\u5c31\u53ef\u4ee5\u5728 <code>output</code> \u6587\u4ef6\u5939\u4e2d\u627e\u5230\u89e3\u538b\u540e\u7684\u6587\u4ef6\u3002</p> <code>payload_dumper_go</code> \u7684\u4f7f\u7528\u65b9\u6cd5 <p>\u4ece\u4ed3\u5e93\u7684 Releases \u9875\u9762\u4e0b\u8f7d\u5bf9\u5e94\u5e73\u53f0\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u7136\u540e\u5c06 <code>payload.bin</code> \u653e\u5230\u4e8c\u8fdb\u5236\u6587\u4ef6\u6240\u5728\u7684\u76ee\u5f55\u4e2d\uff0c\u6267\u884c\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002</p> <pre><code>./payload-dumper-go payload.bin\n</code></pre> <p>\u7b49\u5f85\u6267\u884c\u5b8c\u6210\u540e\uff0c\u5c31\u53ef\u4ee5\u5728 <code>output</code> \u6587\u4ef6\u5939\u4e2d\u627e\u5230\u89e3\u538b\u540e\u7684\u6587\u4ef6\u3002</p> <p>\u83b7\u53d6 <code>boot.img</code> \u540e\uff0c\u5c06 <code>boot.img</code> \u4f20\u8f93\u81f3\u624b\u673a\uff0c\u5b89\u88c5 Magisk \u6216 Magisk Delta\uff0c\u6253\u5f00\uff0c\u70b9\u51fb\u201c\u5b89\u88c5\u201d\u2192\u201c\u5b89\u88c5\u201d\u2192\u201c\u9009\u62e9\u5e76\u4fee\u8865\u4e00\u4e2a\u6587\u4ef6\u201d\uff0c\u9009\u62e9 <code>boot.img</code>\uff0c\u7136\u540e\u70b9\u51fb\u201c\u4e0b\u4e00\u6b65\u201d\u2192\u201c\u7ee7\u7eed\u201d\u2192\u201c\u5b8c\u6210\u201d\uff0c\u5f97\u5230\u4fee\u8865\u540e\u7684 <code>magisk_patched.img</code>\u3002\u5c06 <code>magisk_patched.img</code> \u4f20\u8f93\u81f3\u7535\u8111\uff0c\u7136\u540e\u8ba9\u624b\u673a\u8fdb\u5165 Fastboot \u6a21\u5f0f\u3002</p> <pre><code>adb reboot bootloader\n</code></pre> <p>\u5c06 <code>magisk_patched.img</code> \u5237\u5165\u624b\u673a\u3002</p> <pre><code>fastboot flash boot magisk_patched.img\n</code></pre> <p>\u5728\u5b89\u88c5 Magisk \u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u5148\u83b7\u53d6 <code>init_boot.img</code>\u3002</p> <p>\u5bf9\u4e8e\u5c0f\u7c73\u624b\u673a\u6765\u8bf4\uff0c\u53ef\u4ee5\u8bbf\u95ee XiaomiROM.com \u4e0b\u8f7d\u5bf9\u5e94\u673a\u578b\u3001\u5bf9\u5e94\u7248\u672c\uff08\u5373\u5f53\u524d\u624b\u673a\u8fd0\u884c\u7684\u7cfb\u7edf\u7248\u672c\uff09\u7684\u7ebf\u5237\u5305\uff08<code>.tgz</code> \u683c\u5f0f\uff09\u6216\u5361\u5237\u5305\uff08<code>.zip</code> \u683c\u5f0f\uff09\uff0c\u7136\u540e\u89e3\u538b\uff0c\u627e\u5230 <code>init_boot.img</code>\u3002\u4e5f\u53ef\u4ee5\u5728\u624b\u673a\u7684\u201c\u7cfb\u7edf\u66f4\u65b0\u201d\u4e2d\u9009\u62e9\u201c\u4e0b\u8f7d\u6700\u65b0\u5b8c\u6574\u5305\u201d\uff0c\u518d\u5728\u624b\u673a\u76ee\u5f55\u4e2d\u7684 <code>Download/download_rom</code> \u6587\u4ef6\u5939\u4e2d\u627e\u5230\u5bf9\u5e94\u7248\u672c\u7684 ROM\uff0c\u5c06\u5b83\u4f20\u8f93\u5230\u7535\u8111\u4e2d\uff0c\u7136\u540e\u89e3\u538b\uff0c\u627e\u5230 <code>init_boot.img</code>\u3002</p> <p>\u5982\u679c\u5728\u89e3\u538b\u540e\u7684\u6587\u4ef6\u5939\u4e2d\u627e\u4e0d\u5230 <code>init_boot.img</code>\uff0c\u627e\u5230\u4e86 <code>payload.bin</code>\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>payload_dumper</code>  \u6216 <code>payload_dumper_go</code>  \u6765\u89e3\u538b <code>payload.bin</code>\uff0c\u7136\u540e\u627e\u5230 <code>init_boot.img</code>\u3002</p> <code>payload_dumper</code> \u7684\u4f7f\u7528\u65b9\u6cd5 <p>\u5728\u7535\u8111\u4e2d\u5b89\u88c5 Python 3\uff0c\u7136\u540e\u5c06\u4ed3\u5e93\u514b\u9686\u5230\u672c\u5730\u3002</p> <pre><code>git clone https://github.com/vm03/payload_dumper.git\n</code></pre> <p>\u7136\u540e\uff0c\u8fdb\u5165\u4ed3\u5e93\u76ee\u5f55\uff0c\u5b89\u88c5\u4f9d\u8d56\u3002</p> <pre><code>cd payload_dumper\npip install -r requirements.txt\n</code></pre> <p>\u5c06 <code>payload.bin</code> \u653e\u5230\u4ed3\u5e93\u76ee\u5f55\u4e2d\uff0c\u7136\u540e\u6267\u884c <code>payload_dumper.py</code>\u3002</p> <pre><code>python payload_dumper.py payload.bin\n</code></pre> <p>\u7b49\u5f85\u6267\u884c\u5b8c\u6210\u540e\uff0c\u5c31\u53ef\u4ee5\u5728 <code>output</code> \u6587\u4ef6\u5939\u4e2d\u627e\u5230\u89e3\u538b\u540e\u7684\u6587\u4ef6\u3002</p> <code>payload_dumper_go</code> \u7684\u4f7f\u7528\u65b9\u6cd5 <p>\u4ece\u4ed3\u5e93\u7684 Releases \u9875\u9762\u4e0b\u8f7d\u5bf9\u5e94\u5e73\u53f0\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u7136\u540e\u5c06 <code>payload.bin</code> \u653e\u5230\u4e8c\u8fdb\u5236\u6587\u4ef6\u6240\u5728\u7684\u76ee\u5f55\u4e2d\uff0c\u6267\u884c\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002</p> <pre><code>./payload-dumper-go payload.bin\n</code></pre> <p>\u7b49\u5f85\u6267\u884c\u5b8c\u6210\u540e\uff0c\u5c31\u53ef\u4ee5\u5728 <code>output</code> \u6587\u4ef6\u5939\u4e2d\u627e\u5230\u89e3\u538b\u540e\u7684\u6587\u4ef6\u3002</p> <p>\u83b7\u53d6 <code>init_boot.img</code> \u540e\uff0c\u5c06 <code>init_boot.img</code> \u4f20\u8f93\u81f3\u624b\u673a\uff0c\u5b89\u88c5 Magisk \u6216 Magisk Delta\uff0c\u6253\u5f00\uff0c\u70b9\u51fb\u201c\u5b89\u88c5\u201d\u2192\u201c\u5b89\u88c5\u201d\u2192\u201c\u9009\u62e9\u5e76\u4fee\u8865\u4e00\u4e2a\u6587\u4ef6\u201d\uff0c\u9009\u62e9 <code>init_boot.img</code>\uff0c\u7136\u540e\u70b9\u51fb\u201c\u4e0b\u4e00\u6b65\u201d\u2192\u201c\u7ee7\u7eed\u201d\u2192\u201c\u5b8c\u6210\u201d\uff0c\u5f97\u5230\u4fee\u8865\u540e\u7684 <code>magisk_patched.img</code>\u3002\u5c06 <code>magisk_patched.img</code> \u4f20\u8f93\u81f3\u7535\u8111\uff0c\u7136\u540e\u8ba9\u624b\u673a\u8fdb\u5165 Fastboot \u6a21\u5f0f\u3002</p> <pre><code>adb reboot bootloader\n</code></pre> <p>\u5c06 <code>magisk_patched.img</code> \u5237\u5165\u624b\u673a\u3002</p> <pre><code>fastboot flash init_boot magisk_patched.img\n</code></pre> <p>\u5237\u5165\u540e\u91cd\u542f\u624b\u673a\u5373\u53ef\u3002</p> <pre><code>fastboot reboot\n</code></pre>"},{"location":"os/android/#kernelsu","title":"KernelSU","text":"<p>Note</p> <p>KernelSU \u7684 GitHub \u4ed3\u5e93\u5df2\u5f52\u6863\u3002</p> <p>KernelSU \u6bd4 Magisk \u66f4\u8fdb\u4e00\u6b65\uff0c\u5b83\u662f\u4e00\u4e2a\u57fa\u4e8e\u5185\u6838\u7684 Root \u89e3\u51b3\u65b9\u6848\uff0c\u652f\u6301\u5185\u6838\u7248\u672c 5.10 \u53ca\u4ee5\u4e0a\u3002\u76ee\u524d KernelSU \u8fd8\u4e0d\u662f\u5f88\u5b8c\u5584\uff0c\u4f7f\u7528\u65f6\u9700\u65f6\u523b\u505a\u597d\u6551\u7816\u51c6\u5907\u3002</p> <p>\u5728 GitHub Releases \u4e2d\u4e0b\u8f7d <code>.apk</code> \u5b89\u88c5\u5305\uff0c\u5b89\u88c5\u540e\u6253\u5f00\u4f1a\u663e\u793a\u624b\u673a\u5185\u6838\u4fe1\u606f\u3002\u518d\u5728 GitHub Releases \u4e2d\u4e0b\u8f7d\u5bf9\u5e94\u5185\u6838\u7248\u672c\u7684 <code>boot.img</code>\uff08\u6ce8\u610f\u4f60\u7684\u624b\u673a\u7684\u538b\u7f29\u683c\u5f0f\uff0c\u5982\u5c0f\u7c73\u624b\u673a\u901a\u5e38\u4f7f\u7528 <code>gz</code> \u6216\u4e0d\u538b\u7f29\uff09\u3002</p> <p>\u624b\u673a\u8fdb\u5165 Fastboot \u6a21\u5f0f\u3002</p> <pre><code>adb reboot bootloader\n</code></pre> <p>\u5c06 <code>boot.img</code> \u5237\u5165\u624b\u673a\u3002</p> <pre><code>fastboot flash boot boot.img\n</code></pre> <p>\u5237\u5165\u540e\u91cd\u542f\u624b\u673a\u5373\u53ef\u3002</p> <pre><code>fastboot reboot\n</code></pre>"},{"location":"os/android/#lsposed","title":"LSPosed","text":"<p>Note</p> <p>LSPosed \u7684 GitHub \u4ed3\u5e93\u5df2\u5f52\u6863\u3002</p> <p>Xposed \u662f\u4e00\u4e2a\u8fd0\u884c\u4e8e Android \u64cd\u4f5c\u7cfb\u7edf\u7684\u94a9\u5b50\u6846\u67b6\u3002\u5176\u901a\u8fc7\u66ff\u6362 Android \u7cfb\u7edf\u7684\u5173\u952e\u6587\u4ef6\uff0c\u53ef\u4ee5\u62e6\u622a\u51e0\u4e4e\u6240\u6709 Java \u51fd\u6570\u7684\u8c03\u7528\uff0c\u5e76\u5141\u8bb8\u901a\u8fc7 Xposed \u6a21\u5757\u4e2d\u7684\u81ea\u5b9a\u4e49\u4ee3\u7801\u66f4\u6539\u8c03\u7528\u8fd9\u4e9b\u51fd\u6570\u65f6\u7684\u884c\u4e3a\u3002\u56e0\u6b64\uff0cXposed \u5e38\u88ab\u7528\u6765\u4fee\u6539 Android \u7cfb\u7edf\u548c\u5e94\u7528\u7a0b\u5e8f\u7684\u529f\u80fd\u3002</p> <p>\u4f46\u662f XPosed \u5e74\u4e45\u5931\u4fee\uff0c\u4e0d\u518d\u652f\u6301\u9ad8\u7248\u672c\u7684 Android\u3002LSPosed \u662f Xposed \u7684\u4e00\u4e2a\u5206\u652f\uff0c\u5b83\u652f\u6301 Android 8.1 ~ 14\u3002</p> <p>LSPosed \u652f\u6301\u4e24\u79cd\u5b89\u88c5\u65b9\u5f0f\uff1aRiru \u548c Zygisk\u3002\u672c\u6587\u53ea\u4ecb\u7ecd\u57fa\u4e8e Magisk \u7684 Zygisk \u5b89\u88c5\u65b9\u5f0f\u3002</p>"},{"location":"os/android/#\u5b89\u88c5-lsposed","title":"\u5b89\u88c5 LSPosed","text":"<p>\u5728 Magisk \u8bbe\u7f6e\u4e2d\u6253\u5f00\u201cZygisk\u201d\uff0c\u91cd\u542f\u624b\u673a\u3002\u5728 GitHub Releases \u4e0b\u8f7d LSPosed \u7684 Zygisk \u538b\u7f29\u5305\uff0c\u6253\u5f00 Magisk\uff0c\u70b9\u51fb\u201c\u6a21\u5757\u201d\uff0c\u70b9\u51fb\u201c\u4ece\u672c\u5730\u5b89\u88c5\u201d\uff0c\u9009\u62e9\u4e0b\u8f7d\u7684\u538b\u7f29\u5305\uff0c\u5237\u5165\u6a21\u5757\u540e\u91cd\u542f\u624b\u673a\u3002</p>"},{"location":"os/android/#\u6253\u5f00-lsposed-\u7ba1\u7406\u5668\u754c\u9762","title":"\u6253\u5f00 LSPosed \u7ba1\u7406\u5668\u754c\u9762","text":"<p>\u91cd\u542f\u540e\uff0c\u4f1a\u51fa\u73b0\u4e00\u4e2a\u901a\u77e5\uff1a\u201cLSPosed \u5df2\u52a0\u8f7d\u201d\u3002\u70b9\u51fb\u5373\u53ef\u6253\u5f00 LSPosed \u7ba1\u7406\u5668\u754c\u9762\u3002</p> <p>\u5728 LSPosed \u7ba1\u7406\u5668\u8bbe\u7f6e\u4e2d\u53ef\u4ee5\u9009\u62e9\u5173\u6389\u8fd9\u4e2a\u901a\u77e5\u3002\u540c\u65f6\u53ef\u4ee5\u9009\u62e9\u201c\u521b\u5efa\u5feb\u6377\u65b9\u5f0f\u201d\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5728\u684c\u9762\u4e0a\u521b\u5efa\u4e00\u4e2a\u5feb\u6377\u65b9\u5f0f\uff0c\u65b9\u4fbf\u6253\u5f00 LSPosed \u7ba1\u7406\u5668\u754c\u9762\u3002</p> <p>\u5982\u679c\u4f60\u5173\u6389\u4e86\u8fd9\u4e2a\u901a\u77e5\uff0c\u4e5f\u6ca1\u6709\u521b\u5efa\u5feb\u6377\u65b9\u5f0f\uff0c\u53ef\u4ee5\u6253\u5f00\u62e8\u53f7\u76d8\uff0c\u8f93\u5165 <code>*#*#5776733#*#*</code>\uff08<code>*#*#LSPosed#*#*</code>\uff09\uff0c\u4e5f\u53ef\u4ee5\u6253\u5f00 LSPosed \u7ba1\u7406\u5668\u754c\u9762\u3002</p>"},{"location":"os/android/#\u5b89\u88c5\u6a21\u5757","title":"\u5b89\u88c5\u6a21\u5757","text":"<p>LSPosed \u6a21\u5757\u662f\u4ee5 <code>.apk</code> \u5b89\u88c5\u5305\u5f62\u5f0f\u5b58\u5728\u7684\u3002\u76f4\u63a5\u5c06\u5b83\u4eec\u5f53\u505a\u666e\u901a\u5e94\u7528\u5b89\u88c5\uff0c\u7136\u540e\u5728 LSPosed \u7ba1\u7406\u5668\u754c\u9762\u4e2d\u542f\u7528\u5373\u53ef\u3002</p>"},{"location":"os/android/#\u9690\u85cf-root-\u6743\u9650","title":"\u9690\u85cf Root \u6743\u9650","text":"<p>\u6709\u4e9b\u5e94\u7528\u4f1a\u68c0\u6d4b\u624b\u673a\u662f\u5426\u83b7\u53d6\u4e86 Root \u6743\u9650\uff0c\u5982\u679c\u83b7\u53d6\u4e86 Root \u6743\u9650\uff0c\u5c31\u4f1a\u62d2\u7edd\u8fd0\u884c\u3002\u8fd9\u65f6\uff0c\u6211\u4eec\u9700\u8981\u9690\u85cf Root \u6743\u9650\u3002</p>"},{"location":"os/android/#magiskhide","title":"MagiskHide","text":"<p>MagiskHide \u662f Magisk \u7684\u4e00\u4e2a\u529f\u80fd\uff0c\u53ef\u4ee5\u9690\u85cf Magisk \u7684\u4e00\u4e9b\u6587\u4ef6\uff0c\u4ece\u800c\u9690\u85cf Root \u6743\u9650\u3002</p> <p>\u5728 Magisk \u8bbe\u7f6e\u4e2d\u6253\u5f00\u201cMagiskHide\u201d\uff0c\u70b9\u51fb\u201c\u914d\u7f6e MagiskHide\u201d\uff0c\u9009\u62e9\u9700\u8981\u9690\u85cf Root \u6743\u9650\u7684\u5e94\u7528\u3002</p> <p>\u9053\u9ad8\u4e00\u5c3a\uff0c\u9b54\u9ad8\u4e00\u4e08\uff0c\u8fd9\u79cd\u65b9\u6cd5\u5728\u5f88\u591a\u65f6\u5019\u5df2\u7ecf\u4e0d\u7ba1\u7528\u4e86\u3002</p>"},{"location":"os/android/#shamiko","title":"Shamiko","text":"<p>Shamiko \u662f\u4e00\u4e2a\u57fa\u4e8e Magisk \u548c Zygisk \u7684 Root \u9690\u85cf\u6a21\u5757\uff0c\u5b83\u53ef\u4ee5\u9690\u85cf Magisk \u548c Zygisk \u7684\u4e00\u4e9b\u8e2a\u8ff9\uff0c\u4ece\u800c\u9690\u85cf Root \u6743\u9650\u3002\u4e0d\u8fc7\u5177\u4f53\u80fd\u4e0d\u80fd\u9690\u85cf\u5c31\u968f\u7f18\u4e86\u3002</p> <p>\u5728 GitHub Releases \u4e0b\u8f7d Shamiko \u7684\u538b\u7f29\u5305\uff0c\u6253\u5f00 Magisk\uff0c\u70b9\u51fb\u201c\u6a21\u5757\u201d\uff0c\u70b9\u51fb\u201c\u4ece\u672c\u5730\u5b89\u88c5\u201d\uff0c\u9009\u62e9\u4e0b\u8f7d\u7684\u538b\u7f29\u5305\uff0c\u5237\u5165\u6a21\u5757\u540e\u91cd\u542f\u624b\u673a\u3002</p> <p>\u88c5\u5b8c Shamiko \u540e\uff0c\u53ef\u4ee5\u4f7f\u7528 Momo\uff08\u9700\u5728 Magisk Alpha \u7684 Telegram \u7fa4\u4e2d\u81ea\u884c\u5bfb\u627e\u5b89\u88c5\u5305\uff09\u6765\u68c0\u6d4b\u662f\u5426\u9690\u85cf\u6210\u529f\u3002</p>"},{"location":"os/android/#\u5237\u5165-rom","title":"\u5237\u5165 ROM","text":"<p>\u4f7f\u7528 ADB \u548c Fastboot \u5de5\u5177\u8fd8\u53ef\u4ee5\u5237\u5165\u7b2c\u4e09\u65b9 ROM\uff0c\u7ed9\u624b\u673a\u589e\u6dfb\u522b\u6837\u7684\u98ce\u5473\uff0c\u4e5f\u53ef\u80fd\u4f7f\u5f97\u65e7\u624b\u673a\u7115\u53d1\u65b0\u751f\u3002</p> <p>\u4f7f\u7528\u54ea\u4e2a\u7b2c\u4e09\u65b9 ROM \u89c1\u4ec1\u89c1\u667a\u3002\u672c\u6587\u53ea\u4ecb\u7ecd\u5982\u4f55\u5237\u5165\u7c7b\u539f\u751f\u7684  LineageOS\u3002</p>"},{"location":"os/android/#\u5907\u4efd\u5b57\u5e93","title":"\u5907\u4efd\u5b57\u5e93","text":"<p>\u624b\u673a\u7684\u5b57\u5e93\u662f Flash Memory \u7684\u4fd7\u79f0\uff0c\u5b66\u540d\u4e3a\u95ea\u901f\u53ea\u8bfb\u5b58\u50a8\u5668\u3002\u4f53\u9a8c\u8fc7\u5355\u7247\u673a\u7684\u540c\u5b66\u5e94\u8be5\u77e5\u9053\uff0c\u5982\u679c\u6211\u4eec\u60f3\u8981\u5728\u5c4f\u5e55\u4e0a\u663e\u793a\u6c49\u5b57\uff0c\u5c31\u9700\u8981\u5b58\u50a8\u6d77\u91cf\u7684\u6c49\u5b57\u70b9\u9635\u4fe1\u606f\u3002\u7531\u4e8e\u5176\u4f53\u79ef\u5e9e\u5927\uff0c\u4e00\u822c\u5c06\u5176\u5355\u72ec\u5b58\u50a8\u5728\u67d0\u4e2a\u5b58\u50a8\u5668\u4e2d\u3002\u8fd9\u5c31\u662f\u201c\u5b57\u5e93\u201d\u8fd9\u4e2a\u540d\u5b57\u7684\u7531\u6765\u3002\u5f53\u529f\u80fd\u673a\u6f14\u53d8\u4e3a\u667a\u80fd\u673a\uff0c\u5b57\u5e93\u4e00\u822c\u88ab\u7528\u6765\u5b58\u50a8\u7cfb\u7edf\u7684\u4e00\u4e9b\u91cd\u8981\u5206\u533a\uff0c\u5982 <code>boot</code>\u3001<code>system</code>\u3001<code>vendor</code> \u7b49\u3002\u5982\u679c\u6211\u4eec\u5237\u5165\u7b2c\u4e09\u65b9 ROM\uff0c\u5982\u679c\u64cd\u4f5c\u4e0d\u5f53\uff0c\u6709\u53ef\u80fd\u635f\u574f\u8fd9\u4e9b\u5206\u533a\uff0c\u5bfc\u81f4\u624b\u673a\u65e0\u6cd5\u6b63\u5e38\u542f\u52a8\u3002\u6240\u4ee5\uff0c\u4e3a\u4e86\u4fbf\u4e8e\u5728\u51fa\u95ee\u9898\u65f6\u65b9\u4fbf\u5730\u56de\u5230\u53ef\u7528\u7684\u72b6\u6001\uff0c\u6211\u4eec\u9700\u8981\u5148\u5907\u4efd\u5b57\u5e93\u3002</p> <p>\u5907\u4efd\u5b57\u5e93\u9700\u8981\u5148\u83b7\u53d6 Root \u6743\u9650\uff0c\u4ee5\u8bbf\u95ee\u6839\u76ee\u5f55\u3002</p> \u9ad8\u901a SOC\u8054\u53d1\u79d1 SOC <p>\u642d\u8f7d\u9ad8\u901a SOC \u7684\u624b\u673a\uff0c\u901a\u5e38\u5728 <code>/dev/block/bootdevice/by-name/</code> \u76ee\u5f55\u4e2d\uff0c\u53ef\u4ee5\u627e\u5230\u5404\u4e2a\u5206\u533a\u7684\u7b26\u53f7\u94fe\u63a5\u3002\u4f7f\u7528 <code>ls -l</code> \u547d\u4ee4\u53ef\u4ee5\u67e5\u770b\u7b26\u53f7\u94fe\u63a5\u7684\u76ee\u6807\u3002\u7136\u540e\uff0c\u4f7f\u7528 <code>dd</code> \u547d\u4ee4\u5907\u4efd\u5b57\u5e93\u3002\u53ef\u4ee5\u5199\u4e00\u4e2a\u7b80\u5355\u7684 sh \u811a\u672c\u6765\u5907\u4efd\u6240\u6709\u5206\u533a\u3002</p> <pre><code>if [ ! -d \"/sdcard/backup\" ]; then\n    mkdir /sdcard/backup\nfi\n\ni = $(ls /dev/block/bootdevice/by-name/)\nfor i in $i\ndo\nif [ $i = system ]; then\n    continue\nfi\nif [ $i = vendor ]; then\n    continue\nfi\nif [ $i = userdata ]; then\n    continue\nfi\nif [ $i = super ]; then\n    continue\nfi\nif [ $i = mmcblk0 ]; then\n    continue\nfi\nif [ $i = sda ]; then\n    continue\nfi\nif [ $i = sdb ]; then\n    continue\nfi\nif [ $i = sdc ]; then\n    continue\nfi\nif [ $i = sdd ]; then\n    continue\nfi\nif [ $i = sde ]; then\n    continue\nfi\nif [ $i = sdf ]; then\n    continue\nfi\ndd if=/dev/block/bootdevice/by-name/$i of=/sdcard/backup/$i.img\ndone\n\necho \"\u5907\u4efd\u5b8c\u6210\"\nexit\n</code></pre> <p>\u4f7f\u7528 Root \u6743\u9650\u8fd0\u884c\u8fd9\u4e2a\u811a\u672c\uff0c\u5c31\u53ef\u4ee5\u5907\u4efd\u6240\u6709\u5206\u533a\u5230 <code>/sdcard/backup</code> \u76ee\u5f55\u4e2d\uff0c\u5c06\u5176\u4f20\u8f93\u81f3\u7535\u8111\u6216\u5176\u4ed6\u5b89\u5168\u4f4d\u7f6e\u4fdd\u5b58\u5373\u53ef\u3002</p> <p>\u642d\u8f7d\u8054\u53d1\u79d1 SOC \u7684\u624b\u673a\uff0c\u901a\u5e38\u5728 <code>/dev/block/by-name/</code> \u76ee\u5f55\u4e2d\uff0c\u53ef\u4ee5\u627e\u5230\u5404\u4e2a\u5206\u533a\u7684\u7b26\u53f7\u94fe\u63a5\u3002\u4f7f\u7528 <code>ls -l</code> \u547d\u4ee4\u53ef\u4ee5\u67e5\u770b\u7b26\u53f7\u94fe\u63a5\u7684\u76ee\u6807\u3002\u7136\u540e\uff0c\u4f7f\u7528 <code>dd</code> \u547d\u4ee4\u5907\u4efd\u5b57\u5e93\u3002\u53ef\u4ee5\u5199\u4e00\u4e2a\u7b80\u5355\u7684 sh \u811a\u672c\u6765\u5907\u4efd\u6240\u6709\u5206\u533a\u3002</p> <pre><code>if [ ! -d \"/sdcard/backup\" ]; then\n    mkdir /sdcard/backup\nfi\n\ni = $(ls /dev/block/by-name/)\nfor i in $i\ndo\nif [ $i = system ]; then\n    continue\nfi\nif [ $i = vendor ]; then\n    continue\nfi\nif [ $i = userdata ]; then\n    continue\nfi\nif [ $i = super ]; then\n    continue\nfi\nif [ $i = mmcblk0 ]; then\n    continue\nfi\nif [ $i = sda ]; then\n    continue\nfi\nif [ $i = sdb ]; then\n    continue\nfi\nif [ $i = sdc ]; then\n    continue\nfi\nif [ $i = sdd ]; then\n    continue\nfi\nif [ $i = sde ]; then\n    continue\nfi\nif [ $i = sdf ]; then\n    continue\nfi\ndd if=/dev/block/by-name/$i of=/sdcard/backup/$i.img\ndone\n\necho \"\u5907\u4efd\u5b8c\u6210\"\nexit\n</code></pre> <p>\u4f7f\u7528 Root \u6743\u9650\u8fd0\u884c\u8fd9\u4e2a\u811a\u672c\uff0c\u5c31\u53ef\u4ee5\u5907\u4efd\u6240\u6709\u5206\u533a\u5230 <code>/sdcard/backup</code> \u76ee\u5f55\u4e2d\uff0c\u5c06\u5176\u4f20\u8f93\u81f3\u7535\u8111\u6216\u5176\u4ed6\u5b89\u5168\u4f4d\u7f6e\u4fdd\u5b58\u5373\u53ef\u3002</p>"},{"location":"os/android/#\u51c6\u5907\u5e95\u5305","title":"\u51c6\u5907\u5e95\u5305","text":"<p>\u6709\u7684\u7b2c\u4e09\u65b9 ROM \u5bf9\u5237\u5165\u524d\u624b\u673a\u8fd0\u884c\u7684\u7cfb\u7edf\u6709\u6240\u8981\u6c42\u3002\u56e0\u4e3a\u9700\u8981\u4fdd\u8bc1\u624b\u673a\u7684\u5185\u6838\u7248\u672c\u88ab ROM \u517c\u5bb9\u3002</p> <p>\u4e0b\u9762\uff0c\u6211\u4eec\u4ee5\u4e3a Redmi 9 (lancelot) \u5237\u5165  LineageOS \u4e3a\u4f8b\u3002\u6839\u636e LineageOS \u5b98\u7f51\u7684\u5b89\u88c5\u8bf4\u660e\uff0c\u9002\u914d Redmi 9 \u7684 LineageOS 20 \u8981\u6c42\u5e95\u5305\u7248\u672c\u4e3a Android 11\uff0c\u5bf9\u5e94\u7684 MIUI \u7248\u672c\u662f MIUI 12.5\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u9700\u8981\u5148\u51c6\u5907\u597d MIUI 12.5\u3002</p> <p>\u5982\u679c\u6b64\u65f6\u4f60\u7684 Redmi 9 \u642d\u8f7d\u7684\u662f MIUI 12.5\uff0c\u90a3\u4e48\u4f60\u53ef\u4ee5\u76f4\u63a5\u8df3\u8fc7\u8fd9\u4e00\u6b65\u3002</p>"},{"location":"os/android/#\u5347\u7ea7","title":"\u5347\u7ea7","text":"<p>\u5982\u679c\u6b64\u65f6\u4f60\u7684 Redmi 9 \u642d\u8f7d\u7684\u662f MIUI 11 \u6216 MIUI 12.0\uff0c\u4e14\u540c\u65f6\u8fd8\u80fd\u63a5\u6536\u5230 MIUI 12.5 \u7684 OTA \u66f4\u65b0<sup>1</sup>\uff0c\u90a3\u4e48\u4f60\u53ef\u4ee5\u76f4\u63a5\u5347\u7ea7\u5230 MIUI 12.5\u3002</p> <p>\u5982\u679c\u63a5\u6536\u4e0d\u5230 OTA \u66f4\u65b0\uff0c\u53ef\u4ee5\u53c2\u7167\u964d\u7ea7\u7684\u5185\u5bb9\u3002</p>"},{"location":"os/android/#\u964d\u7ea7","title":"\u964d\u7ea7","text":"<p>\u5982\u679c\u6b64\u65f6\u4f60\u7684 Redmi 9 \u642d\u8f7d\u7684\u662f MIUI 13\uff0c\u90a3\u4e48\u4f60\u9700\u8981\u5148\u964d\u7ea7\u5230 MIUI 12.5\u3002</p> <p>\u4ece\u9ad8\u7248\u672c Android \u964d\u7ea7\u5230\u4f4e\u7248\u672c Android \u65f6\uff0c\u9700\u8981\u6e05\u9664\u6570\u636e\u3002\u5bf9\u4e8e\u5c0f\u7c73\u624b\u673a\u800c\u8a00\uff0c\u5237\u5165 MIUI \u7684\u5b98\u65b9 ROM \u53ef\u4ee5\u901a\u8fc7 MiFlash \u7ebf\u5237\u3002\u5728 XiaomiROM.com \u4e0b\u8f7d\u5bf9\u5e94\u7684\u7ebf\u5237\u5305\uff08<code>.tgz</code> \u683c\u5f0f\uff09\uff0c\u89e3\u538b\uff0c\u5728 MiFlash \u4e2d\u9009\u62e9 <code>flash_all.bat</code> \u7684\u7236\u6587\u4ef6\u5939\uff0c\u7136\u540e\u5c06\u624b\u673a\u8fdb\u5165 Fastboot \u6a21\u5f0f\uff0c\u8fde\u63a5\u7535\u8111\uff0c\u70b9\u51fb\u201c\u5237\u65b0\u201d\uff0c\u7136\u540e\u70b9\u51fb\u201c\u5237\u673a\u201d\u3002\u6ce8\u610f\u9009\u62e9\u201c\u6e05\u9664\u6240\u6709\u6570\u636e\u201d\u9009\u9879\u3002</p> <p>\u4f7f\u7528 MiFlash \u65f6\u786e\u4fdd MiFlash \u8def\u5f84\u548c\u7ebf\u5237\u5305\u8def\u5f84\u7b80\u5355\uff0c\u4e0d\u8981\u6709\u4e2d\u6587\u6216\u7a7a\u683c\u3001\u9a71\u52a8\u5df2\u5b89\u88c5\u3001\u624b\u673a\u8fdb\u5165 Fastboot \u6a21\u5f0f\u3001\u624b\u673a\u548c\u7535\u8111\u8fde\u63a5\u6b63\u5e38\u3002</p> <p>\u62a5\u9519\u53ef\u53c2\u8003 https://miuiver.com/miflash-problem-list/ \u3002</p> \u4e0d\u91cd\u8981\u7684\u9898\u5916\u8bdd <p>\u672c\u4eba\u5728\u5237\u673a\u65f6\u9047\u5230 <code>remote: 'failed to check sparse crc'</code> \u7684\u9519\u8bef\uff0c\u53c2\u8003 XDA \u8bba\u575b\u4e0a\u7684\u5e16\u5b50\uff0c\u5c06 MiFlash \u7684 Fastboot \u66ff\u6362\u4e3a miui.eu \u4e2d\u7684 Fastboot \u672a\u679c\uff0c\u540e\u6012\u800c\u76f4\u63a5\u91cd\u542f\uff0c\u51fa\u73b0\u65e0\u6cd5\u8fdb\u5165\u7cfb\u7edf\u548c Fastboot \u73b0\u8c61\uff0c\u4f46\u662f\u80fd\u8fdb\u5165 Recovery\u3002\u76f4\u63a5\u5728 Recovery \u4e2d\u6e05\u9664\u6240\u6709\u6570\u636e\u540e\uff0c\u91cd\u542f\u5373\u8fdb\u5165\u7cfb\u7edf\u3002</p>"},{"location":"os/android/#\u5237\u5165-recovery","title":"\u5237\u5165 Recovery","text":"<p>\u5237\u5165 Recovery \u4e3b\u8981\u662f\u4e3a\u4e86\u5361\u5237\u3002</p> <p>\u8f83\u4e3a\u53d7\u6b22\u8fce\u7684 Recovery \u6709\u4e24\u4e2a\uff1aTWRP \u548c OrangeFox Recovery\u3002TWRP \u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u7b2c\u4e09\u65b9 Recovery\uff0cOrangeFox Recovery \u662f\u57fa\u4e8e TWRP \u7684\u7b2c\u4e09\u65b9 Recovery\uff0c\u5b83\u4eec\u90fd\u652f\u6301\u5237\u5165\u7b2c\u4e09\u65b9 ROM\u3002</p> <p>\u4e0d\u8fc7 LineageOS \u8981\u6c42\u4f7f\u7528 LineageOS \u5b9a\u5236\u7684 Recovery\uff0c\u7167\u505a\u5373\u53ef\u3002</p>"},{"location":"os/android/#\u5237\u5165\u7cfb\u7edf","title":"\u5237\u5165\u7cfb\u7edf","text":"<p>\u7ebf\u5237\u4f7f\u7528 Fastboot\uff0c\u5361\u5237\u4f7f\u7528 Recovery\u3002</p> <p>\u5361\u5237\u53ef\u4ee5\u9009\u62e9\u5c06\u7cfb\u7edf\u5b58\u50a8\u5230\u5916\u90e8\u5b58\u50a8\u5668\u4e2d\u7528 Recovery \u5361\u5237\uff0c\u4e5f\u53ef\u4ee5\u7528 ADB \u6765\u4fa7\u8f7d\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u3002</p> <ol> <li> <p>\u53ef\u80fd\u9700\u8981\u9010\u6b65\u66f4\u65b0\uff0c\u5373\u5148\u5347\u7ea7\u5230 MIUI 12.0\uff0c\u624d\u80fd\u63a5\u6536\u5230 MIUI 12.5 \u7684 OTA \u66f4\u65b0\u3002\u00a0\u21a9</p> </li> </ol>"},{"location":"os/linux/archlinux/","title":"Arch Linux","text":""},{"location":"os/linux/archlinux/#arch-linux","title":"Arch Linux","text":"<p>Arch Linux\uff08Arch: /\u0251\u02d0rt\u0283/\uff09\u662f\u4e00\u4e2a\u8f83\u4e3a\u70ed\u95e8\u7684 Linux \u53d1\u884c\u7248\uff0c\u5b83\u81f4\u529b\u4e8e\u901a\u8fc7\u6eda\u52a8\u66f4\u65b0\u6765\u63d0\u4f9b\u5927\u591a\u6570\u8f6f\u4ef6\u7684\u6700\u65b0\u7a33\u5b9a\u7248\u672c\u3002\u9ed8\u8ba4\u5b89\u88c5\u662f\u4e00\u4e2a\u6700\u5c0f\u7684\u57fa\u672c\u7cfb\u7edf\uff0c\u7531\u7528\u6237\u81ea\u884c\u6dfb\u52a0\u9700\u8981\u7684\u8f6f\u4ef6\uff0c\u6545\u800c\u6709\u8f83\u9ad8\u7684\u81ea\u7531\u5ea6\uff0c\u53ef\u4ee5\u8ba9\u7528\u6237\u5145\u5206\u5b9a\u5236\u7cfb\u7edf\u3002\u5b83\u4f7f\u7528\u7684 pacman \u5305\u7ba1\u7406\u5668\u53ef\u4ee5\u65b9\u4fbf\u5730\u5b89\u88c5\u3001\u66f4\u65b0\u548c\u5220\u9664\u8f6f\u4ef6\u5305\u3002</p>"},{"location":"os/linux/archlinux/#\u5b89\u88c5-arch-linux","title":"\u5b89\u88c5 Arch Linux","text":"<p>\u9996\u5148\u9700\u8981\u4e0b\u8f7d Arch Linux \u955c\u50cf\u3002\u7531\u4e8e\u7f51\u7edc\u539f\u56e0\uff0c\u5b98\u7f51\u4e0b\u8f7d\u901f\u5ea6\u582a\u5fe7\uff0c\u6545\u63a8\u8350\u4f7f\u7528\u6e05\u534e\u5927\u5b66\u5f00\u6e90\u8f6f\u4ef6\u955c\u50cf\u7ad9\u4e0b\u8f7d\u3002</p> <ul> <li>\u5b98\u7f51\uff1ahttps://archlinux.org/download/</li> <li>\u6e05\u534e\u5927\u5b66\u5f00\u6e90\u8f6f\u4ef6\u955c\u50cf\u7ad9\uff1ahttps://mirrors.tuna.tsinghua.edu.cn/archlinux/iso/</li> </ul>"},{"location":"os/linux/archlinux/#\u6b63\u5e38\u9014\u5f84\u5b89\u88c5","title":"\u6b63\u5e38\u9014\u5f84\u5b89\u88c5","text":"<p>\u53c2\u89c1 Arch Linux \u5b98\u65b9\u5b89\u88c5\u6307\u5357\u3002</p>"},{"location":"os/linux/archlinux/#\u51c6\u5907\u5b89\u88c5\u4ecb\u8d28","title":"\u51c6\u5907\u5b89\u88c5\u4ecb\u8d28","text":"<p>Arch Linux\u53ef\u4ee5\u88ab\u5236\u4f5c\u6210\u591a\u79cd\u7c7b\u578b\u7684\u5b89\u88c5\u4ecb\u8d28\uff0c\u5982 U \u76d8 \u3001\u5149\u76d8\u548c\u5e26\u6709 PXE \u7684\u7f51\u7edc\u5b89\u88c5\u6620\u50cf\u3002</p> <p>\u53ef\u4ee5\u4f7f\u7528 Rufus  \u5236\u4f5c U \u76d8\u5b89\u88c5\u4ecb\u8d28\u3002</p>"},{"location":"os/linux/archlinux/#\u542f\u52a8\u5230-live-\u73af\u5883","title":"\u542f\u52a8\u5230 live \u73af\u5883","text":"<p>\u5982\u679c\u60a8\u5f88\u61d2\u60f0\uff0c\u60a8\u53ef\u4ee5\u9009\u7528 <code>archinstall</code> \u6216 <code>arch-linux-gui</code> \u5b89\u88c5\uff0c\u4f46\u662f\u8fd9\u6837\u5f88\u65e0\u8da3\u3002Arch Linux \u7684\u5b89\u88c5\u80fd\u591f\u8003\u67e5\u60a8\u5bf9\u64cd\u4f5c\u7cfb\u7edf\u548c Linux \u7684\u4e86\u89e3\u7a0b\u5ea6\uff0c\u5176\u9ad8\u5ea6\u81ea\u5b9a\u4e49\u5316\u53ef\u4ee5\u8ba9\u60a8\u5b8c\u5168\u638c\u63a7\u60a8\u7684\u8ba1\u7b97\u673a\uff1b\u540c\u65f6\uff0c\u5f53\u5176\u4ed6\u4eba\u770b\u89c1\u60a8\u901a\u8fc7\u6b63\u5e38\u9014\u5f84\u5b89\u88c5\u65f6\u4f1a\u94a6\u4f69\u60a8\u3002\u6240\u4ee5\uff0c\u6211\u8fd8\u662f\u63a8\u8350\u60a8\u901a\u8fc7\u6b63\u5e38\u9014\u5f84\u5b89\u88c5\u3002</p>"},{"location":"os/linux/archlinux/#\u914d\u7f6e\u63a7\u5236\u53f0\u952e\u76d8\u5e03\u5c40","title":"\u914d\u7f6e\u63a7\u5236\u53f0\u952e\u76d8\u5e03\u5c40","text":"<p>\u5728\u5b89\u88c5\u4e4b\u524d\uff0c\u9700\u8981\u914d\u7f6e\u63a7\u5236\u53f0\u7684\u952e\u76d8\u5e03\u5c40\u3002\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f\u82f1\u6587\u952e\u76d8\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u8df3\u8fc7\u8fd9\u4e00\u6b65\u3002</p> <p>\u5217\u51fa\u6240\u6709\u952e\u76d8\u5e03\u5c40\u3002</p> <pre><code>ls /usr/share/kbd/keymaps/**/*.map.gz\n</code></pre> <p>\u627e\u5230\u5bf9\u5e94\u7684\u952e\u76d8\u5e03\u5c40\uff0c\u5e76\u66f4\u6539\u952e\u76d8\u5e03\u5c40\u3002\u901a\u5e38\uff0c\u4e2d\u56fd\u5927\u9646\u7528\u6237\u4f7f\u7528 <code>us</code> \u952e\u76d8\u5e03\u5c40\uff0c\u65e0\u9700\u66f4\u6539\u3002</p> <pre><code>loadkeys &lt;\u952e\u76d8\u5e03\u5c40&gt;\n</code></pre>"},{"location":"os/linux/archlinux/#\u914d\u7f6e\u7f51\u7edc","title":"\u914d\u7f6e\u7f51\u7edc","text":"<p>\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f\u6709\u7ebf\u7f51\u7edc\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u8df3\u8fc7\u8fd9\u4e00\u6b65\u3002</p> <pre><code>iwctl\ndevice list\nstation &lt;\u60a8\u7684\u65e0\u7ebf\u7f51\u5361\u7684\u540d\u79f0&gt; scan\nstation &lt;\u60a8\u7684\u65e0\u7ebf\u7f51\u5361\u7684\u540d\u79f0&gt; get-networks\nstation &lt;\u60a8\u7684\u65e0\u7ebf\u7f51\u5361\u7684\u540d\u79f0&gt; connect &lt;\u60a8\u7684\u65e0\u7ebf\u7f51\u7edc\u7684\u540d\u79f0&gt;\n&lt;\u60a8\u7684\u65e0\u7ebf\u7f51\u7edc\u7684\u5bc6\u7801&gt;\nexit\n</code></pre> <p>\u5728\u8fd9\u91cc\u6700\u597d\u4e0d\u8981\u8fde\u63a5\u6e05\u534e\u5927\u5b66\u65e0\u7ebf\u7f51\u7edc <code>Tsinghua-Secure</code>\uff0c\u56e0\u4e3a\u5b83\u4f7f\u7528\u8fc7\u65f6\u7684\u534f\u8bae\u3002\u5982\u679c\u4e0d\u80fd\u8fde\u63a5\u6709\u7ebf\u7f51\u7edc\u6216\u666e\u901a\u7684\u5bb6\u7528\u5bbd\u5e26\u7f51\u7edc\uff0c\u53ef\u4ee5\u4f7f\u7528\u624b\u673a\u70ed\u70b9\u3002</p>"},{"location":"os/linux/archlinux/#\u521b\u5efa\u786c\u76d8\u5206\u533a","title":"\u521b\u5efa\u786c\u76d8\u5206\u533a","text":"<pre><code>fdisk -l # (1)!\n</code></pre> <ol> <li>\u4e5f\u53ef\u4ee5\u7528 <code>lsblk</code></li> </ol> <p>\u8bb0\u4f4f\u786c\u76d8\u540d\u79f0\uff0c\u56fa\u6001\u786c\u76d8\u901a\u5e38\u662f\u7c7b\u4f3c <code>/dev/nvme0n1</code> \u4e4b\u7c7b\u7684\u540d\u79f0\uff0c\u673a\u68b0\u786c\u76d8\u901a\u5e38\u662f\u7c7b\u4f3c <code>/dev/sda</code> \u4e4b\u7c7b\u7684\u540d\u79f0\u3002</p> <pre><code>cfdisk /dev/&lt;\u786c\u76d8\u540d\u79f0&gt;\n</code></pre> <p>\u9009\u62e9 <code>gpt</code> \u3002\u4e0b\u8868\u662f\u4e00\u79cd\u5bf9\u4e8e UEFI \u4e0e GPT \u5206\u533a\u8868\u7684\u78c1\u76d8\u5206\u533a\u65b9\u6848 \u3002</p> \u6302\u8f7d\u70b9 \u5206\u533a \u5206\u533a\u7c7b\u578b \u5efa\u8bae\u5927\u5c0f <code>/mnt/boot</code> <code>/dev/&lt;EFI\u7cfb\u7edf\u5206\u533a&gt;</code> EFI \u7cfb\u7edf\u5206\u533a \u81f3\u5c11 300 MiB\u3002\u5982\u679c\u60a8\u6253\u7b97\u5b89\u88c5\u591a\u4e2a\u5185\u6838\uff0c\u90a3\u5c31\u662f\u81f3\u5c11 1 GiB\u3002 <code>[SWAP]</code> <code>/dev/&lt;\u4ea4\u6362\u7a7a\u95f4\u5206\u533a&gt;</code> Linux swap (\u4ea4\u6362\u7a7a\u95f4) \u5927\u4e8e 512 MiB\u3002\u6216\u8005\u6839\u636e\u60a8\u7684\u8ba1\u7b97\u673a\u7684\u5185\u5b58\u5927\u5c0f\u6765\u51b3\u5b9a\u3002 <code>/mnt</code> <code>/dev/&lt;\u6839\u5206\u533a&gt;</code> Linux x86-64 \u6839\u76ee\u5f55 (<code>/</code>) \u5269\u4f59\u7a7a\u95f4 \u5173\u4e8e EFI \u7cfb\u7edf\u5206\u533a <p>\u53ea\u6709\u5728\u5206\u533a\u6b65\u9aa4\u4e2d\u521b\u5efa EFI \u7cfb\u7edf\u5206\u533a\u65f6\u624d\u9700\u8981\u683c\u5f0f\u5316\u3002\u5982\u679c\u8fd9\u4e2a\u78c1\u76d8\u4e0a\u5df2\u7ecf\u6709\u4e00\u4e2a EFI \u7cfb\u7edf\u5206\u533a\u4e86\uff0c\u5c06\u5b83\u91cd\u65b0\u683c\u5f0f\u5316\u4f1a\u7834\u574f\u5176\u4ed6\u5df2\u5b89\u88c5\u64cd\u4f5c\u7cfb\u7edf\u7684\u5f15\u5bfc\u52a0\u8f7d\u7a0b\u5e8f\u3002</p> <p>\u683c\u5f0f\u5316\u5206\u533a\u3002</p> <pre><code>mkfs.fat -F 32 /dev/&lt;EFI\u7cfb\u7edf\u5206\u533a&gt;\nmkswap /dev/&lt;\u4ea4\u6362\u7a7a\u95f4\u5206\u533a&gt;\nmkfs.ext4 /dev/&lt;\u6839\u5206\u533a&gt;\n</code></pre> <p>\u6302\u8f7d\u5206\u533a\u3002</p> <pre><code>mount --mkdir /dev/&lt;EFI \u7cfb\u7edf\u5206\u533a&gt; /mnt/boot\nswapon /dev/&lt;\u4ea4\u6362\u7a7a\u95f4\u5206\u533a&gt;\nmount /dev/&lt;\u6839\u5206\u533a&gt; /mnt\n</code></pre>"},{"location":"os/linux/archlinux/#\u66f4\u6362-pacman-\u955c\u50cf\u6e90","title":"\u66f4\u6362 <code>pacman</code> \u955c\u50cf\u6e90","text":"<p>\u53c2\u89c1\u6e05\u534e\u5927\u5b66\u5f00\u6e90\u8f6f\u4ef6\u955c\u50cf\u7ad9 Arch Linux \u8f6f\u4ef6\u4ed3\u5e93\u955c\u50cf\u4f7f\u7528\u5e2e\u52a9\u3002</p> <p>\u7f16\u8f91 <code>/etc/pacman.d/mirrorlist</code>\uff0c\u5728\u6587\u4ef6\u7684\u6700\u9876\u7aef\u6dfb\u52a0\u6e05\u534e\u5927\u5b66\u5f00\u6e90\u8f6f\u4ef6\u955c\u50cf\u7ad9\u3002</p> /etc/pacman.d/mirrorlist<pre><code>+ Server = https://mirrors.tuna.tsinghua.edu.cn/archlinux/$repo/os/$arch\n</code></pre>"},{"location":"os/linux/archlinux/#\u5b89\u88c5\u5fc5\u987b\u7684\u8f6f\u4ef6\u5305","title":"\u5b89\u88c5\u5fc5\u987b\u7684\u8f6f\u4ef6\u5305","text":"<pre><code>pacstrap -K /mnt base linux linux-firmware\n</code></pre> <p>\u5982\u679c\u8981\u83b7\u5f97\u66f4\u5b8c\u6574\u7684\u7cfb\u7edf\uff0c\u53ef\u4ee5\u5b89\u88c5 <code>base-devel</code>\u3002\u6b64\u65f6\u4e5f\u53ef\u4ee5\u540c\u65f6\u989d\u5916\u5b89\u88c5\u8ba1\u7b97\u673a\u7684 CPU \u5fae\u7801\u5305\u3002\u5982\u679c\u8ba1\u7b97\u673a\u4f7f\u7528 Intel CPU\uff0c\u4f7f\u7528 <code>intel-ucode</code>\uff0cAMD CPU \u5219\u4f7f\u7528 <code>amd-ucode</code>\u3002\u4e5f\u53ef\u4ee5\u6682\u65f6\u90fd\u4e0d\u5b89\u88c5\uff0c\u7b49\u5230\u8fdb\u5165\u7cfb\u7edf\u540e\u518d\u5b89\u88c5\u3002</p>"},{"location":"os/linux/archlinux/#\u5199\u5165\u5206\u533a\u8868","title":"\u5199\u5165\u5206\u533a\u8868","text":"<pre><code>genfstab -U /mnt &gt;&gt; /mnt/etc/fstab\n</code></pre>"},{"location":"os/linux/archlinux/#chroot-\u5230\u65b0\u5b89\u88c5\u7684\u7cfb\u7edf","title":"chroot \u5230\u65b0\u5b89\u88c5\u7684\u7cfb\u7edf","text":"<pre><code>arch-chroot /mnt\n</code></pre>"},{"location":"os/linux/archlinux/#\u5b89\u88c5\u5fc5\u8981\u8f6f\u4ef6\u548c\u5f15\u5bfc\u7a0b\u5e8f","title":"\u5b89\u88c5\u5fc5\u8981\u8f6f\u4ef6\u548c\u5f15\u5bfc\u7a0b\u5e8f","text":"<pre><code>pacman -S grub efibootmgr vim iwd dhcpcd sudo networkmanager\nsystemctl enable dhcpcd NetworkManager iwd\n</code></pre>"},{"location":"os/linux/archlinux/#\u8bbe\u7f6e\u65f6\u533a","title":"\u8bbe\u7f6e\u65f6\u533a","text":"<pre><code>ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime\nhwclock --systohc\n</code></pre>"},{"location":"os/linux/archlinux/#\u8bbe\u7f6e\u8bed\u8a00","title":"\u8bbe\u7f6e\u8bed\u8a00","text":"/etc/locale.gen<pre><code>+ en_US.UTF-8 UTF-8\n</code></pre> <pre><code>locale-gen\n</code></pre> /etc/locale.conf<pre><code>+ LANG=en_US.UTF-8\n</code></pre> <p>\u8fd9\u91cc\u4e0d\u5efa\u8bae\u628a\u8bed\u8a00\u8bbe\u7f6e\u4e3a <code>zh_CN.UTF-8</code>\u3002</p>"},{"location":"os/linux/archlinux/#\u8bbe\u7f6e\u7f51\u7edc","title":"\u8bbe\u7f6e\u7f51\u7edc","text":"/etc/hosts<pre><code>+ 127.0.0.1 localhost\n+ ::1 localhost\n+ 127.0.1.1 \u4e3b\u673a\u540d.localdomain \u4e3b\u673a\u540d\n</code></pre> /etc/hostname<pre><code>+ \u4e3b\u673a\u540d\n</code></pre>"},{"location":"os/linux/archlinux/#\u8bbe\u7f6e\u5bc6\u7801\u4e0e\u6dfb\u52a0\u7528\u6237","title":"\u8bbe\u7f6e\u5bc6\u7801\u4e0e\u6dfb\u52a0\u7528\u6237","text":"<p>\u8bbe\u7f6e root \u5bc6\u7801\u3002</p> <pre><code>passwd\n</code></pre> <p>\u6dfb\u52a0\u7528\u6237\u3002</p> <pre><code>useradd -m -G wheel -s /bin/bash &lt;\u7528\u6237\u540d&gt;\npasswd &lt;\u7528\u6237\u540d&gt;\nvisudo\n</code></pre> /etc/sudoers<pre><code>## User privilege specification\n##\nroot ALL=(ALL:ALL) ALL\n\n## Uncomment to allow members of group wheel to execute any command\n- # %wheel ALL=(ALL:ALL) ALL\n+ %wheel ALL=(ALL:ALL) ALL\n\n## Same thing without a password\n# %wheel ALL=(ALL:ALL) NOPASSWD: ALL\n</code></pre> <p>\u53d6\u6d88\u6ce8\u91ca <code>%wheel ALL=(ALL:ALL) ALL</code>\u3002</p>"},{"location":"os/linux/archlinux/#\u91cd\u542f","title":"\u91cd\u542f","text":"<pre><code>reboot\n</code></pre>"},{"location":"os/linux/archlinux/#\u5b89\u88c5\u56fe\u5f62\u5316\u754c\u9762","title":"\u5b89\u88c5\u56fe\u5f62\u5316\u754c\u9762","text":"KDE PlasmaGNOME <pre><code>pacman -S xorg plasma sddm konsole dolphin kate ark okular\nsystemctl enable sddm\n</code></pre> <pre><code>pacman -S xorg gnome\nsystemctl enable gdm\n</code></pre>"},{"location":"os/linux/archlinux/#\u6dfb\u52a0-archlinuxcn-\u6e90","title":"\u6dfb\u52a0 <code>archlinuxcn</code> \u6e90","text":"<p>\u53c2\u89c1\u6e05\u534e\u5927\u5b66\u5f00\u6e90\u8f6f\u4ef6\u955c\u50cf\u7ad9 Arch Linux CN \u8f6f\u4ef6\u4ed3\u5e93\u955c\u50cf\u4f7f\u7528\u5e2e\u52a9\u3002</p> /etc/pacman.conf<pre><code>[archlinuxcn]\nSigLevel = Optional TrustAll # (1)!\nServer = https://mirrors.tuna.tsinghua.edu.cn/archlinuxcn/$arch\n</code></pre> <ol> <li>\u5982\u679c\u5b89\u88c5 <code>archlinuxcn-keyring</code> \u65f6\u4e0d\u4f1a\u62a5\u9519\uff0c\u53ef\u4ee5\u4e0d\u52a0\u3002</li> </ol> <p>\u540c\u7406\u53ef\u4ee5\u6dfb\u52a0 <code>multilib</code> \u6e90\u4ee5\u5b89\u88c5 32 \u4f4d\u8f6f\u4ef6\uff0c\u5982  Steam\u3002</p>"},{"location":"os/linux/archlinux/#\u6dfb\u52a0-aur-\u6e90","title":"\u6dfb\u52a0 <code>AUR</code> \u6e90","text":"yayparu <pre><code>git clone https://aur.archlinux.org/yay\ncd yay\nmakepkg -si\n</code></pre> <p>\u4e2d\u56fd\u5927\u9646\u8bfb\u8005\u8bf7\u81ea\u884c\u89e3\u51b3\u7f51\u7edc\u95ee\u9898\uff08\u5982\u679c\u6709\uff09\u3002</p> <p>\u5148\u6dfb\u52a0 <code>archlinuxcn</code> \u6e90\u3002</p> <pre><code>pacman -S paru\n</code></pre> <p>\u663e\u7136\u6b64\u65b9\u6cd5\u6bd4\u5b89\u88c5 <code>yay</code> \u4e0d\u77e5\u9053\u9ad8\u5230\u54ea\u91cc\u53bb\u4e86\u3002</p>"},{"location":"os/linux/archlinux/#\u8bbe\u7f6e-grub-\u5f15\u5bfc","title":"\u8bbe\u7f6e <code>GRUB</code> \u5f15\u5bfc","text":"<p>\u5982\u679c\u60a8\u6b63\u5728\u5236\u4f5c\u4e00\u53f0\u53cc\u64cd\u4f5c\u7cfb\u7edf\u8ba1\u7b97\u673a\uff08\u5982  Windows 11 +  Arch Linux\uff09\uff0c\u60a8\u53ef\u80fd\u9700\u8981\u8ba9 <code>grub</code> \u8bc6\u522b\u5176\u4ed6\u7cfb\u7edf\u3002</p> /etc/default/grub<pre><code>- GRUB_DISABLE_OS_PROBER=true\n+ GRUB_DISABLE_OS_PROBER=false\n</code></pre> <pre><code>grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=&lt;\u60a8\u60f3\u8981\u5728efi\u5f15\u5bfc\u65f6\u663e\u793a\u7684\u540d\u5b57&gt;\ngrub-mkconfig -o /boot/grub/grub.cfg\n</code></pre>"},{"location":"os/linux/archlinux/#\u5b89\u88c5\u663e\u5361\u9a71\u52a8","title":"\u5b89\u88c5\u663e\u5361\u9a71\u52a8","text":"<p>\u60a8\u53ef\u80fd\u5728\u4e00\u53f0\u8ba1\u7b97\u673a\u4e0a\u4f7f\u7528\u591a\u5f20\u663e\u5361\uff08\u5982 Intel \u7684\u96c6\u6210\u663e\u5361\u548c NVIDIA \u7684\u72ec\u7acb\u663e\u5361\uff09\u3002\u5982\u4f55\u5408\u9002\u5730\u5728 Arch Linux \u4f7f\u7528\u53ca\u5207\u6362\u5b83\u4eec\u662f\u4e00\u4e2a\u975e\u5e38\u590d\u6742\u7684\u95ee\u9898\u3002</p> <p>\u5982\u679c\u60a8\u6bd4\u8f83\u61d2\u60f0\uff0c\u4e14\u4e0d\u9700\u8981\u5728 Arch Linux \u4e0a\u73a9\u5927\u578b\u6e38\u620f\uff0c\u60a8\u53ea\u9700\u8981\u5b89\u88c5\u4e00\u6b3e\u901a\u7528\u663e\u5361\u9a71\u52a8 <code>mesa</code> \u5373\u53ef\u3002\u5728\u4e0a\u8ff0\u60c5\u51b5\u4e0b\uff0c\u53ea\u6709\u60a8\u7684 Intel \u96c6\u6210\u663e\u5361\u4f1a\u5de5\u4f5c\u3002</p> <p>\u7136\u800c\uff0c\u5982\u679c\u60a8\u4e0d\u5f97\u4e0d\u4f7f\u7528 NVIDIA \u72ec\u7acb\u663e\u5361\uff0c\u5982\u50cf\u7b14\u8005\u4e00\u6837\uff0c\u5916\u63a5\u663e\u793a\u5668\u9700\u8981\u8fde\u63a5\u5230\u76f4\u8fde NVIDIA \u72ec\u7acb\u663e\u5361\u7684 DP \u63a5\u53e3\u65f6\uff0c\u53ef\u4ee5\u53c2\u8003\u4ee5\u4e0b\u5185\u5bb9\u3002</p> <p>\u53c2\u89c1 Optimus Manager \u7684\u4e0a\u6e38\u6587\u6863\u3002</p> <p>\u5148\u59a5\u5584\u5b89\u88c5\u597d <code>nvidia</code> \u9a71\u52a8\uff0c\u518d\u5b89\u88c5 <code>optimus-manager</code> \uff08\u901a\u8fc7 <code>yay</code> \u6216 <code>paru</code>\uff09\u3002</p> <p>\u5b89\u88c5\u4e4b\u540e\uff0c<code>optimus-manager</code> \u5b88\u62a4\u8fdb\u7a0b\u5e76\u4e0d\u4f1a\u81ea\u52a8\u542f\u52a8\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 <code>systemctl enable --now optimus-manager.service</code> \u8bbe\u7f6e\u5b83\u5f00\u673a\u542f\u52a8\u5e76\u7acb\u5373\u542f\u52a8\u3002</p> <p>\u5b83\u53ef\u80fd\u5e76\u4e0d\u80fd\u5982\u5b83\u6240\u5ba3\u79f0\u7684\u90a3\u6837\u6b63\u5e38\u5207\u6362\u663e\u5361\uff0c\u4e0d\u8fc7\u6211\u4eec\u53ef\u4ee5\u8bbe\u7f6e\u5b83\u5728\u4e0d\u540c\u7535\u6e90\u6a21\u5f0f\u4e0b\u4f7f\u7528\u4ec0\u4e48\u663e\u5361\uff0c\u8fd9\u6837\u6bcf\u6b21\u542f\u52a8\u8ba1\u7b97\u673a\u65f6\uff0c\u5b83\u4f1a\u6839\u636e\u5f53\u524d\u7684\u7535\u6e90\u6a21\u5f0f\u9009\u62e9\u4f7f\u7528\u4e0d\u540c\u7684\u663e\u5361\u3002</p> <p>\u901a\u8fc7\u5b89\u88c5 <code>optimus-manager-qt</code> \uff08\u901a\u8fc7 <code>yay</code> \u6216 <code>paru</code>\uff09\u53ef\u4ee5\u5728\u7cfb\u7edf\u6258\u76d8\u4e2d\u53ef\u89c6\u5316\u5730\u5207\u6362\u663e\u5361\u3002</p>"},{"location":"os/linux/archlinux/#\u57fa\u672c\u5b8c\u6210","title":"\u57fa\u672c\u5b8c\u6210\uff1f","text":"<p>\u63a5\u4e0b\u6765\u8bf7\u4f7f\u7528\u60a8\u53ef\u80fd\u5b89\u88c5\u5e76\u5931\u8d25\u4e86\u597d\u51e0\u904d\u7684 Arch Linux\u3002</p>"},{"location":"os/linux/archlinux/#\u4f7f\u7528-archinstall-\u5b89\u88c5","title":"\u4f7f\u7528 <code>archinstall</code> \u5b89\u88c5","text":"<p><code>archinstall</code> \u662f Arch Linux \u5b98\u65b9\u63d0\u4f9b\u7684\u5b89\u88c5\u5de5\u5177\uff0c\u53ef\u4ee5\u5728\u5b89\u88c5\u8fc7\u7a0b\u4e2d\u81ea\u52a8\u5316\u5b8c\u6210\u4e00\u4e9b\u6b65\u9aa4\u3002\u5b83\u5df2\u5305\u542b\u4e8e\u955c\u50cf\u4e2d\uff0c\u6545\u53ef\u4ee5\u76f4\u63a5\u8fd0\u884c\u3002</p> <pre><code>archinstall\n</code></pre>"},{"location":"os/linux/archlinux/#\u4f7f\u7528-arch-linux","title":"\u4f7f\u7528 Arch Linux","text":""},{"location":"os/linux/archlinux/#pacman","title":"Pacman","text":"<p>Pacman \u662f Arch Linux \u7684\u5305\u7ba1\u7406\u5668\uff0c\u53ef\u4ee5\u65b9\u4fbf\u5730\u5b89\u88c5\u3001\u66f4\u65b0\u548c\u5220\u9664\u8f6f\u4ef6\u5305\u3002</p> <pre><code>pacman -Syu # \u66f4\u65b0\u8f6f\u4ef6\u5305\npacman -S &lt;\u8f6f\u4ef6\u5305&gt; # \u5b89\u88c5\u8f6f\u4ef6\u5305\npacman -R &lt;\u8f6f\u4ef6\u5305&gt; # \u5220\u9664\u8f6f\u4ef6\u5305\n</code></pre>"},{"location":"os/linux/archlinux/#\u8f93\u5165\u6cd5","title":"\u8f93\u5165\u6cd5","text":"<p>Fcitx5 \u662f\u4e00\u6b3e\u4f18\u79c0\u7684\u8f93\u5165\u6cd5\u6846\u67b6\uff0c\u53ef\u4ee5\u5728 Arch Linux \u4e0a\u4f7f\u7528\u3002</p> <pre><code>pacman -S fcitx5 fcitx5-chinese-addons fcitx5-configtool\n</code></pre> <ul> <li>\u7b80\u4f53\u4e2d\u6587\u7528\u6237\u53ef\u4ee5\u5b89\u88c5 <code>fcitx5-chinese-addons</code>\uff0c\u5305\u542b\u4e86\u5e38\u7528\u7684\u4e2d\u6587\u8f93\u5165\u6cd5\u3002</li> <li>\u7e41\u4f53\u4e2d\u6587\u7528\u6237\u53ef\u4ee5\u5b89\u88c5 <code>fcitx5-chewing</code>\uff0c\u5305\u542b\u4e86\u7e41\u4f53\u4e2d\u6587\u6ce8\u97f3\u8f93\u5165\u6cd5\u3002</li> <li>\u65e5\u6587\u7528\u6237\u53ef\u4ee5\u5b89\u88c5 <code>fcitx5-mozc</code>\uff0c\u5305\u542b\u4e86\u65e5\u6587\u8f93\u5165\u6cd5\u3002</li> <li>\u97e9\u6587\u7528\u6237\u53ef\u4ee5\u5b89\u88c5 <code>fcitx5-hangul</code>\uff0c\u5305\u542b\u4e86\u97e9\u6587\u8f93\u5165\u6cd5\u3002</li> </ul> <p>\u8bcd\u5e93\u65b9\u9762\uff0c\u7b80\u4f53\u4e2d\u6587\u7528\u6237\u53ef\u4ee5\u5b89\u88c5 <code>fcitx5-pinyin-zhwiki</code> \u548c <code>fcitx5-pinyin-moegirl</code>\uff0c\u4e8c\u8005\u5206\u522b\u5305\u542b\u4e86\u7ef4\u57fa\u767e\u79d1\u548c\u840c\u5a18\u767e\u79d1\u7684\u8bcd\u5e93\u3002</p> /etc/environment<pre><code>+ GTK_IM_MODULE=fcitx\n+ QT_IM_MODULE=fcitx\n+ XMODIFIERS=@im=fcitx\n+ SDL_IM_MODULE=fcitx\n+ GLFW_IM_MODULE=ibus\n</code></pre> <p>\u6ce8\u9500\u5e76\u91cd\u65b0\u767b\u5f55\u540e\uff0c\u53ef\u4ee5\u627e\u5230 <code>fcitx5</code> \u7684\u56fe\u6807\u3002</p>"},{"location":"os/linux/steamos/","title":"SteamOS","text":""},{"location":"os/linux/steamos/#steamos","title":"SteamOS","text":"<p>Steam Deck \u662f Valve \u516c\u53f8\u5f00\u53d1\u7684\u638c\u4e0a\u6e38\u620f\u673a\uff0c\u5b83\u8fd0\u884c\u7684\u662f  Arch Linux \u7684\u884d\u751f\u7248 SteamOS 3.0\u3002</p> <p>Steam Deck \u6709 3 \u79cd\u578b\u53f7\uff0c\u5206\u522b\u662f 64GB eMMC\u3001256GB NVMe SSD \u548c 512GB NVMe SSD\uff0c\u552e\u4ef7\u5206\u522b\u4e3a 399 \u7f8e\u5143\u3001529 \u7f8e\u5143\u548c 649 \u7f8e\u5143\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5b8c\u5168\u6ca1\u6709\u5fc5\u8981\u8d2d\u4e70\u66f4\u5927\u7a7a\u95f4\u7684\u673a\u578b\u3002\u56e0\u4e3a Steam Deck \u7684\u5b58\u50a8\u7a7a\u95f4\u662f\u53ef\u4ee5\u6269\u5c55\u7684\u3002\u5b83\u6709\u4e00\u4e2a microSD \u5361\u69fd\uff0c\u4f46\u662f\u8fd9\u4e2a\u5361\u69fd\u7684\u901f\u5ea6\u4e0d\u662f\u5f88\u7406\u60f3\u3002\u4f60\u53ef\u4ee5\u81ea\u5df1\u8d2d\u4e70\u4e00\u5757 M.2 2230 SSD\uff08\u5982\u897f\u90e8\u6570\u636e SN740\uff09\uff0c\u7136\u540e\u62c6\u5f00 Steam Deck\uff0c\u5c06\u8fd9\u5757 SSD \u5b89\u88c5\u5230 Steam Deck \u4e0a\u3002\u8fd9\u6837\uff0c\u4f60\u5c31\u53ef\u4ee5\u62e5\u6709\u66f4\u5927\u7684\u5b58\u50a8\u7a7a\u95f4\uff0c\u800c\u4e14\u901f\u5ea6\u4e5f\u4f1a\u66f4\u5feb\u3002</p> <p>Steam Deck \u51fa\u5382\u65f6\u642d\u8f7d\u7684\u7cfb\u7edf\u662f SteamOS 3.0\uff0c\u4f46\u662f\u4f60\u4e5f\u53ef\u4ee5\u9009\u62e9\u5b89\u88c5 Windows 11\u3002\u53ef\u662f\uff0c\u8fd9\u6837\u5c31\u5931\u53bb\u4e86\u6298\u817e\u673a\u5668\u7684\u4e50\u8da3\uff0c\u6240\u4ee5\u4e0d\u5efa\u8bae\u8fd9\u6837\u505a\u3002</p> <p>Steam Deck \u7684 CPU \u662f AMD \u7684 Zen 2 \u67b6\u6784\uff0cGPU \u662f RDNA 2 \u67b6\u6784\u3002\u8fd9\u4e24\u4e2a\u67b6\u6784\u90fd\u662f\u76ee\u524d\u6700\u65b0\u7684\u67b6\u6784\u3002\u6240\u4ee5\uff0cSteam Deck \u7684\u6027\u80fd\u662f\u975e\u5e38\u5f3a\u5927\u7684\u3002\u5b83\u53ef\u4ee5\u8fd0\u884c\u5927\u90e8\u5206\u7684\u6e38\u620f\uff0c\u5305\u62ec\u4e00\u4e9b 3A \u5927\u4f5c\u3002\u4f46\u662f\uff0c\u5b83\u7684\u6027\u80fd\u8fd8\u662f\u6bd4\u4e0d\u4e0a PC\u3002\u6240\u4ee5\uff0c\u5982\u679c\u4f60\u60f3\u73a9\u4e00\u4e9b\u6027\u80fd\u8981\u6c42\u6bd4\u8f83\u9ad8\u7684\u6e38\u620f\uff0c\u8fd8\u662f\u5efa\u8bae\u8d2d\u4e70 PC\u3002</p>"},{"location":"os/linux/steamos/#\u9a8c\u673a","title":"\u9a8c\u673a","text":"<p>\u7531\u4e8e Steam Deck \u4ece\u672a\u5728\u4e2d\u56fd\u5927\u9646\u5730\u533a\u9500\u552e\uff0c\u6240\u4ee5\u9700\u8981\u627e\u4ee3\u8d2d\u3002\u4f46\u662f\u4ee3\u8d2d\u7684 Steam Deck \u6ca1\u6709\u4fdd\u4fee\u3002\u6240\u4ee5\u9700\u8981\u9a8c\u673a\u3002</p> <p>\u9996\u5148\u6478\u4e00\u6478\u6309\u952e\uff0c\u770b\u770b\u6709\u6ca1\u6709\u677e\u52a8\u3002\u6bd4\u5982\uff0c\u5982\u679c\u6273\u673a\u952e\u624b\u611f\u5f88\u5947\u602a\uff0c\u53ef\u4ee5\u62c6\u673a\uff0c\u770b\u91cc\u9762\u7684\u5f39\u7c27\u662f\u5426\u8131\u843d\u3002\u5982\u679c\u8131\u843d\u4e86\u628a\u5b83\u88c5\u56de\u53bb\u5c31\u884c\u4e86\u3002</p> <p>\u5f00\u673a\u767b\u5f55\u81ea\u5df1\u7684 Steam \u8d26\u53f7\uff0c\u7136\u540e\u6253\u5f00 Steam\uff0c\u770b\u770b Steam \u662f\u5426\u80fd\u591f\u6b63\u5e38\u8fd0\u884c\u3002</p> <p>SteamOS \u57fa\u4e8e Arch Linux\uff0c\u4f46\u8f6f\u4ef6\u5305\u6e90\u662f\u72ec\u7acb\u7684\uff0c\u91cc\u9762\u7684 <code>networkmanager</code> \u5e76\u6ca1\u6709\u66f4\u65b0\u5230\u6700\u65b0\u7248\u672c\u3002\u5982\u679c\u5f3a\u5236\u66f4\u6362\u7f51\u7edc\u7ba1\u7406\u5668\u4f1a\u5bfc\u81f4 Steam Deck \u7684\u6e38\u620f\u6a21\u5f0f\u51fa\u73b0\u95ee\u9898\u3002\u6240\u4ee5\u65e0\u6cd5\u8fde\u63a5\u6e05\u534e\u5927\u5b66\u6821\u56ed\u7f51 <code>Tsinghua-Secure</code>\u3002\u5982\u679c\u8981\u5728\u6e05\u534e\u5927\u5b66\u5bdd\u5ba4\u4f7f\u7528 Steam Deck\uff0c\u8bf7\u81ea\u5df1\u5b89\u88c5\u5bbd\u5e26\u6216\u8005\u5ffd\u60a0\u4f60\u7684\u5ba4\u53cb\u5b89\u88c5\u5bbd\u5e26\u3002</p>"},{"location":"os/linux/steamos/#\u66f4\u6362\u786c\u76d8","title":"\u66f4\u6362\u786c\u76d8","text":"<p>Steam Deck \u7684\u5b58\u50a8\u7a7a\u95f4\u662f\u53ef\u4ee5\u6269\u5c55\u7684\uff0c\u5b83\u6709\u4e00\u4e2a microSD \u5361\u69fd\u3002\u4f46\u662f\uff0c\u8fd9\u4e2a\u5361\u69fd\u7684\u901f\u5ea6\u4e0d\u662f\u5f88\u7406\u60f3\u300264GB eMMC \u7684\u786c\u76d8\u5bb9\u91cf\u5728\u4eca\u5929\u672a\u514d\u8fc7\u4e8e\u6349\u895f\u89c1\u8098\u3002\uff08\u4e0d\u4f1a\u771f\u7684\u6709\u4eba\u4e70 512GB \u7248\u672c\u5427\uff1f\uff09</p> <p>\u53ef\u4ee5\u81ea\u5df1\u8d2d\u4e70\u4e00\u5757 M.2 2230 SSD\uff08\u5982\u897f\u90e8\u6570\u636e SN740\uff09\uff0c\u7136\u540e\u62c6\u5f00 Steam Deck\uff0c\u5c06\u8fd9\u5757 SSD \u5b89\u88c5\u5230 Steam Deck \u4e0a\u3002\u8fd9\u6837\uff0c\u4f60\u5c31\u53ef\u4ee5\u62e5\u6709\u66f4\u5927\u7684\u5b58\u50a8\u7a7a\u95f4\uff0c\u800c\u4e14\u901f\u5ea6\u4e5f\u4f1a\u66f4\u5feb\u3002</p> \u5b89\u88c5\u6b65\u9aa4 <p>\u62d4\u6389 Steam Deck \u7684\u6240\u6709\u8fde\u63a5\u7ebf\u548c SD \u5361\u3002</p> <p></p> <p>\u79fb\u9664\u540e\u76d6\u87ba\u4e1d\uff0c\u62c6\u4e0b Steam Deck \u7684\u80cc\u9762\u76d6\u3002</p> <p> </p> \u94f6\u8272\u9632\u62a4\u677f\u9ed1\u8272\u9632\u62a4\u677f <p>\u63ed\u5f00\u9632\u62a4\u677f\u4e0a\u7684\u8d34\u7eb8\uff0c\u62c6\u4e0b\u94f6\u8272\u9632\u62a4\u677f\u7684\u87ba\u4e1d\uff0c\u62c6\u4e0b\u94f6\u8272\u9632\u62a4\u677f\u3002</p> <p> </p> <p>\u62c6\u4e0b\u9ed1\u8272\u9632\u62a4\u677f\u7684\u87ba\u4e1d\uff0c\u62c6\u4e0b\u9ed1\u8272\u9632\u62a4\u677f\u3002</p> <p> </p> <p>\u65ad\u5f00\u7535\u6c60\u6392\u7ebf\u3002</p> <p></p> <p>\u66f4\u6362 SSD\u3002</p> <p></p> <p>\u53cd\u5411\u6267\u884c\u4e0a\u8ff0\u6b65\u9aa4\uff0c\u76f4\u5230\u628a\u6240\u6709\u96f6\u90e8\u4ef6\u88c5\u56de\u53bb\u3002</p> <p>\u66f4\u6362\u5b8c SSD \u540e\uff0c\u9700\u8981\u91cd\u65b0\u5b89\u88c5 SteamOS\u3002\u9075\u5faa Steam Deck \u6062\u590d\u6307\u793a\u8bf4\u660e \u5b89\u88c5\u5373\u53ef\u3002</p>"},{"location":"os/linux/steamos/#\u5b89\u88c5\u8f6f\u4ef6","title":"\u5b89\u88c5\u8f6f\u4ef6","text":"<p>SteamOS 3.0 \u81ea\u5e26\u4e86 Steam\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u5b89\u88c5 Steam\u3002\uff08\u5e9f\u8bdd\uff09</p>"},{"location":"os/linux/steamos/#decky-loader","title":"Decky Loader","text":"<p>Decky Loader \u662f Steam Deck \u7684\u81ea\u5236\u63d2\u4ef6\u542f\u52a8\u5668\u3002\u5b83\u53ef\u7528\u4e8e\u8bbe\u7f6e\u83dc\u5355\u6837\u5f0f\u3001\u66f4\u6539\u7cfb\u7edf\u58f0\u97f3\u3001\u8c03\u6574\u5c4f\u5e55\u9971\u548c\u5ea6\u3001\u66f4\u6539\u5176\u4ed6\u7cfb\u7edf\u8bbe\u7f6e\u7b49\u3002</p> \u5b89\u88c5\u6b65\u9aa4 <p>\u8fdb\u5165 Steam Deck \u8bbe\u7f6e\uff0c\u6253\u5f00\u5f00\u53d1\u8005\u6a21\u5f0f\uff0c\u5e76\u5728\u5f00\u53d1\u8005\u6a21\u5f0f\u4e2d\u6253\u5f00 CEF \u8fdc\u7a0b\u8c03\u8bd5\u3002</p> <p>\u91cd\u542f Steam Deck\u3002</p> <p>\u5207\u6362\u5230 SteamOS \u684c\u9762\u6a21\u5f0f\u3002</p> <p>\u6253\u5f00 Konsole\uff0c\u8bbe\u7f6e\u8d26\u6237\u5bc6\u7801\u3002</p> <pre><code>passwd\n</code></pre> <p>\u5b89\u88c5 Decky Loader\u3002</p> <pre><code>curl -L http://dl.ohmydeck.net | sh\n</code></pre> <p>\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u56de\u5230\u6e38\u620f\u6a21\u5f0f\uff0c\u6309\u4e0b\u53f3\u4fa7\u6447\u6746\u4e0b\u7684\u5feb\u6377\u6309\u94ae\uff0c\u5c31\u53ef\u4ee5\u6253\u5f00 Decky Loader\u3002</p>"},{"location":"os/linux/steamos/#tomoon","title":"ToMoon","text":"<p>\u7531\u4e8e\u4e2d\u56fd\u5927\u9646\u5730\u533a\u7f51\u7edc\u73af\u5883\u95ee\u9898\uff0c\u5bfc\u81f4\u8fde\u63a5 Steam \u670d\u52a1\u5668\u4e0d\u662f\u90a3\u4e48\u65b9\u4fbf\u3002\u6240\u4ee5\u9700\u8981\u914d\u7f6e\u4e00\u4e0b\u7f51\u7edc\u3002</p> <p>\u5982\u679c\u6709\u65b9\u4fbf\u5b89\u88c5\u52a0\u901f\u5668\u7684\u8def\u7531\u5668\uff0c\u53ef\u4ee5\u76f4\u63a5\u5728\u8def\u7531\u5668\u4e0a\u5b89\u88c5\u52a0\u901f\u5668\u3002\u5982\u679c\u6ca1\u6709\uff0c\u53ef\u4ee5\u5728 Steam Deck \u4e0a\u5b89\u88c5\u4ee3\u7406\u7b49\u3002</p> \u5b89\u88c5\u6b65\u9aa4 <p>\u5728\u5b89\u88c5 Decky Loader \u7684\u57fa\u7840\u4e0a\uff0c\u5728 Konsole \u4e2d\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\u3002</p> <pre><code>curl -L http://i.ohmydeck.net | sh\n</code></pre>"},{"location":"os/windows/windows11/","title":"Windows 11","text":""},{"location":"os/windows/windows11/#windows-11","title":"Windows 11","text":"<p>Windows 11 \u662f\u5fae\u8f6f\u516c\u53f8\u5f00\u53d1\u7684\u64cd\u4f5c\u7cfb\u7edf\u3002\u5b83\u662f Windows 10 \u7684\u7ee7\u4efb\u8005\uff0c\u4e8e 2021 \u5e74 10 \u6708 5 \u65e5\u53d1\u5e03\u3002\u7531\u4e8e Intel \u5728 12 \u4ee3\u9177\u777f\u5904\u7406\u5668\u4e2d\u52a0\u5165\u4e86\u5927\u5c0f\u6838\u6280\u672f\uff0cWindows 11 \u5bf9\u4e8e 12 \u4ee3\u53ca\u4ee5\u540e\u7684\u9177\u777f\u5904\u7406\u5668\u7684\u652f\u6301\u66f4\u597d\u3002Windows 11 \u4e5f\u62e5\u6709 Windows 10 \u6ca1\u6709\u7684\u65b0\u529f\u80fd\uff0c\u5982 WSA\uff08Windows Subsystem for Android\uff09\u7b49\u3002</p>"},{"location":"os/windows/windows11/#\u5b89\u88c5-windows-11","title":"\u5b89\u88c5 Windows 11","text":"<p>\u53ef\u4ee5\u5728\u5fae\u8f6f\u5b98\u7f51\u4e0b\u8f7d\u955c\u50cf\uff0c\u4e5f\u53ef\u4ee5\u5728 MSDN \u4e0b\u8f7d\u955c\u50cf\u3002</p> <p>\u53ef\u4ee5\u9009\u62e9\u5728\u5fae\u8f6f\u5b98\u7f51\u4e0b\u8f7d\u5fae\u8f6f\u5b98\u65b9\u7684 Media Creation Tool \u6765\u5236\u4f5c U \u76d8\u5b89\u88c5\u4ecb\u8d28\uff0c\u4e5f\u53ef\u4ee5\u4e0b\u8f7d ISO \u955c\u50cf\u540e\u4f7f\u7528 Rufus  \u5236\u4f5c U \u76d8\u5b89\u88c5\u4ecb\u8d28\u3002</p>"},{"location":"os/windows/windows11/#\u8df3\u8fc7\u8054\u7f51","title":"\u8df3\u8fc7\u8054\u7f51","text":"<p>\u65b0\u7248\u672c\u7684 Windows 11 \u7684\u5b89\u88c5\u8fc7\u7a0b\u4e2d\u5f3a\u5236\u8981\u6c42\u8054\u7f51\uff0c\u5426\u5219\u65e0\u6cd5\u7ee7\u7eed\u5b89\u88c5\u3002\u8fd9\u7ed9\u6211\u4eec\u5e26\u6765\u4e86\u5f88\u591a\u4e0d\u4fbf\u3002\u4f8b\u5982\uff0c\u5982\u679c\u662f\u65b0\u8d2d\u4e70\u7684\u7b14\u8bb0\u672c\u7535\u8111\uff0c\u4e00\u65e6\u8054\u7f51\u6fc0\u6d3b\u540e\u6ca1\u6709\u8d28\u91cf\u95ee\u9898\uff0c\u5c31\u65e0\u6cd5\u9000\u8d27\u4e86\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u9700\u8981\u8df3\u8fc7\u8054\u7f51\u3002</p> <p>\u5982\u679c\u4f7f\u7528 Rufus \u5236\u4f5c U \u76d8\u5b89\u88c5\u4ecb\u8d28\uff0c\u53ef\u4ee5\u5728\u5236\u4f5c\u524d\u9009\u62e9\u8df3\u8fc7\u8054\u7f51\u3002\u8fd9\u6837\uff0c\u5b89\u88c5\u65f6\u5c31\u4e0d\u4f1a\u8054\u7f51\u3002</p> <p>\u5982\u679c\u5df2\u7ecf\u8fdb\u5165\u4e86\u5b89\u88c5\u754c\u9762\uff0c\u9700\u8981\u8054\u7f51\u65f6\uff0c\u53ef\u4ee5\u6309 Shift+F10 \u6253\u5f00\u547d\u4ee4\u63d0\u793a\u7b26\uff0c\u7136\u540e\u8f93\u5165</p> <pre><code>taskkill /f /im OOBENetworkConnectionFlow.exe\n</code></pre> <p>\u6216\u8005</p> <pre><code>oobe\\bypassnro\n</code></pre> <p>\u6765\u8df3\u8fc7\u8054\u7f51\u3002</p>"},{"location":"os/windows/windows11/#\u4f7f\u7528-windows-11","title":"\u4f7f\u7528 Windows 11","text":""},{"location":"os/windows/windows11/#\u5c06\u7f16\u7801\u6539\u4e3a-utf-8","title":"\u5c06\u7f16\u7801\u6539\u4e3a UTF-8","text":"<p>Windows 11 \u9ed8\u8ba4\u4f7f\u7528 GBK \u7f16\u7801\uff0c\u8fd9\u662f\u9648\u65e7\u800c\u4e0d\u5408\u7406\u7684\u3002\u73b0\u5728\u5927\u591a\u6570\u8f6f\u4ef6\u90fd\u4f7f\u7528 UTF-8 \u7f16\u7801\u3002\u6211\u4eec\u53ef\u4ee5\u5c06\u7f16\u7801\u6539\u4e3a UTF-8\u3002</p> <p>\u6253\u5f00\u63a7\u5236\u9762\u677f\uff0c\u9009\u62e9\u201c\u65f6\u949f\u548c\u533a\u57df\u201d\uff0c\u7136\u540e\u9009\u62e9\u201c\u533a\u57df\u201d\u3002\u5728\u5f39\u51fa\u7684\u7a97\u53e3\u4e2d\uff0c\u9009\u62e9\u201c\u7ba1\u7406\u201d\uff0c\u70b9\u51fb\u201c\u66f4\u6539\u7cfb\u7edf\u533a\u57df\u8bbe\u7f6e\u201d\u3002\u5728\u5f39\u51fa\u7684\u7a97\u53e3\u4e2d\uff0c\u9009\u62e9\u201cBeta: \u4f7f\u7528 Unicode UTF-8 \u63d0\u4f9b\u5168\u7403\u8bed\u8a00\u652f\u6301\u201d\u590d\u9009\u6846\uff0c\u7136\u540e\u70b9\u51fb\u201c\u786e\u5b9a\u201d\u6309\u94ae\u3002\u6700\u540e\uff0c\u91cd\u542f\u7535\u8111\u3002</p> <p></p> <p>\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u5728\u4e2d\u6587\u73af\u5883\u4e0b\u8fd0\u884c\u7684 Windows \u7684 C \u548c C++ \u7a0b\u5e8f\u4f7f\u7528 <code>printf()</code> \u8f93\u51fa\u662f\u4e0e\u6e90\u4ee3\u7801\u7f16\u7801\u76f8\u540c\u7684\uff0c\u4f46\u662f <code>scanf()</code> \u8f93\u5165\u662f GBK \u7f16\u7801\u3002\u8fd9\u662f\u56e0\u4e3a Windows \u7684 C \u548c C++ \u7a0b\u5e8f\u4f7f\u7528\u7684\u662f Windows API\uff0c\u800c Windows API \u4f7f\u7528\u7684\u662f GBK \u7f16\u7801\u3002\u6240\u4ee5\uff0c\u5982\u679c\u4f60\u60f3\u5728 Windows \u4e0b\u4f7f\u7528 C \u548c C++ \u7f16\u7a0b\uff0c\u53ef\u4ee5\u4f7f\u7528 GBK \u7f16\u7801\u6216\u8005\u5728 WSL \u4e2d\u7f16\u8bd1\u8fd0\u884c\u3002</p>"},{"location":"os/windows/windows11/#\u4f7f\u7528-windows-10-\u6837\u5f0f\u7684\u53f3\u952e\u83dc\u5355","title":"\u4f7f\u7528 Windows 10 \u6837\u5f0f\u7684\u53f3\u952e\u83dc\u5355","text":"<p>Windows 11 \u7684\u53f3\u952e\u83dc\u5355\u4f7f\u7528\u4e86\u65b0\u7684\u6837\u5f0f\uff0c\u8fd9\u6837\u7684\u6837\u5f0f\u4e0d\u4ec5\u4e0d\u7f8e\u89c2\uff0c\u800c\u4e14\u4e0d\u597d\u7528\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 Windows 10 \u6837\u5f0f\u7684\u53f3\u952e\u83dc\u5355\u3002\u53ea\u9700\u4fee\u6539\u6ce8\u518c\u8868\u5373\u53ef\u3002</p> <p>\u4ee5\u7ba1\u7406\u5458\u8eab\u4efd\u8fd0\u884c\u7ec8\u7aef\uff0c\u7136\u540e\u8f93\u5165</p> <pre><code>reg add \"HKCU\\Software\\Classes\\CLSID\\{86ca1aa0-34aa-4e8b-a509-50c905bae2a2}\\InprocServer32\" /f /ve\n</code></pre> <p>\u7136\u540e\u91cd\u542f\u6587\u4ef6\u8d44\u6e90\u7ba1\u7406\u5668\u5373\u53ef\u3002</p> <pre><code>taskkill /f /im explorer.exe &amp; start explorer.exe\n</code></pre>"},{"location":"site/","title":"\u5efa\u7ad9\u8bbe\u8ba1 - \u76ee\u5f55","text":""},{"location":"site/#\u5efa\u7ad9\u8bbe\u8ba1---\u76ee\u5f55","title":"\u5efa\u7ad9\u8bbe\u8ba1 - \u76ee\u5f55","text":"<ul> <li> GitHub Pages</li> <li> Docker</li> <li> PHP<ul> <li> WordPress</li> <li> MediaWiki</li> </ul> </li> <li> \u6570\u636e\u5e93<ul> <li> MySQL</li> </ul> </li> <li> Nginx</li> <li> \u57df\u540d<ul> <li> \u670d\u52a1\u5668</li> <li> DNS<ul> <li> Cloudflare</li> </ul> </li> <li> SSL<ul> <li> Let's Encrypt</li> </ul> </li> <li> \u5e94\u7528<ul> <li> \u90ae\u4ef6</li> </ul> </li> <li> \u5907\u6848</li> </ul> </li> </ul>"},{"location":"site/docker/","title":"Docker","text":""},{"location":"site/docker/#docker","title":"Docker","text":"<p>Docker \u662f\u4e00\u4e2a\u5f00\u653e\u6e90\u4ee3\u7801\u7684\u5f00\u653e\u5e73\u53f0\u8f6f\u4ef6\uff0c\u7528\u4e8e\u5f00\u53d1\u5e94\u7528\u3001\u4ea4\u4ed8\u5e94\u7528\u548c\u8fd0\u884c\u5e94\u7528\u3002Docker \u5bb9\u5668\u4e0e\u865a\u62df\u673a\u7c7b\u4f3c\uff0c\u4f46\u4e8c\u8005\u5728\u539f\u7406\u4e0a\u4e0d\u540c\u3002\u5bb9\u5668\u662f\u5c06\u64cd\u4f5c\u7cfb\u7edf\u5c42\u865a\u62df\u5316\uff0c\u865a\u62df\u673a\u5219\u662f\u865a\u62df\u5316\u786c\u4ef6\uff0c\u56e0\u6b64\u5bb9\u5668\u66f4\u5177\u6709\u4fbf\u643a\u6027\u3001\u66f4\u80fd\u9ad8\u6548\u5730\u5229\u7528\u670d\u52a1\u5668\u3002 \u5bb9\u5668\u66f4\u591a\u7684\u7528\u4e8e\u8868\u793a\u8f6f\u4ef6\u7684\u4e00\u4e2a\u6807\u51c6\u5316\u5355\u5143\u3002\u7531\u4e8e\u5bb9\u5668\u7684\u6807\u51c6\u5316\uff0c\u56e0\u6b64\u5b83\u53ef\u4ee5\u65e0\u89c6\u57fa\u7840\u8bbe\u65bd\u7684\u5dee\u5f02\uff0c\u90e8\u7f72\u5230\u4efb\u4f55\u4e00\u4e2a\u5730\u65b9\u3002\u53e6\u5916\uff0cDocker \u4e5f\u4e3a\u5bb9\u5668\u63d0\u4f9b\u66f4\u5f3a\u7684\u4e1a\u754c\u7684\u9694\u79bb\u517c\u5bb9\u3002</p>"},{"location":"site/docker/#\u5b89\u88c5","title":"\u5b89\u88c5","text":""},{"location":"site/docker/#windows","title":"Windows","text":"<p>\u5728\u5b89\u88c5 Docker \u4e4b\u524d\uff0c\u9700\u8981\u5148\u5b89\u88c5 WSL2\uff0cWSL2 \u662f Windows Subsystem for Linux \u7684\u7b2c\u4e8c\u4ee3\u7248\u672c\uff0c\u5b83\u662f\u4e00\u4e2a\u5728 Windows 10 \u4e0a\u8fd0\u884c\u7684 Linux \u517c\u5bb9\u73af\u5883\u5c42\u3002</p> <p>\u5b89\u88c5\u5b8c WSL2 \u4e4b\u540e\uff0c\u5373\u53ef\u5b89\u88c5 Docker Desktop for Windows\u3002</p>"},{"location":"site/docker/#linux","title":"Linux","text":"DebianUbuntuCentOS <p>\u5982\u679c\u5b89\u88c5\u8fc7\u65e7\u7248\u672c\u7684 Docker\uff0c\u9700\u8981\u5148\u5378\u8f7d\u65e7\u7248\u672c\uff1a</p> <pre><code>sudo apt-get remove docker docker-engine docker.io containerd runc\n</code></pre> <p>\u5b89\u88c5\u4f9d\u8d56\uff1a</p> <pre><code>sudo apt-get update\nsudo apt-get install apt-transport-https ca-certificates curl gnupg lsb-release\n</code></pre> <p>\u6dfb\u52a0 Docker \u7684\u5b98\u65b9 GPG \u5bc6\u94a5\uff1a</p> <pre><code>curl -fsSL https://download.docker.com/linux/debian/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg\n</code></pre> \u7f51\u7edc\u73af\u5883\u7545\u901a\u7f51\u7edc\u73af\u5883\u4e0d\u7545\u901a <p>\u6dfb\u52a0 Docker \u7684\u5b98\u65b9\u6e90\uff1a</p> <pre><code>echo \\\n  \"deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian \\\n  $(lsb_release -cs) stable\" | sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null\n</code></pre> <p>\u6dfb\u52a0\u6e05\u534e\u5927\u5b66\u5f00\u6e90\u8f6f\u4ef6\u955c\u50cf\u7ad9\u6e90\uff1a</p> <pre><code>echo \\\n  \"deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://mirrors.tuna.tsinghua.edu.cn/docker-ce/linux/debian \\\n  $(lsb_release -cs) stable\" | sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null\n</code></pre> <p>\u5b89\u88c5 Docker Engine\uff1a</p> <pre><code>sudo apt-get update\nsudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin\n</code></pre> <p>\u5982\u679c\u5b89\u88c5\u8fc7\u65e7\u7248\u672c\u7684 Docker\uff0c\u9700\u8981\u5148\u5378\u8f7d\u65e7\u7248\u672c\uff1a</p> <pre><code>sudo apt-get remove docker docker-engine docker.io containerd runc\n</code></pre> <p>\u5b89\u88c5\u4f9d\u8d56\uff1a</p> <pre><code>sudo apt-get update\nsudo apt-get install apt-transport-https ca-certificates curl gnupg lsb-release\n</code></pre> <p>\u6dfb\u52a0 Docker \u7684\u5b98\u65b9 GPG \u5bc6\u94a5\uff1a</p> <pre><code>curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg\n</code></pre> \u7f51\u7edc\u73af\u5883\u7545\u901a\u7f51\u7edc\u73af\u5883\u4e0d\u7545\u901a <p>\u6dfb\u52a0 Docker \u7684\u5b98\u65b9\u6e90\uff1a</p> <pre><code>echo \\\n  \"deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \\\n  $(lsb_release -cs) stable\" | sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null\n</code></pre> <p>\u6dfb\u52a0\u6e05\u534e\u5927\u5b66\u5f00\u6e90\u8f6f\u4ef6\u955c\u50cf\u7ad9\u6e90\uff1a</p> <pre><code>echo \\\n  \"deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://mirrors.tuna.tsinghua.edu.cn/docker-ce/linux/ubuntu \\\n  $(lsb_release -cs) stable\" | sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null\n</code></pre> <p>\u5b89\u88c5 Docker Engine\uff1a</p> <pre><code>sudo apt-get update\nsudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin\n</code></pre> <p>\u5982\u679c\u5b89\u88c5\u8fc7\u65e7\u7248\u672c\u7684 Docker\uff0c\u9700\u8981\u5148\u5378\u8f7d\u65e7\u7248\u672c\uff1a</p> <pre><code>sudo yum remove docker \\\n              docker-client \\\n              docker-client-latest \\\n              docker-common \\\n              docker-latest \\\n              docker-latest-logrotate \\\n              docker-logrotate \\\n              docker-engine\n</code></pre> <p>\u5b89\u88c5\u4f9d\u8d56\uff1a</p> <pre><code>sudo yum install -y yum-utils \\\n  device-mapper-persistent-data \\\n  lvm2\n</code></pre> \u7f51\u7edc\u73af\u5883\u7545\u901a\u7f51\u7edc\u73af\u5883\u4e0d\u7545\u901a <p>\u6dfb\u52a0 Docker \u7684\u5b98\u65b9\u6e90\uff1a</p> <pre><code>sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo\n</code></pre> <p>\u6dfb\u52a0\u6e05\u534e\u5927\u5b66\u5f00\u6e90\u8f6f\u4ef6\u955c\u50cf\u7ad9\u6e90\uff1a</p> <pre><code>sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo\nsudo sed -i 's+https://download.docker.com+https://mirrors.tuna.tsinghua.edu.cn/docker-ce+' /etc/yum.repos.d/docker-ce.repo\n</code></pre> <p>\u5b89\u88c5 Docker Engine\uff1a</p> <pre><code>sudo yum install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin\n</code></pre>"},{"location":"site/domain/","title":"\u57df\u540d","text":""},{"location":"site/domain/#\u57df\u540d","title":"\u57df\u540d","text":"<p>\u65e2\u7136\u8981\u642d\u5efa\u7f51\u7ad9\uff0c\u603b\u662f\u7528 IP \u5730\u5740\u8bbf\u95ee\u7684\u8bdd\uff0c\u90a3\u5c31\u592a\u4e0d\u4e13\u4e1a\u4e86\u3002\u6240\u4ee5\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u57df\u540d\u3002</p>"},{"location":"site/domain/#\u4ec0\u4e48\u662f\u57df\u540d","title":"\u4ec0\u4e48\u662f\u57df\u540d","text":"<p>\u57df\u540d\u662f\u7531\u4e00\u4e32\u7528\u70b9\u5206\u9694\u7684\u540d\u5b57\u7ec4\u6210\uff0c\u6700\u53f3\u8fb9\u7684\u540d\u5b57\u662f\u6700\u9ad8\u7ea7\u522b\u7684\uff0c\u800c\u6700\u5de6\u8fb9\u7684\u540d\u5b57\u5219\u662f\u6700\u4f4e\u7ea7\u522b\u7684\u3002\u57df\u540d\u7684\u7ed3\u6784\u662f\u4ece\u53f3\u5230\u5de6\u7684\uff0c\u6700\u53f3\u8fb9\u7684\u540d\u5b57\u662f\u9876\u7ea7\u57df\u540d\uff0c\u6700\u5de6\u8fb9\u7684\u540d\u5b57\u662f\u4e3b\u673a\u540d\u3002</p> <p>\u57df\u540d\u7684\u7ed3\u6784\u4e3a\uff1a<code>\u4e3b\u673a\u540d.\u4e8c\u7ea7\u57df\u540d.\u9876\u7ea7\u57df\u540d</code>\u3002</p> <p>\u4f8b\u5982\uff0c\u672c\u7ad9\u7684\u57df\u540d\u662f <code>docs.panxuc.com</code>\uff0c\u5176\u4e2d <code>docs</code> \u662f\u4e3b\u673a\u540d\uff0c<code>panxuc</code> \u662f\u4e8c\u7ea7\u57df\u540d\uff0c<code>com</code> \u662f\u9876\u7ea7\u57df\u540d\u3002</p>"},{"location":"site/domain/#\u9009\u62e9\u57df\u540d","title":"\u9009\u62e9\u57df\u540d","text":"<p>\u57df\u540d\u7684\u9009\u62e9\u5f88\u91cd\u8981\uff0c\u5b83\u76f4\u63a5\u5173\u7cfb\u5230\u4f60\u7684\u7f51\u7ad9\u7684\u5f62\u8c61\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u57df\u540d\u5e94\u8be5\u5c3d\u91cf\u77ed\uff0c\u5c3d\u91cf\u7b80\u5355\uff0c\u5c3d\u91cf\u6709\u610f\u4e49\u3002</p> <p>\u9876\u7ea7\u57df\u540d\u6709\u5f88\u591a\u79cd\uff0c\u5176\u4e2d <code>.com</code> \u662f\u6700\u5e38\u7528\u7684\uff0c<code>.org</code> \u7528\u4e8e\u975e\u76c8\u5229\u7ec4\u7ec7\uff0c<code>.net</code> \u7528\u4e8e\u7f51\u7edc\u670d\u52a1\u63d0\u4f9b\u5546\uff0c<code>.edu</code> \u7528\u4e8e\u6559\u80b2\u673a\u6784\uff0c<code>.gov</code> \u7528\u4e8e\u653f\u5e9c\u673a\u6784\uff0c<code>.cn</code> \u7528\u4e8e\u4e2d\u56fd\u3002\u5982\u679c\u4f60\u7684\u7f51\u7ad9\u662f\u7528\u4e8e\u76c8\u5229\u7684\uff0c\u90a3\u4e48 <code>.com</code> \u662f\u6700\u597d\u7684\u9009\u62e9\u3002\u672c\u7ad9\u867d\u7136\u662f\u975e\u76c8\u5229\u7684\uff0c\u4f46\u662f\u4e5f\u9009\u62e9\u4e86 <code>.com</code>\u3002\u56e0\u4e3a <code>.com</code> \u662f\u6700\u5e38\u7528\u7684\u9876\u7ea7\u57df\u540d\uff0c\u800c\u4e14 <code>.com</code> \u4e5f\u53ef\u4ee5\u7528\u4e8e\u975e\u76c8\u5229\u7684\u7f51\u7ad9\u3002\u9664\u4e86\u8fd9\u4e9b\u5e38\u89c1\u7684\u9876\u7ea7\u57df\u540d\uff0c\u8fd8\u6709\u4e00\u4e9b\u6bd4\u8f83\u7ecf\u6d4e\u5b9e\u60e0\u7684\u9876\u7ea7\u57df\u540d\uff0c\u4f8b\u5982 <code>.xyz</code>\u3001<code>.top</code>\u3001<code>.club</code> \u7b49\u7b49\u3002</p> <p>\u4e8c\u7ea7\u57df\u540d\u5e94\u8be5\u5c3d\u91cf\u77ed\uff0c\u5c3d\u91cf\u7b80\u5355\uff0c\u5c3d\u91cf\u6709\u610f\u4e49\u3002\u4f8b\u5982\uff0c\u672c\u7ad9\u7684\u4e8c\u7ea7\u57df\u540d\u662f <code>panxuc</code>\u3002</p> <p>\u4e3b\u673a\u540d\u5e94\u8be5\u5c3d\u91cf\u77ed\uff0c\u5c3d\u91cf\u7b80\u5355\uff0c\u5c3d\u91cf\u6709\u610f\u4e49\u3002\u4f8b\u5982\uff0c\u672c\u7ad9\u7684\u4e3b\u673a\u540d\u662f <code>docs</code>\uff0c\u56e0\u4e3a\u672c\u7ad9\u662f\u4e00\u4e2a\u6587\u6863\u7f51\u7ad9\u3002</p>"},{"location":"site/domain/#\u6ce8\u518c\u57df\u540d","title":"\u6ce8\u518c\u57df\u540d","text":"<p>\u57df\u540d\u662f\u6709\u552f\u4e00\u6027\u7684\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u6211\u4eec\u9700\u8981\u901a\u8fc7\u57df\u540d\u6ce8\u518c\u5546\u6ce8\u518c\u57df\u540d\u3002\u57df\u540d\u6ce8\u518c\u5546\u4f1a\u5c06\u4f60\u6ce8\u518c\u7684\u57df\u540d\u4fe1\u606f\u63d0\u4ea4\u7ed9 ICANN\uff08\u4e92\u8054\u7f51\u540d\u79f0\u4e0e\u6570\u5b57\u5730\u5740\u5206\u914d\u673a\u6784\uff09\uff0c\u7136\u540e ICANN \u4f1a\u5c06\u4f60\u6ce8\u518c\u7684\u57df\u540d\u4fe1\u606f\u6dfb\u52a0\u5230 DNS\uff08\u57df\u540d\u7cfb\u7edf\uff09\u4e2d\u3002DNS \u662f\u4e00\u4e2a\u5206\u5e03\u5f0f\u6570\u636e\u5e93\uff0c\u5b83\u5c06\u57df\u540d\u6620\u5c04\u5230 IP \u5730\u5740\u3002\u5f53\u4f60\u5728\u6d4f\u89c8\u5668\u4e2d\u8f93\u5165\u57df\u540d\u65f6\uff0c\u6d4f\u89c8\u5668\u4f1a\u5411 DNS \u53d1\u9001\u8bf7\u6c42\uff0cDNS \u4f1a\u5c06\u57df\u540d\u6620\u5c04\u5230 IP \u5730\u5740\uff0c\u7136\u540e\u6d4f\u89c8\u5668\u5c31\u53ef\u4ee5\u901a\u8fc7 IP \u5730\u5740\u8bbf\u95ee\u7f51\u7ad9\u4e86\u3002</p> <p>\u5e38\u89c1\u7684\u57df\u540d\u6ce8\u518c\u5546\u6709\uff1a</p> <ul> <li>\u4e2d\u56fd\u5927\u9646\u5883\u5916<ul> <li> NameSilo\uff1a\u57df\u540d\u4ef7\u683c\u4f4e\uff0c\u9690\u79c1\u4fdd\u62a4\u514d\u8d39\uff0c\u652f\u6301\u652f\u4ed8\u5b9d\u4ed8\u6b3e\u3002</li> <li> NameCheap\uff1a\u57df\u540d\u4ef7\u683c\u8f83\u4f4e\uff0c\u9690\u79c1\u4fdd\u62a4\u514d\u8d39\uff0c\u4e0d\u652f\u6301\u652f\u4ed8\u5b9d\u4ed8\u6b3e\u3002</li> <li> GoDaddy\uff1a\u57df\u540d\u4ef7\u683c\u8f83\u9ad8\uff0c\u9690\u79c1\u4fdd\u62a4\u6536\u8d39\uff0c\u652f\u6301\u652f\u4ed8\u5b9d\u4ed8\u6b3e\u3002</li> </ul> </li> <li>\u4e2d\u56fd\u5927\u9646\u5883\u5185<ul> <li> \u4e07\u7f51\uff08\u963f\u91cc\u4e91\uff09</li> <li> \u817e\u8baf\u4e91</li> <li> \u534e\u4e3a\u4e91</li> </ul> </li> </ul> <p>\u4e2d\u56fd\u5927\u9646\u5883\u5185\u57df\u540d\u6ce8\u518c\u5546\u6ce8\u518c\u7684\u57df\u540d\u5747\u9700\u8981\u5907\u6848\uff0c\u9700\u8981\u4e25\u683c\u843d\u5b9e\u4e2d\u56fd\u5927\u9646\u6cd5\u5f8b\u6cd5\u89c4\u7684\u5185\u5bb9\u3002</p>"},{"location":"site/domain/dns/","title":"DNS","text":""},{"location":"site/domain/dns/#dns","title":"DNS","text":"<p>DNS\uff08Domain Name System\uff0c\u57df\u540d\u7cfb\u7edf\uff09\u662f\u4e00\u4e2a\u5206\u5e03\u5f0f\u6570\u636e\u5e93\uff0c\u5b83\u5c06\u57df\u540d\u6620\u5c04\u5230 IP \u5730\u5740\u3002\u5f53\u4f60\u5728\u6d4f\u89c8\u5668\u4e2d\u8f93\u5165\u57df\u540d\u65f6\uff0c\u6d4f\u89c8\u5668\u4f1a\u5411 DNS \u53d1\u9001\u8bf7\u6c42\uff0cDNS \u4f1a\u5c06\u57df\u540d\u6620\u5c04\u5230 IP \u5730\u5740\uff0c\u7136\u540e\u6d4f\u89c8\u5668\u5c31\u53ef\u4ee5\u901a\u8fc7 IP \u5730\u5740\u8bbf\u95ee\u7f51\u7ad9\u4e86\u3002</p>"},{"location":"site/domain/dns/#dns-\u89e3\u6790","title":"DNS \u89e3\u6790","text":"<p>DNS \u89e3\u6790\u662f\u5c06\u57df\u540d\u6620\u5c04\u5230 IP \u5730\u5740\u7684\u8fc7\u7a0b\u3002DNS \u89e3\u6790\u8fc7\u7a0b\u5982\u4e0b\uff1a</p> <pre><code>graph LR\n    Computer[\u8ba1\u7b97\u673a] --1. \u68c0\u67e5\u6d4f\u89c8\u5668\u7f13\u5b58--&gt; Computer\n    Computer --2. \u68c0\u67e5 host \u914d\u7f6e\u7f13\u5b58--&gt; Computer\n    Computer --3. \u53d1\u8d77 DNS \u89e3\u6790\u8bf7\u6c42--&gt; LocalDNS[\u672c\u5730 DNS \u670d\u52a1\u5668]\n    LocalDNS --4. \u5411\u6839 DNS \u670d\u52a1\u5668\u53d1\u8d77\u89e3\u6790\u8bf7\u6c42--&gt; RootDNS[\u6839 DNS \u670d\u52a1\u5668]\n    RootDNS --5. \u8fd4\u56de\u9876\u7ea7 DNS \u670d\u52a1\u5668\u5730\u5740--&gt; LocalDNS\n    LocalDNS --6. \u5411\u9876\u7ea7 DNS \u670d\u52a1\u5668\u53d1\u8d77\u89e3\u6790\u8bf7\u6c42--&gt; TopLevelDNS[\u9876\u7ea7 DNS \u670d\u52a1\u5668]\n    TopLevelDNS --7. \u8fd4\u56de NameServer \u670d\u52a1\u5668\u5730\u5740--&gt; LocalDNS\n    LocalDNS --8. \u5411 NameServer \u670d\u52a1\u5668\u53d1\u8d77\u89e3\u6790\u8bf7\u6c42--&gt; NameServerDNS[NameServer \u670d\u52a1\u5668]\n    NameServerDNS --9. \u8fd4\u56de\u57df\u540d\u5bf9\u5e94\u7684 IP \u5730\u5740--&gt; LocalDNS\n    LocalDNS --10. \u8fd4\u56de\u57df\u540d\u5bf9\u5e94\u7684 IP \u5730\u5740--&gt; Computer</code></pre> <ol> <li>\u8ba1\u7b97\u673a\u9996\u5148\u68c0\u67e5\u6d4f\u89c8\u5668\u7f13\u5b58\uff0c\u5982\u679c\u7f13\u5b58\u4e2d\u6709\u57df\u540d\u5bf9\u5e94\u7684 IP \u5730\u5740\uff0c\u5c31\u76f4\u63a5\u8fd4\u56de IP \u5730\u5740\uff0cDNS \u89e3\u6790\u7ed3\u675f\u3002</li> <li>\u5982\u679c\u6d4f\u89c8\u5668\u7f13\u5b58\u4e2d\u6ca1\u6709\u57df\u540d\u5bf9\u5e94\u7684 IP \u5730\u5740\uff0c\u8ba1\u7b97\u673a\u5c31\u4f1a\u68c0\u67e5 host \u914d\u7f6e\u7f13\u5b58\uff0c\u5982\u679c\u7f13\u5b58\u4e2d\u6709\u57df\u540d\u5bf9\u5e94\u7684 IP \u5730\u5740\uff0c\u5c31\u76f4\u63a5\u8fd4\u56de IP \u5730\u5740\uff0cDNS \u89e3\u6790\u7ed3\u675f\u3002</li> <li>\u5982\u679c host \u914d\u7f6e\u7f13\u5b58\u4e2d\u6ca1\u6709\u57df\u540d\u5bf9\u5e94\u7684 IP \u5730\u5740\uff0c\u8ba1\u7b97\u673a\u5c31\u4f1a\u5411\u672c\u5730 DNS \u670d\u52a1\u5668\u53d1\u8d77 DNS \u89e3\u6790\u8bf7\u6c42\u3002</li> <li>\u672c\u5730 DNS \u670d\u52a1\u5668\u4f1a\u5411\u6839 DNS \u670d\u52a1\u5668\u53d1\u8d77 DNS \u89e3\u6790\u8bf7\u6c42\u3002</li> <li>\u6839 DNS \u670d\u52a1\u5668\u4f1a\u8fd4\u56de\u9876\u7ea7 DNS \u670d\u52a1\u5668\u5730\u5740\u3002</li> <li>\u672c\u5730 DNS \u670d\u52a1\u5668\u4f1a\u5411\u9876\u7ea7 DNS \u670d\u52a1\u5668\u53d1\u8d77 DNS \u89e3\u6790\u8bf7\u6c42\u3002</li> <li>\u9876\u7ea7 DNS \u670d\u52a1\u5668\u4f1a\u8fd4\u56de NameServer \u670d\u52a1\u5668\u5730\u5740\u3002</li> <li>\u672c\u5730 DNS \u670d\u52a1\u5668\u4f1a\u5411 NameServer \u670d\u52a1\u5668\u53d1\u8d77 DNS \u89e3\u6790\u8bf7\u6c42\u3002</li> <li>NameServer \u670d\u52a1\u5668\u4f1a\u8fd4\u56de\u57df\u540d\u5bf9\u5e94\u7684 IP \u5730\u5740\u3002</li> <li>\u672c\u5730 DNS \u670d\u52a1\u5668\u4f1a\u8fd4\u56de\u57df\u540d\u5bf9\u5e94\u7684 IP \u5730\u5740\uff0c\u8ba1\u7b97\u673a\u5f97\u5230\u57df\u540d\u5bf9\u5e94\u7684 IP \u5730\u5740\uff0cDNS \u89e3\u6790\u7ed3\u675f\u3002</li> </ol>"},{"location":"site/domain/dns/#dns-\u89e3\u6790\u8bb0\u5f55","title":"DNS \u89e3\u6790\u8bb0\u5f55","text":"<p>DNS \u89e3\u6790\u8bb0\u5f55\u662f DNS \u89e3\u6790\u7684\u7ed3\u679c\u3002DNS \u89e3\u6790\u8bb0\u5f55\u5305\u542b\u4ee5\u4e0b\u51e0\u79cd\u7c7b\u578b\uff1a</p> <ul> <li>A \u8bb0\u5f55\uff1a\u5c06\u57df\u540d\u6620\u5c04\u5230 IPv4 \u5730\u5740\u3002</li> <li>AAAA \u8bb0\u5f55\uff1a\u5c06\u57df\u540d\u6620\u5c04\u5230 IPv6 \u5730\u5740\u3002</li> <li>CNAME \u8bb0\u5f55\uff1a\u5c06\u57df\u540d\u6620\u5c04\u5230\u53e6\u4e00\u4e2a\u57df\u540d\u3002</li> <li>MX \u8bb0\u5f55\uff1a\u5c06\u57df\u540d\u6620\u5c04\u5230\u90ae\u4ef6\u670d\u52a1\u5668\u3002</li> <li>NS \u8bb0\u5f55\uff1a\u5c06\u57df\u540d\u6620\u5c04\u5230 DNS \u670d\u52a1\u5668\u3002</li> <li>TXT \u8bb0\u5f55\uff1a\u5c06\u57df\u540d\u6620\u5c04\u5230\u4efb\u610f\u6587\u672c\u3002</li> <li>PTR \u8bb0\u5f55\uff1a\u5c06 IP \u5730\u5740\u6620\u5c04\u5230\u57df\u540d\u3002</li> </ul> <p>\u5176\u4f59\u7c7b\u578b\u7684 DNS \u89e3\u6790\u8bb0\u5f55\u4e0d\u518d\u8d58\u8ff0\u3002</p>"},{"location":"site/domain/dns/#cloudflare","title":"Cloudflare","text":"<p>\u4e00\u822c\u6765\u8bf4\uff0c\u57df\u540d\u6ce8\u518c\u5546\u63d0\u4f9b\u7684 DNS \u670d\u52a1\u90fd\u662f\u514d\u8d39\u7684\uff0c\u4f46\u662f\u57df\u540d\u6ce8\u518c\u5546\u63d0\u4f9b\u7684 DNS \u670d\u52a1\u4e00\u822c\u90fd\u4e0d\u662f\u5f88\u597d\uff0c\u5c24\u5176\u662f\u90a3\u4e9b\u4e2d\u56fd\u5927\u9646\u5883\u5916\u7684\u57df\u540d\u6ce8\u518c\u5546\uff0c\u5b83\u4eec\u7684 DNS \u670d\u52a1\u5728\u4e2d\u56fd\u5927\u9646\u7684\u89e3\u6790\u901f\u5ea6\u5f88\u6162\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u597d\u7528\u7684 DNS \u670d\u52a1\u3002</p> <p>Cloudflare \u662f\u4e00\u4e2a CDN\uff08Content Delivery Network\uff0c\u5185\u5bb9\u5206\u53d1\u7f51\u7edc\uff09\u670d\u52a1\u5546\uff0c\u5b83\u63d0\u4f9b\u4e86 DNS \u670d\u52a1\u3002Cloudflare \u7684 DNS \u670d\u52a1\u662f\u514d\u8d39\u7684\uff0c\u800c\u4e14 Cloudflare \u7684 DNS \u670d\u52a1\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e9b\u989d\u5916\u7684\u529f\u80fd\uff0c\u4f8b\u5982\u9632\u706b\u5899\u3001DDoS \u653b\u51fb\u9632\u62a4\u3001CDN \u52a0\u901f\u7b49\u7b49\u3002</p> <p>\u5728\u57df\u540d\u6ce8\u518c\u5546\u5904\u5c06\u57df\u540d\u7684 DNS \u670d\u52a1\u5668\u4fee\u6539\u4e3a Cloudflare \u7684 DNS \u670d\u52a1\u5668\uff0c\u7136\u540e\u5728 Cloudflare \u4e2d\u6dfb\u52a0\u57df\u540d\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528 Cloudflare \u7684 DNS \u670d\u52a1\u4e86\u3002</p>"},{"location":"site/domain/dns/#proxy","title":"Proxy","text":"<p>Cloudflare \u7684 DNS \u670d\u52a1\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e2a Proxy \u529f\u80fd\uff0c\u5b83\u53ef\u4ee5\u5c06\u57df\u540d\u6620\u5c04\u5230 Cloudflare \u7684 CDN \u670d\u52a1\u5668\uff0c\u4ece\u800c\u5b9e\u73b0 CDN \u52a0\u901f \uff08\u5bf9\u4e8e\u4e2d\u56fd\u5927\u9646\u7528\u6237\u6765\u8bf4\uff0c\u53ef\u80fd\u662f\u51cf\u901f\uff09\u3002\u4f46\u662f\u5b83\u53ef\u4ee5\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u9690\u85cf\u57df\u540d\u7684\u771f\u5b9e IP \u5730\u5740\uff0c\u8fd8\u53ef\u4ee5\u9632\u6b62 DDoS \u653b\u51fb\u3002</p>"},{"location":"site/domain/app/email/","title":"\u90ae\u4ef6","text":""},{"location":"site/domain/app/email/#\u90ae\u4ef6","title":"\u90ae\u4ef6","text":"<p>\u6709\u57df\u540d\u4e4b\u540e\uff0c\u642d\u5efa\u4e00\u4e2a\u81ea\u5df1\u7684\u90ae\u4ef6\u670d\u52a1\u662f\u4e00\u4ef6\u5f88\u9177\u7684\u4e8b\u60c5\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u4ec5\u4ec5\u901a\u8fc7\u8f6c\u53d1\u90ae\u4ef6\u6765\u5b9e\u73b0\u63a5\u6536\u90ae\u4ef6\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4f01\u4e1a\u5fae\u4fe1\u7b49\u7b2c\u4e09\u65b9\u670d\u52a1\u6765\u5b9e\u73b0\u90ae\u4ef6\u7684\u6536\u53d1\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u81ea\u5df1\u642d\u5efa\u90ae\u4ef6\u670d\u52a1\u6765\u5b9e\u73b0\u90ae\u4ef6\u7684\u6536\u53d1\u3002</p>"},{"location":"site/domain/app/email/#\u901a\u8fc7\u8f6c\u53d1\u90ae\u4ef6\u6765\u5b9e\u73b0\u63a5\u6536\u90ae\u4ef6","title":"\u901a\u8fc7\u8f6c\u53d1\u90ae\u4ef6\u6765\u5b9e\u73b0\u63a5\u6536\u90ae\u4ef6","text":"<p>\u50cf NameSilo \u8fd9\u6837\u7684\u57df\u540d\u670d\u52a1\u5546\uff0c\u63d0\u4f9b\u4e86\u514d\u8d39\u7684\u90ae\u4ef6\u8f6c\u53d1\u670d\u52a1\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a\u670d\u52a1\u6765\u5b9e\u73b0\u63a5\u6536\u90ae\u4ef6\u3002</p> <p>\u5728 NameSilo \u7684 Domain Manager \u4e2d\uff0c\u627e\u5230\u4f60\u7684\u57df\u540d\uff0c\u70b9\u51fb\u53f3\u4fa7\u7684 Options \u4e2d\u7684 Manage Email Forwarding for this domain\uff0c\u8fdb\u5165 Email Forwarding \u7ba1\u7406\u9875\u9762\u3002</p> <p>\u5982\u679c\u8be5\u57df\u540d\u4f7f\u7528\u7684\u4e0d\u662f NameSilo \u7684 DNS \u670d\u52a1\uff0c\u90a3\u4e48\u9700\u8981\u5728 DNS \u670d\u52a1\u5546\u5904\u6dfb\u52a0 MX \u8bb0\u5f55\uff0c\u5c06\u90ae\u4ef6\u8f6c\u53d1\u5230 NameSilo \u7684\u670d\u52a1\u5668\u4e0a\u3002</p> <p>\u5728 Email Forwarding \u7ba1\u7406\u9875\u9762\uff0c\u5728 Add/Change an Email Forward \u4e2d\uff0c\u586b\u5199\u4f60\u7684\u90ae\u7bb1\u5730\u5740\uff0c\u7136\u540e\u70b9\u51fb Add/Change Email Forwarding\uff0c\u5373\u53ef\u5c06\u90ae\u4ef6\u8f6c\u53d1\u5230\u4f60\u7684\u90ae\u7bb1\u3002</p> <p>\u8bbe\u7f6e\u5b8c\u6210\u540e\uff0c\u9700\u8981\u7b49\u5f85\u7ea6 30 \u5206\u949f\uff0c\u624d\u80fd\u751f\u6548\u3002</p>"},{"location":"site/domain/app/email/#\u901a\u8fc7\u4f01\u4e1a\u5fae\u4fe1\u7b49\u7b2c\u4e09\u65b9\u670d\u52a1\u6765\u5b9e\u73b0\u90ae\u4ef6\u7684\u6536\u53d1","title":"\u901a\u8fc7\u4f01\u4e1a\u5fae\u4fe1\u7b49\u7b2c\u4e09\u65b9\u670d\u52a1\u6765\u5b9e\u73b0\u90ae\u4ef6\u7684\u6536\u53d1","text":"<p>\u901a\u8fc7\u4f01\u4e1a\u5fae\u4fe1\u7b49\u7b2c\u4e09\u65b9\u670d\u52a1\u6765\u5b9e\u73b0\u90ae\u4ef6\u7684\u6536\u53d1\uff0c\u9700\u8981\u5148\u6210\u4e3a\u4e00\u4e2a\u4f01\u4e1a\u7684\u7ba1\u7406\u5458\u3002\u63a8\u8350\u81ea\u5df1\u5efa\u7acb\u4e00\u4e2a\u4f01\u4e1a\uff0c\u8fd9\u6837\u53ef\u4ee5\u514d\u8d39\u4f7f\u7528\u3002</p> <p>\u8fdb\u5165\u4f01\u4e1a\u5fae\u4fe1\u7684\u540e\u53f0\uff0c\u6dfb\u52a0\u81ea\u5df1\u7684\u57df\u540d\uff0c\u7136\u540e\u6839\u636e\u63d0\u793a\u6dfb\u52a0 MX \u8bb0\u5f55\uff0c\u5c06\u90ae\u4ef6\u8f6c\u53d1\u5230\u4f01\u4e1a\u5fae\u4fe1\u7684\u670d\u52a1\u5668\u4e0a\u3002</p> <p>\u8bbe\u7f6e\u5b8c\u6210\u540e\uff0c\u751f\u6548\u65f6\u95f4\u89c6 DNS \u670d\u52a1\u5546\u800c\u5b9a\uff0cCloudflare \u548c\u56fd\u5185\u670d\u52a1\u5546\u4e00\u822c\u90fd\u662f\u79d2\u8fc7\u3002</p> <p>\u8fd9\u79cd\u65b9\u6cd5\u7684\u4f18\u70b9\u662f\u53ef\u4ee5\u4fbf\u6377\u5730\u901a\u8fc7\u5fae\u4fe1\u6216\u4f01\u4e1a\u5fae\u4fe1\u6765\u6536\u53d1\u90ae\u4ef6\uff0c\u7f3a\u70b9\u662f\u5728\u4f01\u4e1a\u5fae\u4fe1\u5efa\u7acb\u4f01\u4e1a\u9700\u8981\u5b9e\u540d\u8ba4\u8bc1\u3002</p>"},{"location":"site/domain/app/email/#\u901a\u8fc7\u81ea\u5df1\u642d\u5efa\u90ae\u4ef6\u670d\u52a1\u6765\u5b9e\u73b0\u90ae\u4ef6\u7684\u6536\u53d1","title":"\u901a\u8fc7\u81ea\u5df1\u642d\u5efa\u90ae\u4ef6\u670d\u52a1\u6765\u5b9e\u73b0\u90ae\u4ef6\u7684\u6536\u53d1","text":"<p>\u901a\u8fc7\u81ea\u5df1\u642d\u5efa\u90ae\u4ef6\u670d\u52a1\u6765\u5b9e\u73b0\u90ae\u4ef6\u7684\u6536\u53d1\uff0c\u9700\u8981\u5148\u62e5\u6709\u4e00\u4e2a\u670d\u52a1\u5668\uff0c\u7136\u540e\u5728\u670d\u52a1\u5668\u4e0a\u5b89\u88c5\u5982 docker-mailserver \u8fd9\u6837\u7684\u90ae\u4ef6\u670d\u52a1\u3002</p>"},{"location":"tool/","title":"\u5de5\u5177\u8f6f\u4ef6 - \u76ee\u5f55","text":""},{"location":"tool/#\u5de5\u5177\u8f6f\u4ef6---\u76ee\u5f55","title":"\u5de5\u5177\u8f6f\u4ef6 - \u76ee\u5f55","text":"<ul> <li> Git</li> <li> Vim</li> <li> Visual Studio Code</li> <li> PlatformIO</li> </ul>"},{"location":"tool/git/","title":"Git","text":""},{"location":"tool/git/#git","title":"Git","text":"<p>Git\u662f\u76ee\u524d\u4e16\u754c\u4e0a\u6700\u5148\u8fdb\u7684\u5206\u5e03\u5f0f\u7248\u672c\u63a7\u5236\u7cfb\u7edf\uff0c\u53ef\u4ee5\u6709\u6548\u3001\u9ad8\u901f\u5730\u5904\u7406\u4ece\u5f88\u5c0f\u5230\u975e\u5e38\u5927\u7684\u9879\u76ee\u7248\u672c\u7ba1\u7406\u3002</p>"},{"location":"tool/git/#\u5b89\u88c5","title":"\u5b89\u88c5","text":""},{"location":"tool/git/#\u7528\u6237\u914d\u7f6e","title":"\u7528\u6237\u914d\u7f6e","text":"<p>\u5b89\u88c5\u5b8c\u6210 Git \u540e\uff0c\u9700\u8981\u8bbe\u7f6e\u7528\u6237\u4fe1\u606f\u3002</p> <pre><code>git config --global user.name \"Your Name\"\ngit config --global user.email \"email@example.com\"\n</code></pre> <p>\u6b64\u5916\uff0c\u53ef\u4ee5\u8bbe\u7f6e Git \u7684\u9ed8\u8ba4\u7f16\u8f91\u5668\u3001\u5dee\u5f02\u5206\u6790\u5de5\u5177\u7b49\u3002</p> <pre><code>git config --global core.editor vim\ngit config --global merge.tool vimdiff\n</code></pre> <p>\u5982\u679c\u60f3\u8981\u67e5\u770b\u5f53\u524d\u7684\u914d\u7f6e\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>git config --list</code> \u547d\u4ee4\uff0c\u6216\u8005\u67e5\u770b <code>~/.gitconfig</code> \u6587\u4ef6\u3002</p>"},{"location":"tool/git/#ssh-\u914d\u7f6e","title":"SSH \u914d\u7f6e","text":"<p>\u5982\u679c\u60f3\u8981\u4f7f\u7528 SSH \u534f\u8bae\u4e0e\u8fdc\u7a0b\u4ed3\u5e93\u901a\u4fe1\uff0c\u9700\u8981\u5148\u914d\u7f6e SSH \u5bc6\u94a5\u3002</p> <pre><code>ssh-keygen -t rsa -C \"email@example.com\"\n</code></pre> <p>\u7136\u540e\u5c06 <code>~/.ssh/id_rsa.pub</code> \u6587\u4ef6\u4e2d\u7684\u5185\u5bb9\u6dfb\u52a0\u5230\u8fdc\u7a0b\u4ed3\u5e93\u7684 SSH \u5bc6\u94a5\u4e2d\u3002</p>"},{"location":"tool/git/#\u521b\u5efa\u7248\u672c\u5e93","title":"\u521b\u5efa\u7248\u672c\u5e93","text":"<p>\u7248\u672c\u5e93\u53c8\u540d\u4ed3\u5e93\uff0c\u82f1\u6587\u540d repository\uff0c\u53ef\u4ee5\u7b80\u5355\u7406\u89e3\u4e3a\u4e00\u4e2a\u76ee\u5f55\uff0c\u8fd9\u4e2a\u76ee\u5f55\u91cc\u9762\u7684\u6240\u6709\u6587\u4ef6\u90fd\u53ef\u4ee5\u88ab Git \u7ba1\u7406\u8d77\u6765\uff0c\u6bcf\u4e2a\u6587\u4ef6\u7684\u4fee\u6539\u3001\u5220\u9664\uff0cGit \u90fd\u80fd\u8ddf\u8e2a\uff0c\u4ee5\u4fbf\u4efb\u4f55\u65f6\u523b\u90fd\u53ef\u4ee5\u8ffd\u8e2a\u5386\u53f2\uff0c\u6216\u8005\u5728\u5c06\u6765\u67d0\u4e2a\u65f6\u523b\u53ef\u4ee5\u201c\u8fd8\u539f\u201d\u3002</p>"},{"location":"tool/git/#\u521d\u59cb\u5316\u7248\u672c\u5e93","title":"\u521d\u59cb\u5316\u7248\u672c\u5e93","text":"<p>\u8981\u4f7f\u7528 Git \u7ba1\u7406\u4e00\u4e2a\u6587\u4ef6\u5939\uff0c\u9996\u5148\u9700\u8981\u8fdb\u5165\u8fd9\u4e2a\u6587\u4ef6\u5939\uff0c\u7136\u540e\u6267\u884c <code>git init</code> \u547d\u4ee4\u3002</p> <pre><code>git init\n</code></pre> <p>\u8fd9\u6837\u5c31\u5728\u5f53\u524d\u76ee\u5f55\u4e0b\u521b\u5efa\u4e86\u4e00\u4e2a\u540d\u4e3a <code>.git</code> \u7684\u6587\u4ef6\u5939\uff0c\u8fd9\u4e2a\u6587\u4ef6\u5939\u662f Git \u6765\u8ddf\u8e2a\u7ba1\u7406\u7248\u672c\u5e93\u7684\u3002</p> <p>\u5f53\u7136\uff0c\u4e5f\u53ef\u4ee5\u4ece\u8fdc\u7a0b\u4ed3\u5e93\u514b\u9686\u4e00\u4e2a\u7248\u672c\u5e93\u5230\u672c\u5730\u3002</p> <pre><code>git clone &lt;\u8fdc\u7a0b\u4ed3\u5e93\u5730\u5740&gt;\n</code></pre> <p>\u901a\u5e38\uff0c\u8fdc\u7a0b\u4ed3\u5e93\u5730\u5740\u4ee5 <code>https://</code> \u6216 <code>git://</code> \u5f00\u5934\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528 <code>ssh</code> \u534f\u8bae\u3002</p>"},{"location":"tool/git/#\u6dfb\u52a0\u6587\u4ef6","title":"\u6dfb\u52a0\u6587\u4ef6","text":"<p>\u5728\u7248\u672c\u5e93\u4e2d\u6dfb\u52a0\u6587\u4ef6\uff0c\u9700\u8981\u5148\u5c06\u6587\u4ef6\u6dfb\u52a0\u5230\u6682\u5b58\u533a\u3002</p> <pre><code>git add &lt;\u6587\u4ef6\u540d&gt;\n</code></pre> <p>\u5982\u679c\u60f3\u8981\u4e00\u6b21\u6027\u5c06\u6240\u6709\u4fee\u6539\u8fc7\u7684\u6587\u4ef6\u90fd\u6dfb\u52a0\u5230\u6682\u5b58\u533a\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>git add .</code> \u547d\u4ee4\u3002</p>"},{"location":"tool/git/#\u63d0\u4ea4\u6587\u4ef6","title":"\u63d0\u4ea4\u6587\u4ef6","text":"<p>\u5c06\u6682\u5b58\u533a\u7684\u6587\u4ef6\u63d0\u4ea4\u5230\u5f53\u524d\u5206\u652f\u3002</p> <pre><code>git commit -m \"\u63d0\u4ea4\u8bf4\u660e\"\n</code></pre> <p>\u63d0\u4ea4\u8bf4\u660e\u5e94\u8be5\u9075\u5faa\u4e00\u5b9a\u7684\u683c\u5f0f\uff0c\u8ba9\u4eba\u4e00\u76ee\u4e86\u7136\u3002</p>"},{"location":"tool/git/#\u67e5\u770b\u72b6\u6001","title":"\u67e5\u770b\u72b6\u6001","text":"<p>\u53ef\u4ee5\u4f7f\u7528 <code>git status</code> \u547d\u4ee4\u67e5\u770b\u5f53\u524d\u7248\u672c\u5e93\u7684\u72b6\u6001\u3002</p> <pre><code>git status\n</code></pre> <p>\u5982\u679c\u5f53\u524d\u7248\u672c\u5e93\u6ca1\u6709\u4efb\u4f55\u4fee\u6539\uff0c\u5219\u4f1a\u663e\u793a <code>nothing to commit, working tree clean</code>\u3002\u53cd\u4e4b\uff0c\u5219\u4f1a\u663e\u793a\u54ea\u4e9b\u6587\u4ef6\u88ab\u4fee\u6539\u4e86\uff0c\u4f46\u662f\u8fd8\u6ca1\u6709\u63d0\u4ea4\u3002\u4f8b\u5982\uff1a</p> <pre><code>On branch master\nChanges not staged for commit:\n  (use \"git add &lt;file&gt;...\" to update what will be committed)\n  (use \"git restore &lt;file&gt;...\" to discard changes in working directory)\n  modified:   git.md\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\n</code></pre>"},{"location":"tool/git/#\u67e5\u770b\u4fee\u6539","title":"\u67e5\u770b\u4fee\u6539","text":"<p>\u53ef\u4ee5\u4f7f\u7528 <code>git diff</code> \u547d\u4ee4\u67e5\u770b\u6587\u4ef6\u7684\u4fee\u6539\u3002</p> <pre><code>git diff &lt;\u6587\u4ef6\u540d&gt;\n</code></pre> <p>\u5982\u679c\u60f3\u8981\u67e5\u770b\u5df2\u7ecf\u6682\u5b58\u8d77\u6765\u7684\u6587\u4ef6\u7684\u4fee\u6539\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>git diff --cached</code> \u547d\u4ee4\u3002</p> <p>\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u53ef\u4ee5\u770b\u5230 <code>git.md</code> \u6587\u4ef6\u88ab\u4fee\u6539\u4e86\uff0c\u4f46\u662f\u8fd8\u6ca1\u6709\u63d0\u4ea4\u3002<code>git diff</code> \u4f1a\u8f93\u51fa\uff1a</p> <pre><code>diff --git a/git.md b/git.md\nindex 5b6d6a6..b2b2b2b 100644\n--- a/git.md\n+++ b/git.md\n@@ -1,4 +1,4 @@\n-# Git\n+# Git - \u7248\u672c\u63a7\u5236\u7cfb\u7edf\n\n Git\u662f\u76ee\u524d\u4e16\u754c\u4e0a\u6700\u5148\u8fdb\u7684\u5206\u5e03\u5f0f\u7248\u672c\u63a7\u5236\u7cfb\u7edf\uff0c\u53ef\u4ee5\u6709\u6548\u3001\u9ad8\u901f\u5730\u5904\u7406\u4ece\u5f88\u5c0f\u5230\u975e\u5e38\u5927\u7684\u9879\u76ee\u7248\u672c\u7ba1\u7406\u3002\n</code></pre> <p>\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c<code>git.md</code> \u6587\u4ef6\u7684\u7b2c\u4e00\u884c\u88ab\u4fee\u6539\u4e86\u3002\u5728\u77e5\u9053\u4e86\u6587\u4ef6\u7684\u4fee\u6539\u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u51b3\u5b9a\u662f\u5426\u8981\u63d0\u4ea4\u4e86\u3002</p>"},{"location":"tool/git/#\u67e5\u770b\u5386\u53f2","title":"\u67e5\u770b\u5386\u53f2","text":"<p>\u53ef\u4ee5\u4f7f\u7528 <code>git log</code> \u547d\u4ee4\u67e5\u770b\u63d0\u4ea4\u5386\u53f2\u3002</p> <pre><code>git log\n</code></pre> <p>\u5982\u679c\u60f3\u8981\u67e5\u770b\u6bcf\u6b21\u63d0\u4ea4\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>git log --pretty=fuller</code> \u547d\u4ee4\u3002</p> <pre><code>commit 5b6\nAuthor: Your Name &lt;email@example.com&gt;\nDate:   Mon Oct 18 21:00:00 2021 +0800\n\n        \u63d0\u4ea4\u8bf4\u660e\n</code></pre> <p>\u5982\u679c\u60f3\u8981\u67e5\u770b\u6bcf\u6b21\u63d0\u4ea4\u7684\u7b80\u7565\u4fe1\u606f\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>git log --pretty=oneline</code> \u547d\u4ee4\u6216 <code>git log --oneline</code> \u547d\u4ee4\u3002</p> <pre><code>5b6 \u63d0\u4ea4\u8bf4\u660e\n</code></pre>"},{"location":"tool/git/#\u56de\u9000\u7248\u672c","title":"\u56de\u9000\u7248\u672c","text":"<p>\u5982\u679c\u6211\u4eec\u53d1\u73b0\u63d0\u4ea4\u7684\u7248\u672c\u6709\u95ee\u9898\uff0c\u60f3\u8981\u56de\u9000\u7248\u672c\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\uff1a</p> <ul> <li><code>git reset --hard HEAD^</code>\uff1a\u56de\u9000\u5230\u4e0a\u4e00\u4e2a\u7248\u672c\u3002</li> <li><code>git reset --hard HEAD^^</code>\uff1a\u56de\u9000\u5230\u4e0a\u4e0a\u4e00\u4e2a\u7248\u672c\u3002</li> <li><code>git reset --hard HEAD~100</code>\uff1a\u56de\u9000\u5230\u4e0a 100 \u4e2a\u7248\u672c\u3002</li> <li><code>git reset --hard &lt;commit_id&gt;</code>\uff1a\u56de\u9000\u5230\u6307\u5b9a\u7684\u7248\u672c\u3002</li> <li><code>git reset --hard origin/master</code>\uff1a\u56de\u9000\u5230\u8fdc\u7a0b\u4ed3\u5e93\u7684\u7248\u672c\u3002</li> <li><code>git reset --hard</code>\uff1a\u56de\u9000\u5230\u6700\u65b0\u7684\u7248\u672c\u3002</li> </ul> <p>\u53ef\u4ee5\u4f7f\u7528 <code>git log</code> \u547d\u4ee4\u67e5\u770b\u6bcf\u4e2a\u7248\u672c\u7684 <code>commit_id</code>\uff0c\u4f7f\u7528 <code>git reflog</code> \u547d\u4ee4\u67e5\u770b\u6bcf\u4e00\u6b21\u547d\u4ee4\u3002</p>"},{"location":"tool/git/#\u64a4\u9500\u4fee\u6539","title":"\u64a4\u9500\u4fee\u6539","text":"<p>\u5982\u679c\u6211\u4eec\u53d1\u73b0\u4fee\u6539\u7684\u6587\u4ef6\u6709\u95ee\u9898\uff0c\u60f3\u8981\u64a4\u9500\u4fee\u6539\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\uff1a</p> <ul> <li><code>git restore &lt;\u6587\u4ef6\u540d&gt;</code>\uff1a\u64a4\u9500\u5de5\u4f5c\u533a\u7684\u4fee\u6539\u3002</li> <li><code>git restore --staged &lt;\u6587\u4ef6\u540d&gt;</code>\uff1a\u64a4\u9500\u6682\u5b58\u533a\u7684\u4fee\u6539\u3002</li> <li><code>git checkout -- &lt;\u6587\u4ef6\u540d&gt;</code>\uff1a\u64a4\u9500\u5de5\u4f5c\u533a\u7684\u4fee\u6539\u3002</li> <li><code>git reset HEAD &lt;\u6587\u4ef6\u540d&gt;</code>\uff1a\u64a4\u9500\u6682\u5b58\u533a\u7684\u4fee\u6539\u3002</li> </ul>"},{"location":"tool/git/#\u5220\u9664\u6587\u4ef6","title":"\u5220\u9664\u6587\u4ef6","text":"<p>\u4e00\u822c\u800c\u8a00\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5728\u6587\u4ef6\u7ba1\u7406\u5668\u4e2d\u5220\u9664\u6587\u4ef6\uff0c\u7136\u540e\u4f7f\u7528 <code>git add</code> \u547d\u4ee4\u5c06\u5220\u9664\u64cd\u4f5c\u6dfb\u52a0\u5230\u6682\u5b58\u533a\uff0c\u518d\u4f7f\u7528 <code>git commit</code> \u547d\u4ee4\u63d0\u4ea4\u3002</p> <p>\u5f53\u7136\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528 <code>git rm</code> \u547d\u4ee4\u5220\u9664\u6587\u4ef6\uff0c\u7136\u540e\u4f7f\u7528 <code>git commit</code> \u547d\u4ee4\u63d0\u4ea4\u3002</p> <pre><code>git rm &lt;\u6587\u4ef6\u540d&gt;\n</code></pre> <p>\u5982\u679c\u60f3\u8981\u6062\u590d\u5220\u9664\u7684\u6587\u4ef6\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>git restore &lt;\u6587\u4ef6\u540d&gt;</code> \u547d\u4ee4\u3002</p>"},{"location":"tool/git/#\u8fdc\u7a0b\u4ed3\u5e93","title":"\u8fdc\u7a0b\u4ed3\u5e93","text":"<p>\u5982\u679c\u60f3\u8981\u6dfb\u52a0\u8fdc\u7a0b\u4ed3\u5e93\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>git remote add</code> \u547d\u4ee4\u3002</p> <pre><code>git remote add &lt;\u8fdc\u7a0b\u4ed3\u5e93\u540d&gt; &lt;\u8fdc\u7a0b\u4ed3\u5e93\u5730\u5740&gt;\n</code></pre> <p>\u5982\u679c\u60f3\u8981\u5c06\u672c\u5730\u4ed3\u5e93\u7684\u63d0\u4ea4\u63a8\u9001\u5230\u8fdc\u7a0b\u4ed3\u5e93\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>git push</code> \u547d\u4ee4\u3002</p> <pre><code>git push &lt;\u8fdc\u7a0b\u4ed3\u5e93\u540d&gt; &lt;\u5206\u652f\u540d&gt;\n</code></pre> <p>\u5982\u679c\u60f3\u8981\u5c06\u8fdc\u7a0b\u4ed3\u5e93\u514b\u9686\u5230\u672c\u5730\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>git clone</code> \u547d\u4ee4\u3002</p> <pre><code>git clone &lt;\u8fdc\u7a0b\u4ed3\u5e93\u5730\u5740&gt;\n</code></pre> <p>\u5982\u679c\u60f3\u8981\u5c06\u8fdc\u7a0b\u4ed3\u5e93\u7684\u4fee\u6539\u62c9\u53d6\u5230\u672c\u5730\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>git pull</code> \u547d\u4ee4\u3002</p> <pre><code>git pull &lt;\u8fdc\u7a0b\u4ed3\u5e93\u540d&gt; &lt;\u5206\u652f\u540d&gt;\n</code></pre> <p>\u5982\u679c\u60f3\u8981\u67e5\u770b\u8fdc\u7a0b\u4ed3\u5e93\u7684\u4fe1\u606f\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>git remote</code> \u547d\u4ee4\uff0c\u5982\u679c\u60f3\u8981\u67e5\u770b\u8fdc\u7a0b\u4ed3\u5e93\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>git remote -v</code> \u547d\u4ee4\u3002</p> <pre><code>git remote\n</code></pre> <p>\u5982\u679c\u60f3\u8981\u5220\u9664\u8fdc\u7a0b\u4ed3\u5e93\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>git remote rm</code> \u547d\u4ee4\u3002</p> <pre><code>git remote rm &lt;\u8fdc\u7a0b\u4ed3\u5e93\u540d&gt;\n</code></pre> <p>\u5982\u679c\u60f3\u8981\u91cd\u547d\u540d\u8fdc\u7a0b\u4ed3\u5e93\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>git remote rename</code> \u547d\u4ee4\u3002</p> <pre><code>git remote rename &lt;\u8fdc\u7a0b\u4ed3\u5e93\u540d&gt; &lt;\u65b0\u7684\u8fdc\u7a0b\u4ed3\u5e93\u540d&gt;\n</code></pre> <p>\u5982\u679c\u60f3\u8981\u67e5\u770b\u8fdc\u7a0b\u4ed3\u5e93\u7684\u5206\u652f\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>git branch -r</code> \u547d\u4ee4\u3002</p> <pre><code>git branch -r\n</code></pre>"},{"location":"tool/git/#\u5206\u652f\u7ba1\u7406","title":"\u5206\u652f\u7ba1\u7406","text":""},{"location":"tool/git/#\u521b\u5efa\u5206\u652f","title":"\u521b\u5efa\u5206\u652f","text":"<p>\u5728 Git \u4e2d\uff0c\u4f7f\u7528 <code>git branch</code> \u547d\u4ee4\u53ef\u4ee5\u67e5\u770b\u5f53\u524d\u5206\u652f\u3002</p> <pre><code>git branch\n</code></pre> <p>\u800c\u4f7f\u7528 <code>git branch &lt;\u5206\u652f\u540d&gt;</code> \u547d\u4ee4\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5206\u652f\u3002</p> <pre><code>git branch &lt;\u5206\u652f\u540d&gt;\n</code></pre> <p>\u8f83\u65b0\u7684 Git \u7248\u672c\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>git switch -c &lt;\u5206\u652f\u540d&gt;</code> \u547d\u4ee4\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5206\u652f\u3002</p> <pre><code>git switch -c &lt;\u5206\u652f\u540d&gt;\n</code></pre>"},{"location":"tool/git/#\u5207\u6362\u5206\u652f","title":"\u5207\u6362\u5206\u652f","text":"<p>\u4f7f\u7528 <code>git checkout &lt;\u5206\u652f\u540d&gt;</code> \u547d\u4ee4\u53ef\u4ee5\u5207\u6362\u5230\u6307\u5b9a\u7684\u5206\u652f\u3002</p> <pre><code>git checkout &lt;\u5206\u652f\u540d&gt;\n</code></pre> <p>\u8f83\u65b0\u7684 Git \u7248\u672c\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>git switch &lt;\u5206\u652f\u540d&gt;</code> \u547d\u4ee4\u5207\u6362\u5230\u6307\u5b9a\u7684\u5206\u652f\u3002</p> <pre><code>git switch &lt;\u5206\u652f\u540d&gt;\n</code></pre>"},{"location":"tool/git/#\u5408\u5e76\u5206\u652f","title":"\u5408\u5e76\u5206\u652f","text":"<p>\u4f7f\u7528 <code>git merge &lt;\u5206\u652f\u540d&gt;</code> \u547d\u4ee4\u53ef\u4ee5\u5c06\u6307\u5b9a\u7684\u5206\u652f\u5408\u5e76\u5230\u5f53\u524d\u5206\u652f\u3002</p> <pre><code>git merge &lt;\u5206\u652f\u540d&gt;\n</code></pre>"},{"location":"tool/git/#\u5220\u9664\u5206\u652f","title":"\u5220\u9664\u5206\u652f","text":"<p>\u4f7f\u7528 <code>git branch -d &lt;\u5206\u652f\u540d&gt;</code> \u547d\u4ee4\u53ef\u4ee5\u5220\u9664\u6307\u5b9a\u7684\u5206\u652f\u3002</p> <pre><code>git branch -d &lt;\u5206\u652f\u540d&gt;\n</code></pre>"},{"location":"tool/git/#\u67e5\u770b\u5206\u652f","title":"\u67e5\u770b\u5206\u652f","text":"<p>\u4f7f\u7528 <code>git log --graph</code> \u547d\u4ee4\u53ef\u4ee5\u67e5\u770b\u5206\u652f\u5408\u5e76\u56fe\u3002</p> <pre><code>git log --graph\n</code></pre> <p>\u5b83\u4f1a\u8f93\u51fa\u7c7b\u4f3c\u4e0b\u9762\u7684\u5185\u5bb9\uff1a</p> <pre><code>*   commit 5b6\n|\\  Merge: 4b2 3a1\n| | Author: Your Name &lt;email@example.com&gt;\n| | Date:   Mon Oct 18 21:00:00 2021 +0800\n| |\n| |     \u5408\u5e76\u5206\u652f\n| |\n| * commit 4b2\n| | Author: Your Name &lt;email@example.com&gt;\n| | Date:   Mon Oct 18 21:00:00 2021 +0800\n| |\n| |     \u63d0\u4ea4\u8bf4\u660e\n| |\n| * commit 3a1\n|/  Author: Your Name &lt;email@example.com&gt;\n|   Date:   Mon Oct 18 21:00:00 2021 +0800\n|\n|       \u63d0\u4ea4\u8bf4\u660e\n|\n* commit 2b3\n| Author: Your Name &lt;email@example.com&gt;\n| Date:   Mon Oct 18 21:00:00 2021 +0800\n|\n|     \u63d0\u4ea4\u8bf4\u660e\n|\n* commit 1a4\n</code></pre>"},{"location":"tool/git/#\u89e3\u51b3\u51b2\u7a81","title":"\u89e3\u51b3\u51b2\u7a81","text":"<p>\u5f53\u6211\u4eec\u5728\u5408\u5e76\u5206\u652f\u65f6\uff0c\u5982\u679c\u4e24\u4e2a\u5206\u652f\u90fd\u4fee\u6539\u4e86\u540c\u4e00\u4e2a\u6587\u4ef6\u7684\u540c\u4e00\u884c\uff0c\u5c31\u4f1a\u4ea7\u751f\u51b2\u7a81\u3002\u6b64\u65f6\uff0cGit \u4f1a\u63d0\u793a\u6211\u4eec\u624b\u52a8\u89e3\u51b3\u51b2\u7a81\u3002</p> <pre><code>Auto-merging git.md\nCONFLICT (content): Merge conflict in git.md\nAutomatic merge failed; fix conflicts and then commit the result.\n</code></pre> <p>\u6b64\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u770b\u51b2\u7a81\u7684\u6587\u4ef6\u7684\u5185\u5bb9\uff0c\u4f1a\u53d1\u73b0\u51b2\u7a81\u7684\u5730\u65b9\u4f1a\u88ab\u6807\u8bb0\u51fa\u6765\u3002</p> <pre><code>&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD\n# Git\n=======\n# Git - \u7248\u672c\u63a7\u5236\u7cfb\u7edf\n&gt;&gt;&gt;&gt;&gt;&gt;&gt; &lt;\u5206\u652f\u540d&gt;\n</code></pre> <p>Git \u4f1a\u4f7f\u7528 <code>&lt;&lt;&lt;&lt;&lt;&lt;&lt;</code>\u3001<code>=======</code>\u3001<code>&gt;&gt;&gt;&gt;&gt;&gt;&gt;</code> \u6807\u8bb0\u51fa\u4e0d\u540c\u5206\u652f\u7684\u5185\u5bb9\u3002\u9762\u5bf9\u8fd9\u79cd\u60c5\u51b5\uff0c\u6700\u597d\u4f7f\u7528\u652f\u6301 Git \u7684\u7f16\u8f91\u5668\uff0c\u4f8b\u5982 VS Code\uff0c\u5b83\u4f1a\u81ea\u52a8\u6807\u8bb0\u51fa\u51b2\u7a81\u7684\u5730\u65b9\uff0c\u6211\u4eec\u53ea\u9700\u8981\u624b\u52a8\u4fee\u6539\u3002</p> <p>\u4fee\u6539\u5b8c\u6210\u540e\uff0c\u4f7f\u7528 <code>git add</code> \u547d\u4ee4\u5c06\u4fee\u6539\u6dfb\u52a0\u5230\u6682\u5b58\u533a\uff0c\u518d\u4f7f\u7528 <code>git commit</code> \u547d\u4ee4\u63d0\u4ea4\u5373\u53ef\u3002</p>"},{"location":"tool/git/#\u6807\u7b7e\u7ba1\u7406","title":"\u6807\u7b7e\u7ba1\u7406","text":""},{"location":"tool/git/#\u521b\u5efa\u6807\u7b7e","title":"\u521b\u5efa\u6807\u7b7e","text":"<p>\u4f7f\u7528 <code>git tag &lt;\u6807\u7b7e\u540d&gt;</code> \u547d\u4ee4\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u6807\u7b7e\u3002</p> <pre><code>git tag &lt;\u6807\u7b7e\u540d&gt;\n</code></pre> <p>\u5982\u679c\u60f3\u8981\u67e5\u770b\u6240\u6709\u6807\u7b7e\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>git tag</code> \u547d\u4ee4\u3002</p> <pre><code>git tag\n</code></pre> <p>\u5982\u679c\u60f3\u8981\u67e5\u770b\u6807\u7b7e\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>git show &lt;\u6807\u7b7e\u540d&gt;</code> \u547d\u4ee4\u3002</p> <pre><code>git show &lt;\u6807\u7b7e\u540d&gt;\n</code></pre>"},{"location":"tool/git/#\u5220\u9664\u6807\u7b7e","title":"\u5220\u9664\u6807\u7b7e","text":"<p>\u4f7f\u7528 <code>git tag -d &lt;\u6807\u7b7e\u540d&gt;</code> \u547d\u4ee4\u53ef\u4ee5\u5220\u9664\u6307\u5b9a\u7684\u6807\u7b7e\u3002</p> <pre><code>git tag -d &lt;\u6807\u7b7e\u540d&gt;\n</code></pre>"},{"location":"tool/git/#\u63a8\u9001\u6807\u7b7e","title":"\u63a8\u9001\u6807\u7b7e","text":"<p>\u4f7f\u7528 <code>git push origin &lt;\u6807\u7b7e\u540d&gt;</code> \u547d\u4ee4\u53ef\u4ee5\u5c06\u6307\u5b9a\u7684\u6807\u7b7e\u63a8\u9001\u5230\u8fdc\u7a0b\u4ed3\u5e93\u3002</p> <pre><code>git push origin &lt;\u6807\u7b7e\u540d&gt;\n</code></pre> <p>\u5982\u679c\u60f3\u8981\u4e00\u6b21\u6027\u5c06\u6240\u6709\u6807\u7b7e\u90fd\u63a8\u9001\u5230\u8fdc\u7a0b\u4ed3\u5e93\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>git push origin --tags</code> \u547d\u4ee4\u3002</p> <pre><code>git push origin --tags\n</code></pre>"},{"location":"tool/git/#\u5220\u9664\u8fdc\u7a0b\u6807\u7b7e","title":"\u5220\u9664\u8fdc\u7a0b\u6807\u7b7e","text":"<p>\u4f7f\u7528 <code>git push origin :refs/tags/&lt;\u6807\u7b7e\u540d&gt;</code> \u547d\u4ee4\u53ef\u4ee5\u5220\u9664\u8fdc\u7a0b\u4ed3\u5e93\u7684\u6307\u5b9a\u6807\u7b7e\u3002</p> <pre><code>git push origin :refs/tags/&lt;\u6807\u7b7e\u540d&gt;\n</code></pre>"},{"location":"tool/git/#\u6dfb\u52a0\u5b50\u4ed3\u5e93","title":"\u6dfb\u52a0\u5b50\u4ed3\u5e93","text":"<p>\u5982\u679c\u60f3\u8981\u5c06\u4e00\u4e2a\u4ed3\u5e93\u4f5c\u4e3a\u53e6\u4e00\u4e2a\u4ed3\u5e93\u7684\u5b50\u4ed3\u5e93\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>git submodule</code> \u6216\u8005 <code>git subtree</code> \u547d\u4ee4\u3002\u4e2a\u4eba\u8ba4\u4e3a <code>git subtree</code> \u547d\u4ee4\u66f4\u597d\u7528\u4e00\u4e9b\u3002\u56e0\u4e3a <code>git submodule</code> \u547d\u4ee4\u4f1a\u5728\u7236\u4ed3\u5e93\u4e2d\u521b\u5efa\u4e00\u4e2a <code>.gitmodules</code> \u6587\u4ef6\uff0c\u800c <code>git subtree</code> \u547d\u4ee4\u4e0d\u4f1a\uff0c\u5b83\u51e0\u4e4e\u662f\u900f\u660e\u7684\u3002</p>"},{"location":"tool/git/#\u6dfb\u52a0\u5b50\u4ed3\u5e93_1","title":"\u6dfb\u52a0\u5b50\u4ed3\u5e93","text":"<p>\u4f7f\u7528 <code>git subtree add --prefix=&lt;\u5b50\u4ed3\u5e93\u76ee\u5f55&gt; &lt;\u5b50\u4ed3\u5e93\u5730\u5740&gt; &lt;\u5b50\u4ed3\u5e93\u5206\u652f&gt;</code> \u547d\u4ee4\u53ef\u4ee5\u5c06\u4e00\u4e2a\u4ed3\u5e93\u4f5c\u4e3a\u53e6\u4e00\u4e2a\u4ed3\u5e93\u7684\u5b50\u4ed3\u5e93\u3002</p> <pre><code>git subtree add --prefix=&lt;\u5b50\u4ed3\u5e93\u76ee\u5f55&gt; &lt;\u5b50\u4ed3\u5e93\u5730\u5740&gt; &lt;\u5b50\u4ed3\u5e93\u5206\u652f&gt;\n</code></pre> <p>\u672c\u4ed3\u5e93\u5c31\u5728 <code>/docs/coursework/daa</code> \u76ee\u5f55\u4e0b\u6dfb\u52a0\u4e86\u5b50\u4ed3\u5e93 <code>Panxuc/DataAndAlgorithm-Homework</code>\u3002\u6545\u800c\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u5c06\u5176\u6dfb\u52a0\u4e3a\u5b50\u4ed3\u5e93\u3002</p> <pre><code>git subtree add --prefix=docs/coursework/daa https://github.com/Panxuc/DataAndAlgorithm-Homework.git main\n</code></pre>"},{"location":"tool/git/#\u66f4\u65b0\u5b50\u4ed3\u5e93","title":"\u66f4\u65b0\u5b50\u4ed3\u5e93","text":"<p>\u4f7f\u7528 <code>git subtree pull --prefix=&lt;\u5b50\u4ed3\u5e93\u76ee\u5f55&gt; &lt;\u5b50\u4ed3\u5e93\u5730\u5740&gt; &lt;\u5b50\u4ed3\u5e93\u5206\u652f&gt;</code> \u547d\u4ee4\u53ef\u4ee5\u66f4\u65b0\u5b50\u4ed3\u5e93\u3002</p> <pre><code>git subtree pull --prefix=&lt;\u5b50\u4ed3\u5e93\u76ee\u5f55&gt; &lt;\u5b50\u4ed3\u5e93\u5730\u5740&gt; &lt;\u5b50\u4ed3\u5e93\u5206\u652f&gt;\n</code></pre> <p>\u5728\u672c\u4ed3\u5e93\u4e2d\uff0c\u6bcf\u5f53\u4ed3\u5e93 <code>Panxuc/DataAndAlgorithm-Homework</code> \u66f4\u65b0\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u66f4\u65b0\u5b50\u4ed3\u5e93\u3002</p> <pre><code>git subtree pull --prefix=docs/coursework/daa https://github.com/Panxuc/DataAndAlgorithm-Homework.git main\n</code></pre>"},{"location":"tool/git/#\u63a8\u9001\u5b50\u4ed3\u5e93","title":"\u63a8\u9001\u5b50\u4ed3\u5e93","text":"<p>\u4f7f\u7528 <code>git subtree push --prefix=&lt;\u5b50\u4ed3\u5e93\u76ee\u5f55&gt; &lt;\u5b50\u4ed3\u5e93\u5730\u5740&gt; &lt;\u5b50\u4ed3\u5e93\u5206\u652f&gt;</code> \u547d\u4ee4\u53ef\u4ee5\u63a8\u9001\u5b50\u4ed3\u5e93\u3002</p> <pre><code>git subtree push --prefix=&lt;\u5b50\u4ed3\u5e93\u76ee\u5f55&gt; &lt;\u5b50\u4ed3\u5e93\u5730\u5740&gt; &lt;\u5b50\u4ed3\u5e93\u5206\u652f&gt;\n</code></pre> <p>\u5728\u672c\u4ed3\u5e93\u4e2d\uff0c\u5982\u679c\u5bf9 <code>/docs/coursework/daa</code> \u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\u8fdb\u884c\u4e86\u4fee\u6539\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u63a8\u9001\u5b50\u4ed3\u5e93\u3002</p> <pre><code>git subtree push --prefix=docs/coursework/daa https://github.com/Panxuc/DataAndAlgorithm-Homework.git main\n</code></pre>"},{"location":"tool/git/#\u56fe\u5f62\u5316\u754c\u9762","title":"\u56fe\u5f62\u5316\u754c\u9762","text":"<p>\u867d\u7136 Git \u81ea\u5e26\u4e86\u547d\u4ee4\u884c\u5de5\u5177\uff0c\u4f46\u662f\u5904\u4e8e\u65b9\u4fbf\u4f7f\u7528\u7684\u8003\u8651\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u56fe\u5f62\u5316\u754c\u9762\u6765\u7ba1\u7406\u7248\u672c\u5e93\u3002</p> <p>VS Code \u662f\u4e00\u4e2a\u975e\u5e38\u597d\u7528\u7684\u7f16\u8f91\u5668\uff0c\u5b83\u4e5f\u652f\u6301 Git\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 VS Code \u6765\u7ba1\u7406\u7248\u672c\u5e93\u3002</p> <p>\u5728 VS Code \u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528 Ctrl+Shift+G+G \u5feb\u6377\u952e\u6253\u5f00 Git \u7ba1\u7406\u754c\u9762\u3002</p>"},{"location":"tool/platformio/","title":"PlatformIO","text":""},{"location":"tool/platformio/#platformio","title":"PlatformIO","text":""},{"location":"tool/platformio/#platformioini","title":"<code>platformio.ini</code>","text":"<p><code>platformio.ini</code> \u662f PlatformIO \u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u7528\u4e8e\u914d\u7f6e\u9879\u76ee\u7684\u7f16\u8bd1\u73af\u5883\u3001\u4f9d\u8d56\u5e93\u7b49\u3002</p>"},{"location":"tool/platformio/#\u53ef\u914d\u7f6e\u9879","title":"\u53ef\u914d\u7f6e\u9879","text":"<ul> <li><code>env_default</code> \u9ed8\u8ba4\u7684\u7f16\u8bd1\u73af\u5883\u3002</li> <li><code>platform</code> \u7f16\u8bd1\u73af\u5883\u6240\u4f7f\u7528\u7684\u5e73\u53f0\uff0c\u5982 <code>espressif32</code>\u3002</li> <li><code>board</code> \u7f16\u8bd1\u73af\u5883\u6240\u4f7f\u7528\u7684\u5f00\u53d1\u677f\uff0c\u5982 <code>esp32dev</code>\u3002</li> <li><code>framework</code> \u7f16\u8bd1\u73af\u5883\u6240\u4f7f\u7528\u7684\u6846\u67b6\uff0c\u5982 <code>arduino</code>\u3002</li> <li><code>monitor_speed</code> \u4e32\u53e3\u76d1\u89c6\u5668\u7684\u6ce2\u7279\u7387\u3002</li> <li><code>build_flags</code> \u7f16\u8bd1\u65f6\u7684\u53c2\u6570\u3002</li> <li><code>board_build.partitions</code> \u5206\u533a\u8868\u6587\u4ef6\u3002</li> </ul>"},{"location":"tool/platformio/#\u5e38\u89c1\u95ee\u9898","title":"\u5e38\u89c1\u95ee\u9898","text":""},{"location":"tool/platformio/#\u5982\u4f55\u4f7f\u7528-esp32-s3-devkitc-1-n8r8-\u7684-psram","title":"\u5982\u4f55\u4f7f\u7528 ESP32-S3-DevKitC-1-N8R8 \u7684 PSRAM\uff1f","text":"<p>ESP32-S3-DevKitC-1-N8R8 \u7684 PSRAM \u662f 8MB OT \u7684\uff0c\u9700\u8981\u5728\u7f16\u8bd1\u65f6\u6dfb\u52a0 <code>-mfix-esp32-psram-cache-issue</code> \u53c2\u6570\u3002\u540c\u65f6\uff0c\u9700\u8981\u5c06 <code>board_build.arduino.memory_type</code> \u8bbe\u7f6e\u4e3a <code>qio_opi</code>\u3002</p> platformio.ini<pre><code>[env:esp32-s3-devkitc-1]\nplatform = espressif32\nboard = esp32-s3-devkitc-1\nframework = arduino\nmonitor_speed = 115200\nbuild_flags =\n    -DBOARD_HAS_PSRAM\n    -mfix-esp32-psram-cache-issue\nboard_build.partitions = partitions.csv\nboard_build.arduino.memory_type = qio_opi\nboard_build.f_flash = 80000000L\nboard_build.flash_mode = qio\nboard_upload.flash_size = 8MB\n</code></pre> <p>\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c PlatformIO \u4e0d\u652f\u6301 OT \u7684 Flash\uff0c\u6545\u800c ESP32-S3-DevKitC-1-N16R8V \u4e4b\u7c7b\u7684\u5f00\u53d1\u677f\u65e0\u6cd5\u4f7f\u7528 PlatformIO \u8fdb\u884c\u5f00\u53d1\u3002</p>"},{"location":"tool/vim/","title":"Vim","text":""},{"location":"tool/vim/#vim","title":"Vim","text":"<p>Vim \u662f\u4ece vi \u53d1\u5c55\u51fa\u6765\u7684\u4e00\u4e2a\u6587\u672c\u7f16\u8f91\u5668\u3002\u5176\u4ee3\u7801\u8865\u5b8c\u3001\u7f16\u8bd1\u53ca\u9519\u8bef\u8df3\u8f6c\u7b49\u65b9\u4fbf\u7f16\u7a0b\u7684\u529f\u80fd\u7279\u522b\u4e30\u5bcc\uff0c\u5728\u7a0b\u5e8f\u5458\u4e2d\u88ab\u5e7f\u6cdb\u4f7f\u7528\u3002\u548c Emacs \u5e76\u5217\u6210\u4e3a\u7c7b Unix \u7cfb\u7edf\u7528\u6237\u6700\u559c\u6b22\u7684\u7f16\u8f91\u5668\u3002</p>"},{"location":"web/","title":"\u7f51\u9875\u524d\u7aef - \u76ee\u5f55","text":""},{"location":"web/#\u7f51\u9875\u524d\u7aef---\u76ee\u5f55","title":"\u7f51\u9875\u524d\u7aef - \u76ee\u5f55","text":"<ul> <li> HTML</li> <li> CSS<ul> <li> Bootstrap</li> <li> Tailwind CSS</li> <li> Sass</li> </ul> </li> <li> JavaScript<ul> <li> TypeScript</li> <li> Node.js</li> <li> jQuery</li> <li> React</li> <li> Vue.js</li> <li> Three.js</li> <li> Vite</li> <li> Electron</li> </ul> </li> </ul>"},{"location":"web/html/","title":"HTML","text":""},{"location":"web/html/#html","title":"HTML","text":"<p>\u8d85\u6587\u672c\u6807\u8bb0\u8bed\u8a00\uff08HyperText Markup Language\uff0cHTML\uff09\u662f\u4e00\u79cd\u7528\u4e8e\u521b\u5efa\u7f51\u9875\u7684\u6807\u51c6\u6807\u8bb0\u8bed\u8a00\u3002</p> <p>HTML \u5143\u7d20\u662f\u6784\u5efa\u7f51\u7ad9\u7684\u57fa\u77f3\u3002HTML \u5141\u8bb8\u5d4c\u5165\u56fe\u50cf\u4e0e\u5bf9\u8c61\uff0c\u5e76\u4e14\u53ef\u4ee5\u7528\u4e8e\u521b\u5efa\u4ea4\u4e92\u5f0f\u8868\u5355\uff0c\u5b83\u88ab\u7528\u6765\u7ed3\u6784\u5316\u4fe1\u606f\u2014\u2014\u4f8b\u5982\u6807\u9898\u3001\u6bb5\u843d\u548c\u5217\u8868\u7b49\u7b49\uff0c\u4e5f\u53ef\u7528\u6765\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u63cf\u8ff0\u6587\u6863\u7684\u5916\u89c2\u548c\u8bed\u4e49\u3002</p> <p>HTML \u53ef\u4ee5\u5d4c\u5165\u5982 JavaScript \u7684\u811a\u672c\u8bed\u8a00\uff0c\u5b83\u4eec\u4f1a\u5f71\u54cd HTML \u7f51\u9875\u7684\u884c\u4e3a\u3002\u7f51\u9875\u6d4f\u89c8\u5668\u4e5f\u53ef\u4ee5\u5f15\u7528\u5c42\u53e0\u6837\u5f0f\u8868\uff08CSS\uff09\u6765\u5b9a\u4e49\u6587\u672c\u548c\u5176\u5b83\u5143\u7d20\u7684\u5916\u89c2\u4e0e\u5e03\u5c40\u3002</p>"},{"location":"web/html/#\u57fa\u672c\u7ed3\u6784","title":"\u57fa\u672c\u7ed3\u6784","text":"\u57fa\u672c\u7ed3\u6784<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"zh-CN\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"UTF-8\"&gt;\n  &lt;title&gt;\u6807\u9898&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  &lt;h1&gt;\u6807\u9898&lt;/h1&gt;\n  &lt;p&gt;\u6bb5\u843d&lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <ul> <li><code>&lt;!DOCTYPE html&gt;</code>\uff1a\u6587\u6863\u7c7b\u578b\uff0c\u544a\u8bc9\u6d4f\u89c8\u5668\u4f7f\u7528 HTML5 \u89c4\u8303\u89e3\u6790\u6587\u6863\u3002</li> <li><code>&lt;html lang=\"zh-CN\"&gt;</code>\uff1a\u6839\u5143\u7d20\uff0c\u544a\u8bc9\u6d4f\u89c8\u5668\u6587\u6863\u4f7f\u7528\u7684\u8bed\u8a00\u3002</li> <li><code>&lt;head&gt;</code>\uff1a\u6587\u6863\u5934\u90e8\uff0c\u5305\u542b\u6587\u6863\u7684\u5143\u6570\u636e\u3002</li> <li><code>&lt;meta charset=\"UTF-8\"&gt;</code>\uff1a\u5b57\u7b26\u7f16\u7801\uff0c\u544a\u8bc9\u6d4f\u89c8\u5668\u6587\u6863\u4f7f\u7528\u7684\u5b57\u7b26\u7f16\u7801\u3002</li> <li><code>&lt;title&gt;</code>\uff1a\u6587\u6863\u6807\u9898\uff0c\u663e\u793a\u5728\u6d4f\u89c8\u5668\u7684\u6807\u9898\u680f\u6216\u9875\u9762\u6807\u7b7e\u4e0a\u3002</li> <li><code>&lt;body&gt;</code>\uff1a\u6587\u6863\u4e3b\u4f53\uff0c\u5305\u542b\u53ef\u89c1\u7684\u9875\u9762\u5185\u5bb9\u3002</li> <li><code>&lt;h1&gt;</code>\uff1a\u6807\u9898\uff0c\u4ece 1 \u5230 6 \u5206\u522b\u8868\u793a\u4e0d\u540c\u7ea7\u522b\u7684\u6807\u9898\u3002</li> <li><code>&lt;p&gt;</code>\uff1a\u6bb5\u843d\uff0c\u8868\u793a\u4e00\u6bb5\u6587\u672c\u3002</li> </ul>"},{"location":"web/html/basic/","title":"\u57fa\u672c\u5143\u7d20","text":""},{"location":"web/html/basic/#\u57fa\u672c\u5143\u7d20","title":"\u57fa\u672c\u5143\u7d20","text":"<p>HTML \u5143\u7d20\u662f\u4ece\u5f00\u59cb\u6807\u7b7e\u5230\u7ed3\u675f\u6807\u7b7e\u7684\u6240\u6709\u4ee3\u7801\u3002</p> <p>HTML \u6807\u7b7e\u901a\u5e38\u662f\u6210\u5bf9\u51fa\u73b0\u7684\uff0c\u6bd4\u5982 <code>&lt;p&gt;</code> \u548c <code>&lt;/p&gt;</code>\uff0c\u4e5f\u6709\u7684\u6807\u7b7e\u662f\u81ea\u95ed\u5408\u7684\uff0c\u6bd4\u5982 <code>&lt;br&gt;</code>\u3002</p>"},{"location":"web/html/basic/#\u6807\u9898","title":"\u6807\u9898\u6807\u9898","text":"<p>\u6807\u9898\u5143\u7d20\u4ece <code>&lt;h1&gt;</code> \u5230 <code>&lt;h6&gt;</code>\uff0c\u5206\u522b\u8868\u793a\u4e0d\u540c\u7ea7\u522b\u7684\u6807\u9898\u3002</p> \u6807\u9898<pre><code>&lt;h1&gt;\u6807\u9898&lt;/h1&gt;\n&lt;h2&gt;\u6807\u9898&lt;/h2&gt;\n&lt;h3&gt;\u6807\u9898&lt;/h3&gt;\n&lt;h4&gt;\u6807\u9898&lt;/h4&gt;\n&lt;h5&gt;\u6807\u9898&lt;/h5&gt;\n&lt;h6&gt;\u6807\u9898&lt;/h6&gt;\n</code></pre> \u6807\u9898 \u6807\u9898 \u6807\u9898 \u6807\u9898 \u6807\u9898"},{"location":"web/html/basic/#\u6c34\u5e73\u7ebf","title":"\u6c34\u5e73\u7ebf","text":"<p>\u53ef\u4ee5\u5728\u6807\u9898\u4e0b\u9762\u6dfb\u52a0\u4e00\u6761\u6c34\u5e73\u7ebf\u3002</p> \u6c34\u5e73\u7ebf<pre><code>&lt;hr&gt;\n</code></pre>"},{"location":"web/html/basic/#\u6bb5\u843d","title":"\u6bb5\u843d","text":"<p>\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\uff0c\u5c31\u662f\u6bb5\u843d\u3002</p> \u6bb5\u843d<pre><code>&lt;p&gt;\u6bb5\u843d&lt;/p&gt;\n</code></pre> <p>\u6bb5\u843d</p>"},{"location":"web/html/basic/#\u6362\u884c\u7b26","title":"\u6362\u884c\u7b26","text":"<p>\u53ef\u4ee5\u5728\u6bb5\u843d\u4e2d\u6dfb\u52a0\u6362\u884c\u7b26\u3002</p> \u6362\u884c\u7b26<pre><code>&lt;p&gt;\u7b2c\u4e00\u884c&lt;br&gt;\u7b2c\u4e8c\u884c&lt;/p&gt;\n</code></pre> <p>\u7b2c\u4e00\u884c\u7b2c\u4e8c\u884c</p>"},{"location":"web/html/basic/#\u6587\u672c\u683c\u5f0f\u5316","title":"\u6587\u672c\u683c\u5f0f\u5316","text":"<p>\u53ef\u4ee5\u4f7f\u7528 <code>&lt;b&gt;</code>\u3001<code>&lt;strong&gt;</code>\u3001<code>&lt;i&gt;</code>\u3001<code>&lt;em&gt;</code>\u3001<code>&lt;mark&gt;</code>\u3001<code>&lt;small&gt;</code>\u3001<code>&lt;del&gt;</code>\u3001<code>&lt;ins&gt;</code>\u3001<code>&lt;sub&gt;</code>\u3001<code>&lt;sup&gt;</code> \u6807\u7b7e\u5bf9\u6587\u672c\u8fdb\u884c\u683c\u5f0f\u5316\u3002</p> \u6587\u672c\u683c\u5f0f\u5316<pre><code>&lt;p&gt;\n  &lt;b&gt;\u7c97\u4f53&lt;/b&gt;\n  &lt;strong&gt;\u7c97\u4f53&lt;/strong&gt;\n  &lt;i&gt;\u659c\u4f53&lt;/i&gt;\n  &lt;em&gt;\u659c\u4f53&lt;/em&gt;\n  &lt;mark&gt;\u9ad8\u4eae&lt;/mark&gt;\n  &lt;small&gt;\u5c0f\u53f7&lt;/small&gt;\n  &lt;del&gt;\u5220\u9664&lt;/del&gt;\n  &lt;ins&gt;\u63d2\u5165&lt;/ins&gt;\n  &lt;sub&gt;\u4e0b\u6807&lt;/sub&gt;\n  &lt;sup&gt;\u4e0a\u6807&lt;/sup&gt;\n&lt;/p&gt;\n</code></pre> <p> \u7c97\u4f53 \u7c97\u4f53 \u659c\u4f53 \u659c\u4f53 \u9ad8\u4eae \u5c0f\u53f7 \u5220\u9664 \u63d2\u5165 <sub>\u4e0b\u6807</sub> <sup>\u4e0a\u6807</sup> </p>"},{"location":"web/html/basic/#\u94fe\u63a5","title":"\u94fe\u63a5","text":"<p>\u94fe\u63a5\u5143\u7d20\u7528\u4e8e\u5728\u7f51\u9875\u4e2d\u6dfb\u52a0\u94fe\u63a5\u3002</p> \u94fe\u63a5<pre><code>&lt;a href=\"https://www.panxuc.com\"&gt;Xuc Pan \u7684\u4e3b\u9875&lt;/a&gt;\n</code></pre> Xuc Pan \u7684\u4e3b\u9875"},{"location":"web/html/basic/#\u951a\u70b9","title":"\u951a\u70b9","text":"<p>\u53ef\u4ee5\u5728\u7f51\u9875\u4e2d\u6dfb\u52a0\u951a\u70b9\uff0c\u7136\u540e\u901a\u8fc7\u94fe\u63a5\u8df3\u8f6c\u5230\u951a\u70b9\u3002</p> \u951a\u70b9<pre><code>&lt;a href=\"#anchor\"&gt;\u951a\u70b9&lt;/a&gt;\n&lt;p id=\"anchor\"&gt;\u951a\u70b9&lt;/p&gt;\n</code></pre> \u951a\u70b9 <p>\u951a\u70b9</p>"},{"location":"web/html/basic/#\u56fe\u50cf\u94fe\u63a5","title":"\u56fe\u50cf\u94fe\u63a5","text":"<p>\u53ef\u4ee5\u5728\u7f51\u9875\u4e2d\u6dfb\u52a0\u56fe\u50cf\u94fe\u63a5\u3002</p> \u56fe\u50cf\u94fe\u63a5<pre><code>&lt;a href=\"https://www.panxuc.com\"&gt;\n  &lt;img src=\"https://docs.panxuc.com/assets/favicon.png\" alt=\"Xuc Pan\"&gt;\n&lt;/a&gt;\n</code></pre>"},{"location":"web/html/basic/#\u4e0b\u8f7d\u94fe\u63a5","title":"\u4e0b\u8f7d\u94fe\u63a5","text":"<p>\u53ef\u4ee5\u5728\u7f51\u9875\u4e2d\u6dfb\u52a0\u4e0b\u8f7d\u94fe\u63a5\u3002</p> \u4e0b\u8f7d\u94fe\u63a5<pre><code>&lt;a href=\"https://docs.panxuc.com/assets/favicon.png\" download=\"favicon.png\"&gt;\u4e0b\u8f7d&lt;/a&gt;\n</code></pre> \u4e0b\u8f7d"},{"location":"web/html/basic/#target-\u5c5e\u6027","title":"<code>target</code> \u5c5e\u6027","text":"<p>\u53ef\u4ee5\u4f7f\u7528 <code>target</code> \u5c5e\u6027\u6307\u5b9a\u94fe\u63a5\u7684\u6253\u5f00\u65b9\u5f0f\u3002</p> <ul> <li><code>_self</code>\uff1a\u9ed8\u8ba4\u503c\uff0c\u5728\u5f53\u524d\u7a97\u53e3\u6253\u5f00\u94fe\u63a5\u3002</li> <li><code>_blank</code>\uff1a\u5728\u65b0\u7a97\u53e3\u6253\u5f00\u94fe\u63a5\u3002</li> <li><code>_parent</code>\uff1a\u5728\u7236\u7a97\u53e3\u6253\u5f00\u94fe\u63a5\u3002</li> <li><code>_top</code>\uff1a\u5728\u9876\u5c42\u7a97\u53e3\u6253\u5f00\u94fe\u63a5\u3002</li> </ul> target \u5c5e\u6027<pre><code>&lt;a href=\"https://www.panxuc.com\" target=\"_blank\"&gt;\u65b0\u7a97\u53e3&lt;/a&gt;\n&lt;a href=\"https://www.panxuc.com\" target=\"_parent\"&gt;\u7236\u7a97\u53e3&lt;/a&gt;\n&lt;a href=\"https://www.panxuc.com\" target=\"_top\"&gt;\u9876\u5c42\u7a97\u53e3&lt;/a&gt;\n</code></pre> \u65b0\u7a97\u53e3 \u7236\u7a97\u53e3 \u9876\u5c42\u7a97\u53e3"},{"location":"web/html/basic/#title-\u5c5e\u6027","title":"<code>title</code> \u5c5e\u6027","text":"<p>\u53ef\u4ee5\u4f7f\u7528 <code>title</code> \u5c5e\u6027\u6307\u5b9a\u94fe\u63a5\u7684\u6807\u9898\uff0c\u8fd9\u6837\uff0c\u9f20\u6807\u60ac\u505c\u5728\u94fe\u63a5\u4e0a\u65f6\u4f1a\u663e\u793a\u6807\u9898\u3002</p> title \u5c5e\u6027<pre><code>&lt;a href=\"https://www.panxuc.com\" title=\"Xuc Pan \u7684\u4e3b\u9875\"&gt;Xuc Pan \u7684\u4e3b\u9875&lt;/a&gt;\n</code></pre> Xuc Pan \u7684\u4e3b\u9875"},{"location":"web/html/basic/#rel-\u5c5e\u6027","title":"<code>rel</code> \u5c5e\u6027","text":"<p>\u53ef\u4ee5\u4f7f\u7528 <code>rel</code> \u5c5e\u6027\u6307\u5b9a\u94fe\u63a5\u4e0e\u5f53\u524d\u6587\u6863\u4e4b\u95f4\u7684\u5173\u7cfb\u3002</p> <ul> <li><code>alternate</code>\uff1a\u5f53\u524d\u6587\u6863\u7684\u66ff\u4ee3\u7248\u672c\u3002</li> <li><code>author</code>\uff1a\u5f53\u524d\u6587\u6863\u7684\u4f5c\u8005\u3002</li> <li><code>bookmark</code>\uff1a\u5f53\u524d\u6587\u6863\u7684\u4e66\u7b7e\u3002</li> <li><code>help</code>\uff1a\u5f53\u524d\u6587\u6863\u7684\u5e2e\u52a9\u3002</li> <li><code>license</code>\uff1a\u5f53\u524d\u6587\u6863\u7684\u8bb8\u53ef\u8bc1\u3002</li> <li><code>next</code>\uff1a\u5f53\u524d\u6587\u6863\u7684\u4e0b\u4e00\u7ae0\u8282\u3002</li> <li><code>nofollow</code>\uff1a\u5f53\u524d\u6587\u6863\u7684\u94fe\u63a5\u4e0d\u5e94\u8be5\u88ab\u641c\u7d22\u5f15\u64ce\u8ffd\u8e2a\u3002</li> <li><code>noreferrer</code>\uff1a\u5f53\u524d\u6587\u6863\u7684\u94fe\u63a5\u4e0d\u5e94\u8be5\u88ab\u641c\u7d22\u5f15\u64ce\u8ffd\u8e2a\uff0c\u5e76\u4e14\u4e0d\u5e94\u8be5\u5411\u94fe\u63a5\u7684\u9875\u9762\u53d1\u9001 HTTP \u5934\u90e8\u3002</li> <li><code>prefetch</code>\uff1a\u5f53\u524d\u6587\u6863\u7684\u9884\u52a0\u8f7d\u3002</li> <li><code>prev</code>\uff1a\u5f53\u524d\u6587\u6863\u7684\u4e0a\u4e00\u7ae0\u8282\u3002</li> <li><code>search</code>\uff1a\u5f53\u524d\u6587\u6863\u7684\u641c\u7d22\u529f\u80fd\u3002</li> <li><code>tag</code>\uff1a\u5f53\u524d\u6587\u6863\u7684\u6807\u7b7e\u3002</li> </ul> rel \u5c5e\u6027<pre><code>&lt;a href=\"https://www.panxuc.com\" rel=\"author\"&gt;Xuc Pan \u7684\u4e3b\u9875&lt;/a&gt;\n</code></pre> Xuc Pan \u7684\u4e3b\u9875"},{"location":"web/html/basic/#\u56fe\u50cf","title":"\u56fe\u50cf","text":"<p>\u56fe\u50cf\u5143\u7d20\u7528\u4e8e\u5728\u7f51\u9875\u4e2d\u6dfb\u52a0\u56fe\u50cf\u3002</p> \u56fe\u50cf<pre><code>&lt;img src=\"https://docs.panxuc.com/assets/favicon.png\" alt=\"Xuc Pan\"&gt;\n</code></pre>"},{"location":"web/html/basic/#src-\u5c5e\u6027","title":"<code>src</code> \u5c5e\u6027","text":"<p>\u53ef\u4ee5\u4f7f\u7528 <code>src</code> \u5c5e\u6027\u6307\u5b9a\u56fe\u50cf\u7684 URL\u3002</p> src \u5c5e\u6027<pre><code>&lt;img src=\"https://docs.panxuc.com/assets/favicon.png\" alt=\"Xuc Pan\"&gt;\n</code></pre>"},{"location":"web/html/basic/#alt-\u5c5e\u6027","title":"<code>alt</code> \u5c5e\u6027","text":"<p>\u53ef\u4ee5\u4f7f\u7528 <code>alt</code> \u5c5e\u6027\u6307\u5b9a\u56fe\u50cf\u7684\u66ff\u4ee3\u6587\u672c\uff0c\u8fd9\u6837\uff0c\u5f53\u56fe\u50cf\u65e0\u6cd5\u663e\u793a\u65f6\uff0c\u4f1a\u663e\u793a\u66ff\u4ee3\u6587\u672c\u3002</p> alt \u5c5e\u6027<pre><code>&lt;img src=\"https://docs.panxuc.com/assets/notexist.png\" alt=\"\u66ff\u4ee3\u6587\u672c\"&gt;\n</code></pre>"},{"location":"web/html/basic/#width-\u5c5e\u6027\u548c-height-\u5c5e\u6027","title":"<code>width</code> \u5c5e\u6027\u548c <code>height</code> \u5c5e\u6027","text":"<p>\u53ef\u4ee5\u4f7f\u7528 <code>width</code> \u5c5e\u6027\u548c <code>height</code> \u5c5e\u6027\u6307\u5b9a\u56fe\u50cf\u7684\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u3002</p> width \u5c5e\u6027\u548c height \u5c5e\u6027<pre><code>&lt;img src=\"https://docs.panxuc.com/assets/favicon.png\" alt=\"Xuc Pan\" width=\"32\" height=\"32\"&gt;\n</code></pre>"},{"location":"web/html/head/","title":"&lt;head&gt; \u5934\u90e8","text":""},{"location":"web/html/head/#\u5934\u90e8","title":"<code>&lt;head&gt;</code> \u5934\u90e8","text":"<p><code>&lt;head&gt;</code> \u5143\u7d20\u5305\u542b\u4e86\u6240\u6709\u5934\u90e8\u6807\u7b7e\u5143\u7d20\u3002\u5934\u90e8\u6807\u7b7e\u5143\u7d20\u5305\u542b\u4e86\u6587\u6863\u7684\u5143\u6570\u636e\uff0c\u4e0d\u4f1a\u5728\u7f51\u9875\u4e2d\u663e\u793a\u3002</p> <p>\u53ef\u4ee5\u6dfb\u52a0\u5728\u5934\u90e8\u533a\u57df\u7684\u5143\u7d20\u6807\u7b7e\u6709\uff1a</p> <ul> <li><code>&lt;title&gt;</code>\uff1a\u5b9a\u4e49\u6587\u6863\u7684\u6807\u9898\uff0c\u663e\u793a\u5728\u6d4f\u89c8\u5668\u7684\u6807\u9898\u680f\u6216\u9875\u9762\u6807\u7b7e\u4e0a\u3002</li> <li><code>&lt;base&gt;</code>\uff1a\u5b9a\u4e49\u9875\u9762\u4e2d\u6240\u6709\u94fe\u63a5\u7684\u9ed8\u8ba4\u5730\u5740\u6216\u9ed8\u8ba4\u76ee\u6807\u3002</li> <li><code>&lt;link&gt;</code>\uff1a\u5b9a\u4e49\u6587\u6863\u4e0e\u5916\u90e8\u8d44\u6e90\u7684\u5173\u7cfb\u3002</li> <li><code>&lt;meta&gt;</code>\uff1a\u5b9a\u4e49\u6587\u6863\u7684\u5143\u6570\u636e\u3002</li> <li><code>&lt;style&gt;</code>\uff1a\u5b9a\u4e49\u6587\u6863\u7684\u6837\u5f0f\u4fe1\u606f\u3002</li> <li><code>&lt;script&gt;</code>\uff1a\u5b9a\u4e49\u5ba2\u6237\u7aef\u811a\u672c\u3002</li> <li><code>&lt;noscript&gt;</code>\uff1a\u5b9a\u4e49\u5728\u811a\u672c\u672a\u88ab\u6267\u884c\u65f6\u7684\u66ff\u4ee3\u5185\u5bb9\u3002</li> </ul>"},{"location":"web/html/head/#\u6807\u9898","title":"<code>&lt;title&gt;</code> \u6807\u9898","text":"<p><code>&lt;title&gt;</code> \u5143\u7d20\u5b9a\u4e49\u6587\u6863\u7684\u6807\u9898\uff0c\u663e\u793a\u5728\u6d4f\u89c8\u5668\u7684\u6807\u9898\u680f\u6216\u9875\u9762\u6807\u7b7e\u4e0a\u3002</p> \u6807\u9898<pre><code>&lt;title&gt;\u6807\u9898&lt;/title&gt;\n</code></pre>"},{"location":"web/html/head/#\u57fa\u7840","title":"<code>&lt;base&gt;</code> \u57fa\u7840","text":"<p><code>&lt;base&gt;</code> \u5143\u7d20\u4e3a\u8be5 HTML \u6587\u6863\u4e2d\u6240\u6709\u7684\u94fe\u63a5\u89c4\u5b9a\u9ed8\u8ba4\u5730\u5740\u6216\u9ed8\u8ba4\u76ee\u6807\u3002</p> \u57fa\u7840<pre><code>&lt;base href=\"https://www.panxuc.com/\" target=\"_blank\"&gt;\n</code></pre>"},{"location":"web/html/head/#\u94fe\u63a5","title":"<code>&lt;link&gt;</code> \u94fe\u63a5","text":"<p><code>&lt;link&gt;</code> \u5143\u7d20\u5b9a\u4e49\u6587\u6863\u4e0e\u5916\u90e8\u8d44\u6e90\u7684\u5173\u7cfb\u3002</p> \u94fe\u63a5<pre><code>&lt;link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\"&gt;\n</code></pre>"},{"location":"web/html/head/#\u5143\u6570\u636e","title":"<code>&lt;meta&gt;</code> \u5143\u6570\u636e","text":"<p><code>&lt;meta&gt;</code> \u5143\u7d20\u5b9a\u4e49\u6587\u6863\u7684\u5143\u6570\u636e\u3002</p> \u5143\u6570\u636e<pre><code>&lt;meta charset=\"UTF-8\"&gt; &lt;!-- \u5b57\u7b26\u7f16\u7801 --&gt;\n&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt; &lt;!-- \u89c6\u53e3 --&gt;\n&lt;meta name=\"keywords\" content=\"HTML, CSS, JavaScript\"&gt; &lt;!-- \u5173\u952e\u5b57 --&gt;\n&lt;meta name=\"description\" content=\"HTML \u662f\u4e00\u79cd\u7528\u4e8e\u521b\u5efa\u7f51\u9875\u7684\u6807\u51c6\u6807\u8bb0\u8bed\u8a00\u3002\"&gt; &lt;!-- \u63cf\u8ff0 --&gt;\n&lt;meta name=\"author\" content=\"Xuc Pan\"&gt; &lt;!-- \u4f5c\u8005 --&gt;\n&lt;meta name=\"generator\" content=\"VS Code\"&gt; &lt;!-- \u751f\u6210\u5668 --&gt;\n&lt;meta http-equiv=\"refresh\" content=\"3;url=https://www.panxuc.com\"&gt; &lt;!-- \u5237\u65b0 --&gt;\n</code></pre>"},{"location":"web/html/head/#\u6837\u5f0f","title":"<code>&lt;style&gt;</code> \u6837\u5f0f","text":"<p><code>&lt;style&gt;</code> \u5143\u7d20\u5b9a\u4e49\u6587\u6863\u7684\u6837\u5f0f\u4fe1\u606f\u3002</p> \u6837\u5f0f<pre><code>&lt;style&gt;\n  body {\n    background-color: #f0f0f0;\n  }\n&lt;/style&gt;\n</code></pre>"},{"location":"web/html/head/#\u811a\u672c","title":"<code>&lt;script&gt;</code> \u811a\u672c","text":"<p><code>&lt;script&gt;</code> \u5143\u7d20\u5b9a\u4e49\u5ba2\u6237\u7aef\u811a\u672c\uff0c\u6bd4\u5982 JavaScript\u3002</p> \u811a\u672c<pre><code>&lt;script&gt;\n  console.log('Hello World!');\n&lt;/script&gt;\n</code></pre>"},{"location":"web/html/head/#\u66ff\u4ee3\u5185\u5bb9","title":"<code>&lt;noscript&gt;</code> \u66ff\u4ee3\u5185\u5bb9","text":"<p><code>&lt;noscript&gt;</code> \u5143\u7d20\u5b9a\u4e49\u5728\u811a\u672c\u672a\u88ab\u6267\u884c\u65f6\u7684\u66ff\u4ee3\u5185\u5bb9\u3002</p> \u66ff\u4ee3\u5185\u5bb9<pre><code>&lt;noscript&gt;\n  &lt;p&gt;\u8bf7\u542f\u7528 JavaScript\u3002&lt;/p&gt;\n&lt;/noscript&gt;\n</code></pre>"},{"location":"web/html/input/","title":"&lt;input&gt; \u8f93\u5165","text":""},{"location":"web/html/input/#\u8f93\u5165","title":"<code>&lt;input&gt;</code> \u8f93\u5165","text":"<p>\u4e0d\u540c\u6d4f\u89c8\u5668\u5bf9 <code>&lt;input&gt;</code> \u7684\u9ed8\u8ba4\u6837\u5f0f\u4e0d\u540c\uff0c\u4e0d\u662f\u6240\u6709\u6d4f\u89c8\u5668\u90fd\u652f\u6301\u6240\u6709\u7684 <code>&lt;input&gt;</code> \u7c7b\u578b\u3002\u53ef\u4ee5\u8bd5\u7740\u5728\u4e0d\u540c\u7684\u6d4f\u89c8\u5668\u4e2d\u67e5\u770b\u4e0b\u9762\u7684\u793a\u4f8b\u3002</p> \u6587\u672c\uff08\u9ed8\u8ba4\u503c\uff09<pre><code>&lt;input type=\"text\" placeholder=\"\u6587\u672c\"&gt;\n</code></pre> \u6309\u94ae<pre><code>&lt;input type=\"button\" value=\"\u6309\u94ae\"&gt;\n</code></pre> \u591a\u9009<pre><code>&lt;input type=\"checkbox\" name=\"checkbox\" id=\"checkbox1\" checked&gt;\n&lt;label for=\"checkbox1\"&gt;\u591a\u9009&lt;/label&gt;\n&lt;input type=\"checkbox\" name=\"checkbox\" id=\"checkbox2\"&gt;\n&lt;label for=\"checkbox2\"&gt;\u591a\u9009&lt;/label&gt;\n</code></pre> \u591a\u9009 \u591a\u9009 \u989c\u8272<pre><code>&lt;input type=\"color\" value=\"#000000\"&gt;\n</code></pre> \u65e5\u671f<pre><code>&lt;input type=\"date\" value=\"2019-01-01\"&gt;\n</code></pre> \u65e5\u671f\u65f6\u95f4<pre><code>&lt;input type=\"datetime-local\" value=\"2019-01-01T00:00:00\"&gt;\n</code></pre> \u90ae\u7bb1<pre><code>&lt;input type=\"email\" placeholder=\"\u90ae\u7bb1\"&gt;\n</code></pre> \u6587\u4ef6<pre><code>&lt;input type=\"file\"&gt;\n</code></pre> \u9690\u85cf<pre><code>&lt;input type=\"hidden\" value=\"\u9690\u85cf\"&gt;\n</code></pre> \u56fe\u50cf<pre><code>&lt;input type=\"image\" src=\"https://docs.panxuc.com/assets/favicon.png\" alt=\"Xuc Pan\"&gt;\n</code></pre> \u6708\u4efd<pre><code>&lt;input type=\"month\" value=\"2019-01\"&gt;\n</code></pre> \u6570\u5b57<pre><code>&lt;input type=\"number\" value=\"1\"&gt;\n</code></pre> \u5bc6\u7801<pre><code>&lt;input type=\"password\" placeholder=\"\u5bc6\u7801\"&gt;\n</code></pre> \u5355\u9009<pre><code>&lt;input type=\"radio\" name=\"radio\" id=\"radio1\" checked&gt;\n&lt;label for=\"radio1\"&gt;\u5355\u9009&lt;/label&gt;\n&lt;input type=\"radio\" name=\"radio\" id=\"radio2\"&gt;\n&lt;label for=\"radio2\"&gt;\u5355\u9009&lt;/label&gt;\n</code></pre> \u5355\u9009 \u5355\u9009 \u8303\u56f4<pre><code>&lt;input type=\"range\" min=\"0\" max=\"100\" value=\"50\"&gt;\n</code></pre> \u91cd\u7f6e<pre><code>&lt;input type=\"reset\" value=\"\u91cd\u7f6e\"&gt;\n</code></pre> \u641c\u7d22<pre><code>&lt;input type=\"search\" placeholder=\"\u641c\u7d22\"&gt;\n</code></pre> \u7535\u8bdd<pre><code>&lt;input type=\"tel\" placeholder=\"\u7535\u8bdd\"&gt;\n</code></pre> \u6587\u672c<pre><code>&lt;input type=\"text\" placeholder=\"\u6587\u672c\"&gt;\n</code></pre> \u65f6\u95f4<pre><code>&lt;input type=\"time\" value=\"00:00:00\"&gt;\n</code></pre> URL<pre><code>&lt;input type=\"url\" placeholder=\"URL\"&gt;\n</code></pre> \u661f\u671f<pre><code>&lt;input type=\"week\" value=\"2019-W01\"&gt;\n</code></pre>"}]}